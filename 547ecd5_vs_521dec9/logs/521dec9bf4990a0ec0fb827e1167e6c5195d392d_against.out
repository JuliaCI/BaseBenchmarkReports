cset: moving following pidspec: 23884
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.006807333 seconds)
loading group "string"... done (took 0.617493934 seconds)
loading group "linalg"... done (took 9.801363315 seconds)
loading group "parallel"... done (took 0.1853756 seconds)
loading group "find"... done (took 1.56083004 seconds)
loading group "tuple"... done (took 2.20246969 seconds)
loading group "dates"... done (took 1.530099602 seconds)
loading group "micro"... done (took 0.239857758 seconds)
loading group "io"... done (took 0.587270212 seconds)
loading group "scalar"... done (took 47.488829552 seconds)
loading group "sparse"... done (took 14.399817434 seconds)
loading group "broadcast"... done (took 1.264522038 seconds)
loading group "union"... done (took 13.137439258 seconds)
loading group "simd"... done (took 2.737239351 seconds)
loading group "random"... done (took 11.084473997 seconds)
loading group "problem"... done (took 1833.566511091 seconds)
loading group "array"... done (took 27.823405188 seconds)
loading group "misc"... done (took 1.208333197 seconds)
loading group "sort"... done (took 4.018772882 seconds)
loading group "collection"... done (took 20.272939531 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.767435926 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146179537 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.217934854 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.377494027 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242445757 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161939687 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.173152499 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.585472658 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.042183491 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.286814595 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154814954 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.604348568 seconds)
done (took 6.475187432 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.363900605 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.391337786 seconds)
    (2/2) benchmarking "String"...
    done (took 0.182277253 seconds)
  done (took 1.233756466 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075632685 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.187576214 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.114731806 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.115059039 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.102490431 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115010449 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.115845162 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.115722213 seconds)
  done (took 1.529368937 seconds)
done (took 3.870949195 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.567766514 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.931979635 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.588075507 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.173115514 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.205153055 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.180190485 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321852465 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.16293507 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.109370491 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.108894345 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.224762825 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.405667734 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.505639187 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.099551838 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089976192 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126498381 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.098851407 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.758671803 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080923791 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.140855602 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.599224973 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119097846 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118196652 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124824444 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20768921 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133449089 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170122233 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093265343 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.683010438 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101997399 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.233627374 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083491906 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.183069274 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.257651945 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.081322624 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10935345 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678526868 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183168842 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.118755617 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102344566 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682234173 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081142728 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.247486777 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109499463 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112352395 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188131229 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.122515309 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.089354658 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104814856 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086762524 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175993422 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.476624044 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106477387 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.176629592 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108840826 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.706045735 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100409236 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159340756 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141203894 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.111375574 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082889571 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114623985 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167635428 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.115131317 seconds)
  done (took 20.594847447 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.162282147 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170544934 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094795358 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144860206 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.146737994 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097259792 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101116119 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07983671 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133126821 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241349513 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144706502 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.189277531 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074851262 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.103235756 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144943112 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.254112531 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106611228 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123690114 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101210915 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091492087 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143931709 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112713632 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111532684 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095910794 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.187587991 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20865767 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111261999 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123954544 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101350725 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.118721006 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142544468 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151931156 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092085093 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08435394 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.20678751 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106408765 seconds)
  done (took 5.486728859 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.232125659 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118934826 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.242763207 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.135657792 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.183204489 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152844833 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18679373 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144043202 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305301065 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.304737894 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184927761 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130842532 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112001654 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079492609 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096970776 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094173457 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.716476981 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1838677 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154017619 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153840051 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107365732 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099603813 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385427494 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086682339 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100316338 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088845349 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.09715253 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160356098 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.226999618 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086694834 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.393993469 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117139305 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09023465 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13566897 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211590667 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135018376 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080811178 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14446553 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103896262 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081812231 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.242926313 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109952229 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077598947 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132572875 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135255734 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136056501 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099801303 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09809905 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.24963483 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098158723 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102700853 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.165497911 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.204017816 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.141365292 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081504567 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.394873031 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098381526 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11082903 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101136478 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.319153062 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136816098 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082306262 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09702432 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087234286 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097230222 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.821573781 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094448802 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.906631508 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095895767 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.170496967 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104519106 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109798455 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105207557 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08660459 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121498631 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098761429 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079394708 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098360225 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07867076 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103946052 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099410242 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105038356 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104113058 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096890723 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148603773 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.120946672 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118549448 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12687378 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087465363 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098244703 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130373082 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083311558 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.103257652 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.178313739 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107829852 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106713341 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102735416 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145070499 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099319495 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.219139848 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095723235 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125671959 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102027274 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114797188 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.126182408 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100077733 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104042522 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080022864 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098690124 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149015613 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096619713 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079836941 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103477472 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115394322 seconds)
  done (took 25.214638907 seconds)
done (took 51.956197387 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.540066993 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.124136222 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.12330825 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.123081891 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.121997614 seconds)
  done (took 1.778809746 seconds)
done (took 2.496205046 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.390887327 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190240761 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121419169 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188738386 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107753258 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193197046 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.19423672 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.120360843 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206739131 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.103912362 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187936872 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101981132 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107522695 seconds)
  done (took 2.962018165 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099089533 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.127199762 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086113132 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117062628 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079787481 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116290661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113857595 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.129923676 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114003438 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107607978 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08059393 seconds)
  done (took 1.884192031 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094924769 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120510237 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085713295 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113642288 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078999094 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113115292 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111530394 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107400686 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112447549 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092069009 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097766682 seconds)
  done (took 1.845581188 seconds)
done (took 7.400279174 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243350778 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.713314689 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.15511125 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.206713744 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.413166256 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.260390679 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.64929799 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.17004521 seconds)
  done (took 13.743958881 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.18106487 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103769691 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085898606 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.103204017 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086478481 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102771856 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086923084 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.105402791 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102969979 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087857608 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102359809 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086487119 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104395459 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102880732 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08907564 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102504969 seconds)
  done (took 2.421281244 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142773949 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142159582 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093471206 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11598747 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.107706151 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092532155 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.112611331 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.109855768 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091906418 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.108448484 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115856551 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09891609 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.113861254 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107626479 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095379933 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116621555 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.106929097 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.096097805 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113038135 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111522535 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099726159 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.109053787 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113101463 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099840259 seconds)
  done (took 3.429378135 seconds)
done (took 20.311096531 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.183089808 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100738982 seconds)
  done (took 1.006507848 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.150984413 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154583069 seconds)
  done (took 1.033897207 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116854688 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0986779 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143851349 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119887939 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.099925494 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084242995 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.142240558 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101721466 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.086598647 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.103404198 seconds)
  done (took 1.828628322 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089008077 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10450026 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.114997391 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154211882 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10051445 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108949157 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.108753238 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090931858 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108654929 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.103680611 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096170587 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12774875 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.109663854 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.13098382 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.21523818 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.113056546 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116695898 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.110325743 seconds)
  done (took 2.836887814 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083926288 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101956394 seconds)
  done (took 0.916956479 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089449123 seconds)
    (2/7) benchmarking "second"...
    done (took 0.101963546 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091856212 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107959485 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.103924047 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087346624 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104130538 seconds)
  done (took 1.415761015 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.560772203 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.277838478 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.388671963 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124655686 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14636586 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.403921786 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146513111 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117553388 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.118275526 seconds)
  done (took 3.05809921 seconds)
done (took 12.82609533 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090398514 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.238533532 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.603059845 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.125788579 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085496377 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162522246 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.335120702 seconds)
done (took 2.375459357 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.361738011 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164101948 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.095793672 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.101178539 seconds)
  done (took 1.45446573 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078457984 seconds)
    (2/2) benchmarking "read"...
    done (took 0.109171338 seconds)
  done (took 0.927366072 seconds)
done (took 3.126253149 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081807819 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098076294 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.119560638 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099626655 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100263919 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.083240207 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.100513273 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082416291 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098317085 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.083475687 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099288545 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082469876 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099340439 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083697022 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100296167 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08329696 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098846639 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082764733 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100337925 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083337477 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099800862 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098967921 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082942761 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099335144 seconds)
  done (took 3.021945308 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105848806 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.103316012 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107794511 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091904656 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.109241751 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108976785 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091787027 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.104026924 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10749776 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08707118 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108343774 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109304808 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087099982 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.108736053 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103161395 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094024985 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.108759573 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103573339 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087711339 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.109485833 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107764513 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089200182 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.110260243 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091938728 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109188531 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108016242 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086184807 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104536938 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10836047 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092088057 seconds)
  done (took 3.786395304 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090410881 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094730013 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083604087 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111011751 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081011811 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102065119 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080634898 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099289963 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.102218732 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085199232 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.102782227 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.085071118 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.098550779 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086635999 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102838159 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.087989833 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111391612 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097917907 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08104277 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.102605859 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087848475 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.098663999 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085209304 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.101099054 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084705883 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.098352006 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084733588 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.100502979 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.085653635 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.100972988 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103506434 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.088444756 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.101403656 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096477995 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103856382 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.084318927 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.108406566 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081793712 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.103593289 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096534768 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082141457 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.100885514 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082042405 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.108860139 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08493652 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102171419 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081768252 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.103757616 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085087839 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.106620951 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096628072 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.082919296 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.105264131 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.087835274 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10407902 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081503484 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.103181365 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081472504 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10290036 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.084195011 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.099275141 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.097413383 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.090971116 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.103803852 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10091371 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.108853037 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098740297 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090000083 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103018156 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.092142482 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.105422941 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096559858 seconds)
  done (took 7.588118315 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09821503 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113669482 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087007032 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104348676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103075712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085714837 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111312818 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085040746 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103888766 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111815254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086626141 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103525706 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087454726 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10367651 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085050716 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104851185 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112750593 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086077763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.102367755 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087147864 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103066752 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110958842 seconds)
  done (took 2.925363658 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.26756084 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091765076 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154515038 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121988985 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.129352014 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122275927 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090806202 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109660987 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108544111 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096978744 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114578205 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108699 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126642511 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096634185 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113860395 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117206453 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089818455 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117069712 seconds)
  done (took 2.924248746 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102703982 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.106456809 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.130253577 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.089059675 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.106499491 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088026259 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115865268 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122166384 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.106194474 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0899786 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.116402388 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106340039 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.090693903 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105976971 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089456834 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106745567 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105970714 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090019774 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117391093 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115526344 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097755919 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116192576 seconds)
  done (took 3.065884392 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105715457 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106100593 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.144790388 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094242575 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104311059 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10429683 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095316036 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.106421733 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.113453471 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088819415 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106582052 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087559491 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.11461625 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105713397 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096862226 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108063928 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089146746 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107485511 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105265449 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087711984 seconds)
  done (took 2.821576108 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.18214583 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102439718 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121498186 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136897884 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121755071 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104843172 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135741145 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12283093 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105338263 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139697778 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122395826 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121238382 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135330628 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11195773 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120953154 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137031265 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136102091 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137632533 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104603478 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121013096 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140907765 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105111151 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137340655 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123579526 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121625331 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104490741 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120851299 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131164254 seconds)
  done (took 4.260601631 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083144601 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101980371 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086197081 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104158099 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085932799 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.101616464 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085816412 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.102208362 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085696148 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102057998 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084838012 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10339445 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086500012 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102355042 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085229584 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102181892 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085136095 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.103325618 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104047487 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086304167 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.103778016 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085704591 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101809771 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087088824 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103537832 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.087305634 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103385789 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085089603 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103255158 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086153904 seconds)
  done (took 3.581862964 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096830639 seconds)
    (2/2) benchmarking "in"...
    done (took 0.130547061 seconds)
  done (took 0.984585747 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093455655 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125690852 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085407768 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105269492 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115832626 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086576148 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118115184 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114816645 seconds)
  done (took 1.601260383 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.152628828 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.154727721 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093550935 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118053102 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.157044029 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.147370041 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153684838 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093158612 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108641567 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101713781 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.153458075 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083016618 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110875595 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08835798 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110753881 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117459858 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.087816718 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115955768 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.114764677 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.089272524 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112297699 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099782365 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113200114 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.117422664 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086496586 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113792689 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116135687 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101176358 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107009526 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11376203 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090898647 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.105579908 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.092231876 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.111603004 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089145161 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.156413046 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119161697 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107176615 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093673947 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114369291 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116469675 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088544293 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114040511 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107902817 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096611007 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.111609201 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.093749723 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.106833887 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085668022 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106396181 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.106857966 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088503563 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.105430408 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094226019 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111315776 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119069901 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09040588 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107792156 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106760276 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086257061 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108835116 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087568776 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113312591 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.119626607 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094356804 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.111632104 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110157077 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.089319259 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.109447099 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.088791836 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111151767 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128580591 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094177533 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.112747524 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094212824 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108315921 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107489436 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094241877 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110161949 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111741934 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.094219638 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11494946 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094872215 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106514081 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107530075 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096522492 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.107711491 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089816532 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103949075 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121061163 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.091973207 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.104754318 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085389648 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108707541 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088123242 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.110327975 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103171047 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093282072 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.105315883 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094616218 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112915393 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110396172 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094987003 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115716505 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11370415 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09346358 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.14928158 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108484874 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087996832 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.111643512 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095183948 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106110637 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.117590877 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.086438187 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107730937 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088459901 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114417449 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111750649 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0889242 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112138222 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096204908 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115409374 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.108053704 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087440338 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10794393 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.092921602 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11761537 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114661141 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091264084 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108582865 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.088284426 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112283349 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.112843606 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090887548 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11282229 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089633975 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.105928977 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.107062317 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094398664 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112061381 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087794853 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111311186 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113917823 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092567758 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.109536766 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111506494 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088680188 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102714428 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094661736 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106538358 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088991185 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11951182 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106182724 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.091211685 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10778717 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116925989 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088308398 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.112562139 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089995696 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.113541918 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114040118 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084702234 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107668274 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.092451061 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114092729 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089271509 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.108608112 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.106105522 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096182849 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103413021 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.093832281 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103732095 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089567151 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.11341071 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107336701 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093944973 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108404825 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126441048 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105533304 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114671872 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093298277 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113797589 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.110945706 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092174482 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.11336246 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096032737 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.115463071 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109141499 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092596253 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115050172 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089860001 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.113424557 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109660901 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095741662 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104561631 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089775552 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103879886 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.112021412 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095113345 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.111233047 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.094277319 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110315638 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110877026 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099817161 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109116874 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.094670178 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103888608 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.112020835 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100164028 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115401906 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097232319 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115268103 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110013571 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.089019794 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119216443 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091056124 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113112289 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.10872687 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08717879 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104594653 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096904032 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.111372281 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089452868 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.107255903 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114998837 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096901465 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109470831 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085331024 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.113629957 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117183082 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088223435 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113143176 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089775161 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112186057 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123824168 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086213607 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107568843 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116651401 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.094907744 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.10657576 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09370697 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.111438259 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.114987742 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091976251 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.109132458 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089555673 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11658711 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091165006 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.107912698 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107820981 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.091788975 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.105377388 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.090891908 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115008157 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09112143 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.1099171 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118380679 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09669857 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.116658748 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111063696 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.092390918 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115655349 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.097430003 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111311351 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.115025224 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087987884 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105306804 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090779361 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105369194 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090290493 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108450494 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114535462 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091613547 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111837814 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.093093513 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116979609 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.111777414 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096553684 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124403711 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103740079 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087286757 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111938745 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113020892 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0904321 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110338376 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.090571982 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115973945 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.114063857 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097329502 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109486962 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088638721 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115111974 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108099365 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097090098 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115532145 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.097353924 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108084448 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094146556 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110774932 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119234781 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086855106 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113083611 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113137035 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094511694 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.11173935 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092632569 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108674262 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104363505 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091178257 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.115585263 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093888742 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.114155975 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113075284 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091028278 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110191918 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090115034 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.116242088 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111623333 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098353379 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109889299 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086693466 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10654308 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09616249 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115808839 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115563673 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090412941 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.112618701 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097830836 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.114373347 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.108186164 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100512826 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118973832 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.097947951 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120433088 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106502355 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093025524 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121058094 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.088852522 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11258468 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.109709679 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088171564 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117460388 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.097031002 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115051066 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111189246 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086801539 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.109569057 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097317926 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.114011456 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093252705 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.110886738 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115707503 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090120242 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112891255 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097085552 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114792195 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116623588 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0951753 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.114981963 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090782153 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11622738 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.108962851 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088987095 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106747997 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092204036 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.118265795 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087016034 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.114953503 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.116487176 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092360992 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113293876 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.095958393 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.110334532 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118061821 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095339547 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.113136943 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102739817 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.109913531 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112639569 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096002679 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.115787067 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087162791 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.114352423 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094054205 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118668173 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112961578 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09630869 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115840625 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116067548 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.092742016 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116233279 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.095513475 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.11751108 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087854293 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.118726908 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120201102 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.092609603 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111618545 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093799325 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110092878 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114979832 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097796953 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113152527 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101205565 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.118037723 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112640287 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092677821 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11705431 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093902926 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118478586 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.11152255 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098902183 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108024778 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099308852 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113636136 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118550175 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09265633 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109182861 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095643257 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.116938128 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115443685 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.099300735 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.119652186 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087570302 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107831233 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.113493834 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092133412 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122992787 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100201919 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113999867 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113621192 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.092889344 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.111844577 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099463431 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107560118 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.11122299 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096468695 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120097704 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094539084 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.111043743 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.114876317 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094110249 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119039869 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094332081 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109283439 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113853553 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099679234 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112944439 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09112972 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.114098569 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117962214 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095550971 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111252902 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08899816 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121394306 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113787787 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097792531 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112928465 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115751588 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090284879 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.112024503 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098495613 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112917571 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114445296 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090755958 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113903028 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10126452 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106202071 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.111085626 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103352574 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115311544 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099243283 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.11323775 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.11395469 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099324099 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119186732 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092934917 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108526603 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.108100394 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091910966 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109874244 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.094241606 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123666424 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114012422 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091050963 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114698317 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095411605 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.113907556 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.093437565 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109021537 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118352602 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091020897 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.119722146 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089226485 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109245372 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093570045 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112273576 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110699587 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091417901 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.107070058 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.088940933 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104624682 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108613418 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096696052 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109648658 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092271895 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110274046 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108787342 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.089562149 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119097998 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087328885 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110106344 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120560005 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.094254916 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110963184 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111409795 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095501229 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.114291341 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.088570003 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.115426394 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108082218 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090728343 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.115354586 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.095559867 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123925439 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111409763 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085682872 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.113933006 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091523611 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107812059 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118393317 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09776745 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119027352 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116122219 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089369138 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119097417 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100709172 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115024638 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111642815 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088316173 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.111367093 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088052547 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.109895164 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08682507 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.11592599 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114221257 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093265203 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115779895 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08446445 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118842098 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1142901 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.096229244 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.106630938 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084850193 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103704187 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.109654574 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.094403116 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.114185148 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.092825092 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.116533781 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.096997279 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115301455 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115218624 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089726104 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.115788946 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.092583898 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.108221464 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114645912 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089689666 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113670916 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.088044947 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.114467159 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114675796 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093045407 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118927904 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.093277897 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113659981 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.1123258 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09163683 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.109617016 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093059962 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111525898 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107432579 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08503537 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112901499 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.097227297 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111370786 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093738953 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117815815 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109261531 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094060717 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118388385 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.111733121 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090943928 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115972693 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.093450911 seconds)
  done (took 63.484726879 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.169700756 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099204311 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112919372 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092122033 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.143555982 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113385864 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108231604 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091410797 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111915622 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103613539 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109081993 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111670399 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133146129 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142394367 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139404987 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106286979 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111364477 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111253604 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088909207 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114319098 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13364906 seconds)
  done (took 3.255938068 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115443272 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.129504258 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128235058 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131933014 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119618854 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.10656344 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.128520566 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127215731 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130486301 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121554954 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131605495 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127359001 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.102048987 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.12250951 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123211951 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122383309 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110722768 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121303635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127207309 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1280702 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122812633 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107807858 seconds)
  done (took 3.48955733 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098779342 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.114626596 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094776894 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.109626231 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.092662184 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.109349365 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118025206 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.089274825 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.118060364 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089040911 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108951762 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091085325 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120172533 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.114362862 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.08770074 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.110780926 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.100738066 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.112979736 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.094208823 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.107636389 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.12635789 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.089293946 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.110083854 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086323522 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.124366858 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.113612604 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.093081174 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.114304171 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.085191711 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.113830113 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.088190357 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.110543497 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11238123 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08685938 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106925601 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092092263 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.112269555 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.109199259 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.089156386 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.113885729 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.091257898 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114311323 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.11705942 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088821274 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10893456 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091133649 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.113437398 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088356764 seconds)
  done (took 5.784773892 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.153834341 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.175909 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.120611407 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.166881977 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137799076 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106339259 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.115942872 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.164984917 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.117124119 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.096971906 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136221134 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.136253633 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121820366 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.12506051 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094392012 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11930262 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.11890397 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097682654 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128242601 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.115635323 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104747467 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127335414 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.134918365 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132671665 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121132394 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096086046 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123374638 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125396066 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.133258326 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10596361 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.125666894 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124873372 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.136103376 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.124714104 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097067098 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.12540384 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.139033097 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.09750725 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.119093004 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.115392397 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109032162 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126384966 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.118991192 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138765179 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098369543 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.124579162 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117398877 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.092529869 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.135732747 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.125759093 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129663727 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.138656928 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120527197 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099091492 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127366435 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139315026 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.116938061 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.09590942 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119989321 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.134965163 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0960591 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120598493 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.138086095 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.123066256 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107935531 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135929186 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.120569406 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120366066 seconds)
  done (took 9.275404154 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127255054 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.120738029 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13595285 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13594621 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121080255 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.099922321 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.122034883 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.120299266 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099647675 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130279093 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119946659 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.209000173 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119038303 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128775001 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100755157 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122253711 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120442117 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121202866 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100305319 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122479908 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.1210017 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135621142 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101618523 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135828925 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137522855 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116900066 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099817742 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121475685 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135084476 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121094788 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138160559 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10016086 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123842541 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133551256 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137459808 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.120989155 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092570086 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120727325 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.121368258 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100613299 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.117844297 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135531589 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120968826 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.097629359 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120498291 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122723165 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136860399 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137754436 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107893495 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13153668 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120855894 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136469388 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121707204 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100914655 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135905198 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145578856 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136787172 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13565484 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121468153 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.137482648 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136535064 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.145297401 seconds)
  done (took 8.514583388 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089711903 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110129317 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089385211 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.112694884 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091147778 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113678677 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092305776 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.114105293 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093302968 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.115206636 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09260698 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115829619 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093605603 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115047357 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094522695 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114819625 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09213471 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114319469 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114073568 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091776778 seconds)
  done (took 2.878780278 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.103034136 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.136935657 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.114428503 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102473883 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115125319 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124015204 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.094166144 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116086518 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114932481 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095439855 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.131142228 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128553591 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094924566 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124479069 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125494524 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123738268 seconds)
  done (took 2.669565964 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117491364 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.136248929 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.169756944 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.119318176 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.115966809 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101463791 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114767753 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095206965 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.11388253 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121360012 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.09803585 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.118861087 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.093381813 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.114238269 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.114350979 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.097781144 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.112836512 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.098699062 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.115483766 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.171201133 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122026267 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.09670249 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.116493316 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118754733 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.097495065 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.122266824 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.121393374 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.093582944 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.11744288 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114967404 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.09831966 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.123437525 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.113567579 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.100142621 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113856382 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.096448592 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.114594201 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114980247 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.09842361 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.114848652 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.094990497 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.118041765 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114230193 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.096931189 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.112160412 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.095620174 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.11351382 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.122331301 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.096603308 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.121890357 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.094017928 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.123141886 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.120188293 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105751639 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125168755 seconds)
  done (took 7.02733019 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108235278 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117825736 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130668382 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091308706 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116668776 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097336247 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.117606218 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116541766 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096402864 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111194462 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096394773 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120048448 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116864851 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096281316 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118632617 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095780397 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.113597217 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116630456 seconds)
  done (took 2.806279815 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099797771 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115061213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.099433812 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114998823 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.094002057 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115364397 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112233932 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.091994667 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112740427 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094493534 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113780205 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092977047 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112698987 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.116083076 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094070989 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115314987 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093880349 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114524671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113270606 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092051376 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113896333 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091869203 seconds)
  done (took 3.139567064 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106195542 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.173926348 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.128336741 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.182082946 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.117775974 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.112508425 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.103679062 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.118646868 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.133095638 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.092199775 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.115025413 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.091645273 seconds)
  done (took 2.304868016 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122601826 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15768576 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116029868 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09399647 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132990954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121133665 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121267107 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099795907 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136644201 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138102527 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121858909 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134011717 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113144741 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136120316 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127200125 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126580697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123354057 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100760093 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115276567 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147723482 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121107759 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13368733 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101244017 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121917696 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122068342 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135834955 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112401629 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139639349 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121829823 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133303993 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129229259 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10052465 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134533352 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138915119 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114244567 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134936615 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101719873 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167378879 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108045817 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137457908 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115512676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128593939 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112848712 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131593045 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13456544 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121551568 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131789221 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102553472 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124766152 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155821383 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129720306 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136554536 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128997384 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134702753 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134187989 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155646404 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141131381 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136061542 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108315871 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13970439 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138182701 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128789936 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136597875 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140032569 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130467477 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139907755 seconds)
  done (took 9.250578459 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165799099 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097030003 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123882355 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140192867 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138677408 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101561939 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121976266 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121448913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101887417 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119153236 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177280546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122585586 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137371983 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136804341 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122602272 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101481856 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123218174 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136321512 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096261627 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176430767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101452619 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137244928 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137632821 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136706691 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140981763 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12906377 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101261311 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1247089 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122905884 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122569915 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111768583 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123479736 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136178819 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117347049 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135961528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101012637 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124420573 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132449193 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100697811 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130635724 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136192582 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147113712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122564229 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121879069 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141333746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10125318 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123075114 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117146167 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101002283 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117973086 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139899944 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14001276 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139112926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136935664 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103046829 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122506956 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122515887 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101159915 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125554583 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128382604 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137790581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101868391 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176745666 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101522434 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123546233 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136452858 seconds)
  done (took 9.132312087 seconds)
done (took 170.314451856 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.157294956 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.177431332 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.158532578 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156243194 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109193814 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123067359 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143623028 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.154776947 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109170401 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087243484 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108122298 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090867983 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175158172 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087174709 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108727108 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.112498326 seconds)
  done (took 2.891770414 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.210503831 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.306066616 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.136215718 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114995446 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097118438 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112680867 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092422487 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115984019 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110857517 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103429451 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112017933 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090903844 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124778907 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.112926995 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089806295 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.111701206 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123599839 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090456761 seconds)
  done (took 3.095147457 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116226203 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.162421607 seconds)
  done (took 1.12292465 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129699238 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.220137561 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298337525 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173088003 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.141539571 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136431899 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173526503 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131208548 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.206307757 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136128458 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.13618599 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095515061 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142940184 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.125562849 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.107306932 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117008477 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147382294 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.105433658 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.125831229 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.364026611 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141912075 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.097490909 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12361323 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.126326495 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196182385 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136530355 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.097516378 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.118240332 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119459869 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.104016114 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.124306928 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136210801 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.136199083 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.188171664 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125204717 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.199780545 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104217552 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.116313775 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124620844 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095140409 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121829529 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123509429 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113951739 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117066029 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116966561 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10437883 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.117660028 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117750799 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105623766 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12814255 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.127715227 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123852424 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179727807 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128272152 seconds)
  done (took 8.392621944 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.917447514 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162097099 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093586579 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.050235687 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149882024 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13359173 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.927717435 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128578427 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.291463252 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.922106895 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141690153 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107531665 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.292969307 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.276676976 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.191315777 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.398671599 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.763356367 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.138867391 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156020157 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.174060285 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123351351 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146509816 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116510017 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.474207213 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095874384 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120605331 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130222905 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108378943 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.204963179 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093957152 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123437731 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.228726526 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.295599819 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234679699 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117974688 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092598738 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115091255 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188896545 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327043691 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.25190376 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188713639 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089528077 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114187821 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132101311 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117604476 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111848342 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.211036407 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196669689 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.217061552 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097385571 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134408289 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130956399 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134168243 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186124658 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111947757 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.377907148 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379778822 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114088146 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103449333 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.138829746 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.298832956 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115346687 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260988728 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145129454 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.246521643 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11326219 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832922165 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188894943 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113634016 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10345248 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128037193 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121070761 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130508006 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.183468947 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.3973974 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13189553 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097959688 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118863194 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.275879541 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092501693 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116920411 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185941013 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118731494 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126829704 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133192028 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109044695 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.217138208 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27338527 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13116432 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126077871 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121449964 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10746015 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118069785 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236880829 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.276691594 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182843246 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.259241977 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108732503 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.209405061 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1881394 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128507003 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.216490209 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102538344 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135621255 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131365805 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.253699062 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157199324 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.116444137 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099555632 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126375499 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159386411 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.118693424 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124903085 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190695567 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.512312744 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187285232 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115370945 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097879697 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127971693 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205090291 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101566977 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.29456912 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128496934 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.210424036 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102838595 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112140434 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12577117 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.188027464 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132379914 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126490207 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108572163 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125288218 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.293322319 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255209441 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132792702 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247016296 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.214082188 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10651179 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.218670179 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126024148 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19240703 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128213118 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108014337 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119458785 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829677285 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131161795 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124252705 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099084075 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.233575714 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093296868 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11653775 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09329219 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112858682 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846242789 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096052077 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11312738 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093976125 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126070907 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124891929 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122953264 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099719547 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.206746801 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271351124 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131118751 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123211478 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093440937 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182187658 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118381753 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.118225849 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092221331 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115764844 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126000275 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.100165575 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117780645 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195788999 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.20286842 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.25889348 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57929532 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092969825 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115287985 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26671746 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114976474 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.345250093 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125168342 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.263792092 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18871102 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112813078 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3752891 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.213565432 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.210915189 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095661112 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.217593552 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091473352 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126298918 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.206145444 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093242969 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125460193 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182798126 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134273395 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13238399 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.201563042 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114892311 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25221455 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112283556 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191919568 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11860359 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130184544 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349256531 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114524309 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116235781 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.20720918 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098064926 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116125346 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.700818006 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092935794 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129971009 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126730981 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.260505137 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.20912885 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102643398 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126240993 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128968232 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184525657 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.257080267 seconds)
  done (took 48.572548917 seconds)
done (took 64.912316109 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.340010368 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.297796123 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.344356602 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239754157 seconds)
  done (took 2.170418974 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239609002 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16514563 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.219968518 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092087022 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.229105605 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091378212 seconds)
  done (took 1.905250607 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.5503818 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.44944705 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.381998517 seconds)
  done (took 2.255187281 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.281302449 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.301454551 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.37327636 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.505336389 seconds)
  done (took 2.441374005 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.299417842 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115698085 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.132527602 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.188108691 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259681772 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.287683487 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.16211727 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.210128452 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121227509 seconds)
  done (took 2.699279822 seconds)
done (took 12.341942095 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.326234899 seconds)
    (2/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.238876714 seconds)
    (3/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.213324909 seconds)
    (4/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.344215473 seconds)
    (5/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.131938318 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.169919942 seconds)
    (7/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.344108414 seconds)
    (8/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.24952936 seconds)
    (9/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.104861236 seconds)
    (10/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.2141414 seconds)
    (11/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.137632063 seconds)
    (12/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.125471999 seconds)
    (13/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.101012178 seconds)
    (14/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.170316855 seconds)
    (15/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.223317818 seconds)
    (16/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.26859071 seconds)
    (17/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.274001334 seconds)
    (18/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.233464296 seconds)
    (19/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.281821638 seconds)
    (20/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.217333953 seconds)
    (21/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.234685882 seconds)
    (22/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.163180976 seconds)
    (23/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.316936343 seconds)
    (24/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.110178964 seconds)
    (25/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.106190649 seconds)
    (26/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.100690977 seconds)
    (27/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.294118858 seconds)
    (28/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.176447828 seconds)
    (29/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.282118664 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.202799876 seconds)
    (31/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.208822144 seconds)
    (32/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.218589409 seconds)
    (33/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.113676305 seconds)
    (34/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.135599143 seconds)
    (35/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158865538 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.133117102 seconds)
    (37/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09986829 seconds)
    (38/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.132372696 seconds)
    (39/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.144531935 seconds)
    (40/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111599724 seconds)
    (41/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13846884 seconds)
    (42/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.10263483 seconds)
    (43/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.133435035 seconds)
    (44/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156441361 seconds)
    (45/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.248268643 seconds)
    (46/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.101666018 seconds)
    (47/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.119231921 seconds)
    (48/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179307584 seconds)
    (49/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.148008798 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.126195107 seconds)
    (51/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.137540056 seconds)
    (52/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.122737372 seconds)
    (53/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.274471486 seconds)
    (54/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.178244765 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.160928584 seconds)
    (56/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.166517352 seconds)
    (57/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.140634474 seconds)
    (58/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.182880588 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103821208 seconds)
    (60/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.144063437 seconds)
    (61/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.227894917 seconds)
    (62/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.227529382 seconds)
    (63/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.147429833 seconds)
    (64/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098987415 seconds)
    (65/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139048553 seconds)
    (66/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.155387941 seconds)
    (67/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.0860171 seconds)
    (68/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.112063048 seconds)
    (69/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.13744439 seconds)
    (70/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.201339812 seconds)
    (71/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.1212405 seconds)
    (72/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104184916 seconds)
    (73/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.218689551 seconds)
    (74/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.123036868 seconds)
    (75/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.104342481 seconds)
    (76/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107238289 seconds)
    (77/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.155944488 seconds)
    (78/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.139604299 seconds)
    (79/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.19867418 seconds)
    (80/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139101926 seconds)
    (81/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202383772 seconds)
    (82/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.085628825 seconds)
    (83/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.12500349 seconds)
    (84/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.216024162 seconds)
    (85/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.237092621 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117993759 seconds)
    (87/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.224065644 seconds)
    (88/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.157216279 seconds)
    (89/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.122916691 seconds)
    (90/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09670694 seconds)
    (91/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.129743469 seconds)
    (92/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.108634152 seconds)
    (93/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.107111585 seconds)
    (94/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.217466842 seconds)
    (95/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100343981 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.125134217 seconds)
    (97/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122730959 seconds)
    (98/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103443974 seconds)
    (99/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.107926833 seconds)
    (100/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167634614 seconds)
    (101/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097338675 seconds)
    (102/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.119001305 seconds)
    (103/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091369809 seconds)
    (104/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.137490652 seconds)
    (105/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08464313 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.122448652 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.131548809 seconds)
    (108/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116006445 seconds)
    (109/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.190323901 seconds)
    (110/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.100946194 seconds)
    (111/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.219447489 seconds)
    (112/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.178546816 seconds)
    (113/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.090876377 seconds)
    (114/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.131745499 seconds)
    (115/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.177073788 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.0913387 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.125117329 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121860908 seconds)
    (119/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.129623169 seconds)
    (120/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.113368371 seconds)
    (121/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084056892 seconds)
    (122/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112357648 seconds)
    (123/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100554402 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.133939986 seconds)
    (125/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.220550815 seconds)
    (126/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084670944 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.123022881 seconds)
    (128/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.134291228 seconds)
    (129/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.124854554 seconds)
    (130/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.170550794 seconds)
    (131/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12633292 seconds)
    (132/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.089406812 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.159721037 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122922809 seconds)
    (135/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.100980389 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.108268097 seconds)
    (137/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091485958 seconds)
    (138/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.202967995 seconds)
    (139/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.17409774 seconds)
    (140/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.087189768 seconds)
    (141/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.151893606 seconds)
    (142/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089230259 seconds)
    (143/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.177283863 seconds)
    (144/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.10188746 seconds)
    (145/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.153208367 seconds)
    (146/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13210313 seconds)
    (147/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091873527 seconds)
    (148/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.122655927 seconds)
    (149/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.168769969 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099555225 seconds)
    (151/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.19943947 seconds)
    (152/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.086626286 seconds)
    (153/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.112577631 seconds)
    (154/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.21097273 seconds)
    (155/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102987767 seconds)
    (156/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.107679884 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098697482 seconds)
    (158/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.108967979 seconds)
    (159/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.198749283 seconds)
    (160/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.083594716 seconds)
    (161/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.139742662 seconds)
    (162/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.137445213 seconds)
    (163/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110694086 seconds)
    (164/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123519099 seconds)
    (165/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084649648 seconds)
    (166/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.135496383 seconds)
    (167/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083530548 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.130289125 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123821082 seconds)
    (170/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.100872943 seconds)
    (171/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.119768013 seconds)
    (172/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.083920935 seconds)
    (173/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138772293 seconds)
    (174/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.082493527 seconds)
    (175/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116200766 seconds)
    (176/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085243576 seconds)
    (177/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115886798 seconds)
    (178/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.199050359 seconds)
    (179/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.083407121 seconds)
    (180/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.086318914 seconds)
    (181/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.111852754 seconds)
    (182/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140693519 seconds)
    (183/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084650302 seconds)
    (184/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.084770451 seconds)
    (185/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.126342704 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.122799799 seconds)
    (187/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.101681892 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115935268 seconds)
    (189/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08385108 seconds)
    (190/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.108467191 seconds)
    (191/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084989222 seconds)
    (192/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127610511 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099665424 seconds)
    (194/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.106780668 seconds)
    (195/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083736161 seconds)
    (196/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.108300165 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10164516 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.13856681 seconds)
    (199/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.143576845 seconds)
    (200/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.113014223 seconds)
    (201/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.109038624 seconds)
    (202/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.090189693 seconds)
    (203/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.110944772 seconds)
    (204/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085115324 seconds)
    (205/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.107380426 seconds)
    (206/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.083481243 seconds)
    (207/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.085174962 seconds)
    (208/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128815878 seconds)
    (209/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115555544 seconds)
    (210/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084258537 seconds)
    (211/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.110545517 seconds)
    (212/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083852561 seconds)
    (213/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084622207 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.141737601 seconds)
    (215/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.10789041 seconds)
    (216/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084431204 seconds)
    (217/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12321292 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100133167 seconds)
    (219/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.126790061 seconds)
    (220/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08452583 seconds)
    (221/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.111579143 seconds)
    (222/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085675438 seconds)
    (223/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.172009628 seconds)
    (224/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.09413064 seconds)
  done (took 32.6705781 seconds)
done (took 33.554315837 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.511217201 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134782039 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104177696 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.129056355 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.186134685 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.137650849 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112546076 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.134222849 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.133702821 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100236679 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117633128 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.109534794 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.128155777 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.185009545 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.133516681 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.097506649 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122280853 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.134324457 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111819953 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.139154308 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.186305478 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125729964 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108890445 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120527963 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185919818 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128633805 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.104101126 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128729952 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.134497989 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.102458057 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128754733 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095887785 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137636564 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.137874822 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093179686 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.126333533 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093552411 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.117159047 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.126394221 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.103440864 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.135502982 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.102670545 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.131807248 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.122264686 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.102593284 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.125098952 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09400505 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.133787237 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11957384 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.104101587 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119854929 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.137370063 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.101412481 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.118321188 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093448501 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.121107141 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.1331072 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093462998 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.135173625 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093665503 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.123267785 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118047053 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.105020313 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118390018 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.10135144 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120585366 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.124543513 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104107822 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.126262395 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096108605 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117930497 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.100267885 seconds)
done (took 10.048787276 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.099736269 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181492068 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.188201226 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.220398102 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12816804 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.138166864 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141332416 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151760157 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11188546 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14550955 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158851289 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.151338476 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.194323152 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.13488575 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112848832 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.128101305 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134615115 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107818107 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.19438398 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147117153 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157440864 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.134703597 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159263235 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117953887 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127231014 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.150965719 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129180407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.103114526 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.126174755 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.143888278 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121157298 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12691063 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128327057 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123685535 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137810205 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.132685612 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11375256 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.127147946 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.124823507 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100705249 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141261325 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.144418281 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100341788 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138141596 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127771734 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107279108 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.134559292 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.134227879 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104267308 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.130923859 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130208992 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157899017 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11056303 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.134201913 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.134734848 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.108499275 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.133134347 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.133275935 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.104662106 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.13261943 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100031033 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12878921 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129426268 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155919084 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.105226427 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.134303952 seconds)
  done (took 9.776410867 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122170642 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.161019191 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135551117 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.137088053 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.107707227 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.116212563 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090704131 seconds)
  done (took 1.802685462 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09379914 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18857479 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188155571 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.190435249 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.209048615 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.197592801 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141468158 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093472188 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.158084852 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.131055093 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189262523 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.224013377 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.128403989 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.112620257 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.216321973 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092961992 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.191282001 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119568678 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130793773 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.189497203 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112880439 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.152780411 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.135112914 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094738591 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20757155 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09721314 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.271006698 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1117674 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12604238 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.105012925 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134129416 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205572323 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182061724 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.139256581 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124863837 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185023227 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.181518798 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132422455 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.202114812 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099359412 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183844892 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.134275651 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.132244297 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.107427946 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.131267672 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.169318979 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.139063888 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107574195 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.129048 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189292932 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132270267 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184130795 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101960004 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.133071366 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131696699 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110038125 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.139691553 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.131442179 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.19190968 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135037344 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183401459 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184234628 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.18443992 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.18558669 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144370532 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.185017796 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182169204 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.10343468 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128973407 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.133149451 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185492162 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104783038 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.133005458 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170857547 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135751933 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.185384556 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.18635251 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130282241 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10998861 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.125264671 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.103836807 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121815034 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171963322 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.133813236 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103929529 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141081439 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133959784 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107775343 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.124820707 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.146702578 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.10591728 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.133590678 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.136627525 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.10548943 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138910154 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.185884453 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.136477054 seconds)
  done (took 15.257768933 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096554596 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.120121246 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101712088 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122020167 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096274801 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.122129174 seconds)
  done (took 1.610773996 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12909681 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.13382364 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.145008966 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.109780247 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191651909 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.220300985 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.194812129 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133227552 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.125798269 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145761587 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.191961186 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.197772365 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.219408915 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.112024783 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.193176019 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.138361779 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.196381293 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133061515 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.144179364 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103896912 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14171255 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.13678741 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104441729 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.184545101 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.140459265 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.136162948 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135654372 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117303065 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.142417687 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.132152214 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.111141781 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.137265181 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129297717 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132655572 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197197571 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103337034 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131068444 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.142779492 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111094024 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.138885558 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.195640704 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.134059531 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.143109127 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.142073243 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108590725 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.13051641 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.141496279 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107474521 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221299878 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.114877371 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.14145249 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.136073294 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.112233224 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140940774 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129323194 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132628386 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.115153656 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.221551337 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.111734516 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.130922786 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.136469975 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.111948398 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.133334611 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.140176478 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.13692908 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11490304 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.129954066 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135443202 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104777036 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.136794245 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141981751 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.110100934 seconds)
  done (took 11.165904966 seconds)
done (took 40.542786276 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.178331279 seconds)
  done (took 2.127011105 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.045735307 seconds)
  done (took 1.997426227 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.723619229 seconds)
  done (took 18.711744198 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.578619852 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.658649973 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.0056529 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150922509 seconds)
  done (took 3.345276493 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.016843451 seconds)
  done (took 1.991901921 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.331870554 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.288070306 seconds)
  done (took 1.577580232 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.897119641 seconds)
  done (took 1.863563939 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.475094184 seconds)
  done (took 3.437873135 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.386947301 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201831344 seconds)
  done (took 1.56247807 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.688089126 seconds)
  done (took 1.657373861 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.160811718 seconds)
  done (took 37.130816612 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251310151 seconds)
  done (took 1.235106676 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.318387867 seconds)
  done (took 1.290906085 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.733208641 seconds)
  done (took 4.706812048 seconds)
done (took 83.597077023 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106925594 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134478879 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109181816 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132130279 seconds)
  done (took 1.450289985 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116023883 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.134065128 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.138067561 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.10749936 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.14269847 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.106906301 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.134405615 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140403757 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.106757684 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.13527019 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.132464978 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.107528229 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.137488227 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131678121 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105863653 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.135985809 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.110751625 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.135362433 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.133753061 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.108307091 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.132457464 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.133726768 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.110840342 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.134491792 seconds)
  done (took 3.989420446 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106147641 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125292466 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102795542 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.126225866 seconds)
  done (took 1.437117434 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.117448392 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.151276962 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.148776027 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.114327681 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.151158376 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.148898761 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102731783 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.129025015 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.105302011 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.141328439 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131000156 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152896675 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.123431276 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.135000912 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.141502236 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100938687 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.13598324 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.124127852 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.141080779 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.141977467 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101836559 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.139823405 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129185624 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.121250831 seconds)
  done (took 4.108822064 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.218952598 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119597055 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.157945558 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.185368216 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.159889433 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.105284642 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.161013214 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13911376 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.13964585 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.110208228 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.136266199 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.195354396 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.135402601 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.113489241 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.136141313 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.140977895 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.11287369 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.136863963 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.138538742 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.119437514 seconds)
  done (took 3.847905314 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108231766 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125589217 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094402995 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125012823 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.13175244 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102310061 seconds)
  done (took 1.674440218 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095736937 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119319385 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094164374 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119165877 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09844708 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.120041866 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092427164 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.119763657 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094080279 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.120477438 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093521615 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119227087 seconds)
  done (took 2.272308868 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.31217619 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098548673 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.129060911 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123201468 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104399419 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.125094351 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141344631 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097844384 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.262213858 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125686026 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11609433 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.203583545 seconds)
  done (took 2.823045763 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233813794 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107892497 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296015224 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404192267 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175972297 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185640527 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293984136 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185892871 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.237368405 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128834149 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246025326 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174140114 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169928145 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199224274 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129171857 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.207065074 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222404464 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22424346 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164240777 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230878325 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183296104 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186390854 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201854721 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170416072 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153015993 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176311847 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.132674221 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113902421 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219050373 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19032372 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196528731 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166287127 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156638262 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226152526 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273142976 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200991333 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.33851909 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150759014 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.212721229 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.203071236 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287608943 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156723891 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244965465 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144792205 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145664681 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201377021 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175603526 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.228882199 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.121967462 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155229041 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207593577 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223905207 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.21001879 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153393525 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320386664 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163724453 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164322625 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196746601 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212274968 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239753122 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18478407 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.107883693 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227986137 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206161231 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201897294 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163721604 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190842648 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140270478 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196963337 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218022952 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201874234 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212384599 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.205715605 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148348764 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182543483 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188519626 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171853053 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199278165 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178185542 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.132877992 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13814671 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151762327 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141873237 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.203119505 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107798405 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254744286 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148848198 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.207309894 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226250154 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176228526 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18197301 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181938782 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185542393 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163127521 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133183703 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162623828 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178349015 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174584527 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117258315 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175766607 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161491486 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.142686864 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169472382 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.108116466 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17710615 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.151416403 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185327465 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182784543 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.145684992 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181999935 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166019258 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.176664351 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192325999 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208542046 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145273905 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119511762 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242083451 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174350466 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126296897 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221530008 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210278955 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.185778248 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15210019 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191389682 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218907788 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157974764 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211291041 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159242757 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147538854 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170548748 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178032386 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175959128 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.144417981 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143933772 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.171253246 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242433023 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.114167964 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14932905 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194132537 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141093795 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113274658 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159891735 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151997332 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.156592004 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.168605747 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129141888 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17213219 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175901387 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170492938 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179045106 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161467032 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247376584 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117694961 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.179018936 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163084074 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131700988 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205116545 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206914492 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144781216 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206376482 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.192288486 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242707018 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183360234 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142950134 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202910321 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114853173 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.135836343 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188056453 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180513374 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180950254 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205716728 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239812337 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191600679 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.172349091 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166300248 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188864239 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194837122 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176462123 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.16124135 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181530201 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189619535 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.13540746 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.110475409 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.142959655 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154367505 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144743787 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118645056 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23164968 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183630593 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203758117 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179213684 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155513966 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205151835 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.14242571 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18341314 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.193772191 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153862063 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.209273754 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201548088 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184705905 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157564053 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191053178 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.135292305 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135998995 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.12238028 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186566458 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147519381 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14912016 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159017484 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203414797 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195620781 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165341307 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249229852 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189731175 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215029755 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.135344774 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.152168579 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215701475 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172969141 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177542013 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144879192 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.178675892 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198837427 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162343593 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216017526 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182448204 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187393674 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254390193 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.173546143 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144856631 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137671614 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214873392 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127144438 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182291426 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160594942 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150163147 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172838469 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.152980896 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113963727 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231977198 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158474937 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205162408 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174023 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196069987 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139719346 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161226873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177186133 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160884005 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103692219 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188853741 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239081513 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162220397 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175825143 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19664492 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115016083 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.352477753 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21402345 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204836271 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152722809 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158332088 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181281295 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177920368 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183994116 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205481822 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159979851 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201767707 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175807329 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15791531 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12082036 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162581017 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167368889 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170485734 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150697096 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17284575 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.156482313 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209344774 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160612627 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175547842 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183985947 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.163117929 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144688002 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15607697 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224343866 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17532785 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227701257 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.172111528 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188677151 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209045723 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108102998 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142287825 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1420145 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202834385 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146775266 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148417998 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.227544093 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214962209 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17654453 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186138484 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152982454 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.139451619 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177956331 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164931307 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21719974 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158770187 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.155306565 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214095209 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16852181 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143143156 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181556016 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301804974 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160424486 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195103346 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104147984 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.315947603 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112867465 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146075982 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177740947 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191716744 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.165992323 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.198020783 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185195784 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132183453 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178639303 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151883448 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232910582 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229255468 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191671005 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19655687 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.160856549 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174825071 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181001459 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194706441 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160108368 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.164197296 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179712706 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204473425 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210078038 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.149968808 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181610824 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179951084 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175936057 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225056715 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120731053 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206744509 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145830575 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18685962 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155498501 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13948363 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176961176 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199226283 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14792959 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196203847 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175798374 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144819329 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114272268 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169452639 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177398061 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16035696 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.143195498 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202469965 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.140542591 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182965043 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199622658 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116074445 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174540136 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16173187 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147889706 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158432703 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131351329 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149932503 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.185420587 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204275917 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.147562995 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197555154 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19326139 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184887841 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177910838 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160600415 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.679920119 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.115423432 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231597861 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134714572 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243661433 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166680959 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184804273 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179631333 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137083648 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219363811 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166862583 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210150998 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215172337 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178876383 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116818942 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159306345 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162198286 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.1481668 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168212812 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18082363 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127292111 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154991319 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176354487 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162949662 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.160608445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152750684 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2066894 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163061504 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206304363 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204858646 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154628506 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185224537 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197925777 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143271943 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183673804 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194460137 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158104423 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171012497 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.118168577 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.153462591 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200063096 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.136701715 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180059986 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178983308 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178608924 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180575816 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.123205324 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178770069 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1585229 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178902434 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143239315 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178120588 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174530654 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147565987 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.115159388 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173155383 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178802442 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.176118073 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142926047 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161391089 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227399278 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.108037196 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149302523 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299354691 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17563434 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213850738 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.172516628 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151036815 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159538142 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177082854 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173917051 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177664458 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.116147334 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14666736 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.148881994 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.198763354 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.17426092 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173020984 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199334917 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179319371 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209860536 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160643777 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285784764 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124648905 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172121604 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.147143451 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.147229881 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128637517 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150070685 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161944328 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208792276 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198107732 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.169016431 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.15971313 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144992461 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.108608554 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146704969 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179729133 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172794658 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175994064 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159850809 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103678978 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160689239 seconds)
  done (took 86.512431605 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169393856 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15334854 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157783636 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207308826 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178512923 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270930809 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.217180404 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23855554 seconds)
  done (took 2.661981865 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.135778434 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.119761753 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152996747 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134649512 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.135501575 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.448261356 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146474149 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106788615 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.19766699 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.174794529 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.105490273 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.686291059 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.137436816 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.133432291 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124832701 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132676695 seconds)
  done (took 4.137486642 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.57709766 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.568807328 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.127012145 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.265842058 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.245558149 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.192654959 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.781921479 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.206717774 seconds)
  done (took 13.030291199 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138422885 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152604972 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.353700412 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.223039999 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.174799099 seconds)
  done (took 2.117750918 seconds)
done (took 131.030934141 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.11037277 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.154990205 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109723384 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156132574 seconds)
  done (took 1.597987065 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156429775 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.123308206 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095377283 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121846314 seconds)
  done (took 1.57440406 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.548588408 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091235968 seconds)
  done (took 1.74700117 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134610659 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.15847713 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.155526467 seconds)
  done (took 1.535875231 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117012028 seconds)
  done (took 1.195425315 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110279233 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.141323327 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.19527886 seconds)
  done (took 1.531044018 seconds)
done (took 10.262207601 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132020324 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436876161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.424041231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117547151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732518373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.413918828 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.086425768 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167113025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203385586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097400144 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1486409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676551619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.037418402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.376019687 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.992132532 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376897952 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.708534984 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102343042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133975213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099162588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.063321762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126015576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100975246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130401188 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67716126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.433495359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126823027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.362744455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12697795 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103144506 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.417809619 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126357913 seconds)
  done (took 17.330573238 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145697331 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193281092 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137346353 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099649306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.134010893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127857865 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10989424 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143328024 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204871945 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12705832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11922211 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127219325 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132036683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098561677 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.151370899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097637569 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130897599 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128614584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106999056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129336626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118607676 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126368967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128128902 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102754175 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126460945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11214468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128541594 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140430856 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098321057 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133114919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104583118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127847379 seconds)
  done (took 5.174963981 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148793358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.20381511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138336304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163309448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186614183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099360019 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221044801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171781205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203304146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130283403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149336345 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098718125 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169660979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129523201 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.123765904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126960106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102419619 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130728939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135644 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101499291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149291112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097790772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129824664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130174493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099838659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.143177868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098854151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142728922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128051797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105722081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.136006566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12768332 seconds)
  done (took 5.513703953 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.11204129 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.142071131 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121499544 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.15488822 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.136958233 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.110716199 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.14205308 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.10583307 seconds)
  done (took 2.112171716 seconds)
done (took 31.213379945 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125082678 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.148244314 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117837625 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.142060121 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.202891863 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101626578 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.145642918 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.131117157 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.113196158 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.150898113 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.099295521 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.133675509 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.119485535 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.141650282 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.187553553 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.142250299 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.197618981 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.186811685 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.104150622 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.145897812 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.109561887 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.192956527 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.140705899 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.107010126 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197040068 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.136784909 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183831223 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.137777651 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.113965075 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.133455408 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186337448 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.109753891 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.139037307 seconds)
  done (took 5.80520989 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.203263986 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.216803323 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103508217 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.135039076 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.213585988 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103128523 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.233138254 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.104719255 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.133210072 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.103902602 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.131868987 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.204131914 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.212104024 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.226018621 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.244015338 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.211497661 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.202447972 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.21149822 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.198367952 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.215832382 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.202534794 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.133454531 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.21378008 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.216950608 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102628584 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.13411049 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.239402545 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.211082888 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.239010632 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.200425569 seconds)
  done (took 6.597255922 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112675505 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146615498 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125822579 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202562042 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.17333361 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.14454076 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.11160935 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.154607924 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.154480767 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100153131 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.13966004 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.137850617 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147927382 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139264478 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104537599 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.149865531 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.1556606 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.103270177 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.136829538 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119961352 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.149114207 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.147936526 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113990444 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139559556 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099254881 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141011964 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.133986736 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112940819 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138488513 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109285051 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.136012434 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.135482207 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103195314 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.140812967 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104195177 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.142057304 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.157987689 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109584302 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.143009107 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.16675806 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10890399 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136598901 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151865261 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.147476457 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132893969 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.142244476 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113251993 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140978771 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098610517 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151455967 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.115085517 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.131624611 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.15277944 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099139894 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130178427 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137657796 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103157773 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133260322 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.109663088 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.134931728 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.156131481 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.108676846 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136901367 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103128976 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135875843 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099974749 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.131331755 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.136393644 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.12465377 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136556633 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161522858 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101988075 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.141001064 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108288202 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135593136 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139681628 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.1013631 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135932159 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108661406 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.136258759 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.108771298 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.135130572 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134678272 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.121412206 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.154053033 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.14281517 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.11248624 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.141523149 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104025781 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132487161 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14438635 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102451319 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.134997323 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110285806 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.132276936 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132003834 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.11351782 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.140423805 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09892707 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149027555 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.137447735 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100151962 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.147747689 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100865636 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.135640764 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.111234352 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.145233106 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.130362417 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.111352218 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.143278663 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099434506 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.135931892 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.133651751 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100447088 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.149148745 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110585007 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.136119828 seconds)
  done (took 16.284727642 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.3049721 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.318851873 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210510568 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.408740868 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124791485 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.231905888 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.281937889 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.230051548 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132376462 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175525634 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.19242019 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270773877 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.10082009 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.164419779 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.282305743 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.412023981 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.163908345 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17716413 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176190284 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125496745 seconds)
  done (took 5.598578618 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.125204241 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174822685 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163070411 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.166005227 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.108174989 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.14550221 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.12884674 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.126903078 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.13959158 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138735137 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.100654631 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.145902767 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.108958223 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.140795845 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.150358976 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.178836504 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107215765 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.137633356 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.123496302 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.138479934 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.142643526 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.161241502 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112184491 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16037784 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.148552378 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116288403 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.130416331 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.136914534 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.104495705 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.135706284 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.106592298 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.154332035 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138374471 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107396101 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.141445833 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.112672544 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.132194929 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.13195509 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103533431 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134409398 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.119083652 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.141011305 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.106117804 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.127844306 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.114762741 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.134456446 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.145942686 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.112506731 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.144287348 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.117087921 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.143976979 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.144396178 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10824825 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.150752913 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102901439 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.147604491 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144976639 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.14212044 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.108872912 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130970462 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.100046803 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.136418938 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.105195964 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.143611922 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140950271 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.126020313 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.149145357 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.134968311 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108924222 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.136207769 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10432559 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150295694 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.160412755 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.135449964 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104787037 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154120998 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104648347 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123373649 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112351484 seconds)
  done (took 11.508514955 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132555491 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.139873343 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122302569 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.170840637 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.155132217 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108095051 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.140230977 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.122172477 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.145050101 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.147168478 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.114549862 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.146318573 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158122543 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.117911724 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.138129388 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.147369118 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.112710097 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.177045474 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151895621 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137016131 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.151004723 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.137649401 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116873724 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.145744039 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.16721184 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.115935909 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165648179 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.14109393 seconds)
  done (took 5.058511459 seconds)
done (took 51.946605714 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.229646439 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.416464229 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.194627241 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.21037534 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.204706088 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.234788006 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191854802 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.385239804 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.948061441 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.187523205 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.194510467 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.191165475 seconds)
done (took 27.70683092 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.272528859 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.781839623 seconds)
    (2/2) benchmarking "String"...
    done (took 1.504857461 seconds)
  done (took 4.400822781 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.185937489 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.186888813 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.432123138 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.186634979 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.204797247 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.205012958 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.200855867 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.206917209 seconds)
  done (took 15.734089855 seconds)
done (took 25.708329705 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.260988875 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.38923012 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.445057688 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.214729117 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.189965171 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.197150536 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.179915309 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.225134821 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.1902876 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.178258392 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.185309147 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.448234988 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.186153763 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.569744157 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.179669573 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.189694523 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.203829261 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.433439174 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.199012196 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.230944071 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.179188136 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.206095469 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.216344301 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.226508223 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.196182758 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.200654088 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.198078291 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.189291142 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.383721486 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.199673336 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.234478463 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.189548629 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.204815571 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.194392864 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.296130954 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.21616621 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.390701821 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.187600131 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.187861413 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.204410423 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.374078649 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.589237551 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.184526353 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.178502915 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.204517571 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.272790881 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.179619065 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.911905462 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.198142059 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.182123982 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.212324331 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.568008608 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.190289001 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.198075053 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.195339103 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.440966555 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.188951361 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.232947462 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.211296304 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.198023512 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.186156942 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.187562798 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.215925793 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.198810589 seconds)
  done (took 142.614389451 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.186944193 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.186129041 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.187237983 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.203945618 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.198058934 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.188505703 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.187582766 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.18735882 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.187522239 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.188109385 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.200618343 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.186739041 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.204219524 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.193327554 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.191908496 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.201019459 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.18736438 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.188836841 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.196326908 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.188300238 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.214821744 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.197608348 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.205744611 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.188735303 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.188750338 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.267774106 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.230917631 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.213890104 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.19471878 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.189357789 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.189640848 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.19712046 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.814574635 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053733964 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.200432034 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.213589775 seconds)
  done (took 79.714571054 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188663798 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.188623516 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187669242 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.189939375 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.220642749 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.189492764 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771805497 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.765980276 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.915049724 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.693615527 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.595120519 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.456307713 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189970675 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28476466 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.204331022 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189205152 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.206050926 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.23338377 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199414642 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190346415 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761823516 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204833416 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.388188422 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.39318575 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207605063 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224036863 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.594607261 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.191219364 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192352698 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22379521 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.526333384 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.241771402 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190433782 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594274119 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.274069422 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305587354 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.190834447 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193224887 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222431616 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.191394432 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.473247878 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190543048 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.191973362 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.193448381 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.863547849 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190488564 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.775849992 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197552154 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.145541138 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190263924 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192196647 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.394957258 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.872402913 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.208655026 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.191740515 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.194707312 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.192071883 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192935558 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225261643 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.518713176 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.315915275 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.210054562 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19661717 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22582937 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.191551695 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.492587205 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218632167 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.864820022 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266774618 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.42027941 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774760735 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204883764 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29005921 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314067496 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191549123 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.191665859 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192733826 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.193629293 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.303267183 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.194137389 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.192765454 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.622976419 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.371155054 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.212576825 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.636044346 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295195486 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194513463 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.624509386 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201173106 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.194049506 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959824821 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292044653 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.193752851 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.192846287 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195250771 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.6187035 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778774742 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503026217 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207124757 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.793356356 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204057513 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.6251634 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.763269316 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.890591555 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194192357 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309150638 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.372787569 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.212483703 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194552687 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.646069499 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.204925063 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.253292088 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.202138977 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594095276 seconds)
  done (took 366.289536934 seconds)
done (took 589.730554068 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.928716986 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.883944667 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.007436246 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.902483879 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.882591824 seconds)
  done (took 10.725473397 seconds)
done (took 11.844094527 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.388478905 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.387054941 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25541529 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38969425 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228797235 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.408331015 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.370485313 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.216354755 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.303556793 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.277895016 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301803403 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255876162 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233680175 seconds)
  done (took 18.137642745 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.464503701 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.20194089 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26309516 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461814557 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240462297 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463087036 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.502653441 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.202519141 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.363661443 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214518006 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21297682 seconds)
  done (took 17.712408873 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.464425313 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.201882297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285019854 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.443822732 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240861644 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478340888 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.514810712 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.203198165 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.349085546 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214333338 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213313999 seconds)
  done (took 17.73056218 seconds)
done (took 54.700505264 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241647065 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.368139602 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229313323 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216979454 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209721935 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211798504 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.216986361 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210373509 seconds)
  done (took 11.02669287 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21031506 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208639666 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.210587155 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207906943 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.207345707 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207793048 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.208696147 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20782614 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208761626 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208741346 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.20853153 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.209450513 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210403502 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209506934 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.209308104 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.209390101 seconds)
  done (took 20.466003225 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210790436 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206139207 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209047863 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208326317 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209232308 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210592131 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210029389 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209346159 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209659204 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209324051 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210726929 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208455908 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209749238 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209328785 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208815371 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211229006 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209713135 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211438648 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214353148 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209136115 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210274021 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208383105 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209806 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210822914 seconds)
  done (took 30.159697517 seconds)
done (took 62.773577791 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.200675879 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.210112509 seconds)
  done (took 5.533911612 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.270129025 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.272629729 seconds)
  done (took 3.669003806 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209473509 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210347761 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210268239 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.20974683 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.209530894 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211424311 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210057457 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.208403971 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211436115 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.209749952 seconds)
  done (took 13.225624839 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211928089 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210727533 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210988327 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211217864 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21066318 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211116554 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.2110475 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210734925 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212580667 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212118885 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211057526 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.211622631 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211958188 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211740941 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.211219597 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213076068 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211685791 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.21208942 seconds)
  done (took 22.933089516 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224582853 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.233022204 seconds)
  done (took 3.582549595 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.352669155 seconds)
    (2/7) benchmarking "second"...
    done (took 1.252904191 seconds)
    (3/7) benchmarking "month"...
    done (took 1.328691101 seconds)
    (4/7) benchmarking "year"...
    done (took 1.31997936 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.253204947 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.235349905 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.254631893 seconds)
  done (took 10.123239469 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.214468662 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.403692243 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.512407763 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.768075904 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.214239801 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.259846052 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09016175 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.259453273 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.247624346 seconds)
  done (took 14.095140103 seconds)
done (took 74.287416468 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.202788072 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.260609405 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.238825577 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.226023574 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.547735915 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.231647396 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.210515252 seconds)
done (took 16.044263644 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.208500144 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.220458093 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.209548088 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.21390692 seconds)
  done (took 9.979297483 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.204378402 seconds)
    (2/2) benchmarking "read"...
    done (took 1.568609518 seconds)
  done (took 4.900629085 seconds)
done (took 16.007656612 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21615114 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.213532585 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.213742911 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.213937029 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214048201 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.213139785 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.21392721 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.213844545 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213667633 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.213021922 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.214801951 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.213854323 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214969569 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213485627 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214196923 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215715471 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213370589 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.214613 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21427376 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214461041 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215720417 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215361396 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215027694 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214263485 seconds)
  done (took 30.27095709 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.215734527 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.215761021 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215366237 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.215497053 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.215535995 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.216209132 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.214513421 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.214446752 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215567881 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.215566606 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215056115 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216570117 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215050022 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.2159536 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215433331 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.216452559 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215537084 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215800584 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21636163 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.215159088 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216332087 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216385585 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.215952463 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216560289 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.215865007 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215725327 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.216275214 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216006488 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216702786 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216217526 seconds)
  done (took 37.603043038 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.222371604 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223450411 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.216984621 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217240182 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218068927 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215902672 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216799542 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217363286 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216212229 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217007562 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.216720435 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21763346 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217781848 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.216272537 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.218337272 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.21677686 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217374963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217919121 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217086777 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217606191 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.217177783 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216422546 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.219288788 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.217804502 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217801207 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.216313404 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215910958 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217794053 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.218150057 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217959719 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.218301041 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218546611 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.218536914 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.218805779 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.218186487 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.218097325 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.222699897 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.223064941 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.218233736 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218748462 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.218203233 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219309111 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.219135417 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.219390954 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.219069062 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.219965071 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.219713653 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.220294218 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.218619299 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.219176315 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.219019102 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220788684 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.218559024 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.218873292 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219835342 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.219510281 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.220025706 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.220140092 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220335057 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.219526991 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219866057 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.219942318 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220162826 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.220520709 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221496459 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219762631 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.221044758 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221261893 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220602291 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.222087339 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.220726877 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.220526385 seconds)
  done (took 88.894353899 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.22116444 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221248604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.22083399 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221062036 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221371446 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221229488 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.220250972 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220250319 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221430254 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220939016 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221178026 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222487111 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221029459 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223362822 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222638015 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222074842 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.222076404 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222902749 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222296723 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223223133 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222717236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222895337 seconds)
  done (took 28.012505291 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222306781 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222852263 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222735492 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224339044 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224291485 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224994375 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.224197776 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223601526 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223514654 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224604983 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223776025 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223132599 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224816949 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223504239 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222844927 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225373082 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2233706 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22480748 seconds)
  done (took 23.164441173 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.224422211 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.222743099 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.224399704 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221762104 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.223632859 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22370644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224246075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223877943 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.222835348 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.223994537 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.223831769 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223507042 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.224425149 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224110214 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224481987 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223455871 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.224147896 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224736711 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226729066 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223227991 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223664151 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225493825 seconds)
  done (took 28.063433776 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226820952 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224749593 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225025714 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225797668 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.22564486 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225965631 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224911262 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.224132653 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.225031294 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.2264113 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224504183 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22602331 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.226506091 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224575363 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.224740064 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224738319 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22413844 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225227382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225987169 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225506496 seconds)
  done (took 25.644304943 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227248275 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227320529 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.228647179 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228701155 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227129895 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.227598255 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227310099 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.228800586 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228601695 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.229877508 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.227985392 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228685385 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227547135 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.228726019 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227275686 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229223495 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227954091 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228083822 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.228802654 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228802491 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229418188 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228689612 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229591144 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23042932 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.227589135 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229674323 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228611123 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.229266372 seconds)
  done (took 35.536980766 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228401109 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22800086 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22840646 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.22892471 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230220492 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22827115 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229150862 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.229975547 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227541173 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229453891 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.229192873 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.228873289 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228359518 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229514278 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22863602 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.228959377 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229140664 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230033787 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230366994 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23024409 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.229250534 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229635699 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.229470626 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229773731 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229626795 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230249248 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230686616 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230129927 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229514896 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230092315 seconds)
  done (took 38.021950287 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.277494477 seconds)
    (2/2) benchmarking "in"...
    done (took 1.277246745 seconds)
  done (took 3.695797956 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230555173 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231231634 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.230857701 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231083306 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231945141 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231559185 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23079649 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231145342 seconds)
  done (took 10.989805405 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.229182794 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232539182 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.231726457 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.231705141 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.232177318 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.228290273 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237113848 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259690481 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.229628744 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.2309408 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.234151828 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23426258 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232425289 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229699458 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229203174 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232880098 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234319631 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.23213929 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.233390517 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.23292888 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.231710982 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232372971 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23310103 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236284494 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230641058 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238732921 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.238169332 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236278694 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230026361 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.235006606 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.231934596 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.23486588 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.232949303 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.233230696 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.233069549 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.233250242 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239695245 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260603793 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.237080232 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238920526 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235491648 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.234321959 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23250843 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.234882099 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233480385 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.236911377 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.2346006 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233137131 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230198221 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.234881575 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.240031006 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229567537 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.233483825 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235246018 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236643078 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241107344 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261812703 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.234815273 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.23832277 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.240880514 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.248629366 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.245196879 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2356798 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.239422251 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242636023 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.250447642 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242457922 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.262193052 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237477686 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.236222165 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.23870811 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250136184 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.247954046 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239719728 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235718083 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.237116118 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23341403 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238553711 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242245328 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259825703 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239773105 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238015449 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24227233 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250740696 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.234608818 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239893698 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237410748 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.238452552 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.236054541 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245720072 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.262105606 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.238455258 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.234661132 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.234910335 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.237888266 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238608012 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.234878592 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236582742 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.23957207 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.23842294 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237545337 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238397211 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242738427 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238736755 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.237190527 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240467309 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.242735382 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23582839 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.243266545 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243691707 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238414459 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.239514898 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.242763217 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239689782 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238483827 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.242381442 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.242599942 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.237869407 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.241965877 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.240341808 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245238626 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.25668502 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.242494618 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.240645568 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.240497587 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.249201309 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241157477 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.239227213 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.242212416 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.238564009 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240343014 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.238042823 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.24129404 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.237187824 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242694758 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237868732 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240905263 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.238796321 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.239756874 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.237900773 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.238479998 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.237623896 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.238877594 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.24058419 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242722093 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.238777894 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.24585397 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.241280541 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.239393488 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.239912419 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242215631 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239836231 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.239250033 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.242310481 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.237719084 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240867156 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.237418418 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242803474 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241758462 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23956966 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240484991 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.237636064 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24135365 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.245125088 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243501034 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242617712 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.242361773 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.240878164 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.241467988 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.237413128 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.242751814 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237849877 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.242421182 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.249406891 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.243226474 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.243179912 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243256276 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244386499 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241789011 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242387594 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.24173595 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246931534 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244564915 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.248833127 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.247886054 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242857053 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.243907664 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238843291 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.241088254 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243881621 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.242696968 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.249453779 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251382543 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253751557 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.240271514 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.245783085 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239823795 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.246022503 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.24441806 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246036822 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.242466481 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24326022 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240082746 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244968722 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.242851246 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.24451371 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.238835391 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.244196153 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.244440431 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.244098169 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244055854 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.240789341 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242615301 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245314863 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243762697 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242874641 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.240426736 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.24517104 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.241563066 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.24246428 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.246579174 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.24486689 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248705225 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249644789 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24404214 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247079143 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.246121341 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.243086041 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.246747993 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245996183 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.244478514 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251962487 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.268183643 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.245053636 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251762152 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.269249415 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243101802 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.248329671 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.250184857 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.245759682 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.24474683 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.253022682 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.245359435 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.245415417 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.245967541 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244418582 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246740203 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.25072119 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.251613462 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243627272 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.248895584 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.243685294 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.248441529 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.245381198 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.246544564 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.24650244 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248596336 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250487404 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.248202488 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245689727 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.249808727 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.248726535 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24831589 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245629177 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.253198653 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.249631459 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248191147 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246329507 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.245847316 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.252241104 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244618766 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.248449132 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245902165 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256742934 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.262572834 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251520183 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.251956487 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.250793212 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251920511 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.250186466 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.249412919 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246778798 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248750595 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245650669 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247483936 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249298411 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252902596 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.251434843 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249268358 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25050247 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252696452 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.249426478 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245964185 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.25280272 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.249601446 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.249592361 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.245367344 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.251052085 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.24810286 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250945023 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248927085 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247630189 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256451206 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272668527 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249467087 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.741986157 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248395409 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.246869934 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250237035 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25167378 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.249809003 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257135065 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.249373436 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.25519579 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.248618448 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256553032 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.255470825 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.248273366 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.255938116 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.250153888 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.246659532 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.247524851 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.251910597 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25627825 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.27599303 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.248215178 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.255316683 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251616718 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.250644958 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.251651905 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.251352356 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251787091 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.252812407 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257469715 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276342271 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251851349 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253141993 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.255834911 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.253159003 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.252593187 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.248117595 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253420443 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255833641 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.249961545 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.251142604 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.251077885 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.25488226 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.25362884 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.253452089 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.254862238 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.255264957 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258869073 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.276327528 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257920889 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.253863373 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.260088645 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258183515 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258316602 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279348607 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.249925719 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256804439 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.253157875 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.252290051 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.25137994 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.252183503 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.254550005 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.250998139 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259047301 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.254375895 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.253972344 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.253112073 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.257439619 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.250523568 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26096024 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271931597 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.252035868 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258418666 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.254971097 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.250784801 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.25854711 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.253910173 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.249101953 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.254024761 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259849405 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260703133 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.251452407 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.256886945 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252244093 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256781488 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.255449156 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.255604688 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.255123522 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.255809114 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.251819637 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.256837477 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254253073 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.258074726 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.253223489 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254773312 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254294 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.262038006 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.259158271 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.254661581 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257187975 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.256749154 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.252566286 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255033421 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.257471034 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253990412 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257876059 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.253051548 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257970712 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.256876851 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258729605 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.256823521 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.258067148 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.252531258 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.254509273 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258042229 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.256657514 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258279437 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.25489161 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.259595309 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253985013 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.253732557 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.257522464 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.255315797 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259810557 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254724425 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258815082 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255985899 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.259743826 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.259317732 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259223568 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.25436359 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.25509652 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263484301 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261623008 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.26355109 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.260864443 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.261066245 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.254228364 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258431348 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26055532 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256241587 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.256889807 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.261129372 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.25673713 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.257718549 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.257648888 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259529726 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.263666339 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.260201244 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255238463 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266864874 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.283329659 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260575708 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.257091472 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.256962896 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.257095541 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.260151284 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.260324594 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.256862972 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26549732 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.283922067 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260399163 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258273833 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.259174439 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.257606433 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263285242 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260179105 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.258670657 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263157488 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258842245 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261375838 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261325761 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.260942423 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255992293 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.256635345 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261002927 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.262899947 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262550474 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260221481 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.261085522 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.260222874 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263266439 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261687565 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.262403443 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.260758769 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.258328376 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262656832 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258171541 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262472589 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.260863736 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.258479177 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.265084147 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264160439 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261819525 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.265982947 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.268075093 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.260058212 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.259254832 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.260470245 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.264304641 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267467991 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.263319981 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259695937 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.261881836 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.264077047 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263348492 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.262809287 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.261397203 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274263121 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28973189 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259628925 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.261282052 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264892323 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.267134046 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.262904208 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.263090771 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.262214686 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.264054069 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.269027048 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.265109048 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26864052 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286359911 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.263319305 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.266953281 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.262358042 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.266831176 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264386574 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267677151 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.265066534 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.264604729 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.273871212 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26843273 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269974324 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286698612 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.287379957 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.263704342 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.267079639 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259813973 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.264466028 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.263068474 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.266134596 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264144857 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264656465 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265030906 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261799774 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265349276 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266419094 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.2692704 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.263871098 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26058139 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.262420402 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.264277039 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.265384778 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.267452384 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.265320075 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.265274474 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.265800985 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262643776 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276862399 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.278780924 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.267517954 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.266006329 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.264953682 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.266416692 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.268901413 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270160315 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272171247 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.265913553 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.266838176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.265629616 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269027519 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.268648822 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.26362663 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.263591806 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263960676 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.267337844 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.276352393 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281556085 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.268501244 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.267067618 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268925513 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.268232833 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265579416 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269794038 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266477948 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.266052879 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.26796106 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269977633 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.268795175 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.267963446 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.267493841 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.273932613 seconds)
  done (took 747.486439802 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267017987 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267366203 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268696727 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268252258 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268618172 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269697817 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268513009 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26995368 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269405281 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268954785 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269206592 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269288726 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268533759 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269701868 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269927731 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268660143 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269045673 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269058672 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269565828 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270249747 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269615271 seconds)
  done (took 27.826437829 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269065913 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.270341784 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270208772 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270458064 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27016805 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.270104306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271353968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270951415 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270912641 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269913372 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269767232 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269897031 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.270875559 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.270637972 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271855354 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270625856 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.271572684 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270135169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.271297513 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270211344 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270918108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272867066 seconds)
  done (took 29.131728071 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.269824281 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.270906111 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267880603 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.274258085 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272329421 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.272701344 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.272392234 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.269501023 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.273158931 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.268598953 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.267395351 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.269349718 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.273979639 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.277284246 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.271357703 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.274274248 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.273083618 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.272214662 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.272721655 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.271441707 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.276473487 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.277891944 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.272822512 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.268183231 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.274046906 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273890392 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.27365539 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273925342 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.269230198 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.275887202 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.274636508 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.269645769 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.27552422 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.273014949 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.271910743 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.276872245 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.274495176 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.273442087 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.274264672 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.280628064 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.291545606 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.275303857 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.279035702 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.279830024 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.274194298 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.275120005 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.279201358 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.273986457 seconds)
  done (took 62.323954129 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.867396722 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.8922562 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.889866203 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.891907168 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.896127021 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.896707331 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.89544423 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.905810347 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.898980017 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.89667659 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.9018457 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.906937771 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.901000056 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.901773234 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.900313577 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.900612296 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.895613945 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.898483094 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.903863021 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.905914234 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.909356139 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.901960024 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.899077082 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.902689611 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.911422921 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.895553011 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.895122533 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.905991092 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.905931498 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.896949279 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.904477285 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.904852514 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.915303505 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.897223858 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.903699202 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.90792183 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.918072631 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.905270309 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.907885304 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.905025547 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.906304594 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.909861781 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.906562727 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.909898151 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.915459979 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.902915925 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.895958244 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.900690372 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.902930689 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.910911103 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.90915101 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.906852682 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.906576897 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.904321843 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.904441771 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.907332678 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.903307777 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.910673269 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.906617309 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.904551657 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.903932635 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.907133576 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.909986694 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.902982176 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.903645616 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.906943147 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.904955437 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.907658457 seconds)
  done (took 130.598849841 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277178328 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.278401105 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279595263 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280426946 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280485726 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.280486367 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279607045 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.280514553 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280956575 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279244239 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280365595 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279574599 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.279420932 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280511405 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279565316 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281090223 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279645036 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279430017 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278869443 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279943304 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279294008 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279506703 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279661554 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279293112 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278992506 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280009712 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280850754 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281012 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281069113 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28182578 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281181533 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.281515392 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280613905 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280273771 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.279894864 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.281152012 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280740916 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280517102 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.281404245 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279653614 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280820294 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28110323 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280923627 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281116027 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281592832 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280917767 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281307989 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.282249281 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281365515 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282220745 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.280666051 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281908193 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281123606 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280447973 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280827835 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.282438948 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283060671 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281662071 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282169376 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282308417 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282520529 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.282280611 seconds)
  done (took 80.589398697 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28240011 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282224304 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.283546292 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.283563165 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283153504 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282727549 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282941973 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.282425787 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284763439 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283281227 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28358622 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282553899 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285416576 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284282851 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285219131 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284747609 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284042505 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285296656 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284854099 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284015615 seconds)
  done (took 26.862506868 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282716335 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284866482 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.28440028 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28508722 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.285171487 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284101172 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282138647 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284318518 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283696562 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283915049 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286223868 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28553432 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285385403 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284908005 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284041302 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28574709 seconds)
  done (took 21.742774558 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.285096167 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.285609692 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.284523896 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284491283 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.284970123 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28434641 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.284194872 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.284590862 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.285320681 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.285929775 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.285238987 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.28582271 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.286371625 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284294624 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.285242377 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.284583098 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.284489726 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285792969 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285961779 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.285974012 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.288229714 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.28531082 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.286427902 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.286552543 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.286498947 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.285506796 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.286033769 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.286455181 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.287115276 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.287583968 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.28763859 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.286389673 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.287254637 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.287024849 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.287284386 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.287001169 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286318861 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287114879 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.287652814 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286937432 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.287089504 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.287729317 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287897759 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.288576771 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.288537795 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.289265895 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.288729708 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.288105707 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.287856799 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.288501892 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.287974166 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.288720672 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.287891401 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.288076728 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.290052577 seconds)
  done (took 71.95620082 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288608845 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287022728 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.288500914 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.289837491 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289621079 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.288762722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288885872 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291387767 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288270678 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288447065 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289468812 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289888323 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289336441 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289665253 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290036404 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287971372 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.288319325 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288709182 seconds)
  done (took 24.396394321 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.289783061 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28976382 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.290397253 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288943283 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.28997577 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289082735 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290881755 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.288987387 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290098239 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.292806208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288670684 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.291818274 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289746821 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.289440006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289157198 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288928307 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.289860494 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290491381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288966586 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289600679 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.290761457 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289994395 seconds)
  done (took 29.572899042 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.284730408 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.284549506 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.284971433 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.301270585 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.30238438 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.285198409 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.285518264 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.285961827 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.306742957 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.353718023 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.348649113 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.301197916 seconds)
  done (took 16.820697663 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29103012 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291287546 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291327018 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292196982 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292181661 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291577782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292122707 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291292395 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292159115 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29188435 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291312713 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291080284 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292112717 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292292357 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292174229 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29397729 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292502258 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291681415 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291140799 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292639275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292611618 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291599941 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294323444 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292707982 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29251225 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292590362 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292704073 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293720477 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293085945 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294015922 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294019342 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293589559 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293623649 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294109227 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29388126 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29319431 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293693168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294054509 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293683643 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293945302 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293264209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293910022 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29454579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292263466 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2942906 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293134529 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293961604 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295220629 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294329269 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294832669 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294281033 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294675096 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295260298 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294165992 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295787542 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2964398 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29575155 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295092179 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295567281 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296044503 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295451933 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295352419 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295025286 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296597348 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295378706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295881616 seconds)
  done (took 86.571457038 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295488177 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296756193 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297233079 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296476914 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296325762 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295377778 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296027719 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294843813 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296224982 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29588842 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295921006 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295864028 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295704607 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296062001 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295503261 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298575547 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297145894 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296170821 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295762958 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296909627 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296330697 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297027256 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295613655 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297219029 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29597503 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296461049 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295542751 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296875047 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295919582 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296463124 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296426322 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295704986 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297269184 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29690736 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298715684 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297229253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296302482 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297297863 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297006415 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297203661 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298674098 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297919505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296730528 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298064999 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298768458 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298197758 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297840111 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300069935 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299005787 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297703491 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297903299 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300583446 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299090932 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300305365 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298934968 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299527605 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299133939 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299210852 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300209723 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299213058 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300387241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301661594 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300862225 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299988775 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300599187 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299749633 seconds)
  done (took 86.841650803 seconds)
done (took 1793.745291847 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.460637066 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.414693241 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293463537 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.30971336 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29363647 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.288978302 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.310424149 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.294198536 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.295240637 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.295225629 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294314998 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.483286697 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.289890497 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.295010553 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295996177 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.391634618 seconds)
  done (took 26.511537886 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.32579705 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30267281 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.420967211 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.318138726 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.325203179 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.502126271 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.356826047 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.298287984 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.485154208 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.321016083 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.303390502 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.323811624 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.301113017 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.297955143 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.319000488 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.502605815 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.561606132 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.305491502 seconds)
  done (took 28.774816911 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.797441205 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.301870953 seconds)
  done (took 5.305062409 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.321410284 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.300057847 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.30075319 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299917421 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.292052106 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.311627593 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.299165495 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.294460542 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.300323441 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.43275287 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.301246567 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.313777846 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.317962798 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.30089 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.30342036 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.344333794 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.451077068 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.305524684 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.304689076 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.305280875 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302470607 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.395105419 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.347246108 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.304229812 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.435998777 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.30407029 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303571917 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309148666 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.458651695 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.30519283 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.301454876 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302147054 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.30382526 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.295813424 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.789765974 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.313818347 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.31024982 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328817934 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.306108354 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.468140697 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.302843997 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.308982723 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.304751648 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.766265892 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.455354003 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429050365 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.324990463 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.303954568 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305952695 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.370006055 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304429984 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.304513737 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.364544218 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.124696511 seconds)
  done (took 83.770080294 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.301356478 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.296002154 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476295685 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.322992381 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297090035 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.298132757 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.297865511 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.609634457 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333991659 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295807733 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.595810398 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901203409 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319825244 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.356637679 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.161590337 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.372381899 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298130434 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.315079133 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.298958724 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.302674964 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865708759 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299340849 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.318704493 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.451777553 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337601522 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83769956 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.302790994 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.299548567 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.319414305 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.29800518 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850159389 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.316274453 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.375996036 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.300585688 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.580604689 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700642296 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.663604848 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.299485613 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.340434935 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.301843926 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.3058465 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822695806 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.680763084 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.299598619 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.299266383 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830159943 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.298572107 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.301246073 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.309444845 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551349895 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.297994388 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.300373424 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.316197521 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.300101344 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.300040969 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.388139556 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.395339157 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.839992902 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.300080436 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.300784653 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.3453936 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.299610652 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307010557 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304452733 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.321174143 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68572037 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.47583601 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.301751489 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.684418954 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846193626 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.317213119 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.912682852 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321166216 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.310212779 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.524720842 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.301470168 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.301059939 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.851388154 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.323007905 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.300866363 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666644012 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.306791638 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.605918341 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.321535411 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304343455 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883734226 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.306048937 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.315097612 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.302721979 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.301996157 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.318611314 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325831326 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592992 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.352388772 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.302375256 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.302536965 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.312965969 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.303090919 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.301889869 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.309667944 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.912651004 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.321160498 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.301736428 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305890487 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302268651 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.312088121 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.305202153 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.305115868 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.572007358 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.302312152 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.321744166 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.30155454 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.303168365 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.312850535 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.459367682 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.304474174 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.637613388 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.302818436 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303286616 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.327132855 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302474161 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.308485886 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305056777 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.312911681 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.191643667 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.564919623 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.32428046 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.304396435 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303701885 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32163099 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.335088782 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.304296765 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.367642437 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.305985744 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122373593 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323313786 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.309256828 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.305339726 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.307980753 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316009412 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.310266134 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.306268317 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604087448 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.590899019 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.479238993 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.315231387 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.310121379 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.092164337 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.367459732 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486677842 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327366252 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.305938274 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.555071685 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.5400884 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.308148523 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.305457603 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.309477022 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567762639 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.30685373 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617010571 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881060814 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.322205208 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.308995116 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.129882745 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.016744633 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.307346699 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.310046703 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602393747 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.324611266 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.305086828 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.307334426 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.305638504 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.325611977 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.327328658 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.314320572 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.307292452 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.306585568 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.349169496 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498925232 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.327415819 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.308320595 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.841568657 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.331574256 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306723472 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.308135405 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312651222 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.308668657 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.385986661 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.313279801 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.355881467 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.314648065 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.316511868 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856816694 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.308346919 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.310083696 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501520812 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037857092 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.326730109 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.309909036 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326177821 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.221798615 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866048995 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.358497196 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.6457932 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.319658182 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.348973175 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309438535 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.323756555 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.867264528 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.30951633 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.332579728 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.002353562 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.329253779 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.793838391 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.309270501 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.310987005 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955240086 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.329069075 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.313048511 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.324661386 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307981534 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.624655527 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.311122447 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.355611287 seconds)
  done (took 493.136693695 seconds)
done (took 638.702289622 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.309737399 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.313384784 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.306991182 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.315325453 seconds)
  done (took 10.46628576 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.324442485 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.315249528 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.32064439 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.315457726 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.321813571 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.315460852 seconds)
  done (took 9.136749528 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.30963411 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.317871465 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.31513655 seconds)
  done (took 8.165426247 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.534356856 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.331886951 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.67054414 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.348332049 seconds)
  done (took 9.111803438 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.32315158 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.321706015 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321260495 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.322390145 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.325765437 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.326857371 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.324570552 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.322908321 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.32687491 seconds)
  done (took 13.138711359 seconds)
done (took 51.240668583 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.476467112 seconds)
    (2/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.44524835 seconds)
    (3/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.418359056 seconds)
    (4/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.416443747 seconds)
    (5/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.336237193 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.385343035 seconds)
    (7/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.423534984 seconds)
    (8/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.307734694 seconds)
    (9/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.349276425 seconds)
    (10/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.364778417 seconds)
    (11/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.354757195 seconds)
    (12/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.358348847 seconds)
    (13/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.350129353 seconds)
    (14/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.35999228 seconds)
    (15/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.407184364 seconds)
    (16/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.43560475 seconds)
    (17/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.374690093 seconds)
    (18/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.974426539 seconds)
    (19/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.539119786 seconds)
    (20/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.969740013 seconds)
    (21/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.431549561 seconds)
    (22/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.327821775 seconds)
    (23/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.492497338 seconds)
    (24/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.352476278 seconds)
    (25/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.454053414 seconds)
    (26/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.343295596 seconds)
    (27/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.153594381 seconds)
    (28/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.353928817 seconds)
    (29/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.567686931 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.462240925 seconds)
    (31/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.469602671 seconds)
    (32/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.442406649 seconds)
    (33/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.66467356 seconds)
    (34/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.525012419 seconds)
    (35/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.390252159 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.407099623 seconds)
    (37/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.340894643 seconds)
    (38/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.508357777 seconds)
    (39/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.536493509 seconds)
    (40/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.351134345 seconds)
    (41/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.330376603 seconds)
    (42/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.39626312 seconds)
    (43/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.368620868 seconds)
    (44/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.362624399 seconds)
    (45/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.307292803 seconds)
    (46/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.386685084 seconds)
    (47/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.370199418 seconds)
    (48/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.244267505 seconds)
    (49/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.449072606 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.456540477 seconds)
    (51/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.362582906 seconds)
    (52/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.533595844 seconds)
    (53/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.311030247 seconds)
    (54/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.312988706 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.422684423 seconds)
    (56/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.352882345 seconds)
    (57/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.352501604 seconds)
    (58/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.350351671 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.429191014 seconds)
    (60/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.527160762 seconds)
    (61/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.530550581 seconds)
    (62/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.010793528 seconds)
    (63/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.353923099 seconds)
    (64/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.423042173 seconds)
    (65/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.328464967 seconds)
    (66/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.336106675 seconds)
    (67/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.367898325 seconds)
    (68/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.485034978 seconds)
    (69/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.356978742 seconds)
    (70/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.430710562 seconds)
    (71/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.371273019 seconds)
    (72/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.638872603 seconds)
    (73/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.14143028 seconds)
    (74/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.704701829 seconds)
    (75/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.390152607 seconds)
    (76/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.701546449 seconds)
    (77/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.343183526 seconds)
    (78/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.356942554 seconds)
    (79/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.990271175 seconds)
    (80/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.337712382 seconds)
    (81/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.309577669 seconds)
    (82/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.443589338 seconds)
    (83/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.318230136 seconds)
    (84/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.101359003 seconds)
    (85/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.087628355 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.394366581 seconds)
    (87/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.28044026 seconds)
    (88/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.493141959 seconds)
    (89/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.501209801 seconds)
    (90/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.488941984 seconds)
    (91/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.35421553 seconds)
    (92/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.33451551 seconds)
    (93/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.309625399 seconds)
    (94/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.31471483 seconds)
    (95/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.422637417 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.489240031 seconds)
    (97/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.340546097 seconds)
    (98/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.400564034 seconds)
    (99/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.588831417 seconds)
    (100/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.318643596 seconds)
    (101/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.326044509 seconds)
    (102/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.330152843 seconds)
    (103/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.496582067 seconds)
    (104/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.397947615 seconds)
    (105/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.531499932 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.444687436 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.391169859 seconds)
    (108/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.313816252 seconds)
    (109/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.467474067 seconds)
    (110/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.362319509 seconds)
    (111/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.120093154 seconds)
    (112/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.553082018 seconds)
    (113/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.401134172 seconds)
    (114/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.354534947 seconds)
    (115/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.310393952 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.441690155 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.34802646 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.415847181 seconds)
    (119/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.366906562 seconds)
    (120/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.395973447 seconds)
    (121/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.450080876 seconds)
    (122/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.534809461 seconds)
    (123/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.33998011 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.396540042 seconds)
    (125/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.134192507 seconds)
    (126/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.088438035 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.43221689 seconds)
    (128/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.514493561 seconds)
    (129/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.469728393 seconds)
    (130/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.512181676 seconds)
    (131/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.374867785 seconds)
    (132/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.384348641 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.550784126 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.474068732 seconds)
    (135/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.361626068 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.336843085 seconds)
    (137/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.42966088 seconds)
    (138/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.048305335 seconds)
    (139/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.488732106 seconds)
    (140/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.314454169 seconds)
    (141/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.370771183 seconds)
    (142/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.475835381 seconds)
    (143/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.526967748 seconds)
    (144/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36167053 seconds)
    (145/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.367959489 seconds)
    (146/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.542688332 seconds)
    (147/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.445125531 seconds)
    (148/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.395070002 seconds)
    (149/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.50962259 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.410206925 seconds)
    (151/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.461607484 seconds)
    (152/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.410255521 seconds)
    (153/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.50972592 seconds)
    (154/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.55640461 seconds)
    (155/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.464683341 seconds)
    (156/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.075140973 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.552939734 seconds)
    (158/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.51576408 seconds)
    (159/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.494872297 seconds)
    (160/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.429381374 seconds)
    (161/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.47130484 seconds)
    (162/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.400129811 seconds)
    (163/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.340100975 seconds)
    (164/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.354429768 seconds)
    (165/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.315199565 seconds)
    (166/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.369779862 seconds)
    (167/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.104641083 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.376971583 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.542153289 seconds)
    (170/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.351926316 seconds)
    (171/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.244290043 seconds)
    (172/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.446475559 seconds)
    (173/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.455737633 seconds)
    (174/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.422692581 seconds)
    (175/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.402607949 seconds)
    (176/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.493434125 seconds)
    (177/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.403454885 seconds)
    (178/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.09507908 seconds)
    (179/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.44871094 seconds)
    (180/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.455675469 seconds)
    (181/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.316280023 seconds)
    (182/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.354024614 seconds)
    (183/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.539879385 seconds)
    (184/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.987785811 seconds)
    (185/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.356995785 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.468211108 seconds)
    (187/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.354440122 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.378601812 seconds)
    (189/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.434909504 seconds)
    (190/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.317754911 seconds)
    (191/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.326996694 seconds)
    (192/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.412523815 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.412820242 seconds)
    (194/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.46255226 seconds)
    (195/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.316427755 seconds)
    (196/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.490396334 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.360423879 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.432435004 seconds)
    (199/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.548280461 seconds)
    (200/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.342459566 seconds)
    (201/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.483183251 seconds)
    (202/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.405723313 seconds)
    (203/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.127912526 seconds)
    (204/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.035599869 seconds)
    (205/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.491470543 seconds)
    (206/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.38568913 seconds)
    (207/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.45022496 seconds)
    (208/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.385834739 seconds)
    (209/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.424592462 seconds)
    (210/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.463831635 seconds)
    (211/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.015750858 seconds)
    (212/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.49752982 seconds)
    (213/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.023608458 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.543248168 seconds)
    (215/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.101128207 seconds)
    (216/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.343907458 seconds)
    (217/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.372974001 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.445058927 seconds)
    (219/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.358385606 seconds)
    (220/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.490367475 seconds)
    (221/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.279554909 seconds)
    (222/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.157935472 seconds)
    (223/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.50903614 seconds)
    (224/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.619508273 seconds)
  done (took 371.193496005 seconds)
done (took 372.417841267 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380528255 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.514369885 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.333601496 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.331282044 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378075792 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.341230482 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.37959624 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341049644 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.343506235 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.343705159 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.339960485 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.348763096 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.346014702 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372634177 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.447915979 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.343756359 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.3340348 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.340475093 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.386091374 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.400846113 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378570702 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38129693 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.353956665 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.334597105 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38273924 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382857249 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.342355103 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.326317893 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.341594444 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.382590145 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.333824869 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.341074235 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.392057484 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.391500309 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380173901 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.341485804 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378444977 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.517697371 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379666553 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.375517357 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34666912 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.393689291 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346782695 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.346681075 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.391858792 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.357028415 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383559191 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.460263782 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.334486332 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.341693289 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387400577 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.403359544 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349140623 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.343284248 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.331954721 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.459883243 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.342682453 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384180959 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.343090426 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381112661 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.449616092 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384862501 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.404477942 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385068277 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.346812023 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.350577767 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.342551149 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.404844024 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345825634 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382048252 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382397234 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.349049839 seconds)
done (took 107.984922133 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.46676235 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.339044115 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.482872669 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.345691726 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.507298769 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.492923301 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.343921156 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.346704649 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.34379027 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.168437361 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.345991569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.344045026 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.340386808 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.343366242 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.471374458 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.342721461 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.342704722 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.054939661 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.345930499 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.483472402 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.371057682 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.343730451 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.343223651 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.164998672 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.33865574 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.335493325 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.483550088 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.343573268 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.061501609 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.335577516 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.337198249 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.06032981 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.486604766 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.364470443 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.354354174 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.351954097 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.508354484 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363883396 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.469492142 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.469364913 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.485064605 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.383938937 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.337301884 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.340851951 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.34473144 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.345645036 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.3435806 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373554564 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.339618688 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.343674412 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.057279174 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.352851487 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.343949878 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.344719397 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.343678351 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372427528 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.344869046 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.345392926 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.488168624 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.34612515 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.468266184 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.166842527 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.167224656 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.344597055 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.33869642 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.34574364 seconds)
  done (took 109.195005944 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.405804437 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.417269137 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.459019028 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.360700239 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.392563718 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463558587 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.360784457 seconds)
  done (took 11.10243114 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.349380464 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346224191 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.39063861 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390808147 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.347483172 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.499014846 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345003228 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.353113282 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.346543599 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.394813876 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.347282134 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347928958 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.355152533 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.342931795 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391928836 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.355507728 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.458504779 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.344711874 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.347949784 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.494667465 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346873108 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.357413795 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.395778024 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.354997722 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.347987915 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.349918915 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.114522059 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348610685 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348222368 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.3472128 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34919044 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.397919065 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350062173 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.343380433 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348186976 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.460582064 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.347912935 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34881526 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.349454924 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.346802334 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.349180924 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.349558265 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.350649234 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.350865833 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.349478852 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.369614787 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.349854955 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.350467156 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.349936678 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.350405618 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.397324073 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.350511751 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.350394062 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351011598 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.402007239 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358515756 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.349770013 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.349701726 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.348608964 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347974601 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.497733697 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391100303 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.349733869 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392777057 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349867013 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.349927302 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.348489784 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.350490212 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43940217 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.350024882 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.398533195 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.350336684 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.528346124 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.371519128 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351965927 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.351408727 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.349399525 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351791138 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.344080251 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.354218511 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.351633844 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.349294123 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.352908478 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350692486 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350492452 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.51161586 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458126588 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352834222 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.362593597 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.35489546 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.351396358 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.401174827 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.353267546 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353221183 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399064675 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.462935494 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.403077776 seconds)
  done (took 138.968933173 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.363131341 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.362707924 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.352245493 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.376854439 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.350282705 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.348761737 seconds)
  done (took 9.405847992 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.349900367 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.355218385 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.353574961 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.352821549 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.351473663 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353443784 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352592044 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351642101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.355689658 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.353420068 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.354208305 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.354029697 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.356401172 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.354091329 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.355596564 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.355320508 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.355211853 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354488167 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.354747233 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353359208 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.347788014 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.354647366 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356136362 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.352181157 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.360541775 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35548222 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372456167 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.353083284 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.355333188 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.359268709 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374169882 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.355855683 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.351274069 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.357124416 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.359030425 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.353281038 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358457171 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.355862413 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.354831372 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.35629558 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.358025823 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354961895 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.35648159 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.35601845 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.354316212 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.355895731 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.361018078 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.373911199 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.35643677 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.358694654 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.359413484 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.35794685 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.357959518 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.35865351 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.355548325 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376000058 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.360493103 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.357742408 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.359265317 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.354348817 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.36184484 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.358940711 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.355900378 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.362932504 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.359526333 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.358764908 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.356545416 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361165049 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358165304 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.357589621 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.358727429 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.357939058 seconds)
  done (took 99.965699528 seconds)
done (took 369.877261404 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.295165007 seconds)
  done (took 4.550944104 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.520409197 seconds)
  done (took 3.777589524 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.435813747 seconds)
  done (took 25.699715178 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.443493326 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.367463503 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.366798942 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.346512823 seconds)
  done (took 10.780565769 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.691375984 seconds)
  done (took 3.946201301 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.35783919 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.354461253 seconds)
  done (took 5.970123834 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.641599301 seconds)
  done (took 3.89841295 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.882728999 seconds)
  done (took 4.148323037 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.35582859 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.364935457 seconds)
  done (took 5.983683984 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.347229335 seconds)
  done (took 3.60259503 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.524574884 seconds)
  done (took 39.781012773 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.365735124 seconds)
  done (took 3.624017444 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.393990385 seconds)
  done (took 3.64994598 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.4265007 seconds)
  done (took 6.682921846 seconds)
done (took 127.351298845 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.348600792 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.356819827 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.355715297 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.355032094 seconds)
  done (took 10.673069182 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.412095891 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.412373421 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.412063936 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41067378 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.411095643 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.412511256 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.384762222 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.385350483 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.41220574 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.411490061 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.41350391 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.410946749 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.41230221 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.385039868 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.409860277 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.415643514 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.410863887 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.41223399 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.3996006 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.412378742 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.361538145 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.413168725 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.411500854 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.361794589 seconds)
  done (took 34.95422526 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.874028669 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.429490366 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.511248677 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.410126092 seconds)
  done (took 7.481758197 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.437466515 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.438379781 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.453488288 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.493163972 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.506167382 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.457460376 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.38704496 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.382326268 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.36966028 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.440685147 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.491280062 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.43127922 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.51693937 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.36157696 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.570327663 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.363080998 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.360953479 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.439993414 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.491943288 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.50471163 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364220459 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.440655765 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.441498289 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.431864515 seconds)
  done (took 35.835124377 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.371527009 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.377801353 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364994499 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.379335431 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.364663978 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.364502898 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.364338695 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.37094972 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.364239397 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.363432731 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.364866651 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.379979867 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.370273834 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.365276162 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.37128082 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36630697 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.372471622 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.369190502 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.36598038 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370450092 seconds)
  done (took 28.642757574 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.35441889 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.354096707 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.702984988 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.609938001 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.355529515 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.35342982 seconds)
  done (took 13.99064493 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.438355894 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.611828071 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.360893008 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.757591941 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.837730184 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.361183622 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.363109275 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.632026079 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990019527 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.979958279 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.430722366 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.436297648 seconds)
  done (took 20.462773164 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.372741854 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.356490984 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.373339723 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.37087196 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.421909385 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382853231 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367876516 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.355696448 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.423926711 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.442778992 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.383141537 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.421000185 seconds)
  done (took 21.936452556 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454101053 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360700206 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35980096 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455109871 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361844705 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.209898842 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355417605 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.1097238 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386536173 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636755676 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359873306 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484782199 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618210111 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377923803 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366488987 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.346858244 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614673441 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89628175 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364580928 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364208911 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399793225 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377020249 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370540883 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608985967 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389112485 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361372191 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.623118598 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361050726 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667652168 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381387728 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371781723 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362878394 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638954988 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067744736 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486467967 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598939183 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388254169 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364096414 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.355819484 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.368083589 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371978814 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372085762 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374820279 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363602762 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36265558 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376183261 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171243684 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397800323 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.364234079 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363073139 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647149932 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466764998 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.369677239 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364420715 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366231287 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364981969 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.369096867 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498144801 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966024117 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366526167 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384682145 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.369935528 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36548658 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372168219 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03247312 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.391169414 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.370765614 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370764271 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366988609 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369705045 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389267615 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364799719 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.390934306 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366276863 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172115781 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386346112 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390621814 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95615729 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386515932 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.371111439 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598950774 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366366767 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366131297 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.365417708 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365890166 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122030292 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374488114 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.355226789 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412894055 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.137364121 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629307691 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408170869 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397554193 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590152147 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.353704236 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367128546 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.375885294 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373593082 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38755402 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.166563894 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391231001 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.37279139 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625392134 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.578137357 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380991408 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.359992971 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925127024 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394361651 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.390399746 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378024529 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.61290192 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.029322049 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4018162 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382457238 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392506223 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368716131 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156096704 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386145179 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.473848834 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368881636 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686395061 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.229447857 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369492576 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434561414 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372468858 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368707557 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379818509 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375967949 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370420854 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.600738133 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407176626 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.382786325 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.370612085 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370809321 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.381074791 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372949153 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.378067863 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.592454285 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36947611 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652220355 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371590302 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370226755 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369393135 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.591789295 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.369679897 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.708503539 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633454469 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382009795 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386185831 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385493181 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389444287 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47424143 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391027607 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.380848822 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632651176 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.376153209 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.377171264 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382538466 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377486656 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37522746 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379964378 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371498128 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001069326 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367223457 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381580801 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263770951 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.387674913 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437946677 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379729646 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612939515 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.396772465 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373646839 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.397129872 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.372238645 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597201732 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381519693 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.382622168 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4548702 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.911661036 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027783492 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411460272 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.372476598 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.372792751 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.371675082 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372001826 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372482947 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372946698 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612163501 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413167874 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370824147 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.022346339 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398355841 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384535956 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.387011316 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385859275 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.381872397 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375776684 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.372936035 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37812802 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390543527 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.390926606 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517761614 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.389909819 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37478743 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.891892275 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381854597 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374598865 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373849873 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407525619 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386100677 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342113719 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662451121 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386212616 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66420845 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383031336 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.417281978 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.375078005 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375784764 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410148474 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.390757933 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389025001 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.385770599 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388773621 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382403836 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949102017 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251406769 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958385989 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419267564 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.38743758 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380388247 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14201749 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397616154 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376502235 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638003208 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157430416 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398860432 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918198873 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.413654253 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227142055 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667297186 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61674893 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382037243 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.384778705 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672174272 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595387937 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410349839 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388558542 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382699275 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.364301467 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976805712 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410683152 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466181489 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13572613 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398205277 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403720866 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.426662009 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.377850606 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856506206 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404701703 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378329584 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391326808 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384161276 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246046858 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408950081 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37847309 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039653479 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408663175 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.901571202 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401222849 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624640583 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412940292 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.382488569 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.381839835 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.381670345 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.634171044 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666557978 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386101099 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383117445 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966135206 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.278229042 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.386345299 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379338558 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171557934 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380658148 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697749685 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.394015008 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.386082105 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381621457 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380922152 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380824302 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.380072996 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384273671 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349367674 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911712595 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.388954364 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397472861 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390459003 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386396718 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637384901 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.39668056 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003370345 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633834941 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381918002 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407353741 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.383852285 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380590934 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.375817654 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38040103 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380804963 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379200637 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604874821 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398551186 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.369930692 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379910984 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592426671 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382589437 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384353162 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660472795 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.40883141 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.402085733 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261634914 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439600696 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384453334 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390350741 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384517669 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426135559 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47334103 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625820739 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.420916463 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.392855015 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837901672 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411946203 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391707293 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.399761447 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478732815 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383180468 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.393685888 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.15760004 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010860578 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235609514 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.015352592 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698884524 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391320396 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395348604 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385586302 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545015224 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384138002 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663560295 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383547248 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.401242789 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446063843 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388582289 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396214892 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600885876 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661230575 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384550795 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383902352 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390454571 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.383531622 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394265356 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.594610966 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918215399 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982720329 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388697612 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393260338 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15768522 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682953898 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385985947 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385331336 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385066779 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.399770572 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.391840325 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.39288688 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396714839 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536035856 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673547992 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114828007 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.422122444 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.416963526 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.904664313 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385141515 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666454379 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39268419 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.635834845 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038802409 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.173476369 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656956997 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456259942 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633219402 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.412519243 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54969524 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.402890199 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386364533 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386866783 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386997742 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.386714596 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396116098 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024774699 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679025158 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.392371187 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.40121356 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417381601 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.395450315 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611660792 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179859344 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617895581 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397406191 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3913073 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38675354 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024337768 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70340156 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396538485 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.394508909 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660087884 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415427763 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412757684 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.078092254 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.389101131 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991278988 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.371435182 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410181631 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401471762 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.156641252 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027267598 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.423911841 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936627002 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396753532 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390888224 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665888544 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.396610285 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402743675 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667568308 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.395580137 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402256039 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638074583 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.042864146 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261283871 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.415487056 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398164859 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.398129985 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38902011 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4740965 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39080507 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390539918 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.862739822 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416435512 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391464556 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405032474 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.402151621 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409095214 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.391653457 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391817126 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.399233707 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.398639069 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.393719598 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416120597 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52534321 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025637281 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418630549 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.072403974 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.715369017 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.648780131 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404066252 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.38461637 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.397511028 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392673396 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393163878 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393830408 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396663037 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999683389 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.414272043 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.408244417 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398801186 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.393404708 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603009694 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405609965 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647775447 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431072012 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415260829 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.379233075 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393271809 seconds)
  done (took 983.952967735 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420155973 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.428735943 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.446497008 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.495931244 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.441541648 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.538117819 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.447496537 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.444855747 seconds)
  done (took 20.957593348 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.391309584 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.402956958 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.403069387 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.405631728 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.394464407 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.920976038 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.428550176 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.402992269 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.416924965 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.406376384 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.41020351 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.385425261 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.406998581 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.401009622 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.396542519 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.40466133 seconds)
  done (took 33.283532721 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.740802517 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.656194253 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.005758948 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.462047088 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.444926039 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.396496357 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.771240392 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.409114723 seconds)
  done (took 28.180227264 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.399451524 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.401881038 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.401528905 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.402338066 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.40213188 seconds)
  done (took 8.302572523 seconds)
done (took 1249.910675264 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.400424557 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.401207755 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.401529983 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.401335603 seconds)
  done (took 6.898444129 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.383570219 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.386094706 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.385133429 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.399225166 seconds)
  done (took 9.8487276 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.176732901 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.065864744 seconds)
  done (took 5.537228538 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.893927713 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.91035575 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.904533696 seconds)
  done (took 7.002910429 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.682033113 seconds)
  done (took 2.977533074 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.307443957 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.39792683 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.097995687 seconds)
  done (took 8.099429159 seconds)
done (took 41.658842342 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.396764862 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.642453505 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.560775498 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.398749034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.565999452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.558958561 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.202958419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.392443989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402619433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.400477198 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.400206759 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.566285896 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.11412814 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.642727091 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.115352535 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.642721535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.566310536 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.395341291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425603287 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394686604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.225142947 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.4099253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.407123186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402496759 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.558287014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.543116102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.39499098 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.650175136 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.395225562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420135827 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.549538672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.393990398 seconds)
  done (took 83.432756062 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.394969872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.394849299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.394577691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.423028645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.396531722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.39773948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.416594548 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416648063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395548427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396185305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.403910254 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.395710269 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.40541365 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396578179 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.431639007 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396113774 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417076366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419025834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414179331 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.396767327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39699036 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431822344 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.396538479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.395663837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.409436571 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395927075 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.427034057 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395756485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.396223648 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.416210602 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.404090892 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419227902 seconds)
  done (took 78.288011652 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.399044602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.397258411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.420417286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.399800989 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.397047364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.405264192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.398751418 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.397353779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414095697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.402448553 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.396563489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413352495 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.400422064 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.398344408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.399292733 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.397169029 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.416067986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.402424455 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.401491749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416514712 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.399516452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403137583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397445836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.419176655 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.409182147 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417079283 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.400454238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.399825021 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398380225 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.402934477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.399372405 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.433924891 seconds)
  done (took 78.254731653 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.685571758 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.410789029 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.412991805 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.404993666 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.412673349 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.409217036 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.404898164 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.690816192 seconds)
  done (took 15.133820797 seconds)
done (took 256.404118317 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.40355558 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.976269209 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.450980583 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.40376682 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.426492904 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.43260896 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.647910945 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.449757549 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.649997203 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.42937406 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.426848444 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.407910301 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.305784335 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.565099322 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.307255763 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.410647308 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.386007763 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.41665058 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.024856116 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.708999605 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.429033402 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.401442169 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.296951568 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.4187846 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.408557016 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.494036331 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.513889041 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.641776085 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.578770879 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.49325657 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.973528138 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.42287358 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.406149597 seconds)
  done (took 66.014326783 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.407060301 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.536249225 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.411810817 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.412180502 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.537669534 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.433180987 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.407327762 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.412800936 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.412484416 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.411612403 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.411876187 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.412531752 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.412306333 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.462639799 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.541079825 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.428209526 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.408520469 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.529852297 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.408025529 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.40726094 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.460028914 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.413917531 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.414274321 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.462540777 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.414005294 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.414335506 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.535437799 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.43769268 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.416188117 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.534601089 seconds)
  done (took 44.613028901 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.41324729 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.065358487 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.227988615 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.416769807 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.411797928 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.417371535 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.736258927 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.420276089 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.415367015 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.4153616 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.960114601 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.442008877 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449601347 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.251680867 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.416278449 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.416266633 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.415915206 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.412712012 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.080130246 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426234029 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.765134987 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.418356963 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.740103234 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.425045071 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.437881878 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414100326 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.418070196 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.281983258 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.436044976 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.957617464 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.332124369 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.740698514 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.213875194 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.263277557 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.310275087 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.422467091 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.416861326 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.961624339 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.436065725 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412495933 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.746417447 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.419631714 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.233388684 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.123384712 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.434365896 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.417951877 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.326812838 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.998514432 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.718109064 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.427074287 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.273512601 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.421952341 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.41910717 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.417524843 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.693701763 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.42243765 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.41353765 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.337774934 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.442497716 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.749978768 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.424938335 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.415431343 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.087160722 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.421117595 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.079198152 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.421900707 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.42348978 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.437720196 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.259537892 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.422449439 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.142073955 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.435669663 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.41822029 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.972306051 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.099725036 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.401415693 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.420725466 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087595947 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.266577671 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.771414849 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.423983563 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.277858077 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.777476454 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.424679604 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.42261447 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.42077119 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421789573 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.496906781 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.746815892 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.080931561 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.144952793 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.397375222 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.778149157 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.429660141 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.419914414 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.374202725 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.448165008 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.421439481 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.253681516 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.147930181 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.438247995 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.4268 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.154017221 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.440792365 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.754384868 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.427344723 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.265372679 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.424219718 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.498289687 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.420984111 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.42626878 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.444631655 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.753568545 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426332079 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.421644812 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.131878863 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.010081036 seconds)
  done (took 201.345952746 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.427961231 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.418187857 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.429618469 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.418766998 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.413345594 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.419395334 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.413186406 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.414185185 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.416458307 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.41296828 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.412948197 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.421545582 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.419757438 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.413050081 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.41460115 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.43684043 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.43190479 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.415825339 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.442182615 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.4135731 seconds)
  done (took 45.72128646 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.424705357 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.08008564 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.058247178 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.42884007 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.423664603 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.420534521 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.482541419 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.443935022 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.423945945 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.770998866 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.622486858 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.443419608 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.425641865 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.422222958 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.034240444 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.420233156 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.767651562 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.082768051 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.431412362 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.076834954 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.419942078 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.424959824 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.420830094 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.076177973 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.804373159 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.758951928 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.491675058 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.096782578 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.449879179 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.424951098 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.077233578 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.43175197 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.422113512 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.07719345 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.451338033 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.439246369 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.426756908 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.486994602 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.506875492 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.793515832 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.168478376 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.786843921 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.441627542 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.608523094 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.42966342 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.415338339 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.086626462 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.451698176 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.417948377 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.427413249 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.432067206 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.043671869 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.447376745 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.046076708 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.451503489 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.426220368 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.083557933 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.047503974 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.062787742 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.624798395 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441786422 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.756808207 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.432242713 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.087464606 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.45120576 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.427885953 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.426840825 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.620865127 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.103858763 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.76306117 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.784290406 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.784011161 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.43423813 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.494040808 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.447107236 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.852284994 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.498231908 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.851229088 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.779289119 seconds)
  done (took 131.819547275 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.721686299 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.549826434 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.886004058 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.088775764 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.429985386 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.56972588 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.544430617 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.703500693 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.444975676 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.503165902 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.176962629 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.560251076 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.256716227 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.519761217 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.559226942 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.582703691 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.894642106 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.425442854 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.165009992 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.161341564 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.429850702 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.564484282 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.009304521 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.659407195 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.427972693 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.036360987 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.44281009 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.175437234 seconds)
  done (took 55.811550673 seconds)
done (took 546.627617825 seconds)
SAVING RESULT...
DONE!
