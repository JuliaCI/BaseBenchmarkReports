cset: moving following pidspec: 16733
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.978250944 seconds)
loading group "string"... done (took 0.600061337 seconds)
loading group "linalg"... done (took 9.417389432 seconds)
loading group "parallel"... done (took 0.191745285 seconds)
loading group "find"... done (took 1.494424731 seconds)
loading group "tuple"... done (took 2.204476015 seconds)
loading group "dates"... done (took 1.430266626 seconds)
loading group "micro"... done (took 0.224084404 seconds)
loading group "io"... done (took 0.581158723 seconds)
loading group "scalar"... done (took 45.816107235 seconds)
loading group "sparse"... done (took 14.421418139 seconds)
loading group "broadcast"... done (took 1.248369633 seconds)
loading group "union"... done (took 12.905640488 seconds)
loading group "simd"... done (took 2.631152227 seconds)
loading group "random"... done (took 11.101621194 seconds)
loading group "problem"... done (took 1832.710988917 seconds)
loading group "array"... done (took 26.825539227 seconds)
loading group "misc"... done (took 1.199066519 seconds)
loading group "sort"... done (took 3.794996856 seconds)
loading group "collection"... done (took 19.741473984 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.76226531 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143227749 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.216716211 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.374203603 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238909848 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166763306 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.171678117 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.582922524 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.998453419 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.282984099 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151570638 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.585975692 seconds)
done (took 6.354139308 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.278072084 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.39369999 seconds)
    (2/2) benchmarking "String"...
    done (took 0.176928882 seconds)
  done (took 1.194809131 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074554281 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.188888628 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112021224 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112785318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.101115006 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110883501 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.111217201 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111604889 seconds)
  done (took 1.478777887 seconds)
done (took 3.652242659 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.559250024 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.885907628 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.519180799 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.173984637 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.20375387 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.177889525 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320418189 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.158252339 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.120214265 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.109879326 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.220225156 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.345421805 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.499808454 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.024659511 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091122389 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128781291 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.098054492 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685667369 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08207299 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13741169 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.595603435 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.113786927 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117092391 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127281507 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.211306399 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133938104 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173520059 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.094462187 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681378954 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104915539 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.229813205 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083903619 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.180129712 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.261822994 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.08246173 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109287956 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679800123 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.182203725 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116035058 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099740183 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680421421 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082362326 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.249155661 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106957693 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114967249 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193699406 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.109848945 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.10244291 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101820083 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086141111 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175023847 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.471200445 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106610283 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170516434 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108098039 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.704452622 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10044525 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156192381 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140099786 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108453606 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080197787 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.110319416 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157258688 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112269207 seconds)
  done (took 20.186547091 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1628629 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167841965 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091988758 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141793708 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14560474 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095895518 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098203269 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078149202 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.13155842 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.236771179 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.143630406 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.187052756 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075871257 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101001629 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.141335664 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250317834 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107051351 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121545231 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09897732 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089026023 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141202062 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113001679 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111371403 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097650426 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.185372522 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205795739 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110471305 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122089778 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.10004142 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.119205903 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141077052 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151328562 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091400349 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084830491 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.203609876 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10624751 seconds)
  done (took 5.399187024 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.226614328 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117079373 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.237626126 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178817411 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143508122 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181298329 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14123365 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.300954226 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.315206318 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180107267 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128539543 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10981689 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077042883 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094940588 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092088242 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.707711274 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182667953 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155031219 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153537916 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106420108 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099830899 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385714258 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102930342 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083465872 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10441594 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.077975103 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22909511 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103960452 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.365781406 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116883046 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090870111 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136256638 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211778091 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.191867419 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140451991 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147717722 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105958867 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082805285 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.237747541 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111786978 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079024083 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130716054 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134428673 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136938111 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099536857 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096886028 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.25139603 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100845367 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106233152 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.157306161 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201622139 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.140564881 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080911053 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.395326513 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101423043 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108024785 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099979885 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.317484076 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140011758 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08418469 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095886414 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087041759 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096178681 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.448416134 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094138528 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.989220099 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095570954 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.169711467 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102019836 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107351178 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10387308 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086329386 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100387428 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117671859 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081257288 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095898405 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080118677 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097442097 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102234569 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106233129 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102460618 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096075595 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147168811 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119100621 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099432042 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100327556 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127101453 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102330025 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079809321 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130542026 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098325793 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100971844 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.177451267 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106902977 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083350689 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122479478 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101532671 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142564511 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100954775 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.217187445 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082231794 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124794045 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101078825 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128915057 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.126982921 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081629523 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103171589 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094834899 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081541141 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16336279 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082716304 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097040938 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100038138 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096160314 seconds)
  done (took 24.789359383 seconds)
done (took 51.001563475 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.536845334 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.127121946 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.124866776 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.126698087 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.125113826 seconds)
  done (took 1.753296529 seconds)
done (took 2.436679264 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.386780124 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187666154 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121801253 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186554633 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105333644 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.208998338 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.175799225 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118100755 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207267153 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100303256 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185644587 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099436864 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107221185 seconds)
  done (took 2.9049383 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101994106 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.127099241 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085534503 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116225697 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079816199 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116445732 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113313605 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.126795852 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113571705 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107002991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081483107 seconds)
  done (took 1.846553622 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098232966 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120243817 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085879671 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113928039 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07921217 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113500986 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110625456 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107851978 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112760394 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090597568 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097734238 seconds)
  done (took 1.811622626 seconds)
done (took 7.235644286 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.217469829 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.712512036 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.151738239 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.209028519 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.376208913 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.253567731 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.685667492 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.172011427 seconds)
  done (took 13.676273034 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.117359687 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.146969224 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104311409 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103905307 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085824121 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101553772 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087374885 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101347713 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102919895 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086987902 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100663269 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088436539 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101837859 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086877507 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101162556 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100488052 seconds)
  done (took 2.372183396 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139833751 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.137465836 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094016033 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.114835099 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108488585 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092412591 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109875839 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10915014 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09116865 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10724127 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113381968 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098226714 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.112588121 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.105392662 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095589476 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.114420041 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.106376618 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.094742018 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111046674 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111825845 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099649605 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.108985045 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111754995 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097427323 seconds)
  done (took 3.367087344 seconds)
done (took 20.097530445 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.187170079 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102544864 seconds)
  done (took 0.977094765 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.155328274 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157249218 seconds)
  done (took 1.005619792 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117973007 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.10107032 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.146315028 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.12112992 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.101630839 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086089292 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.139689484 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101188751 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085794068 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101606123 seconds)
  done (took 1.797585594 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092183925 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.105327959 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.113720646 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.153326552 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.100037266 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.106803542 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106883403 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090500451 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107243606 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.101460185 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096370251 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126551315 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.109464072 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128849077 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093033337 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.111808646 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116578794 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.108790393 seconds)
  done (took 2.665382263 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.086115539 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102756023 seconds)
  done (took 0.883473226 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091496111 seconds)
    (2/7) benchmarking "second"...
    done (took 0.101957688 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091359352 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107097625 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.101730415 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086487714 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102667844 seconds)
  done (took 1.376977192 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.564736012 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274827085 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.380999231 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124333224 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146712564 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.399590018 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148077671 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115196855 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.116994198 seconds)
  done (took 3.010133621 seconds)
done (took 12.410904692 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093504329 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.242396598 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.728401065 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.123701338 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083406726 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159125321 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.330409237 seconds)
done (took 2.456582024 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.366619439 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.165180225 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.093611862 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09925905 seconds)
  done (took 1.420367951 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080687729 seconds)
    (2/2) benchmarking "read"...
    done (took 0.109525467 seconds)
  done (took 0.892204814 seconds)
done (took 3.022070543 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084097917 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.132152565 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082233849 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.101698813 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099214433 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.084353496 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098779591 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084168119 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097761933 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083908301 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.09808154 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082566363 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098207341 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083273528 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0992583 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08248552 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098053865 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082704569 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09801913 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082942626 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098094586 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097775584 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.085068758 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097609864 seconds)
  done (took 2.974847527 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110078544 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10366709 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106862049 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091485316 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.107347526 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106424036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089434882 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.102413109 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106897461 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.085117111 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106377302 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106661671 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086512362 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.106850634 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102390911 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.092669958 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.105982507 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10337359 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088502001 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.109168192 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105972946 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088327929 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.107670704 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106229418 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.092850949 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107282808 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085114286 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.103702613 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107159441 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091738848 seconds)
  done (took 3.719055282 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.093775615 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095009703 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085093912 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.109591447 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.082085387 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100047478 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080711752 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09680728 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.100509135 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.083876976 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101829215 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.084897859 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095989649 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086300993 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102333014 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.087578482 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118103024 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097038932 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082803464 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.101051812 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087341622 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097821561 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085030364 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10050879 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083324113 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.096432385 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085501463 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0983845 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.085419996 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.099858612 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102706175 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.088980152 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100393896 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096620928 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104130055 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.082787247 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105460858 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095742879 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.086946599 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096243207 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082291566 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.099669612 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082576227 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.110736281 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.085182105 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102395386 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081913331 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.10165891 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.101011551 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.089359627 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096438647 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081856986 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.104642449 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088174578 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.104605032 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081888023 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.101388177 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081360124 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10308154 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099355826 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08228207 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096884018 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.089873631 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.101865463 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.108001084 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110653632 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09778712 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090131733 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.102132893 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.090755015 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.102402364 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115868859 seconds)
  done (took 7.544195297 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101081453 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113523851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086551402 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10264794 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099686213 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085073426 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109950098 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085415769 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101582533 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109881319 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085789013 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101785689 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085851589 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101849309 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084752686 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101747565 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109040052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084588153 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.098502628 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084776106 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099126984 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108297682 seconds)
  done (took 2.851941953 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.268447842 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089592649 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.153023966 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117421073 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.123006703 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118587714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0889023 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107596417 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106314726 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097229015 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112391077 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103919983 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122354237 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096288072 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112084936 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115068903 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089257409 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115245412 seconds)
  done (took 2.847872829 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104963161 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104711833 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126018757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085993464 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102102229 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085511989 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1102059 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117955648 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103084437 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087309829 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113280601 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100493671 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086863119 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100978412 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085090452 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10198362 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.1015565 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086757108 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111659809 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110299619 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094833858 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112194555 seconds)
  done (took 2.951252821 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105653739 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105120539 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.141326448 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090687919 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10101957 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098994264 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092535248 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102575053 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09351431 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101239418 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102236 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083851027 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111260363 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101741222 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.093870645 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101838765 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085540081 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10156093 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100682066 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085505741 seconds)
  done (took 2.715765303 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.184643177 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102927008 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118116855 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132831566 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115259677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100901388 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130899014 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116863188 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099723042 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132356597 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116946481 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115407672 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131529231 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110665101 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116594894 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131521417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131468087 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130197631 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103012564 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116773372 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135081147 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1014521 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130336671 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116290562 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115781403 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100565505 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117234133 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126757157 seconds)
  done (took 4.101411452 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08543445 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100678601 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084498449 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099394506 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08258864 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09771943 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083294926 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097201203 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083606519 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09742214 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082877551 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097332913 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081981674 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098847701 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084439737 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101056127 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084385231 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100287884 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097946188 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08441501 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100209235 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084414718 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101031257 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083865236 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098708895 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083195125 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101015379 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083275164 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099086989 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083279549 seconds)
  done (took 3.463324337 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101790144 seconds)
    (2/2) benchmarking "in"...
    done (took 0.130424607 seconds)
  done (took 0.957699221 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096563011 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12348875 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081893007 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100527718 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11133075 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084921785 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113055743 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111925826 seconds)
  done (took 1.548102825 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.156521777 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.155431306 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090059481 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116619013 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.153657404 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.143693665 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169385413 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106092236 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087994892 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097906833 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.148124374 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080610559 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108862998 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102244815 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089826889 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111933632 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100687397 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.095817171 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10823788 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086248281 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107723154 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11666348 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092447922 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112331786 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103223411 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096358009 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115520892 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.116998398 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089455126 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11284959 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0901793 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.103089178 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.10766836 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092686409 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.103352941 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.152140823 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117802307 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085666126 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107679103 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091347243 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112054034 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.102182137 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091951906 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104154432 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109420158 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.089425622 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106708318 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084805678 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098669626 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082879641 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.102574102 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100251105 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083954009 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107566104 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089336392 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117245449 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103249045 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084889855 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102597885 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103567465 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091731566 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104823498 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093209556 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.106895545 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109344661 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090640598 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106763915 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.103664009 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090177552 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.105218934 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094307128 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126672787 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114643014 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092401455 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111190903 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.104437752 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090258228 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112172628 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091984199 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114410917 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.110255127 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104440029 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112511351 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104498824 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088686295 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.11352467 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.088741011 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106500096 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082870634 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125099426 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.107926345 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086761929 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100782339 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113221893 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088325578 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.109903527 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083994415 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111442293 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.103353592 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094665824 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112187164 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089556273 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114702491 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111172583 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093264281 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111019501 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.150945218 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107587846 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087824152 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.10865796 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09397777 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103549772 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095311452 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.10372828 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107631453 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089705271 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.111273746 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112449709 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.090078019 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.111154301 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094856866 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113868532 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.107668693 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086996727 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105474028 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091208558 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11560696 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116115553 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.090851055 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.106049641 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08892554 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.11127637 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.11045035 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092449055 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112056616 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089620195 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.105312438 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.105578443 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094625325 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113484654 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086102666 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110583194 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113371568 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089998263 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.107316684 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113245875 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086777731 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101994398 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094226581 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107172571 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.107054337 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098909195 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106437898 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089468815 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108600495 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116108936 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08844197 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.111326758 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089636779 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112531396 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112058949 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083484592 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107448515 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088922946 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11624179 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10719831 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086796133 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.104813754 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094608638 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103243104 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.110137596 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085586249 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106252487 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09248765 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.10436254 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.090730978 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105990879 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122410858 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101505842 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111662747 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108296394 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095416401 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.108014287 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106804095 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090229064 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109516659 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092004629 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107929102 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107853298 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092610066 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105806124 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092599326 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107982915 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111754557 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083213006 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.107758975 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082896468 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.111324989 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096141827 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.108652818 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.111149814 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088705018 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110394813 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116248518 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08988107 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.11033952 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083149881 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.112323139 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098189722 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112510185 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114036021 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097074297 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108181099 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.089994197 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117086861 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108130992 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092562358 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.106375897 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08456184 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102951444 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.11434417 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091626514 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105473497 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.086084936 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113204983 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114064136 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091756553 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103180882 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091784905 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118746923 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104747274 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092045602 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107752849 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109173423 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103660689 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100282868 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087950311 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118071998 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.111820144 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087029103 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111465021 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09131677 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.114008456 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.110169756 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.091170731 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108212535 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094612002 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108454627 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.10386639 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090115079 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10923124 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084389346 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.108430634 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095267926 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109588462 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108862116 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099513203 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116176653 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113341042 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093216014 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.112051982 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092764805 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.11468656 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109047444 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.093527276 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10490714 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08351926 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109938084 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103483456 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090692395 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107347663 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.093278251 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108937692 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110276906 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.091870066 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115496723 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088587859 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114709827 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1318541 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105212942 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08700826 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110745673 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091469691 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108898197 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108081624 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.089605195 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113539331 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.091926971 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114527352 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106876962 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08830152 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112136453 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08758089 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113022826 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.113291451 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.094310317 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106029173 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.091516543 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108076574 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119590266 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087043896 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115705864 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110579134 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093830782 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108371377 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089891074 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107047982 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103735376 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091221927 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.114399717 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089400648 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.112274477 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111264718 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0922168 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.109058277 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088894582 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.11535583 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109945052 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097697631 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.106813282 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084257344 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104819046 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09427708 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115753939 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.114305227 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08711773 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.110026193 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096258924 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.112301357 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.106220879 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099559164 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115851867 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.094134519 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120066338 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104663749 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089630029 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119692859 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.106164882 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.091832205 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.108412651 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085679011 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114646959 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09438842 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11123217 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106293813 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082228121 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104976717 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097382775 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.109694175 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110714912 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.090294693 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112903268 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085495646 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111837584 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.093054333 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111840111 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115630612 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096338915 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.111118681 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107190002 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.096147423 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.105300109 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085746545 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104830068 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091405858 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.113203451 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104882333 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094634878 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.112317459 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091427243 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110075198 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.094023755 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109713846 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115795917 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093402114 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110278574 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120307309 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.090296083 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109763728 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.092313857 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.112484594 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084445593 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112387725 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111892899 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097905497 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115026383 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.114489337 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094774711 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113374171 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089919558 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.113008504 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.093837984 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.113850895 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104197575 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098725533 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116477638 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.089170268 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110955746 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110937304 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089290568 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111922148 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.094035441 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111887696 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118028009 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.094082507 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108809598 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11160606 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.093923723 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111774699 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095490774 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10984059 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115965922 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087685922 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117898411 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091061761 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117845213 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109337403 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08737984 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113325554 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.092652763 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112978194 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.11756076 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.097073169 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105865531 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085430506 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.110041226 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089837532 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119630003 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115908787 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092662059 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113215067 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.110108108 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.091261136 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115981593 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08531406 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.10898432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112834752 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095760969 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111696699 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087403637 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.112630563 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11695199 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097075074 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113636166 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087010789 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113060742 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.116535754 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089873742 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108899089 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109829253 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097282675 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113788712 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088292137 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105699136 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117288635 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094072001 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114924654 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090652844 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.11360612 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.1103422 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.092509332 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.117435057 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092082401 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114430346 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.111424553 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092987533 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124238891 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105928327 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09103381 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123507946 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093248418 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117563956 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.109575274 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090822202 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118260201 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116574774 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092401311 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106731582 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089105506 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111904582 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085038868 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.111455326 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122824369 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098904177 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111891864 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094273119 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114337496 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.111501301 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.093234956 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107218615 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097002798 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.11066998 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120300694 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08572422 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106097593 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.089798784 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114824072 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091516014 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114871336 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.110193535 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.093017835 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.108163252 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093567727 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119855288 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112749163 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.096581173 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112410415 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090423473 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.112195645 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12089766 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.089527959 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.113293105 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123722048 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099275487 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114726348 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094123627 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114693117 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.11440061 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090454447 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.117705215 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0933737 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113918037 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.117683666 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.097557869 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.129877626 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112836501 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085462771 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.114131711 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092527923 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109082237 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120615543 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096913062 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117232336 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.115244246 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091151238 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119770797 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100112746 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116354593 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113116027 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093160784 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.113904237 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092281536 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.115023106 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.11069475 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.099518192 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.118909289 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095319432 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119281827 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107950471 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105655748 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11994554 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.119697618 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.091950727 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.1072912 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088579041 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.113290416 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.097985125 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.116577302 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.093947682 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.114833512 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.114022228 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096796694 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114961474 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092975684 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.120198375 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.115888083 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091128109 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.115811982 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093033161 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116280226 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.110058247 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.097947277 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.119599414 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099472577 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12275348 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.115952212 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09327163 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111772755 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09709115 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.11328838 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115315232 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095239448 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110909335 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.0893004 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118333367 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.117465861 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096331616 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118528909 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101993772 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.112569777 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117206829 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101468566 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.11627471 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.089677967 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.117424156 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.112635578 seconds)
  done (took 62.9260835 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.171222822 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097866318 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112443574 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089995563 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.143280507 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114277166 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113007244 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095348583 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115106435 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10530239 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113355228 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112755376 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.136787938 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146177565 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142326142 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11041129 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113719621 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114171958 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094195867 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115640992 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136032952 seconds)
  done (took 3.264039098 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119198745 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.134006745 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130461441 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.136400593 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123734788 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.111342962 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.133070346 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129286554 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.134760024 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125835925 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134784406 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.128295248 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.107983865 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.126006537 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.127833675 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126415479 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117625891 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125209835 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131499682 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.131927467 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125207771 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111711142 seconds)
  done (took 3.54212977 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.10201552 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.116700588 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097949973 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.110482376 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.095107033 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.111604501 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122516698 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.092513172 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.122364623 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092060282 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109890525 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093072367 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.118505488 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.112509018 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090975608 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.112967426 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.102758725 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.116086294 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098380974 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.112969686 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.138727199 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.111420294 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.095346213 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110472868 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107667289 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.118675948 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096444554 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.115823064 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.109167979 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.097475796 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.112336659 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095774269 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.117110446 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091299576 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110105424 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.116767489 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.096174728 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.110459744 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.090283922 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117132864 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.093134401 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.118777556 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.122493737 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.093189581 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.113532451 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095705495 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.118161465 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.112283057 seconds)
  done (took 5.933258857 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.159544597 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168662319 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.123433745 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.159967422 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13862806 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113062237 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.12005129 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.165486762 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.114539192 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.094816246 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136083998 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.13474771 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119969706 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.120871528 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099187069 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11668412 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.117687268 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096411155 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122354497 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.117118347 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108728561 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123457274 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.144222314 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133912694 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120747283 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099042763 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12309556 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.129854929 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.1354635 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106345234 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.120999719 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121556045 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135677657 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112755061 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09650471 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119955661 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.13801768 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104770618 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.119620309 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.112312985 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.100612121 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122143572 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.128290407 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137308085 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09881861 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.121565131 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121132607 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.097358898 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.139635302 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122172571 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.13476748 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.140765148 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.134751927 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108037909 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125939751 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139044926 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102403377 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.130117634 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119073043 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132527848 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097451391 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119318794 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.137585104 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.118640958 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112242553 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.142317494 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125762015 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.13078532 seconds)
  done (took 9.30190715 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130750447 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.125907212 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140316689 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.141936564 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124147313 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.105575387 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.12607908 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.124932715 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106833796 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.134841689 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125608006 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.216185353 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119312027 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132705924 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105042646 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127305339 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122512925 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125574734 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105780052 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126269946 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126234464 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.139999382 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105908949 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.14100041 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142145718 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121891401 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106049805 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126517866 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140405085 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125369192 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142545874 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.104277014 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122878109 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136515489 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141692268 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.125894869 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096450487 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125483312 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.125702635 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102928062 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.119679842 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137820752 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124866381 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102748019 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125270015 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123278474 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.138849639 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.142683001 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114021124 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13523139 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126381053 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.140968785 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125695588 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105581125 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.141572579 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148710803 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139855845 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.140891101 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122440119 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13724811 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140398192 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.150168186 seconds)
  done (took 8.736174223 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094092428 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11422943 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095563272 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.114475274 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092578501 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113524518 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091793746 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.113771722 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091274083 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.114180951 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092188114 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114579708 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093065285 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11560554 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096373668 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114532979 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091360316 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115391417 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113146853 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095049977 seconds)
  done (took 2.860482345 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106951331 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.140502225 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.117353729 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109072954 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.120359819 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126327594 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.095825206 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117558588 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117687211 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099241672 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.132122208 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130185642 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097126069 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.127917733 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131994579 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.129067384 seconds)
  done (took 2.690303018 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123698363 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.142141972 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.174118139 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.119316831 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.11588893 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107696297 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.119184247 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099739164 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.118197465 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124874311 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104013822 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12447701 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.098963576 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.120739986 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.119833705 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104679742 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.117339174 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.103465897 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.121280597 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.176538835 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.1249586 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100159868 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.121661177 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.123478387 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10211942 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126466234 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.125046048 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097074058 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.122093936 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.117065069 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103783164 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128189279 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.119314416 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104826982 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.11443462 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.094315731 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.111694057 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.11385228 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098795046 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.114124867 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.096448547 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.119705311 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.115706339 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10311849 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.118769147 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.099103805 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.118020934 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.124417494 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101502321 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.122910392 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.095448409 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.122215353 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.118279143 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.104325127 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.121939851 seconds)
  done (took 7.171247272 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114010131 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.121290734 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.12955676 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090452581 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113109412 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.095004841 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11494578 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115078754 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097148376 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10948869 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09590822 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115345128 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118246019 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097817777 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.121102808 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095269049 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109817855 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114329475 seconds)
  done (took 2.762176796 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106735905 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120288594 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10236709 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119357545 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09490894 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116775325 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112980408 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.096149815 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115059133 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095020235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117207401 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092638283 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1109404 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.110914345 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092285961 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112855808 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.091611812 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110726851 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111534105 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093069448 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112550516 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090677039 seconds)
  done (took 3.118875933 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111947109 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.176569876 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123742668 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.179932216 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111779941 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.109807311 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.102855783 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.112111655 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129109926 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.090400948 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.111754084 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.093384014 seconds)
  done (took 2.25057844 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12960418 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163475688 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1210196 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100811876 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136139546 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128247032 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126539162 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107653348 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140692413 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145117835 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128248378 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141212041 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119788646 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141110756 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135312652 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134371777 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127821684 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107018795 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121847855 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150016562 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127501137 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137557577 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107523376 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127536909 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128475248 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141622626 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121605547 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147930048 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128879794 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140215386 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133925572 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107194224 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142404822 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145940246 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118413386 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140981534 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105994114 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175289029 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115031058 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143377411 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121543241 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134057484 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12063578 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138260519 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13939738 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124483234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132268195 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10107978 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121304803 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153383431 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128761831 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135758043 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127893856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133507128 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130960883 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153232952 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138150378 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13700663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110256837 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141391507 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140743811 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135721501 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14377025 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144605401 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13533422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141739941 seconds)
  done (took 9.512469575 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170521435 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097675288 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124568524 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142590373 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138460981 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10535928 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129880228 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129022049 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10669221 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124939687 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18272843 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122841239 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14158315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14361248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125695532 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108780801 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128401211 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144356549 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102632436 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18165092 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108839243 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142460924 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143757348 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144450734 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145705213 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136228191 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107631022 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130736417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128258963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128075435 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117022071 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129668693 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143676426 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123321852 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143632919 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108117875 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129063506 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138018688 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107578115 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136473538 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143490806 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153641809 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128338631 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128947239 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147103257 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108872199 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128169075 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123564724 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108731583 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123906811 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147772712 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146932434 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148547486 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144656817 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107701783 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130253718 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128355119 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10903594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129428383 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133908224 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144553367 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108328078 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184781609 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108256231 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130725442 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144495202 seconds)
  done (took 9.491261403 seconds)
done (took 169.938386868 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.164267687 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.187048462 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.161638405 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159293803 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108175538 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122812393 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141991509 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.152563743 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109122771 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094112603 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.115738268 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098874161 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184312742 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087162617 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.115014618 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119268049 seconds)
  done (took 2.921236089 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.220030165 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.316432371 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.138083605 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122415634 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103679839 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.120005413 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099968872 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.12363783 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.11634118 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111200379 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.119209388 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098157188 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.133779179 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.119553925 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097745257 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.11860956 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.127434089 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093473719 seconds)
  done (took 3.184988395 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123744868 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164020274 seconds)
  done (took 1.09828201 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.135853491 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.227120098 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300491313 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170019877 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.140230446 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135477801 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.170272955 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129195482 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203479963 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133694431 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.133683849 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094520878 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141777882 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121682993 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.105391092 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114701117 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145384626 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.104475419 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.125336552 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116523944 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137244859 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.098065034 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122684921 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.125582053 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.19249075 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132943858 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095291356 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117256394 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11618385 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.104486269 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.123125036 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.133567767 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.131821612 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184745328 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121388828 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.198340003 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104085587 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114870333 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124543587 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09513676 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120616683 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119245979 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111649371 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.114818293 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114936825 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104222174 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.115876694 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115184216 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.1046913 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126581617 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125869322 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.361754158 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179051362 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126476245 seconds)
  done (took 8.269466658 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.908882443 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158632677 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093226436 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.03024296 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148237891 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129678542 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.90439778 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116873863 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.279494496 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.9000758 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131755834 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106737227 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.286024747 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.273847658 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.186413316 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.398934247 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.747531786 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128786735 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147334863 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.171930593 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127380579 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.154129442 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121927495 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.473730626 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.093772651 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115046106 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124875407 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115136616 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.21355901 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09817036 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120696567 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.22973395 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294039337 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23366521 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117258483 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090921886 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116251733 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.194383769 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.334755166 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.249534407 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18975573 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093766108 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122248747 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13730028 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122687943 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117865031 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.211632133 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.207713809 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.222697989 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102843607 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134325432 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132212043 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134451172 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.190353975 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.115179845 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.384827802 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384778873 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112336227 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104659194 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.139613843 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.302502262 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114667247 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261574958 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144842001 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.244586262 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111599186 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.850660398 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187555415 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111925269 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103484948 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123529391 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124024775 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131853955 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188279098 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397850413 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129931151 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098070018 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113468731 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.273517188 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094905751 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120495698 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.191990483 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118072283 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125530185 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109567163 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12973993 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.218648135 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.280880256 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136560807 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132240184 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107268408 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136824676 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119698062 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.237613053 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.272632331 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.180064053 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.252728208 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106844885 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.207689304 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191814481 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137449726 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.221831228 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106296819 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135638322 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129726627 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.254988859 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.160498497 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122138879 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10367304 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13000872 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.16437262 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122181226 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130974579 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.20268744 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.511257978 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.194733325 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.113967396 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095097385 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12468046 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200726131 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101826335 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294609741 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124976872 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192310178 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125857691 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110682211 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103779787 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.207721932 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130016785 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124788657 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110934261 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122984439 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.293536564 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.252292565 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109049512 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264268906 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190663624 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125853547 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.215695598 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102750836 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.211093565 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123280163 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105533994 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116578879 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837408671 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129288003 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122685657 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100166116 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208450531 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114533056 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114452662 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09320822 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110905835 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833485773 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095519383 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.109929415 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093809588 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124448988 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123711289 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120686972 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.101944824 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.209642569 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273868568 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127664522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102328246 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114025714 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181826833 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117055352 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113630638 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095690314 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122844857 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112956173 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.131703718 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122958782 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197856472 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.203026028 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.254682622 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.56135781 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091713083 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.116623662 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271013323 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115503336 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.342984787 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12228032 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.262594414 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188814708 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111433812 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.380494623 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.211689208 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207188386 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096695433 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.214067909 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09051304 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122474721 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.209871827 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099916656 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132904088 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.186063085 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140915378 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130500815 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.195654235 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113570745 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248335738 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110354912 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191116888 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125309383 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135971443 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.357399379 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091964965 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138466175 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.209624117 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107407087 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127062483 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672958642 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093937772 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132596492 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130870699 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.266080958 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.214682135 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113050734 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134974839 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138487098 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.193734344 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.267998353 seconds)
  done (took 48.604553282 seconds)
done (took 64.885150801 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.334178416 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280697777 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.33381473 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.223058566 seconds)
  done (took 2.089561969 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.249695653 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167489405 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.219287403 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096611081 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.235894692 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092669662 seconds)
  done (took 1.894762465 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.555522869 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.445460337 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.376185493 seconds)
  done (took 2.216807282 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.277243968 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.303873358 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.371360874 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.497934632 seconds)
  done (took 2.401501476 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.298856779 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.125338931 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.141134638 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.195006814 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.262682524 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.289015967 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.160653146 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.210296042 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121222104 seconds)
  done (took 2.699081164 seconds)
done (took 12.144608726 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.176356488 seconds)
    (2/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.305879386 seconds)
    (3/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101330188 seconds)
    (4/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.17355982 seconds)
    (5/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.321167986 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.177324531 seconds)
    (7/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.265535385 seconds)
    (8/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.22569174 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.159282964 seconds)
    (10/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.302944127 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121348247 seconds)
    (12/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.269747299 seconds)
    (13/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.228133601 seconds)
    (14/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.213660317 seconds)
    (15/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.202932549 seconds)
    (16/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.123189356 seconds)
    (17/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.256212625 seconds)
    (18/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.292992208 seconds)
    (19/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.279064738 seconds)
    (20/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.213085958 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125189695 seconds)
    (22/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.264952912 seconds)
    (23/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.145030415 seconds)
    (24/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.117871584 seconds)
    (25/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.330748218 seconds)
    (26/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.151118335 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120837752 seconds)
    (28/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.220235612 seconds)
    (29/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.182411136 seconds)
    (30/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.29946411 seconds)
    (31/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.149332476 seconds)
    (32/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.180942683 seconds)
    (33/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.221487273 seconds)
    (34/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.125836764 seconds)
    (35/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099687835 seconds)
    (36/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.137642238 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123736264 seconds)
    (38/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.212539853 seconds)
    (39/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.131043567 seconds)
    (40/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.093973714 seconds)
    (41/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.090903251 seconds)
    (42/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.141756889 seconds)
    (43/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.139742378 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.213727955 seconds)
    (45/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.252869407 seconds)
    (46/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.227396966 seconds)
    (47/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.225744047 seconds)
    (48/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.141112081 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.152145241 seconds)
    (50/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.109284854 seconds)
    (51/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109887194 seconds)
    (52/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.240232661 seconds)
    (53/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.241871204 seconds)
    (54/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.125627897 seconds)
    (55/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.208691046 seconds)
    (56/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.181778961 seconds)
    (57/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.127284577 seconds)
    (58/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.225591949 seconds)
    (59/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.089300215 seconds)
    (60/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.183482345 seconds)
    (61/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.114195799 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.164880245 seconds)
    (63/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.151401689 seconds)
    (64/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.132001949 seconds)
    (65/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.09546258 seconds)
    (66/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.115946189 seconds)
    (67/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092923468 seconds)
    (68/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.215096457 seconds)
    (69/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.095941477 seconds)
    (70/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.204346997 seconds)
    (71/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.111831865 seconds)
    (72/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108935108 seconds)
    (73/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.13056661 seconds)
    (74/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11958889 seconds)
    (75/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.210406913 seconds)
    (76/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087783518 seconds)
    (77/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.12595175 seconds)
    (78/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.217356587 seconds)
    (79/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.095943921 seconds)
    (80/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.237410526 seconds)
    (81/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.197122131 seconds)
    (82/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136462886 seconds)
    (83/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.089465734 seconds)
    (84/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126739955 seconds)
    (85/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122080349 seconds)
    (86/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203688223 seconds)
    (87/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.134565103 seconds)
    (88/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.16656609 seconds)
    (89/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115978542 seconds)
    (90/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121326758 seconds)
    (91/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.156827067 seconds)
    (92/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083678177 seconds)
    (93/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.148229344 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12083685 seconds)
    (95/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.121779671 seconds)
    (96/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.155465398 seconds)
    (97/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.170829806 seconds)
    (98/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.101229258 seconds)
    (99/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144257325 seconds)
    (100/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.103170946 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090599907 seconds)
    (102/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.122859084 seconds)
    (103/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098760265 seconds)
    (104/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.106065132 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098934571 seconds)
    (106/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.104224475 seconds)
    (107/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.174601976 seconds)
    (108/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.082220755 seconds)
    (109/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116871855 seconds)
    (110/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.138022596 seconds)
    (111/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.142688789 seconds)
    (112/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.196790684 seconds)
    (113/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.101064837 seconds)
    (114/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.195974714 seconds)
    (115/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.181289042 seconds)
    (116/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.12116217 seconds)
    (117/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083012161 seconds)
    (118/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.145938985 seconds)
    (119/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126706396 seconds)
    (120/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099338402 seconds)
    (121/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.104924005 seconds)
    (122/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084078014 seconds)
    (123/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.129459429 seconds)
    (124/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.164673575 seconds)
    (125/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.17667271 seconds)
    (126/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.108795868 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106764462 seconds)
    (128/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.104864068 seconds)
    (129/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.120808217 seconds)
    (130/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.088537014 seconds)
    (131/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.133134005 seconds)
    (132/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173891195 seconds)
    (133/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.125321102 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.082852123 seconds)
    (135/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.21394414 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121728664 seconds)
    (137/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104508126 seconds)
    (138/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.181771408 seconds)
    (139/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.10575414 seconds)
    (140/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.08319214 seconds)
    (141/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.160339413 seconds)
    (142/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082477792 seconds)
    (143/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13195794 seconds)
    (144/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131273739 seconds)
    (145/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083721601 seconds)
    (146/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.14572882 seconds)
    (147/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.201559447 seconds)
    (148/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.082117293 seconds)
    (149/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.14920387 seconds)
    (150/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.149701223 seconds)
    (151/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105208237 seconds)
    (152/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133052893 seconds)
    (153/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.136600018 seconds)
    (154/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.113496468 seconds)
    (155/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.163835335 seconds)
    (156/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.084665914 seconds)
    (157/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.175057801 seconds)
    (158/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.159887538 seconds)
    (159/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.144682119 seconds)
    (160/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111235827 seconds)
    (161/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.12626104 seconds)
    (162/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.092245883 seconds)
    (163/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.188444562 seconds)
    (164/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108765279 seconds)
    (165/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.118406803 seconds)
    (166/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.132205388 seconds)
    (167/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.093288053 seconds)
    (168/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.134854508 seconds)
    (169/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.091505156 seconds)
    (170/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.134071128 seconds)
    (171/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.114415502 seconds)
    (172/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.139978687 seconds)
    (173/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.190172694 seconds)
    (174/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107924652 seconds)
    (175/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.112692153 seconds)
    (176/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.094426611 seconds)
    (177/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.098175593 seconds)
    (178/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.13271509 seconds)
    (179/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.1279685 seconds)
    (180/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.083794805 seconds)
    (181/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.108965618 seconds)
    (182/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.105056113 seconds)
    (183/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.11165167 seconds)
    (184/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10912743 seconds)
    (185/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114273272 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098020228 seconds)
    (187/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134040234 seconds)
    (188/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.105360567 seconds)
    (189/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091720783 seconds)
    (190/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.122193875 seconds)
    (191/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.113245642 seconds)
    (192/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.157163238 seconds)
    (193/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.092849771 seconds)
    (194/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.135100289 seconds)
    (195/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.111118248 seconds)
    (196/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092952882 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.133168627 seconds)
    (198/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.093347039 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.14145827 seconds)
    (200/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.094841688 seconds)
    (201/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.122631695 seconds)
    (202/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110518043 seconds)
    (203/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.118903136 seconds)
    (204/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.094286153 seconds)
    (205/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.163871285 seconds)
    (206/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.094158506 seconds)
    (207/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.117419296 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103872459 seconds)
    (209/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.106856618 seconds)
    (210/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091936032 seconds)
    (211/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.106945129 seconds)
    (212/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096447966 seconds)
    (213/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107603079 seconds)
    (214/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.083017103 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.138141328 seconds)
    (216/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091065798 seconds)
    (217/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121291371 seconds)
    (218/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.107185338 seconds)
    (219/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.104908292 seconds)
    (220/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120709183 seconds)
    (221/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084644718 seconds)
    (222/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126433793 seconds)
    (223/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.08449506 seconds)
    (224/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.111136898 seconds)
  done (took 33.105782757 seconds)
done (took 33.956637016 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.524511605 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135857917 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103195706 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127325369 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184019628 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.128843588 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111883326 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.12969775 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.130643647 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100132792 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116659292 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.10874581 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.129455682 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.184941763 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.130679189 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.119885201 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.094552466 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.132596001 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.109909418 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.136219309 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.182568061 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119086076 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.111716087 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124275123 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.182870412 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119557718 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.102845012 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.125800052 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132467287 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.101661488 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125525728 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095399966 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.134640624 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.133575357 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092968563 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.123186019 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092302954 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.11571391 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.12486859 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.101645477 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.132534102 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.101294611 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.129970156 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119552196 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.100602814 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.123800427 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116306515 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.10721146 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.117326181 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102375551 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119045543 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.136674407 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.099384548 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.116963212 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092759563 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120301669 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.130325828 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09233626 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132323321 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092890803 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121879179 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115380585 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.103013129 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116832513 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.099448724 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118549176 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.122811834 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104032064 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.121816789 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095651 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116223651 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.121663515 seconds)
done (took 9.912073056 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110990385 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183164858 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.185428823 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.189159084 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.150398609 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.137063574 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140042523 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.148972154 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112493167 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142423967 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.154894701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.147736891 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.190443486 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131240151 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113495354 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125757981 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.133280832 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107500324 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.19108893 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.146004425 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153684263 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.132114604 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156309113 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117907535 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124575351 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146527997 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.126208935 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101947708 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.123946174 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.141141325 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121238374 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.124895022 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.124968744 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122722996 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135846035 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.130695877 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111959465 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.125595487 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.122642689 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.101722559 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138781486 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.141036315 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099716152 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.135145486 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.125945491 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.106675862 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.132609529 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.131255589 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104002309 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.128361403 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127353623 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132276446 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.131451192 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.131978685 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.131061084 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.107718481 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.131153287 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.107611652 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127972926 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129545837 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.099413329 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.123946677 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126866204 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151664793 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103924198 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.13109431 seconds)
  done (took 9.608590881 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.131403974 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158260689 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133377176 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.134752779 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.106731551 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.113731786 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090108898 seconds)
  done (took 1.762189662 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102174921 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186284335 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185144794 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183791915 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.202308338 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196078233 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140656089 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092437269 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.155520524 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127843597 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186908515 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.217663515 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.125369189 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.111985106 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211623776 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092583425 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.189080184 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.1167338 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12898642 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.186390391 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109727947 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.14909049 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133673644 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093962991 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.203250426 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094891917 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.266065991 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11057942 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122981676 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103097845 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130989147 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.20333383 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.180982399 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.135097872 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121991926 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.183033968 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.180313347 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12999244 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.198645258 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099584193 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206093378 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.104950416 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.129979919 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.131269619 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.105782714 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.165930241 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.135491342 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.132232804 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.103688702 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18698958 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129706234 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18207587 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.126557114 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.106259104 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129081949 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.131612912 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.113540861 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.129287337 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189347746 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132607911 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181940819 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.180332526 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.181376547 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.181866426 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141510961 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.182105619 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.180534834 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.126662508 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102860601 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.13045024 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182138477 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.129104759 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.105873855 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.168307305 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133438893 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.182752976 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.181933622 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125778263 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.107901904 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122936479 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.127196295 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094157513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.169685319 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.130211722 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.101921133 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138869581 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13102197 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106132086 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.121684622 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.143796008 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12818132 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.107428416 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.133819245 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.1288106 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111106418 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.207318482 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.107088867 seconds)
  done (took 14.985464713 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104148239 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117943911 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101339767 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120298532 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096172937 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.119389571 seconds)
  done (took 1.575817241 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140262268 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.131849558 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.142214747 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.108475176 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.189470184 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.214863459 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.193162421 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12975678 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.124219145 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.143247313 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.188782433 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.194026801 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.211730321 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.110472067 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.191753666 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.136195699 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.193018581 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.130795409 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.141622105 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103459056 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138327334 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.132997004 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104549079 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.180618369 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.135484358 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.133993784 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13184219 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.11714409 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.139784549 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130987159 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.111310606 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.134448323 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12642852 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.129694434 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.194024066 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103660524 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12837692 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.138551588 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110442438 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.135469343 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.193635963 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129590835 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.140219323 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.13887116 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107108901 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.127451793 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.139611385 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106358855 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.217113923 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.114550877 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.138330379 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.13263963 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.134518422 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.115424038 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127800986 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131673958 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.114413365 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.21687501 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.112357306 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.128458547 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.134341035 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11299625 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130166132 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.137695827 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.135392824 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.115495628 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.128924251 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132091095 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104788015 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.133421364 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.139380646 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.109527284 seconds)
  done (took 10.974948799 seconds)
done (took 39.795515143 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.173516479 seconds)
  done (took 2.080775994 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.954865555 seconds)
  done (took 1.866744784 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.597583347 seconds)
  done (took 17.54802629 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.57278327 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.645844288 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.985109227 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171662946 seconds)
  done (took 3.287724013 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.990804639 seconds)
  done (took 1.919658667 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.3382396 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.28233844 seconds)
  done (took 1.538751851 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.853372086 seconds)
  done (took 1.780336931 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.435525279 seconds)
  done (took 3.358955268 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.393718898 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.198987099 seconds)
  done (took 1.527448001 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.679175239 seconds)
  done (took 1.605672625 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.897277071 seconds)
  done (took 35.82349126 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257185688 seconds)
  done (took 1.197651501 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.328778 seconds)
  done (took 1.25669003 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.467281467 seconds)
  done (took 4.396128566 seconds)
done (took 80.111091832 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117018612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133797573 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107568338 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129478331 seconds)
  done (took 1.413519949 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127710086 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133523538 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.134362003 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.10712391 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.141100395 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.108027104 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.130123045 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.137119223 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.106932653 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.13310702 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.130636936 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.106749942 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.133664066 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.128001194 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105361168 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.133761113 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.110057641 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.132943159 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130464594 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.108970933 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12962893 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131168148 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.110152325 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.131445975 seconds)
  done (took 3.918815864 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116787592 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122346979 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103316225 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.123169421 seconds)
  done (took 1.400360848 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12484701 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.146924793 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.145437137 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.113682893 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.146930597 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.145191898 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.10197666 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.125162172 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104706351 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.138929758 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.128240657 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149336779 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.122136793 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.131900645 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.139035923 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100907782 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.132290135 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.123310807 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.139526424 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13863312 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.102377409 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.138312014 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.1269807 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.12098743 seconds)
  done (took 4.022856918 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.223679792 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119075657 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.1557004 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.183407287 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.167311077 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.132476377 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.128704144 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.135618605 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.137137586 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.107752239 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.135620505 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.190776878 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132080633 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.111220883 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.132393788 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.137697478 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.110840927 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.133457847 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.135700797 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143033192 seconds)
  done (took 3.794105252 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.11878586 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123890416 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093738614 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122795123 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12879117 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101212634 seconds)
  done (took 1.625812522 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106289952 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117730314 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093695818 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116313065 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09875102 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117016456 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092574765 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117292906 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09271056 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11709986 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.0919781 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116016118 seconds)
  done (took 2.221801918 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.315512614 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096764129 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125573495 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.120570582 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103811573 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.121073016 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.137276026 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097286384 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.255763358 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.123012978 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114289768 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.200015203 seconds)
  done (took 2.753001301 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244659829 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109212096 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288218493 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37790256 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177151347 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181702403 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288717824 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181157356 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.231534279 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127461713 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239960258 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169106311 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142552436 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220050986 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1274253 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.202767554 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191903991 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243371573 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160578207 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226546366 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179767372 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182200032 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197935749 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165452813 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148924857 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172962016 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.129927243 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113976552 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213012632 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185506701 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193522872 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161448122 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152365739 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220810812 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268123482 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197556151 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.341948193 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121206923 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.206869892 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.223083188 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255516809 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153861064 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239613637 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14362787 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141961858 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197922818 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170436265 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.224171393 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.120187607 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154225677 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22832042 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19120148 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203692408 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149790934 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314668227 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160339988 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160804557 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190882028 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208727713 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234690692 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182230222 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.107838731 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222679673 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201824548 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197708596 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.161287042 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187500405 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137499797 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191633646 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214429601 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226910283 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183051351 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.204013005 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146343466 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179999362 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185747845 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166595782 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195383655 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174300933 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.1296578 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162206486 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123262267 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137542851 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199186633 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107241725 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250618899 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146048591 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.202652614 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222305834 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171848914 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176408828 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178980032 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183240972 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158410096 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130481952 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158159818 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.175172214 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171384073 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11679239 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172068502 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157724219 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.140133395 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165196888 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107180343 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173850969 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.147151364 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182565297 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178738791 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.142890016 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178956337 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163331308 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.174254343 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188029386 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204080963 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143699117 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141468953 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212848477 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170756086 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125106091 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217289676 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206648618 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182255902 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148627144 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188656669 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213016917 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156122103 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207227692 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155359681 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144057286 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.167528897 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172803164 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171720361 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.169448514 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113195705 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.168700197 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238926193 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.111926589 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14849198 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190205531 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139374494 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112828976 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156446902 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147981523 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.153539195 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.165284441 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153938639 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1690228 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172562275 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142684885 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174140929 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154842246 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242719513 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143285391 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148090038 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160365847 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12935021 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201626476 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202691813 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141234744 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201137274 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18776921 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238140008 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179017106 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141233756 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196983685 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114127554 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.132804323 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182678984 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17804688 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17806911 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.202913664 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232125088 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188185406 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.169218909 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163003407 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182174522 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.191516986 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172964279 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.158931621 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180171054 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186902576 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.132366416 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.135300559 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114208444 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152494796 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141315184 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117467296 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225398536 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179412208 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200628298 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174565052 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152102074 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199702168 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.138350026 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182138183 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.191292584 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149896245 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.206558896 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198604496 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182706335 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156372476 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187821179 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.132837107 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134672402 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123067283 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210652168 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118246893 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145381176 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158193059 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199922241 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190912525 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164247394 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242833119 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186154436 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213146686 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.132990644 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151725061 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211670726 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170636347 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.174567313 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143181949 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.175835341 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195508629 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158174861 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210878373 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17807558 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18336689 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249079489 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.171132578 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141343617 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162820015 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184460623 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126093171 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178087275 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159477866 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146682437 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169204679 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.149792166 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138555971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204681962 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156846819 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202089446 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.171814082 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193258292 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135196479 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157250186 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174652544 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157556091 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102979823 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187296517 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235246097 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158570903 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17298042 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19212911 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139971867 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311548864 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210569368 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201959192 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150242422 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156021267 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176219144 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174757879 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180031866 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199330621 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158646237 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197685722 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173926621 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.1559473 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146295696 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133807998 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163940362 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168258753 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149432481 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1715429 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.154698916 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203829827 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156792616 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172642913 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181702841 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.160202818 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.181611583 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126743155 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246153419 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173478469 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197709579 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.168248103 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187124973 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205683231 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134893377 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112434806 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.140667885 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200719956 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143892998 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173418282 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195554633 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235459862 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175653499 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184837367 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123998748 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.137112516 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175464083 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163126546 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214206499 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154170027 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152048065 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2110037 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.166021399 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141993605 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180015301 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296255053 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157720289 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191771676 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.131508974 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285445667 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111892217 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142044378 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174466949 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188155154 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.163404089 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.195226425 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182316199 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157593878 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174585465 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12310894 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228962906 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226504866 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189340058 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220639431 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.129263676 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174829136 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17798141 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221908602 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129479927 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.159396398 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176449771 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200207988 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.234685702 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.120059493 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178604074 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177060914 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174138469 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221528002 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118178527 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23231774 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116030801 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183436145 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15305339 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137928252 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173405997 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196598885 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146207449 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191971974 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172888774 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143817864 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113182763 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165028811 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174106353 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157498844 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.141312811 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199227265 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137869366 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17854154 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197330669 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113869452 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171281489 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160613045 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145856215 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156953764 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157212747 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120290077 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.183027951 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200892164 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.145043037 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195373761 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190358626 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18087207 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174618938 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158533859 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.677237927 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.141395326 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201903728 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160048946 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21111684 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162236462 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184213369 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176965114 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162515154 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187214041 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164204447 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238566294 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185163799 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177319898 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115192448 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156578085 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158654532 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14655437 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165758792 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178174882 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12473712 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152253226 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.175428101 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15877618 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.159866035 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151365663 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20389391 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161440563 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202516209 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200948885 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151286557 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181837573 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194637272 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140841951 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180371287 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188971207 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156232931 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168743013 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.14468298 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.123042878 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196341248 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13511984 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177151817 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174707677 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17708834 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179005466 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149823858 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176851839 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129159575 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177117745 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139807932 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.174008973 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173733886 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145713717 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.113392023 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170012772 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175584071 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.17304023 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140905717 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.180762547 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20091931 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107425288 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145331837 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294361056 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17117701 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239975357 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.141627623 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147164449 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157310476 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172530392 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.170902661 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175205225 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.114716418 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14309761 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.147615767 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196291813 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171658077 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169901214 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195018958 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17703872 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206274818 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.158860416 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28154959 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124008802 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169277715 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.143968165 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.145479933 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127031825 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147275316 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158802253 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230586866 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196956534 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.139429714 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.155841242 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141980831 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107436932 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143077466 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177359493 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168938442 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17369718 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158369787 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103334294 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159021696 seconds)
  done (took 84.982369996 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164981 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149694453 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155094173 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207252464 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176559887 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266193572 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214992089 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236247925 seconds)
  done (took 2.603158668 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.139119268 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.118534466 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149116103 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130835217 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.132406411 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.439108489 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142826974 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106335516 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.194325756 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.168504809 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.104430204 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.669661251 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.12957448 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130972618 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128848503 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130396076 seconds)
  done (took 4.035353911 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.312991894 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537049404 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.729882943 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.257104383 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.242082205 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.168903978 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.723841261 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.198291464 seconds)
  done (took 12.196428328 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.142991043 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14963088 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.348022504 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.220205194 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168970214 seconds)
  done (took 2.06832165 seconds)
done (took 127.963874596 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.114896644 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.151910903 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109175061 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152622365 seconds)
  done (took 1.550318659 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.162093604 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.120262173 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09488781 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119167133 seconds)
  done (took 1.530757685 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.534839979 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091467269 seconds)
  done (took 1.689099036 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.143891623 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.15408152 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.156789158 seconds)
  done (took 1.49877636 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.123919003 seconds)
  done (took 1.157290534 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.112251869 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129833487 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.187633451 seconds)
  done (took 1.468872539 seconds)
done (took 9.931359215 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13753624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.437651217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421248408 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116595907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730885809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.413186467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.093846511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164452542 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200281597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097092305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145633449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674148387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04507173 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378207578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.000261725 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373966554 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705259968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101078152 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132546586 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099376615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.070111419 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123118322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100674679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126686265 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677158485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.431153915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124247367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.366546533 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124401768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103649469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.415329367 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124192617 seconds)
  done (took 17.28078606 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149683242 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191431636 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134567741 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099153241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130211402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124758791 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1087442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139569832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200929169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124649792 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118215252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124062053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129790358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098880776 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148173625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096960852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127731607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125937396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106455468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127243708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118696927 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124970496 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126227644 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101428561 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12462903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1126469 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12609447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138272666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098539755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130834259 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103534699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126851843 seconds)
  done (took 5.076041703 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155046806 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200343428 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134971917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.160944161 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181143121 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099984101 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217687193 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167800713 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20045278 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126456639 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146649394 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098263639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.166056131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123776316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.123546791 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124432294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102252177 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127933975 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13347272 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101746616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147229457 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09739793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127682667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127605311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098814602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141698157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09796394 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140188106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125048418 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103272182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1320954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125795241 seconds)
  done (took 5.402179448 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.117249811 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.139760066 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.12152656 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148087098 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.134322232 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.111964108 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.138678362 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.104785969 seconds)
  done (took 2.056755443 seconds)
done (took 30.852848633 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131013035 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.144460435 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117864351 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.139959965 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.200310363 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100700892 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.142699846 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.128274009 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.11385046 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.148411601 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097527256 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.130244602 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.117403553 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.135851288 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.184422603 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.139421199 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.189173471 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184391182 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.104035951 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.139485983 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103574072 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.189597145 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.138437945 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102995154 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.195731321 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130774084 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.180934997 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.134425355 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.108081069 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.1273922 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.182868268 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.109712874 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.131918421 seconds)
  done (took 5.661744047 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.20779459 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.212807211 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.10356362 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.13141278 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.211530992 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102936301 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.228538466 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.104458647 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.130610569 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.103825725 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.130423569 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.201321666 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.208227286 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.221851209 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.240406995 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.210418568 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.19783304 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.210330514 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.194967688 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.213256979 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.198651376 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.131716203 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.212157342 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.214468312 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102031853 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.133720619 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.235120483 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.208317105 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.235381268 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196800752 seconds)
  done (took 6.484763515 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.11895844 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144267123 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.12358663 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199085163 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.169906133 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.141014939 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111228318 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.151629522 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.152651261 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100376803 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.137388331 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.137550554 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145578638 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.137237392 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104924958 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.146856413 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.151478442 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.102194047 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134112096 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11973428 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146793311 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145812979 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114204207 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136887022 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099228023 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138588714 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.131323949 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112611843 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.13539566 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107632786 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131658181 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.131033691 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102745668 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.137043067 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104476615 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.14068987 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.155235308 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10794565 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.140115031 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.162745895 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.108418872 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.133276186 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148148421 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.145991014 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.12963935 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138975067 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113230805 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138231918 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098184933 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149506606 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114209815 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.12948674 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.150712854 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098973591 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.126722682 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134939865 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101705161 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.13070132 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.108158178 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131945263 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.154062765 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107544466 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134904053 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102241784 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133327823 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099129613 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12821115 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.133494442 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123259894 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133124945 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158975466 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101752642 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.138580737 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107851265 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132975448 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136924118 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100811657 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134360603 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107623938 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.133862189 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109156293 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.131804208 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132206529 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119874155 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.149647725 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.140816911 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.110713763 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139681882 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102619546 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.129863226 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141488719 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102349864 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.131895606 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110823221 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130151558 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129985024 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.112528495 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.137643226 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098860603 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.147103127 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134559201 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099727925 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.145045492 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.10082518 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.132810886 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.110544291 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.142078631 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.127996746 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.110307123 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.138486362 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098858038 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133434282 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.131143508 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100498604 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.145776062 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10993366 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133221648 seconds)
  done (took 16.017440804 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.308990175 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.309631061 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207965148 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.399202207 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.12433307 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.228162272 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.277209237 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.22596253 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130453445 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.172909011 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.189905006 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.266963614 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101135042 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.162587325 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.306498187 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.375645013 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.162888368 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174043894 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.173841587 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124426241 seconds)
  done (took 5.491341797 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.131284992 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171204575 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160361242 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.162397807 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.106986034 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.143324415 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126643629 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.126659977 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.138630809 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.136030104 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.099414313 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.143407683 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.109170594 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13738579 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.147648571 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.175747071 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.105557823 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.13525404 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.123912396 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.137065483 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139889685 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.158875885 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111308673 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.156989089 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.144035202 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115430577 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.12763768 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.136014849 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.104553265 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.133745935 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107373301 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148352054 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.136125782 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106743499 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137753899 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.111775876 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.13142284 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.128940027 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103920736 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.132861367 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.117602569 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.138452236 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104655743 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.127431626 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.114054688 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.131660613 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.141265642 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.111608663 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.141493649 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.117335173 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.141549007 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.142429969 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108003956 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.148553686 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102738255 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.145091216 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.142907036 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.1409844 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109630527 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.127797222 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098370391 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.133323724 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.106102537 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.141315846 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139422634 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.126270026 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.146223495 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131672355 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.107740794 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.132433312 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104261923 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.149095489 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.158039778 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.134326051 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104443368 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.1521376 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104954668 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122630595 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111948934 seconds)
  done (took 11.338594488 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138677664 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.134846694 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121620219 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.167242201 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.151075224 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106807314 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.134524453 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.121202849 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.141765093 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.14441577 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.114301092 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.143431781 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155444548 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114435594 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134537654 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.145668753 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.111762986 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.174131558 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.149141631 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137039234 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.14745481 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.134683459 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.114985709 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143290089 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.164545426 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.113043948 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163553206 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.138670855 seconds)
  done (took 4.949335784 seconds)
done (took 50.994443531 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.18030041 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.363116132 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.152295155 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.155817612 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.177615648 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.157130418 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.146282904 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.34666366 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.81036477 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.134645276 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.158747562 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.151338742 seconds)
done (took 27.008114719 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.210432493 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.749688881 seconds)
    (2/2) benchmarking "String"...
    done (took 1.463148838 seconds)
  done (took 4.277505913 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.142334443 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.147382529 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.390196427 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.153375398 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.142977747 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.162070899 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.14386476 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.154882322 seconds)
  done (took 15.360672698 seconds)
done (took 25.059051448 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.168636786 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.341913666 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.39763399 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.161776406 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.141277625 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.155030097 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.133176683 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.18473854 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.148900324 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.129697796 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.139413761 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.412407164 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.146088681 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.525536539 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.133937037 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.152461263 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.157610583 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.357596317 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.145976104 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.141671351 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.146061579 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.132642072 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.16718741 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.179887465 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.146183269 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.143811221 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.191551175 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.132281345 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.324783237 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.176686652 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.193443933 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.145057894 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.201180167 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.1385201 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.23945177 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.170251578 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.316828996 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.140774736 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.132100268 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.138377791 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.342149307 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.523523785 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.141940514 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.139455811 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.141408113 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.162163693 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.142671961 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.843014432 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.155724782 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.13889841 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.1612851 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.535405539 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.156525007 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.143211457 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.171421862 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.378974685 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.163576487 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.16277587 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.177061194 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.144198925 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.157206388 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.14133328 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.20839083 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.153718205 seconds)
  done (took 139.486987757 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.152768896 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.146434483 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.14934909 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.207194315 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.147260031 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.147596391 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.147376777 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.148361269 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.146159325 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.146806404 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.150919964 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.14246977 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.15082232 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.14888361 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.150350332 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.168090039 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.146230228 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.145357263 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.15042471 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.145432575 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.150218846 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.148557119 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.157808141 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.141560859 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.174916878 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.215616173 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.161521887 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.154573641 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.153479482 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.147239884 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.170516708 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.208517391 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.688280636 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.007145538 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.156298503 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.146689471 seconds)
  done (took 78.086115286 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.151114965 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.149896116 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.14546371 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.178399716 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.145105115 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.662602171 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.659918377 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.875064359 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.316737856 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.314143293 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.348069614 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.140901439 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241774543 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.159269999 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.140885885 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.165836194 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.187679112 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148050563 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.148057994 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.652266519 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.155093294 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.340817359 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.307212493 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.156235326 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.175204516 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.545775125 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.139494136 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.178300879 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.465683627 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.186361285 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.140358326 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.467486018 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.371114988 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.153187627 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262047193 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.143286543 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.180691191 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.143196278 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.42214048 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.14049013 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.152611804 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.156847218 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.766848595 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.147065901 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.655975552 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.14806825 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.052048448 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.151928335 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.148874908 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.059186038 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.711094725 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.163104126 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.147975298 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.152711236 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.151847862 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.150010434 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.178987097 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.26112902 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.256575887 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.16006779 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.151089091 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.176148288 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.142190673 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.326217119 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.14337071 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.545601147 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.215127627 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.369503466 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.625526794 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.139117781 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239584585 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254062209 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.139723738 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.145379641 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.146600493 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.145996136 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.147552862 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.253710627 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.14076259 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.515300153 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.301470401 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.154641608 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.243131262 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.237535291 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.138889573 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.148208294 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455116733 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.148540067 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.147262341 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.809496201 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233117381 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.14117622 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.147824035 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.147525951 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.147197315 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.520111324 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.626279657 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.305390612 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.144028296 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.64010088 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.148109424 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.52501643 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.609414907 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.751032911 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.147019296 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253474481 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.300350126 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.156314401 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.144187622 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.2117491 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.147042064 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.210431582 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.141591464 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.541595443 seconds)
  done (took 357.94042404 seconds)
done (took 576.578024243 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.878998891 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.81876588 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.948047184 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.841343387 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.816310154 seconds)
  done (took 10.368580863 seconds)
done (took 11.435656434 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.321326049 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.321717024 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.196932278 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.324169262 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.174509666 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.335399061 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.295465317 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.166314845 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.23863402 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.215603442 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.242367069 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.19274586 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.178281701 seconds)
  done (took 17.267608478 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.403062464 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.147416643 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.226060844 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383800934 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.183947266 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.411079588 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431140186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.150065521 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304753775 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.16701312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.165853775 seconds)
  done (took 17.042604406 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.411152428 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.145855895 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.228751192 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.379938536 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.187352889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40073383 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44373658 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.148469506 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.2897751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.164714698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.166550205 seconds)
  done (took 17.03414159 seconds)
done (took 52.412430272 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.193245407 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.313879007 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.175367772 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.170398842 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.16355567 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.167958198 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.169937042 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.163399419 seconds)
  done (took 10.585927877 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.160998983 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.16116535 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.157349109 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.158316783 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.159805906 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.163807387 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.162302973 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.162530424 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.159808909 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.16191231 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.15802091 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.158766017 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.162410924 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.16097128 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.162723007 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.160315313 seconds)
  done (took 19.639483949 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.165291627 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.158823885 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.16381017 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.161738255 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.162222303 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.160771631 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.16291124 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.162682339 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.165511596 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.162100815 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.163497435 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.162929889 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.15797719 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.163724825 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.16080859 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.160352339 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.161994068 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.159289916 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.165782641 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.162665359 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.161155545 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.159901642 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.161991544 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.160583829 seconds)
  done (took 28.960586509 seconds)
done (took 60.254361469 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.15401776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.154090171 seconds)
  done (took 5.377868437 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.225678497 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222797863 seconds)
  done (took 3.519207315 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.164916915 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.159849655 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.160518818 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.160632329 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.160281021 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.1597287 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.162567113 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.159834324 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.162362096 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.163002391 seconds)
  done (took 12.682511339 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.166161821 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.161173334 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.159544831 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.16179721 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.161327398 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.160310275 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.162427379 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.161935204 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.159556475 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.159807163 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.165347914 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.162615709 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.163798005 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.162339994 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.160723835 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.162797741 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.160837293 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.163319006 seconds)
  done (took 21.985842423 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.175162067 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.183238871 seconds)
  done (took 3.430053091 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.305994171 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204011815 seconds)
    (3/7) benchmarking "month"...
    done (took 1.278294862 seconds)
    (4/7) benchmarking "year"...
    done (took 1.271543252 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.203988705 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.187084649 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.203470393 seconds)
  done (took 9.724650647 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.171470488 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.36003966 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.449451222 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.733639206 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.16510419 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.210217735 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.043012814 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.209978264 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.200304282 seconds)
  done (took 13.615555811 seconds)
done (took 71.404763408 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.155601941 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.21385438 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.158083154 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.172854936 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.461059323 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.176440256 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.153742829 seconds)
done (took 15.566620067 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.156860096 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.145951123 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.154769675 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.151554394 seconds)
  done (took 9.681201936 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.077261958 seconds)
    (2/2) benchmarking "read"...
    done (took 1.523312731 seconds)
  done (took 4.674908973 seconds)
done (took 15.431280495 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169450373 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.164338502 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.163623717 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.16441193 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.164752541 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.162989863 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.161693535 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.1640786 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.165024834 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.162964245 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.163541271 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.167893629 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16565139 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.164686989 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16951895 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165594921 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.165702753 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163305227 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.162580095 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.164653067 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168396719 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.16707116 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.164271914 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.163759121 seconds)
  done (took 29.034797462 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.16964404 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.166142031 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.167825597 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.169063037 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.16532895 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.16642213 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.165215474 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.164693369 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.162900421 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.166581816 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.163904458 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.16758829 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.164729946 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.165848818 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165557957 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.169547976 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.168184227 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164114431 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166509691 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.166299018 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.16697447 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16581267 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.16670777 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.166003023 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.16556873 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.165275689 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.165864779 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.167757676 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.166981674 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.166217021 seconds)
  done (took 36.0641193 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.173965764 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.170477794 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.16700874 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.166275574 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.170572007 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.166022827 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.167033948 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.166260221 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.1666024 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.166854397 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.166750898 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.16442393 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.165848795 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.167595711 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.166872953 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.167408922 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.167391662 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.16670483 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.167352707 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.166545999 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.167562309 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.166470204 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.167690009 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.166320673 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.166821263 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.167907324 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.168545427 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.171600859 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.167299433 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.17237199 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.168500856 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.166893904 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.167706233 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.167533864 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.167653912 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.169026151 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.172442616 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.172355437 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.167191635 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.167395234 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.167765338 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.168278273 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.16935346 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.166809471 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.16751381 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.169382932 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.168907105 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.167347134 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.16785309 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.168401016 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.168373746 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.168951315 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.16746757 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.17004105 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.171346888 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.167001636 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.168678748 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.169462777 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.168809626 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.169234693 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.169705288 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.169943353 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.169241645 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.169234673 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.171532684 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.171706006 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.169200163 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.170493664 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.172117505 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.16915741 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.169571253 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.170484923 seconds)
  done (took 85.211024132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.176098603 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.171642674 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.170148603 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.173986196 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169410029 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.171608436 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.169463583 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172268289 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170417639 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.170545147 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171690842 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.173251658 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171388824 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.170819313 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.173532768 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.175028084 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.175678938 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.173929139 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.171902184 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.172320386 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.172508514 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.173768382 seconds)
  done (took 26.872744667 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.174833048 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.173627813 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.172415169 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.175621277 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.175562643 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.173025298 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.173038498 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.17468079 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172449923 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171428649 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172992188 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172350994 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.174748745 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172063645 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.17254951 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.17370799 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172442373 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.17656862 seconds)
  done (took 22.206990799 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.177740838 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.173138048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.174761021 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.172073038 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.174266235 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.173555447 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172694299 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.173194985 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.174488594 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.173451988 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.174937346 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172477638 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.173662184 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173549667 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173186223 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.174175312 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.17452412 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.174070754 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17305261 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.176441649 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.173010627 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.176679789 seconds)
  done (took 26.914314278 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.175364276 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.174658821 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.172982726 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.173370247 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.174247244 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.175039305 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.175381843 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.174763916 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.17788131 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.174275906 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.176611117 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.175011449 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.177720834 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.175367536 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.176465627 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.174781908 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.175258118 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.175519953 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.176188523 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.17530138 seconds)
  done (took 24.589961444 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.183618553 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.181855238 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.18338538 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.179428192 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.177497398 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.179861144 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.18358972 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.181750175 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.181649457 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.1831176 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.18416774 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.179714391 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181912623 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.183709812 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.181164257 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18068886 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.184888861 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.181611683 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.184549517 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183504056 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.181088998 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.18520532 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.184780885 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.183710064 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.181081546 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.185665851 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.184431887 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.185858229 seconds)
  done (took 34.199687529 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.180744398 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.17927214 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.178517725 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.178251211 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.181756495 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.178755806 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.181937876 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.180510324 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.177532655 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.178749898 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.176901439 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.180227113 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.178039711 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.180172092 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.178714875 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.179920363 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180274546 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.180635638 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180627203 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181233251 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.179712991 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179509447 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.179326238 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.179776849 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18017755 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.18026858 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.180987515 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.179204317 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.17954426 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.180298217 seconds)
  done (took 36.479974501 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.229088196 seconds)
    (2/2) benchmarking "in"...
    done (took 1.227008644 seconds)
  done (took 3.543932864 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.185103881 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179061671 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.181905441 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.180187149 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.179445529 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.182170482 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.183876399 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179900675 seconds)
  done (took 10.54016493 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.180445694 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.180782837 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.181911399 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.182156833 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.18473282 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.177401792 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.184567531 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.197831108 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.177829329 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.181184607 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.188088185 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.187552736 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.185761733 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.180187338 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.18014298 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.178737773 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.180430241 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.184582537 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.183038001 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.184256479 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.187201013 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.181326307 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.181441108 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.183337346 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.181117877 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.187864295 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.197470227 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.183683348 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.177884447 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.182869385 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.178797964 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.18307332 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.188350689 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.188707142 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.188428941 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.184346705 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189890974 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.194818586 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.184730186 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.19794124 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.184320083 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.183096873 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.18217671 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.182128432 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.18491785 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.183191957 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.186190668 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.184114163 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.17905663 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.186322863 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.189450994 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180729724 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.185534238 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.183098515 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.182621828 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187706638 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.200039701 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.183783661 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.188131477 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.191158872 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.207546315 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.201305805 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185874017 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.183384437 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193308241 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.198412641 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.18960271 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.199733638 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.187746409 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.185856098 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.188474083 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.20761734 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.203065282 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.18581413 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186724761 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.186128117 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.181513679 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.186310417 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.188155255 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.200274191 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.18549546 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187790277 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.192270843 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198021916 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.180324813 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.188131789 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.188637586 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.188224051 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.185140024 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.192064639 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.202423544 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.188059489 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.181881892 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.184283913 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.184913937 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.190447012 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.181633556 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184714425 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.185490548 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.18742317 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.187335173 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.187343004 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.190134713 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.187990638 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.188954872 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.192391672 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.203337659 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.18328561 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.188190771 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.18688527 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.187330097 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.185686446 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.187951793 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.18651074 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.186256765 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.189254929 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.188310782 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.188879855 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.187540475 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.190676252 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.193200349 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.203748441 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.187923065 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.19017238 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.18817888 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.196364779 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.193705422 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.187785441 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.188049245 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.188999176 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.18843888 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.186709265 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.188920333 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.186140109 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.189844696 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.186618502 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.188633281 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.188835144 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.189264443 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.188007152 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.185737418 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.187020118 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.187344248 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.188711516 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.192686015 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.188591591 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.191414351 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.20043558 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.188198752 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.186282224 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.188795479 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.191929361 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.18744136 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.19192503 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.187801024 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.190746911 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.187599176 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.192391387 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.191195564 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.192074966 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189630334 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.187462288 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.190550153 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.191677683 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.191937027 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.185736029 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.189424603 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.190343449 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.193007148 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.186721957 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.190917207 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.185590075 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.191206778 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.1976479 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.193329864 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.191356528 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.190097158 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192044591 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.192593802 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.193323336 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.192608428 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.193909488 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.193622302 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.195189911 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.20840227 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.192902172 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.193507602 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.187547652 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.186853239 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.194593163 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.191628819 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.197411732 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199523664 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.210070196 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.19042666 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.197976716 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.190850257 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.197063259 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.193125397 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.192828475 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.193574916 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.194760415 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188661693 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.194791306 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.19615845 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.196646857 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.192670005 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.198353037 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.196036021 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.194624379 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.193283852 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.18983431 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192064435 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.194935713 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.192699269 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.195622211 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.19149706 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.193870182 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.1897571 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.189829257 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.194466325 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.196138154 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.197215295 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.192638826 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.190912568 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193004634 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.189251028 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.18925246 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.195839144 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.192794297 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.189352677 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.198834002 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.207293099 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.192750731 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.199333875 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.207846737 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.190716045 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.192727201 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.194520356 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.198031741 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.193790304 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.201820673 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.197424671 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.196633341 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.195512244 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.194186316 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.197427119 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.197559198 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.211052238 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.193186262 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.196532642 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.192355021 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.195544024 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.194424036 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.194568553 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.193412523 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.19562481 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.194918648 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.199258754 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194928412 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.196376194 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.197350637 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.199146922 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.196528931 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.202737258 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.201691693 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.191771776 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.1951685 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.192946353 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.199142605 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.192066497 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.197750094 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.196241148 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.204265912 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.218393502 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.202109526 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.21007283 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.197964377 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.198396932 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.210212597 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.196008669 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.19434872 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.195124137 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.195678086 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.193586898 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.19826095 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194180035 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.199901021 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.196620711 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.194716514 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.203427562 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.200239882 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.195190881 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.200712082 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.200547494 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.201544379 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.194801454 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.199237866 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.196101021 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195257897 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.192928487 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.197290502 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20267291 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209751961 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.195551759 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.195914893 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.196565088 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.197353245 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.198568421 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.200988398 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.200816943 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.207836291 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.200151134 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.203182204 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.199162487 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.20504249 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.19972925 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.199275663 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.207585569 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.19846037 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.19609286 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.198070848 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.204007441 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.204161566 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.217412944 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.199873806 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.205561188 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.201900924 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.203363717 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.201582801 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.202069188 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.201795209 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.201236033 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.207401309 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.21443968 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.20116483 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.201157991 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.202301096 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.20288394 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.203779107 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.197276673 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.201474474 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.20300329 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.201251555 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.197537981 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.198145059 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.204475937 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.201975459 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.202784552 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.204355338 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.201112747 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206116905 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.217270834 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.206909361 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.205314057 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.205729772 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.219602875 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.209323577 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.221629363 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.202457602 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.20398947 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.206057901 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.200098158 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.19974039 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.200412808 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.205490527 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.201565517 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.208126282 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.204333368 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.202658181 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.198876764 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.669539621 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.200116993 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.21001565 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.222250492 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.203137239 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210238574 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.202874111 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.201597638 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.207121757 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.205837861 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.199878228 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.204114007 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.209351016 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.211202762 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.199656961 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.205479311 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.201520954 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.204698723 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.20634162 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.204769428 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.204900983 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.206355382 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.202573272 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.208844225 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.203377226 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.204401813 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.200556198 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.202525485 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.201312322 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.210830695 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.223258506 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.20312572 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.206715819 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.206851867 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.201805559 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.201661452 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.205753241 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.205940146 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.20689057 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.200998179 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.207075978 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.206495172 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.209330583 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.20119118 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.204662725 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.201449788 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.201063264 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.206209206 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.208353049 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.208364199 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.20450222 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.20578337 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.202841308 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.202361153 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.208330094 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.203856361 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.207632584 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204845632 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.208048827 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202338058 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.205661607 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.207146019 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.206954815 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.202688976 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.203668574 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.210788361 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.221170034 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.211508403 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.209042393 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.212428538 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.204145779 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206293826 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.209410758 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.20448809 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.206650627 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.207792971 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.206338119 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.205300056 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.205383097 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.210364808 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.21247687 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.217339374 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.202577572 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.214478939 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.219726226 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209435987 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.204725752 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.207970084 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.205052036 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.207888742 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.208149653 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.203515384 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.211824607 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.22317963 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212048855 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206412244 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.206409785 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.20777324 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21362457 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.213018526 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.207731938 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.210982531 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.205898478 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.210698722 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.211936529 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.209960685 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.206992624 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.210262458 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.210575361 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.210839477 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.211237981 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206953582 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.205910884 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.208693605 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212971534 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210449262 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.207742486 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.209987816 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.206173544 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.216603263 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.206166613 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.210103633 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.206515263 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.212269953 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.213291614 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212964644 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.210451957 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.213992418 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.217336681 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.210454628 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.207315958 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.209346904 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.211367426 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.215361122 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.214598976 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.20964944 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.209560612 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.214302465 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211723453 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.213249374 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.210552577 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221795929 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.227400193 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20892658 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.2104641 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.211293443 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.212243199 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.211792113 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.214397845 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.21149198 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.212008421 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.220683846 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.214840376 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.215617506 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225208338 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.208940361 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.216289581 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.211343876 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.214967611 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.213466358 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.211851744 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.214033945 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.21432831 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.222136617 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.211643993 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.218988802 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232062529 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.228271455 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.211101824 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.215703342 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.21098437 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.216635149 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.211981356 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.217065098 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.2155202 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.215052601 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.215753236 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.212420328 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.217182253 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.211487903 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.216147649 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.215961857 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.210211757 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.213589035 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.215738753 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.214851409 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.218161872 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.2159301 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.215839052 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.216039045 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.213225763 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.222602138 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.233792124 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.219303905 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.218672069 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.217716487 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.214597896 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.213411855 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22388823 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.222482832 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.216027015 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.218234507 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.216858859 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.219165278 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.219734383 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.214548316 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.212182927 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212801453 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.217218903 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.224155713 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238055083 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.217025208 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.211973703 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.218414377 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.217070515 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.215883019 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218523526 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.218398061 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.214036061 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.215742522 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.222289432 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.219085452 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.218519971 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.216494501 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.223037361 seconds)
  done (took 716.978102828 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.218903823 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218076826 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.217704786 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217644982 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218138034 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218521386 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220638736 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.218132849 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.220180625 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.219750315 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.219257659 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218750915 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220884315 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.219517871 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219325276 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.21832664 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220998315 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221022865 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.219634043 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21866846 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.219072217 seconds)
  done (took 26.725838253 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.220752844 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.21911733 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220317112 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219268854 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218528882 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.219236345 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.220458094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22267609 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220599287 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220068549 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219894271 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219543237 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.219608708 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.219317641 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220061386 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220309023 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221318278 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220011579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.221162248 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.221308011 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220965207 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.221142641 seconds)
  done (took 27.969469182 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.222128987 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.221757843 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.218110374 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.222308301 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.222145163 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.220486039 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.221605169 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.220086424 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.221566078 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.216419168 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.216376062 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.219429881 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.221443201 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.22624654 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.217775154 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.221930118 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.223640162 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.222886247 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.224155526 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.219947477 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.221068286 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.237422784 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.22258584 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.218733886 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.227146396 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.222899505 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.222623441 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.226486917 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.219047688 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.227123156 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.222537857 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.220254217 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.222331174 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.217032806 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.220510365 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.226775362 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.224430325 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.222718263 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.223299049 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.226955239 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.239095335 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.222589609 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.224897848 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.239929411 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.223753167 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.222215079 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.229814421 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.223644893 seconds)
  done (took 59.845780833 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.807128695 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.815285809 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.811308973 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810089131 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.827430654 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.811751307 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.812378723 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.810973472 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.81128235 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.809768895 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.816940284 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.815881941 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.820202902 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.826823219 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.816182255 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814573385 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.814746185 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.829246797 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.80975398 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.814563839 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.814855215 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.812371377 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.813123598 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.81620441 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81401639 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820019731 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.829679997 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.816855958 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.814841373 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.816500092 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.828100158 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813686697 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.811976252 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.815306468 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.812212991 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.81258348 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.814684192 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.812907429 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.82013941 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.827347266 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.820199691 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.819249667 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.817621308 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.834404631 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.814593058 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.818165857 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.816864338 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.818264922 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.822752257 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.81592112 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.819175791 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.816537809 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.827497616 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.82260351 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.819877909 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.815508843 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.830157998 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.817733716 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.812977957 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.81979577 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.821595619 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.820452919 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.822981822 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.821600945 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.823272001 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.831357094 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.824228113 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.824189372 seconds)
  done (took 124.763102574 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.236643499 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.231076512 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229616793 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233868616 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229041928 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.229122793 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231183974 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.229857574 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.230478177 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.229170496 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230328477 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.229242485 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.23067591 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.230022935 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.230976018 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.230505306 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.2299414 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229683164 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230936649 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230900659 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.230192963 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.23288476 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229221354 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.232213707 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231556462 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.230535851 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2318012 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.229396554 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230611994 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.232485754 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.232764313 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.231401247 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.229714726 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.23127133 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.232298029 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.229799096 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.230740879 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231754557 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.230882435 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234034687 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.232810987 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232087859 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232860324 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.233312017 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233179072 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.233352132 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.233253531 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.233992453 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.234258335 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23249173 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.233411627 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233938857 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233760849 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232857996 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.233700362 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.234030304 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233549578 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232701445 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233184753 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.235360282 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234962942 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.233215735 seconds)
  done (took 77.51036896 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236709372 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232232258 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.232095436 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.232077719 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236240202 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23405281 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235873893 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.232992686 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234331061 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.235430368 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235721415 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233370191 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234453914 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23481177 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233238916 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235672851 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233711821 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236601587 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233960732 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234961327 seconds)
  done (took 25.825700851 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.234302411 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.234258184 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.234621488 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.234758668 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.234961297 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.233903702 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.236061071 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234201195 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234117279 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234257811 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.234914653 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.235642497 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234481376 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234490504 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.235356022 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.234850716 seconds)
  done (took 20.892445955 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.240968006 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.235660796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.236332008 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.237101331 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.235618528 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.234966419 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.234738728 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.23696617 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.235877629 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.237140287 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.236236608 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.237589079 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.237527675 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.236431907 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.235143336 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.234690034 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.236148852 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.23700332 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.23717479 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.237461157 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.24139869 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.23847592 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.237593745 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.237310168 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.237543909 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.237623849 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.238037803 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.235516947 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.236917417 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.237804349 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.2372249 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.237365944 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.23715135 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.23752753 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.237688353 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.236902281 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.236579608 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.238843735 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.237059184 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.236974744 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.236778745 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.237547544 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.236415384 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.237817382 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.238275679 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.237204691 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.237332179 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.239004825 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.239383239 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.23808426 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.238671024 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.238890637 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.238788292 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.238240939 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.238926124 seconds)
  done (took 69.192952852 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239630184 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.237856214 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.238287745 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.240218376 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.240373267 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.241503909 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.238405746 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.242073678 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237067028 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239065173 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.240132495 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.242361331 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237880817 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237730705 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238728815 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241300351 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.240455098 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.240737834 seconds)
  done (took 23.455208637 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.240973387 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240280173 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.239352985 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239326084 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.238959522 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.239423048 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240535743 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.238703772 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239047182 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.242850302 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24169815 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.242550001 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241506925 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.242026237 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.240737053 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241129542 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.240188743 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242018101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.239696723 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241776906 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.241094656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242289428 seconds)
  done (took 28.435978437 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.240784863 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.236328608 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.238234313 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.251289798 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.250813796 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.236058941 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.235795073 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.238832231 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.257895395 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.299235375 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.293467418 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.250925776 seconds)
  done (took 16.170592074 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245163231 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242526963 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.242749863 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241402021 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243561009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244998674 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243869657 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242304327 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241695098 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243006124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24297924 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24278555 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243133083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243036821 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242403103 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242892248 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242911623 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243042033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242109887 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242726202 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241956171 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241589414 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243448192 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242422893 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241895183 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243700906 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242770504 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242483666 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.243871336 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242803905 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242837421 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243391866 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244745655 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243218782 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243957073 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24397605 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243348387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246173635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243381047 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243400431 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.243205289 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244473731 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243574263 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244511674 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243910984 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245125946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244268106 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24314339 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243350915 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244755993 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243050925 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242922763 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245427013 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245497892 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244406467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243261426 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243439423 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244396242 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244508404 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246232255 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245984271 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246492355 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245665354 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244912124 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243630471 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244650657 seconds)
  done (took 83.226946471 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245593871 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245858898 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245777445 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244553553 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246359097 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246998381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24613276 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245779114 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245938031 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245765929 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247939246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246396539 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245762629 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247195653 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246149282 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245115661 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247935414 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248262637 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246354683 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24854481 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246279138 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248144069 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246930742 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247275427 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246682719 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247867853 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243657923 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248218038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245624194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247650447 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247942301 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247666966 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24774457 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.246291041 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245214049 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247354849 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247097584 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248921303 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248592449 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245737995 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247248853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248163177 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248464202 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248075799 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247343606 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247316009 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248441114 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248853737 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248177356 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248859066 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250056164 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249039924 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250444546 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248908486 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250056208 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247343336 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248530603 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246557447 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249340476 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251116698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247747782 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24947705 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250736696 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248955505 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248149471 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247938942 seconds)
  done (took 83.485747716 seconds)
done (took 1721.209859263 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.410898372 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.363426367 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.242863036 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.257434366 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.240454188 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.239904035 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.253447845 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.241693878 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.244635064 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.246458769 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.245802668 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.436203023 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.243271717 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.240956447 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.243713797 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.34351567 seconds)
  done (took 25.644797558 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.27527476 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.251213849 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.352981822 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.258879759 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.274807271 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.418491845 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.306942958 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.246766258 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.402939617 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.262911077 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.242758014 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.281377122 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.249322547 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.244288791 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.276417526 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.425902616 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.482657161 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.237559578 seconds)
  done (took 27.641355773 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.658997384 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.270875263 seconds)
  done (took 5.081970552 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.270493784 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.251254844 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.254830759 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.248905255 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.24390454 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.238328795 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.251733225 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.249839765 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.246900795 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.356541241 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.2479943 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.263803163 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.266239907 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.253146209 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.254648847 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.292313613 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.419678637 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.257295553 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.253912125 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.258512713 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.252308988 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.348942736 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.291535194 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.255283016 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.36430919 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.249225177 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.250055414 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.259500179 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.385541026 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.260532145 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.254167354 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.250599349 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.254111625 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.246947546 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.714398529 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.260315674 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.25698955 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.278017487 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.256602831 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.394124409 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.256551392 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.260272584 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.247068061 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.705887601 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.384329902 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.361664801 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.256793172 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.249136194 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.256682535 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.313712937 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.250829425 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.25544493 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.311679048 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.029287334 seconds)
  done (took 80.767827777 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.297076113 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.24846428 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.428718204 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.26011197 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.244853674 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.242270126 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.256208699 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.51408179 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.284659716 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.247382285 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.557783655 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.8493735 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.257238443 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.306479203 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.109924531 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.360781385 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.250002332 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.258564995 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.244512093 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.244337815 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810524297 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245004669 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.259813452 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.370080946 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.283436569 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.735368149 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.244197315 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.243881152 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.263294038 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.247428674 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.751091178 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.260426144 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.352824136 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.242840017 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.509424305 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.591847763 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.561674808 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.249051223 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.302795246 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.247089103 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.270820275 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.734770219 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.584791558 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.246544579 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.244908559 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740960977 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.245879358 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.25305293 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.259242504 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.497054452 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.24951374 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.251245684 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.259858918 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.247855184 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.25227743 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.305455383 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.298546435 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745689452 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.246027553 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.246068496 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.28316606 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.25264326 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.258820779 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.254599125 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.262866591 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.583355941 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.465116148 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.253480584 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.586141278 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.745877063 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.262983649 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.827715825 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.265483879 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.264778689 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.43865873 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.25362803 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.247785044 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765405043 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.274341362 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.24671695 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.578073275 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.254812496 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.563963194 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.260956582 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.248569316 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854993689 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.252974606 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.273393151 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.254600855 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.273782423 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.247288798 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.266048963 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.516540635 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.276588492 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.253502786 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.252942613 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.27568122 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.250489427 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.250977363 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.262371837 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.815813527 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.268945928 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.253754886 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.251517963 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.254101735 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.262910175 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.255988462 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.258598138 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546449305 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.254412914 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.253737042 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.257233424 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.25131181 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.271250007 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.389114313 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.261741533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.544373378 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.256674378 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.2555796 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.25720714 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.254841889 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.309245913 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.250493212 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.251671597 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.092648649 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.516012688 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.269225424 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.265323514 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.258061824 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.266835008 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.250079835 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.252420407 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.318155611 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.257367537 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.254099605 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.271728347 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.264876309 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.257360708 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.257641772 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.257986922 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.252791185 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.256400232 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.547936241 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.522425035 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.451598077 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.258974902 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.268249762 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.1404423 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.314901848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434950044 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.273792931 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.253649276 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504409281 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.468192938 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.260377817 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.252627844 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.256694956 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512870988 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.258095264 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.567687594 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816921564 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.271471231 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.264039012 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.258362542 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.951522862 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.254490281 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.25954602 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.567364356 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.266675465 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.261916427 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.259252622 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.260875215 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.267578601 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.274274678 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.263949806 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.259853719 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.261844946 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.576693022 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.451172082 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.272195116 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.266755194 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751526589 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.278943905 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.256012684 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.275435282 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.261899092 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.259531027 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.373783293 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.26290198 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.290262437 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.26109162 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.26552712 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.768886428 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.261623219 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.259492842 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.453235942 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086753349 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.274334095 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.263252681 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.272917484 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.174120884 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773813642 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.28445405 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.55168304 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.269844363 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.297070676 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.260984925 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.293258266 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.770886487 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.262396402 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.274548194 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.910796384 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.274678289 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.772182975 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.258919828 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.264225975 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.849429295 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.272606822 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.264851764 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.258279084 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.256139689 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.611971649 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.263068879 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.272759896 seconds)
  done (took 481.411189691 seconds)
done (took 621.695544192 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.264654247 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.262722609 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.255044572 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.263048207 seconds)
  done (took 10.212062925 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.278941526 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.266594358 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.272338423 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.265075112 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.274079444 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.26797924 seconds)
  done (took 8.793805755 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.262713895 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.264349756 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.26424877 seconds)
  done (took 7.958984456 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.45838492 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.27829304 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.566745974 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.278034273 seconds)
  done (took 8.750938727 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.275059647 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.27405768 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.272349829 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.275706519 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.28020874 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.279441627 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.273856396 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.27494326 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.280405044 seconds)
  done (took 12.652068367 seconds)
done (took 49.534863508 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.301461101 seconds)
    (2/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.465779541 seconds)
    (3/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.291052975 seconds)
    (4/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.435298981 seconds)
    (5/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.3154983 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.322308284 seconds)
    (7/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.300363483 seconds)
    (8/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.373643583 seconds)
    (9/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.352255486 seconds)
    (10/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.267708326 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.293551179 seconds)
    (12/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.368276807 seconds)
    (13/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.398144807 seconds)
    (14/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.362549046 seconds)
    (15/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.278765249 seconds)
    (16/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.320352062 seconds)
    (17/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.383398017 seconds)
    (18/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.617245626 seconds)
    (19/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.364153675 seconds)
    (20/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.411585429 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.353863827 seconds)
    (22/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.254379167 seconds)
    (23/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.293856175 seconds)
    (24/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.43280146 seconds)
    (25/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.036807181 seconds)
    (26/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.462297542 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.302238097 seconds)
    (28/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.457310283 seconds)
    (29/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.368472747 seconds)
    (30/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.399065693 seconds)
    (31/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.28173949 seconds)
    (32/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.407354999 seconds)
    (33/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.396470997 seconds)
    (34/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.315872503 seconds)
    (35/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.297021491 seconds)
    (36/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.337319821 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.463340865 seconds)
    (38/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.263426053 seconds)
    (39/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.295598174 seconds)
    (40/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.280881133 seconds)
    (41/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.294937802 seconds)
    (42/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.301510636 seconds)
    (43/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.258292955 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.412625725 seconds)
    (45/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.04269185 seconds)
    (46/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.441926985 seconds)
    (47/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.971983241 seconds)
    (48/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.341538759 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.406048534 seconds)
    (50/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.440568854 seconds)
    (51/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.302819748 seconds)
    (52/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.269362632 seconds)
    (53/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.166289757 seconds)
    (54/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.411569364 seconds)
    (55/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.013436718 seconds)
    (56/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.032636164 seconds)
    (57/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.372451609 seconds)
    (58/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.008279867 seconds)
    (59/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.455571362 seconds)
    (60/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.324648491 seconds)
    (61/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.347136636 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.382988761 seconds)
    (63/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.346124929 seconds)
    (64/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.308405596 seconds)
    (65/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.327002069 seconds)
    (66/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.344928518 seconds)
    (67/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.389816541 seconds)
    (68/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.070776605 seconds)
    (69/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.408844661 seconds)
    (70/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.018436873 seconds)
    (71/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.386806394 seconds)
    (72/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.294886232 seconds)
    (73/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.30773717 seconds)
    (74/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.34752058 seconds)
    (75/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.345330513 seconds)
    (76/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.608279504 seconds)
    (77/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.443908613 seconds)
    (78/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.261756317 seconds)
    (79/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.460967676 seconds)
    (80/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.945374186 seconds)
    (81/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.411174725 seconds)
    (82/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.322268218 seconds)
    (83/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.958041617 seconds)
    (84/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.350207348 seconds)
    (85/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.33891837 seconds)
    (86/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.089435502 seconds)
    (87/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.340816426 seconds)
    (88/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.49864338 seconds)
    (89/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.286322643 seconds)
    (90/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.36626243 seconds)
    (91/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.33857417 seconds)
    (92/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.438884259 seconds)
    (93/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.575165224 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.403114958 seconds)
    (95/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.283971579 seconds)
    (96/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.325215218 seconds)
    (97/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.288555363 seconds)
    (98/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.303823533 seconds)
    (99/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.309661323 seconds)
    (100/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.423128257 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.380811426 seconds)
    (102/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.296660782 seconds)
    (103/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.289625317 seconds)
    (104/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.256363834 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.407585237 seconds)
    (106/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.357364972 seconds)
    (107/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.302073054 seconds)
    (108/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.296866095 seconds)
    (109/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.426978381 seconds)
    (110/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.297654383 seconds)
    (111/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.308092219 seconds)
    (112/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.167466477 seconds)
    (113/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.305592479 seconds)
    (114/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.375135121 seconds)
    (115/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.317732154 seconds)
    (116/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.361419769 seconds)
    (117/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.437740738 seconds)
    (118/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.381857648 seconds)
    (119/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.388663524 seconds)
    (120/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.28260839 seconds)
    (121/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.41205166 seconds)
    (122/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.387899624 seconds)
    (123/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.364655539 seconds)
    (124/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.326904212 seconds)
    (125/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.13787826 seconds)
    (126/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.9712198 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.364091755 seconds)
    (128/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.019560282 seconds)
    (129/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.375908842 seconds)
    (130/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.329583361 seconds)
    (131/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.383349965 seconds)
    (132/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.410996871 seconds)
    (133/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.301589033 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.046898933 seconds)
    (135/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.933544632 seconds)
    (136/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.39605542 seconds)
    (137/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.447787417 seconds)
    (138/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.277555669 seconds)
    (139/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.184458355 seconds)
    (140/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.278396275 seconds)
    (141/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.363600642 seconds)
    (142/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.406026447 seconds)
    (143/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.289216608 seconds)
    (144/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.292193231 seconds)
    (145/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.518309013 seconds)
    (146/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.411929969 seconds)
    (147/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.291069681 seconds)
    (148/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.324145778 seconds)
    (149/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.480742154 seconds)
    (150/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.316117664 seconds)
    (151/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.381814735 seconds)
    (152/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.323611775 seconds)
    (153/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.398373755 seconds)
    (154/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.351459972 seconds)
    (155/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.318020133 seconds)
    (156/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.269327966 seconds)
    (157/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.438617417 seconds)
    (158/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.270256089 seconds)
    (159/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.303328573 seconds)
    (160/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.306578364 seconds)
    (161/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.377878694 seconds)
    (162/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.474108986 seconds)
    (163/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.519682049 seconds)
    (164/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.315332973 seconds)
    (165/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.417370414 seconds)
    (166/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.377294612 seconds)
    (167/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.935881495 seconds)
    (168/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.308493036 seconds)
    (169/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.411010499 seconds)
    (170/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.314897553 seconds)
    (171/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.562265585 seconds)
    (172/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.462231237 seconds)
    (173/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.263323458 seconds)
    (174/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.321545507 seconds)
    (175/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.32659433 seconds)
    (176/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.280651214 seconds)
    (177/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.470414886 seconds)
    (178/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.496687604 seconds)
    (179/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.47767691 seconds)
    (180/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.307100751 seconds)
    (181/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.981644917 seconds)
    (182/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.312486357 seconds)
    (183/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.421837602 seconds)
    (184/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.303705295 seconds)
    (185/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.337436548 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.357181224 seconds)
    (187/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.283854646 seconds)
    (188/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.053429296 seconds)
    (189/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.349743285 seconds)
    (190/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.311264774 seconds)
    (191/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.379015112 seconds)
    (192/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.32473138 seconds)
    (193/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.486227182 seconds)
    (194/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.284418868 seconds)
    (195/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.956200402 seconds)
    (196/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.428046548 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.417334676 seconds)
    (198/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.931329271 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.474864705 seconds)
    (200/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.928079627 seconds)
    (201/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.420482272 seconds)
    (202/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.293881007 seconds)
    (203/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.272281566 seconds)
    (204/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.018296276 seconds)
    (205/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.322087564 seconds)
    (206/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.354203415 seconds)
    (207/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.440006813 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.386273558 seconds)
    (209/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.366497433 seconds)
    (210/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.362334933 seconds)
    (211/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.266130385 seconds)
    (212/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.281447686 seconds)
    (213/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.282281327 seconds)
    (214/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.3033266 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.493644557 seconds)
    (216/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.367779171 seconds)
    (217/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.296432154 seconds)
    (218/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.467000749 seconds)
    (219/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.491014764 seconds)
    (220/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.361244572 seconds)
    (221/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.267078225 seconds)
    (222/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.312725149 seconds)
    (223/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.388581372 seconds)
    (224/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.421178712 seconds)
  done (took 357.407644393 seconds)
done (took 358.575605461 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334867938 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.467620928 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.285712184 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.285138852 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3298606 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.285217366 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.322871907 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.292758282 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.298120073 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.2976858 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.282040798 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.293472704 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.299874914 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.326511238 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.398550999 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.300004437 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.287425789 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.296068201 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.335375438 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.352671299 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331955723 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332984002 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.306822387 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.286059652 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.33348367 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335048751 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.294351235 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.293566034 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.288187524 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.335047148 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.279380508 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.303111063 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.343317048 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.344606113 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.330400121 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.295412676 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329552749 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.470035421 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.328847185 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.326213816 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.299188489 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.342745506 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.299112108 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.298786676 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.342768916 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.307841765 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335960562 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.41165158 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.280710582 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.285482008 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332168211 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.356202645 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.299864019 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.278398736 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.282243074 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.406056972 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.29506105 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.336282258 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.296667582 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333540645 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.403969703 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.334820429 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355160514 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335861355 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.296561757 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.298613768 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.296305741 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.355029772 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.293061644 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.333097338 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335889744 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.299880406 seconds)
done (took 104.405426996 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.418121435 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.2904194 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.431187323 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.295414347 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455891262 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.437186896 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.292242216 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.293545742 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.290210836 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.113915777 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.293825552 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.292688179 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.289240089 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.295316816 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.422225043 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.29338328 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.294794402 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.006406074 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.298189555 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.434669167 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.29203765 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.294683417 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.293099446 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.118590245 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.290707334 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.286452978 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.434325086 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.29610412 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.01030285 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.285795684 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.288497523 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.008728932 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.438875355 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.316393875 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.304024716 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.30488216 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.458814891 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.30969024 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.420338854 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.42182367 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.432703935 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.335120554 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.286470797 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.292002408 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.297181483 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.297377535 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.294071165 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.323634092 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.290372 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.29749105 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.011424082 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.305699381 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.297330846 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.295915404 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.296856019 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.323597061 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.328021853 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.298248507 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.438220933 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.299408315 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.42007571 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.121299319 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.119500029 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.297449937 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.288542264 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.298786511 seconds)
  done (took 105.887771372 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.361625165 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.369526154 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.402813311 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.300752401 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.349091282 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.406926598 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.301246522 seconds)
  done (took 10.680776253 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.300959056 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.300034118 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342665758 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344253472 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.298841774 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.450004408 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300525087 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.303667911 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.29920078 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.346416202 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.300368316 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.298179289 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.308083019 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.293588323 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.345508885 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.306831631 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.412378162 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.295086678 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.299432554 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.445151432 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.29755829 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.307770375 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.346679979 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.306966574 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.30154262 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.301204496 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.060366199 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.300332103 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.301127662 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.29975337 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.302025468 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.349073834 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.301270903 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.29673835 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.30028297 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412561834 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.301975139 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.300206528 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.300963509 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.295204611 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.303462176 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.299398834 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.300880307 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.300566763 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.300618172 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.31885239 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.302370664 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.300747662 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.301469729 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.301785863 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.347001175 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.303400932 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.301655624 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.304263547 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.353175583 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.311051865 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.301146319 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.302085755 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.299824633 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.301717189 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.447857229 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.345406836 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.301355711 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.343475096 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.304469988 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.302382249 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.303461223 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.301773468 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387814586 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.302732525 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.348561387 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.30206823 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.477846074 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.322601896 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.303530524 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.300822194 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.30242424 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3045097 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.295380259 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.305930934 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.303606088 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.299937917 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.304833233 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.303707208 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306083542 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.455869939 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409291384 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.305673253 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.312614042 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.306356298 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.302104576 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.350090151 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.304847576 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.302979446 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350320202 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.414106295 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.350939335 seconds)
  done (took 134.212591165 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.313277187 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.313255663 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.302849288 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.326531475 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.301494093 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.300233022 seconds)
  done (took 9.051856513 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.301028868 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.308352066 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.304072109 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.303249546 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.302391609 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.306935612 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.307739633 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.300824491 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.309046027 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.303184834 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.304151048 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.308990061 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.30861689 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.305380141 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.30531352 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.304962368 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.305005776 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.304518853 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.307035172 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306741671 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.29919769 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.307325133 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.306201869 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.304191592 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.314188553 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.306885779 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.323393596 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.306836121 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.30722173 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.307210214 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.325809552 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.309481445 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.306767006 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.307427049 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.314449054 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.303063236 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.310179393 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.308888277 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.307618395 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.309642498 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.310265261 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.307802705 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.305472218 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.311070201 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.305141465 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.308783171 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.31461759 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.328515705 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.312704064 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.310870631 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.310641824 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.308691695 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.31096731 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.31568486 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.30776799 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321197392 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.313675757 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.308670077 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.311325554 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.304075457 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.311738079 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.310466746 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.305755323 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.312316492 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.307609018 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.312380335 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.307138695 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.314011098 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307353443 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.306944566 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.309541856 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.312541746 seconds)
  done (took 96.438279608 seconds)
done (took 357.456202109 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.111629038 seconds)
  done (took 4.31075209 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.384457474 seconds)
  done (took 3.584915384 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.703530205 seconds)
  done (took 21.910128421 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.36383058 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.299031307 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.320874498 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.294024984 seconds)
  done (took 10.479401728 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.541628468 seconds)
  done (took 3.741607276 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.315623901 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.298175249 seconds)
  done (took 5.816838406 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.527983452 seconds)
  done (took 3.73002732 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.805372987 seconds)
  done (took 4.012290095 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.309895372 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.322374104 seconds)
  done (took 5.840909424 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.29402365 seconds)
  done (took 3.495169072 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.526457935 seconds)
  done (took 37.72726747 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.320040248 seconds)
  done (took 3.52467755 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.356079732 seconds)
  done (took 3.556043662 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.800275824 seconds)
  done (took 6.000881252 seconds)
done (took 118.931082974 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.303681145 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.302223684 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.303004145 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.299793933 seconds)
  done (took 10.40886786 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.364697988 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.362565457 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.36521195 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.361627806 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.363834965 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.360618044 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.342872131 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.336917594 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.362205745 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.360422032 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.363129068 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.362414644 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.361766623 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.337782312 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.363199843 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.365724003 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.366623535 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.364148361 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.339984946 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.363363909 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.311320196 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.364905652 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.363049457 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.313588149 seconds)
  done (took 33.725455152 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.802173523 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.380246427 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.461467253 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.362229632 seconds)
  done (took 7.208211038 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.393915063 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.391106464 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.403017476 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.444195106 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.465334245 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.404173847 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.338106988 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.336145157 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.322652807 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.391852234 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.441975222 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.384154338 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.472729807 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.313495744 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.522510328 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.313656969 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.313393074 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.446768088 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.447005355 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.45618118 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.314512252 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.392521641 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.39156919 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.381283516 seconds)
  done (took 34.685949137 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.323606477 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.32841758 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.316014505 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.330410966 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.316074863 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.327726733 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.322329782 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.321033431 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.314405011 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.314798034 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.315907226 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.328737105 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.319486801 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.313871466 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.324931986 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.317160523 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.322774167 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.319513518 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.318253025 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.321366829 seconds)
  done (took 27.621427493 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.305083842 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.305065731 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.658200355 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.560047498 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.315102831 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.305445721 seconds)
  done (took 13.654878905 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.376912845 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.5230596 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.30726828 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.645254021 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.720237223 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.306282265 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.314246487 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.553242322 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.840997758 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.808270132 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.366538249 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.372588086 seconds)
  done (took 19.342447748 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.309364508 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.320463917 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.318674529 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.321233954 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.363305412 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.325994541 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.324331329 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.307352461 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.364258438 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.377953523 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.328976152 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.365238408 seconds)
  done (took 21.237278777 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405797523 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.312309795 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312052995 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360999722 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306712553 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153339966 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345516079 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.000392699 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.32877834 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587089651 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313555715 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406652443 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.566035511 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311559041 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313972725 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.2751111 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542427055 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774492784 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315935349 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31243276 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340629356 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316393966 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318293154 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.50858601 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32660945 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314451785 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.578605236 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312347149 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581467818 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327417377 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32358545 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314493836 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594657882 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955870378 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423989874 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512610479 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344910723 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310756092 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.303105922 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.314140823 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316754635 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317968459 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325413963 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313118138 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317628942 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318828037 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007579163 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.333410112 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.314323229 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316210822 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557801 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41154899 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.320298783 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312294724 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387510103 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308845418 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.322019054 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443014957 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905942046 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31559816 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316779016 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.331751603 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318074883 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325140347 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90529887 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.33611233 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.31985041 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321093629 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31607106 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311115557 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335174837 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316309576 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.33703099 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315434725 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998262106 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333606139 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321603704 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838099885 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317540444 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.317256642 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545485423 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316891688 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320404322 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.317440928 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317531599 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980475293 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32476984 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.31273185 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356421083 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028394149 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.528771366 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353643124 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346090742 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539201624 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.30311815 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317452469 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.327255488 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32141674 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333899138 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017231198 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329959748 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.317728496 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574285227 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.526657025 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315602427 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.287162263 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776798983 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332162503 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.333979097 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.324464277 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.518242766 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.888281938 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350456516 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320626481 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335792066 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.318990399 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018460356 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324599158 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.423794629 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322230194 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589187777 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.076471784 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319971315 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386688348 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32365257 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321351489 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318966381 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322558322 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322263322 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.515175738 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34021327 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.323197632 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.322263595 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3204263 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.326194797 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325998958 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.321549401 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.542125778 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322118179 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597394796 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319600024 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321312441 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315759477 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.538839883 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.320139349 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.671838544 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582752803 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323631458 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320310387 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324872092 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339305795 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426984271 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34347063 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.327736247 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570810848 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.326441602 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.326851108 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322500802 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323322991 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326776326 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.329044259 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329341319 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881226508 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312390027 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32456898 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212189069 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.33733992 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388510921 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329247869 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52483752 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.339013616 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339994565 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.329515242 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.334424536 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547753133 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33084703 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.322493119 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40405898 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.77792653 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.896863308 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352818881 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.322001704 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.321963601 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.322962276 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324976876 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323472902 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324804431 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524486593 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35351617 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331975356 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885360693 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338396252 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325991907 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.333494686 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33763824 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.333760987 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326071967 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.326585186 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345116898 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336413291 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.334667394 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469554175 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.340014685 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325564152 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.842936582 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332791597 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325542741 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325194993 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363200268 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326763591 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123985665 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597494657 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323236881 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57068061 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326889917 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.343121779 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.32472536 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326097769 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355153424 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.341233203 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348253187 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.336018995 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325599735 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329071936 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898018306 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029746797 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846330396 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343306678 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.336158711 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.327221346 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.030464535 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337820165 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328099054 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555542394 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042537927 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339785441 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78192411 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.339291998 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056099434 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573406916 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560143336 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328836339 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.338604457 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590231564 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540631992 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36340949 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340484568 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328040896 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.309291358 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865782459 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351232979 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411521711 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034493188 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34031671 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331927997 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.3346895 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324542044 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710873189 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340512878 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328715958 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336702307 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33520012 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131759252 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347041223 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328857965 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924926055 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350660705 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.786197066 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341645169 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.533326105 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.35604403 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.333780434 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.329643944 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.33854368 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.581321608 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576158573 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33116743 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334507273 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847457301 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.21570747 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.344092891 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33001419 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03256362 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336225749 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60236697 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.34320638 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.335608456 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334214249 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332064598 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331768395 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.332315346 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340756383 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30904551 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79207375 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.329841896 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350799615 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344280599 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332456204 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58518224 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.346920911 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.899156184 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573786049 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33101856 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373293553 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.340015239 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334969864 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.322301747 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331604972 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332224102 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376847711 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.547723479 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342662576 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.316121561 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348438361 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535879824 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331745681 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340112159 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566602456 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.351752897 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.340566488 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039162145 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380596827 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346695072 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335045761 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337252795 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372353848 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417702942 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540018355 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.359472911 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.34650059 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.729615356 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360109555 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336620044 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.34979787 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427543039 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346682699 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.340782515 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.109060296 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905178067 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053975566 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.899869886 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597732266 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339353338 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345962148 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336068614 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492025395 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335169125 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611743388 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33610658 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.326344264 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379719342 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339047837 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351085609 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54661771 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612766713 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334343574 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338914043 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33545031 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.335803342 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344179281 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.545133718 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812478816 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869171339 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338386235 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345828967 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041581839 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622222766 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335490662 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336667152 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335188265 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.351701715 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.347871074 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.338137045 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336215039 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494613317 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58166528 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991886745 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.355959751 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.366578945 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.856848323 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346328609 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589853108 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335224592 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560168183 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925860443 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.026876071 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602635299 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407457324 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576836706 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.354344589 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498506395 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.341220635 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336798532 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33947233 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336521506 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.338563918 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.346671185 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907247315 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616916702 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.342753944 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.343105572 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365171593 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.347125686 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.560367467 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019922825 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559743626 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34616768 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344076875 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341147968 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908614905 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602926262 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342083502 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.339790643 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571612049 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354872066 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36348306 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.861473816 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.338564513 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871737482 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.311900713 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361039341 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350004883 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017690884 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908016171 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.364018138 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809976875 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342584683 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345200251 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618570934 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.347660451 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350680089 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617594421 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.346108089 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349819452 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548814102 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.922956251 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.098776155 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.344192329 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375323867 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.342813658 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341910865 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409431175 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338543402 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336164698 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.750388441 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3569995 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342687694 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350312054 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.345328911 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353883167 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.343084297 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343531996 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.344996009 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.350245144 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.337121079 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352224968 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470469182 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88470666 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355420474 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.159576988 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.670654081 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595897848 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352986314 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.329564235 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.349219601 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342706484 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344654251 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340138851 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335152006 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870638029 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.348914364 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.351961977 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348569189 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.342895828 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553256551 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34342879 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565137667 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367144256 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360515592 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.331603883 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344424063 seconds)
  done (took 952.968599635 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.382945839 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.36844815 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.348752147 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.418351379 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.399305577 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.424039206 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.37252272 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.4478819 seconds)
  done (took 20.398972624 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.346681122 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.349362923 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.341188231 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.348737905 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.352023239 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.805904421 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.359203701 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.3495878 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.366644843 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.344505673 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.347036622 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.331314199 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.345224603 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.340990637 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.345669213 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.348728803 seconds)
  done (took 32.266539811 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.283009306 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.451689062 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.169600089 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.351192205 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.362380808 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.337241228 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.53262486 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.350704882 seconds)
  done (took 26.076194248 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.350840488 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.350957498 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.351886882 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.352074327 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.351853364 seconds)
  done (took 7.995736916 seconds)
done (took 1208.793201283 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.351856791 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.352991839 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.352719111 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.351368159 seconds)
  done (took 6.646780251 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.335113021 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.332313097 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.335040153 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.347269883 seconds)
  done (took 9.58726419 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.017092558 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.950938722 seconds)
  done (took 5.207316388 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.827408731 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.823996495 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.822138529 seconds)
  done (took 6.713195547 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.64307569 seconds)
  done (took 2.884184769 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.239269016 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.344147235 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.027991215 seconds)
  done (took 7.852053851 seconds)
done (took 40.129098906 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.348353746 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.587192442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.499028187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.351037525 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.507042649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.500923685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.150278631 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.34472777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.339508258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.351131488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.346269977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.49921292 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.065635351 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.593995109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.066688328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.593923999 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.505487376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.344926939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.343656523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.339508368 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.147525893 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.355450019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.34368622 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.349572597 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.507672409 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.489910124 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.345765154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.605741972 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.346360135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.360792537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.483846968 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.35042565 seconds)
  done (took 81.60668836 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.356159585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.339138947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.340707058 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.359909939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.341115997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.371207662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.341028811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.341048323 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.340664777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.349059129 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.349355456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.3482237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.342064905 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.353597248 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.340500414 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.354323487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.344553197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.339790931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.356256176 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.354237305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.339783239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.339816388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.352977696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.342480229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.347303387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.355515099 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.357260232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.342000062 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.340938288 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.341965141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.347281867 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.381582855 seconds)
  done (took 76.395523988 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.361540162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.34182041 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.344003414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361605408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.341336183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.3497458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.350746369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.347024796 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.343330515 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.36625729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.341603797 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.362151028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.345383638 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.3531259 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.344718489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.342688747 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.357940289 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.364244699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375210484 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.348168223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.360170118 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.346770755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.363884095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.342995428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.361112536 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.346487411 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.344149582 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.357655754 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.344117748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358960249 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.351174728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.350094017 seconds)
  done (took 76.515723498 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.632007174 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.358558573 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.363795552 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.355163013 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.362177909 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.359737907 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.354019704 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.636458452 seconds)
  done (took 14.667736395 seconds)
done (took 250.42624202 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.354360692 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.833414025 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.393384249 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.354051197 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.373505346 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.380328 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.575533226 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.392746898 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.578205516 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.371751324 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.371257027 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.363228826 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.127133635 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.495639692 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.180841517 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.283431996 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.214185581 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.351616298 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.918321183 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.63069362 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.374264871 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.353974254 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.170225904 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.22886461 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.344543909 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.429377562 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.451751205 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.572554909 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.509167756 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.431253441 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.853316166 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.351950571 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.352145687 seconds)
  done (took 63.213440963 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.358668418 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.485170839 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.362981049 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.362741445 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.488380737 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.379894114 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.357852413 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.361065239 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.364006933 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.360492803 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.362964093 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.366379674 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.364429249 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.414081729 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.501736876 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.376030533 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.360343146 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.483381482 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.358312716 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.356931741 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.412206732 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.364487548 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.366206523 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.41530102 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.364604611 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.364174143 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.484979621 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.383821965 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.365129728 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.486877164 seconds)
  done (took 43.082909648 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.364924815 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.955297903 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.090496424 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.367016338 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.360696077 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.365486929 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.637114007 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.364501743 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.364604535 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.365223724 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.844740614 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.382684149 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.395322916 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.115373994 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.364938432 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.365967772 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.364607215 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.361694775 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.961834077 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.370524966 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.656437078 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.367232644 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.638756786 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.37303273 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.382235721 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.362880614 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.366912763 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.195791968 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.394682713 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.847830237 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.117126889 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.635916814 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.114560301 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.125254822 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.106482279 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.368249757 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.367899743 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.849778063 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.379582087 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.363258177 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.640684675 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.36499562 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.103727116 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.061121308 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.382469984 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.367806891 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.210181523 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.866223095 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.611607765 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.372650438 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.124135909 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.368163758 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.370756669 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.368263865 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.59790506 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.36834531 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.364742798 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.223568048 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.399547969 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.642742589 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.37123559 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.365748265 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.961172766 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.367566522 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.968009867 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.369767236 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.374874836 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.381726474 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.10803807 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.370641625 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.0768006 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.382195533 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.368050313 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.849729446 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.977628306 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.270896536 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.369185445 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.965248798 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.145230657 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.663893365 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.370160655 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.171763538 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.663673889 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.369359354 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.371162673 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.371456286 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.370788044 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.445791498 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.640494278 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.004542395 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.073990371 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.241058567 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.665077928 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.373729588 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.36726957 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.224156504 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39098789 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.372483423 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.101725068 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.07605152 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.384919784 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.374277859 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.082029949 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.386731812 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.646267421 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.373208829 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.112980078 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.368867122 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.448301871 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.371573147 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.374199322 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.388428964 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.644933683 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.372335002 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.370250733 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.06227252 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.882508148 seconds)
  done (took 191.859922618 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.364633717 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.372959934 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.363098046 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.372496016 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.364882486 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.369220509 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.362720439 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.365394513 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.366442244 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.363877789 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.363189351 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.372035765 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.370090295 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.362624566 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.364666305 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.360173727 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.367563438 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.368908701 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.362648178 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.366926515 seconds)
  done (took 44.582099972 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.377991546 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.925921478 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.901542428 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.375784599 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.374416925 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.369219536 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.42436771 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.389007131 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.374672598 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.66624739 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.53537846 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.390254375 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.374413275 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.374082555 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.881320507 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.365133374 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.668091931 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.922699783 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.376026483 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.922842932 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.366914292 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.373667168 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.369404927 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.92376463 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.687585686 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.648393182 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.429155602 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.940048766 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.391880853 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.37559298 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.92389342 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.376328779 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.372199094 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.92365917 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.39056388 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.388907853 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.373405251 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.428197132 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.443710489 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.683495474 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.01361828 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.667727243 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.387972012 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.549316635 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.376129386 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.364222088 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.930730624 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.391567683 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.368281229 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.378089101 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.382822988 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.893264622 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.388252352 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.893884762 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.392400664 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.378113625 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.927132142 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.89405803 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.901106371 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.537495904 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.386714299 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.65046629 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.378204911 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.93235238 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.391912651 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.378449342 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.379819487 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.539254556 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.943338289 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.652705067 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.673215041 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.673337512 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.377857813 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.434761578 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.395050585 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.748733579 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.435550925 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.780429678 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.667772077 seconds)
  done (took 124.897399033 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.641901469 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.481581125 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.77509712 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.982611944 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.37641949 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.523116136 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.483150683 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.630146361 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.374608723 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.45294988 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.015885443 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.493258704 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.166189435 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.451757429 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.495703828 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.518875661 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.777921283 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.346886342 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.094494658 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.994351563 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.375808349 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.499187191 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.952049148 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.574775401 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.386226459 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.984745589 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.336295997 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.033501808 seconds)
  done (took 53.482993778 seconds)
done (took 522.36320769 seconds)
SAVING RESULT...
DONE!
