cset: moving following pidspec: 5153
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.496910994 seconds)
loading group "string"... done (took 0.49834594 seconds)
loading group "linalg"... done (took 8.504928582 seconds)
loading group "parallel"... done (took 0.17236298 seconds)
loading group "find"... done (took 1.353733487 seconds)
loading group "tuple"... done (took 2.009074957 seconds)
loading group "dates"... done (took 1.315300549 seconds)
loading group "micro"... done (took 0.208373978 seconds)
loading group "io"... done (took 0.58523733 seconds)
loading group "scalar"... done (took 40.975743862 seconds)
loading group "sparse"... done (took 12.804846268 seconds)
loading group "broadcast"... done (took 1.036019336 seconds)
loading group "union"... done (took 14.15693094 seconds)
loading group "simd"... done (took 4.861312895 seconds)
loading group "random"... done (took 9.763204445 seconds)
loading group "problem"... done (took 2.207745199 seconds)
loading group "array"... done (took 24.032342277 seconds)
loading group "misc"... done (took 1.132727249 seconds)
loading group "sort"... done (took 3.563664457 seconds)
loading group "collection"... done (took 20.849498112 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.597945005 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119175478 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142409767 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.17039703 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202799155 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13576045 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152873971 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.547629267 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.036673509 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204998025 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139261273 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.539933237 seconds)
done (took 5.739259091 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.22479146 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.070993881 seconds)
    (2/2) benchmarking "String"...
    done (took 0.123741043 seconds)
  done (took 0.875173051 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072928618 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169761595 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090348294 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.105923299 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107238703 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.088951268 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.105772274 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107300816 seconds)
  done (took 1.457465796 seconds)
done (took 3.32065921 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.800421741 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.823074648 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.489141849 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.124556617 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152492309 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.131881986 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.30978813 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.154813966 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.10787237 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112681392 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171524197 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.361072684 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.48218906 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959734153 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104557111 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124509351 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.07892316 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.74278442 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080948568 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129466762 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.522431559 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.111791703 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116007258 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123654932 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20964887 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126971646 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.175346881 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.09127197 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681560489 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099021352 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182742886 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095838514 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155329559 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.232460255 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.077154667 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105674336 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677137018 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185527044 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108249699 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.093126464 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674483226 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076353833 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185111408 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106257945 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107697206 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184977937 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.09950965 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09344177 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097064006 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084908535 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.158558065 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.496459989 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103478698 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.138846066 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09541052 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.696507836 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092834222 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15201919 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124416942 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107789907 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094040458 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088396818 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.169893869 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097063706 seconds)
  done (took 19.660248757 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111540414 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133941133 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091020755 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135729833 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134776691 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093383417 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080424672 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.090807361 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.105274204 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179489215 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132299633 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13865895 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07199137 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.094841787 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098030626 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246620044 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119565354 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100587481 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096983415 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087104956 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139573764 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10816327 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088329061 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105651442 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167187274 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203077537 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.120921325 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121082879 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078705005 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114428737 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139518892 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145503587 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090327455 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07565059 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179509292 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119672807 seconds)
  done (took 5.038593842 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155011237 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194476666 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.112564896 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.184222344 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.173829564 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145203405 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16521404 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116609775 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265037324 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.179167789 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078649029 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178795379 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127070954 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.093120123 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092237705 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.077755498 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076269829 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.747697639 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.176730168 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15072958 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.123462971 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101461655 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081034439 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373102797 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097682494 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079226132 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100946872 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069900075 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173031154 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102098311 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.214592276 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119173805 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106665036 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112540562 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214876551 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125155824 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121141287 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101411314 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07846553 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.231846459 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08963306 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093907186 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101225704 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133681881 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130427267 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096381359 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.091495212 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241881862 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081027831 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117197675 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.05782762 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.07956462 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196398207 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.107712157 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076951255 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32986996 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116952336 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102002173 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079003435 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.303928845 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11418714 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096760588 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075131816 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101199322 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075119672 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.41126027 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087547461 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.970798816 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094347658 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154064393 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097961079 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10371926 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083658613 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098155555 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101066925 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094947792 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076924964 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076896588 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094603702 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08080357 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114977361 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097633642 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076766789 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160540788 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097879972 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116106671 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122434096 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082360162 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077030556 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12884626 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095286771 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079703112 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.14212407 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102740139 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.096130752 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100168002 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139921607 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095810482 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.185145321 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092573695 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078297358 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12326171 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096280883 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110296087 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117768944 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095068568 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081873505 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092953219 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077642639 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156854255 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078767617 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076160223 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09939875 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107909402 seconds)
  done (took 23.35762636 seconds)
done (took 48.734383645 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.410096471 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10565974 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106203379 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107955872 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104953486 seconds)
  done (took 1.591590975 seconds)
done (took 2.327871805 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.315375771 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197765118 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096862939 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190121711 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084330084 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200584625 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166096719 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099390433 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.211539363 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081507509 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18966464 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080886144 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103456485 seconds)
  done (took 2.775854219 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090217987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114020451 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078380291 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106060633 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072945532 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08906843 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105780601 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115923615 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103930946 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081450367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091159253 seconds)
  done (took 1.779643217 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087383502 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111611872 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077811318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088038077 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091230227 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088330423 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106739486 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098625305 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106127052 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082538542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090639836 seconds)
  done (took 1.762674351 seconds)
done (took 7.041693726 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.048473925 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.848940726 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119544734 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.172017384 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.341882484 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211873654 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.565549091 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112421355 seconds)
  done (took 12.330044558 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.105930456 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109073877 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075848586 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096904959 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077436116 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096678366 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077112129 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095027161 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07958867 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097831934 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076263584 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096351425 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078082761 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094597252 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07953215 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079223063 seconds)
  done (took 2.218053131 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110839177 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109932597 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098652057 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085461657 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10009151 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081527528 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103240178 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100433748 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080929823 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09843275 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087128951 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103041506 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084899771 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096594209 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.08358093 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106248553 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097838669 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084515188 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101803659 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.084829318 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104491464 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.08114448 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10215513 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103463104 seconds)
  done (took 3.134372075 seconds)
done (took 18.418984409 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16153677 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081968731 seconds)
  done (took 0.983986087 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098306658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116819253 seconds)
  done (took 0.962242533 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105779107 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095915795 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132618355 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112705999 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07998568 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078353062 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127434675 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097015431 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079093937 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097356822 seconds)
  done (took 1.7564279 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081348089 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098798184 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087182049 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116392128 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.090069946 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098917406 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083774705 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099919321 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101997351 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077185216 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103272051 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097329188 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10282575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117447377 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083678929 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101713866 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088096449 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100444819 seconds)
  done (took 2.481015214 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076854856 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078733584 seconds)
  done (took 0.904781774 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079298291 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092112539 seconds)
    (3/7) benchmarking "month"...
    done (took 0.078778535 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097689429 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075619051 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093493221 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076560848 seconds)
  done (took 1.335816108 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.468027821 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.248608378 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.307646322 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110180613 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129186151 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.495296067 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130930826 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.090929942 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108942432 seconds)
  done (took 2.879372425 seconds)
done (took 12.047850537 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087155023 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128786622 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.499875484 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114829141 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.076031413 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159918469 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.255902387 seconds)
done (took 2.073944785 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341875494 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119698274 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086684453 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076777275 seconds)
  done (took 1.375778103 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076186838 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081516254 seconds)
  done (took 0.915693437 seconds)
done (took 3.049120957 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07589612 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074405352 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091201476 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074531878 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.090046308 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.072077048 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.125990493 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07148794 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092930076 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074393959 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074571799 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093304448 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073747954 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090812045 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071658297 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092306503 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074731559 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072170418 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089837085 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072533819 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090992973 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076486649 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091089376 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.074108801 seconds)
  done (took 2.770854306 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102112508 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095774667 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082667595 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100857611 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080612508 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099850186 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083617476 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095050583 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099866838 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.080116407 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098781656 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08158854 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097227224 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080839189 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09743848 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081020692 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100279724 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077461629 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097147967 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081203931 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099847158 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076833547 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098340882 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082709032 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097981206 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097944076 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.079116564 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.077545185 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100379979 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09841228 seconds)
  done (took 3.481501332 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08395488 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071735477 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091563786 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083446038 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090738545 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076484464 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091236847 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076928693 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095541211 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.072360581 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077893101 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091156499 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075419857 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097117722 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077646621 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098410233 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09063853 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093801288 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076218835 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09546499 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.078706329 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.075019451 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093457886 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.072487637 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090872818 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072364939 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091371943 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072538416 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073297788 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090811454 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077530958 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097462534 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072223505 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104058129 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078659123 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090262504 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080681809 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.072492147 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095907242 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072165576 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090762762 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072287246 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.094602949 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083792058 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093682515 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074786307 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07624204 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095552798 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076843664 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096834332 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072003744 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094091395 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078128011 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094993085 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078286548 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072383031 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091696345 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072916724 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095546268 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072803324 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.090050878 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072373123 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.078166458 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090982542 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095434164 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101348835 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.074972895 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095872135 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.076094642 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099090277 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.077995156 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110419644 seconds)
  done (took 6.860845382 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077182563 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100711393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075358143 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074371835 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089519178 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073076076 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098381897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073233611 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092355376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090969037 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090899408 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074296583 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092162517 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076883143 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090915417 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074160924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101255446 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071269357 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091177607 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076403341 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091428016 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079618516 seconds)
  done (took 2.621917495 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216577047 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103267839 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139202403 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093300759 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111190461 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109801824 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081937865 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100989964 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080279391 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100741447 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101268393 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08069433 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108918773 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100580033 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082427928 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101950855 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080252515 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103110884 seconds)
  done (took 2.657710808 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089094701 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093584796 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099069696 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093878039 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075587318 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097621295 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082109563 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109008932 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078424544 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093928185 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.106905785 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079072018 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078006196 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094571524 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078725751 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094626686 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.077972052 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093136132 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085425188 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082179045 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100732421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086649078 seconds)
  done (took 2.75102656 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092553107 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095169934 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098597241 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097816151 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074742423 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094923624 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083886242 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09399393 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085005825 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095860393 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076808508 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094526017 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083166004 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093963545 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.08234376 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094493848 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07811238 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094022027 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078775147 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092563004 seconds)
  done (took 2.546335602 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117386642 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109437401 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091585583 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120765441 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109617105 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090142803 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120946159 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090622125 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110061758 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122123637 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090646499 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109824386 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102008931 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114823587 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108876158 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103300085 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121179549 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122675421 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092070348 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110361787 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12381296 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093006867 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120309876 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091719155 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109841341 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091078342 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107777259 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097789705 seconds)
  done (took 3.766642263 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077024103 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075677791 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091951702 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073804642 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092258171 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073853298 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073216317 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092843252 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075824618 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092288261 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07543696 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093953185 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075859025 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075804673 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094707586 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.075751097 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093535086 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073259513 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073368044 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092361838 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.075899407 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094091293 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075320777 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091328328 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073367493 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.075540532 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091748052 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07324933 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094325593 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072766337 seconds)
  done (took 3.236116699 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083459462 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100065562 seconds)
  done (took 0.95066993 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074606852 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110089207 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072960541 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079806517 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099944076 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076147768 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103442466 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09935441 seconds)
  done (took 1.488351937 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100220499 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113605082 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081714838 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106701802 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094200491 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112037494 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161870397 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082899852 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102072149 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077973669 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113256777 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.077143158 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104856803 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081819166 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10350726 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091796792 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095632359 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086788132 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102946922 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079226293 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101179982 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093075681 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104732463 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084807817 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097408643 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088559817 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109089466 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107047466 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082442883 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106419092 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083970831 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088965119 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08172171 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100486189 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077590375 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112204938 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093705719 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099996813 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085383413 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101197807 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085854312 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09316761 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087051431 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102706994 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089937623 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100297891 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083520313 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093670931 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.077358373 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.098890047 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075547764 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097464755 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072709061 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103972459 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086163542 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112925756 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079635981 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099206465 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08160664 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099008634 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084378415 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098431918 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08758913 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099003523 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086723096 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104563594 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085279646 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093691693 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070878385 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095667116 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.086399734 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119494448 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088300589 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100915857 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083372146 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095939388 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082089489 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101553324 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084680672 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107184765 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098822459 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083982758 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107052337 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080346059 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098585205 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.083887802 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078914191 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097989068 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077971477 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11461809 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097988749 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077458722 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077621745 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106238415 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081789958 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099512806 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077716985 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104237674 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07178484 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101225438 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083848699 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102106179 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089699606 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100342038 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082865339 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105099186 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105863393 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081588819 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081169044 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091946126 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08308709 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09785556 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085322093 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089588873 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082560926 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100093466 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083092398 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105982542 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080125868 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101426892 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0888235 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105834627 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079709613 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091910531 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.081631805 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099900761 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087260336 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107130227 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08047602 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094388443 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075750001 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104644692 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081454793 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101663497 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082569225 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101552222 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072409032 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097218844 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082883522 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107210465 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081274824 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102254426 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087473788 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102091954 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08110272 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105757036 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081059247 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096633231 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086936382 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099787689 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076360176 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106665041 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081663747 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099111752 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083378953 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1060267 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082263869 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101748207 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0800488 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100438511 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083479485 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.095534011 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082404367 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098837108 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089585363 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.099799812 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075953674 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092764496 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.084818086 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097447719 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082104163 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096179788 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082788533 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102299881 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079784426 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080697344 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100555498 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111627001 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099729707 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102184622 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085491558 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.106799169 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081927325 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10232833 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08149376 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102416148 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083240793 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105293994 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084530595 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10216476 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08144057 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091914327 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084463453 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106113299 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078832008 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078472037 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097225022 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082676928 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108057067 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082850628 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101132463 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079597891 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10174835 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087719329 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100029656 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081540953 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.095458604 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.082177647 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104842404 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.083367078 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10225721 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.089598268 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101880229 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076013707 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105830138 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080016289 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104427218 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075674101 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097222866 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078658484 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104972028 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081486653 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.098478181 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.071828937 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106003876 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088196403 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100885015 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078376514 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10048766 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091477484 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098471234 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085391838 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.100982457 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085031363 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114708861 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078287252 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100823636 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090692845 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101341654 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072368161 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10462595 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079988655 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095883653 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080757529 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097889363 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083658493 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102713022 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083879586 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090640054 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082495005 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079909235 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097035249 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077035914 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10650836 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083467864 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100244872 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109627904 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084692645 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101945373 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083489441 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100708129 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083456658 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102253152 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083493813 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.1024943 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080979181 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078091916 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101455028 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078438079 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097915173 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08182179 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101085575 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083815738 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103587277 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082232198 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106595975 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082828578 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10234553 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11905967 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080746526 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097661748 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0838863 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103538675 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08321786 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100643859 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077506272 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106305794 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082410698 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107348681 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082109208 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093449691 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.083643399 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100625761 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084147843 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102242242 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085173383 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.079953279 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100636931 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082695 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110862454 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097104453 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090094065 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102811779 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085002009 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.101141135 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083166441 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099274804 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07955135 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101585592 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084606935 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101622051 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081674101 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103557119 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083292415 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099647799 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081687222 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102548259 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084440152 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103013028 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073281926 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079628261 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.097710578 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083464009 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104872906 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084774483 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099867624 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08095021 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104147661 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08263996 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093955851 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.086905592 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103837146 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084383867 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111371696 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078811159 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102490106 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092013742 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091167388 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081321188 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098516694 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079394112 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108397503 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084834321 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.107598496 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083542484 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.097438988 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076746849 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103280558 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081335583 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072579273 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098328877 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085178765 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10043633 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082178952 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102671051 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085904694 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103435682 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087459037 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10084993 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083289705 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102056108 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075795883 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098213693 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078857832 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.101266963 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084811485 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097776204 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076811253 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10186486 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082892766 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102283706 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08288766 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082116518 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108018359 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082923585 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103087344 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107450474 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074161547 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082749908 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102379557 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082924941 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09831989 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085439794 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103905027 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085055904 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106584245 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083630005 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104692082 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08368392 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098931219 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082479367 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102330795 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084312319 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.09809494 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085588293 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108808624 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079689896 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102236231 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083121528 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098962942 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084448933 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103608254 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083534721 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105794835 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084199482 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102381535 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087601954 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102081445 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085483969 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103642296 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081665887 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106881233 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079231895 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110289283 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084555974 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103708978 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082488481 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098715097 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082926491 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101330798 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082893345 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107405946 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085090104 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097631691 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079092164 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080420182 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102779324 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107027128 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089694276 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102756257 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084606841 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096013341 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.076060517 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08471179 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098760995 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.082467686 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105079072 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087091322 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103602833 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081169055 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100567745 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.088714815 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106423952 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.085625032 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099882592 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.085623418 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104529469 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082743538 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10176761 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082206492 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104155447 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086066128 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101340102 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.079240946 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111141304 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107642804 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086501973 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.100152677 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085389846 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101930543 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077853055 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085368175 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104112873 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086501788 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102930753 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083797798 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113133769 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0970254 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082392904 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108090152 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083256843 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106925097 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078647023 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102558981 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085720164 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104079777 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077826513 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.07912319 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099139098 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083703014 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.098467467 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078488123 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113213573 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088996221 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104016331 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082623445 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100610676 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077933123 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097087548 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079899395 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105261558 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083845152 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11146923 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080249487 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098629478 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078589593 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10257778 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085449966 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104490542 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077002278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097093896 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080341865 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083553838 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110276476 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101573856 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084719502 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084592213 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103327479 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079847352 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108070452 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07603671 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104070475 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113564743 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086147737 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104753268 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086972741 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109649431 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085267254 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09687769 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085927184 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103489192 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085084301 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104405665 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086944241 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117856985 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085549145 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099184452 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084716115 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103010983 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079673159 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10985997 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086037762 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104921546 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085619306 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101543884 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086420226 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110056626 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086788541 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103369941 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084348385 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101944407 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082839817 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100599997 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082066211 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105100628 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086411795 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102275227 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086716241 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098522373 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094276472 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110128655 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086344359 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09528653 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080367787 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098821492 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078818728 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104337482 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078679505 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081866088 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100455306 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082250253 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10638788 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086438309 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102845326 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085698397 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101969424 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073932952 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106240149 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08464976 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106972951 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.076409053 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103332386 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08636303 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108042805 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089525723 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101553907 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08515126 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102888417 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086673671 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098096377 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087294981 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101704481 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083412124 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.099163822 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084832875 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104470331 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086491757 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104968529 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087151199 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103447641 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088421243 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106472065 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077752783 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076720483 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108305995 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082024803 seconds)
  done (took 56.035930179 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144162852 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085419833 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074862649 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095358518 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121448788 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080030446 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094984906 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080562902 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098489067 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088916051 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095186976 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075080321 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115074134 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121847044 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119317475 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089656204 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094650615 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079602543 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094380277 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080731537 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115001919 seconds)
  done (took 2.8635056 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100517546 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113122494 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111292929 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097824341 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106153376 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112873093 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.092635928 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113726032 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116680408 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087920457 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116692719 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112567044 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088033626 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108025546 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107373746 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091176863 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117041003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106068964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094115188 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111943822 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110327562 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091976358 seconds)
  done (took 3.122083074 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088423788 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082952499 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107987203 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.077882058 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103003622 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.078283412 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109343767 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.080612748 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108958503 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.085010897 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100901955 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.084091785 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108661526 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.077947802 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100737398 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.080546248 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108742505 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083984391 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085261369 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098338063 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122786483 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.078725143 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098412686 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.081907271 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111665785 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085804182 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.103360895 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08411585 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080303979 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103439575 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.080074118 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105485297 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087112534 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101718295 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.081632218 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103430135 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084040326 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097720072 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.081519609 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106569533 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.079275175 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104121973 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090948195 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100118191 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.080892586 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084727427 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104740896 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.078549704 seconds)
  done (took 5.275086364 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114636662 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151788506 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.082958166 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142996606 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117928271 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092682658 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104754913 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142230093 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078364797 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103580937 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120706725 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.096885785 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104891494 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090081613 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107831264 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103042124 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085876426 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099374504 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089552809 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102552169 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089202083 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107474309 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117571261 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.09549981 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109049681 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10208585 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.080931037 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109452274 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.094943605 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110560622 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109071864 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091022416 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118756619 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.082165672 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102676062 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105679767 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100303717 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103961967 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086910674 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097954521 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086400961 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109619122 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10764722 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101180865 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104714738 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084515486 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104919904 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.077477742 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115875881 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106749502 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093864951 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118408156 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108748981 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085073473 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109622991 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118628506 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084448277 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101868156 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088508609 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114774016 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.077440988 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109851283 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116273911 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08664577 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113269116 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116411794 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.086211048 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107772623 seconds)
  done (took 7.949718797 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112085615 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110521352 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100584029 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121002529 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109076292 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089059638 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109183394 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.109657231 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089937288 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116624112 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089065945 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.156664129 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.107558728 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095616172 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111412571 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109799503 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090175865 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10876668 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090071583 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109933111 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089441329 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121152022 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10932418 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121259392 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102409539 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106746766 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089724024 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110659939 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120228741 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089830997 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122020642 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.110286904 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089499154 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120638215 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121864199 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089313023 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104850337 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089426761 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110666581 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109763947 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08746256 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120570983 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089251305 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.1081943 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109247683 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090531641 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120509869 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122505761 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095590552 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11786284 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110074014 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101172407 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110190142 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109750701 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10063395 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129715022 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121109149 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119949668 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090684019 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121894941 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121421854 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129887112 seconds)
  done (took 7.519343222 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081984796 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080522325 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100242935 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079094995 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101204794 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079740823 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080431573 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101895857 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0808789 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100960059 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081683018 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098654186 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0794692 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080936861 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09937627 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079738258 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10222146 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079358286 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08057028 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099637075 seconds)
  done (took 2.597858736 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090821161 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121720249 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082230965 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10901163 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084063582 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109344631 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.083806155 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104271993 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081957057 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104716962 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094534818 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114907518 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102321338 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088991669 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11380069 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108749569 seconds)
  done (took 2.428388591 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101896039 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122080623 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126581561 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087148494 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.099647935 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.09087169 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104784947 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.078108221 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076743132 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111058791 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087682806 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107423994 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084356939 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101427505 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.082499035 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107600927 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077695908 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.105361694 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084591761 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126524658 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106007384 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085558373 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105623302 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084322826 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104871402 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.087497623 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.1084635 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079726188 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099841354 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085565257 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104523896 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090119199 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098393882 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.086293402 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100429049 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08023146 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104032152 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08604787 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.1074023 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.084671493 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099865703 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.084644295 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104106467 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.087873916 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077932498 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106865019 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077556125 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109551696 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.083374297 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105435257 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084297303 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110371497 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087961456 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114681361 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112221556 seconds)
  done (took 6.133479659 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096873437 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106015269 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086876394 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099799521 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08574555 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109621123 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086480992 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105278077 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085360123 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099217831 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084809907 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106473055 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084754743 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105926424 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08437266 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10654227 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077608162 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.083309013 seconds)
  done (took 2.531435301 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088050461 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081323412 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110562557 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080978278 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103056797 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083879791 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098608477 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079996651 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100338726 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082362301 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101891893 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084052959 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100319563 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.084590218 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08221419 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102929047 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083032567 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100354578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082266563 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098724173 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08440635 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100557175 seconds)
  done (took 2.858422944 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.09955507 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.133393905 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.096702414 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.14326968 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.107365819 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086039108 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.11624081 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.0867077 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.124830486 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.085741873 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.105590549 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.085851415 seconds)
  done (took 2.11301638 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107377178 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140664367 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083166585 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106169557 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09596463 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10896778 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107154841 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087627086 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120210539 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120422801 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087946819 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121648125 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121268593 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119579429 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096046777 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116106077 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087002201 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108353363 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083251639 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129546626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108822311 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12034957 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088174623 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107106318 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086942121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119053778 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121218295 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120614421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088099937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121674271 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115281245 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087702642 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120723398 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120459317 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085589911 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121391916 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087078164 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130493069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116763642 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119336556 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084597174 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117429817 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121168292 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094657876 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120867787 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107926892 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094736226 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108381118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086437286 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135532211 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117505106 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119171473 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116063521 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100769278 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121638493 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135595007 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119393574 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119265627 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096226894 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121286297 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11953884 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096164698 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120787148 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121031061 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116507639 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098670032 seconds)
  done (took 8.09131495 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121380251 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105274441 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087156669 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122949666 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120029252 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107817256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088361135 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107710357 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088679455 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104958673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153614448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08831543 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119438789 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119533291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087245381 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10942817 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087116371 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119625931 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105608179 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136413443 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088750157 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119813159 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120532196 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119425241 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100679249 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116579661 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108305214 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088143938 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108155761 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087366085 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114857259 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108340372 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0994739 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104367396 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119456889 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08855772 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108727831 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09565322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108984022 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116550302 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099279134 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130949431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107633366 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087808008 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121412513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108936597 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087969524 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105966584 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087887561 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105423788 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12186947 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100386445 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12172743 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121240814 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107777037 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088073554 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109535853 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088544727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108380352 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095801865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120305189 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108039399 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137131801 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087699806 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109378943 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119999016 seconds)
  done (took 7.943230913 seconds)
done (took 151.352410616 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.101046768 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139173061 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09739967 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168140885 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082964047 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.138630124 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116489861 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118787836 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083231421 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104127271 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083772026 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107090335 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.14927448 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082463259 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105614698 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085314675 seconds)
  done (took 2.608980796 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.178963537 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.28199837 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103025837 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110137293 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089191372 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107922889 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088279114 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110923944 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.084780169 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.116992494 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085999179 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107279039 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.095269462 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107751784 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.083246229 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106844366 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.115829743 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08565289 seconds)
  done (took 2.914997916 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114622555 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149614091 seconds)
  done (took 1.119836066 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119554649 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179580235 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299423016 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135726238 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.134126044 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125943614 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159088315 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.344878875 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18893174 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.1276844 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128944572 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110658014 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112991538 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116200358 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092872865 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.110932165 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13524344 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092918344 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112070822 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.091549598 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133911652 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090714134 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115963931 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091198063 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178772947 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125694615 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112179221 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090377337 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113274548 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09021128 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116748665 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124488055 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123905502 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.164099712 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094023502 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.182481174 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096249481 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110407471 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.090057877 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.110598787 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114550434 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.093594543 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125350382 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.089319318 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.111126444 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095809321 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112482785 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110899305 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096960517 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11931841 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117343639 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.094895476 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158316074 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120317881 seconds)
  done (took 7.685167729 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782314832 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151488068 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087205648 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.902528477 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143045612 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10292257 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.779530872 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132276048 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241932821 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.77580867 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127599693 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124088608 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207724884 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.276526652 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.148244483 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315018466 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.681348347 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101305375 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140790203 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153656442 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09505238 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139033243 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130808499 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453486161 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.088227863 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111511748 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115250425 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101535779 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162558127 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.112234609 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090835619 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206246635 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268383423 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205817244 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089247635 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109116692 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087869165 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17036022 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269287072 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222558178 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178965907 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08494673 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109182132 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100850969 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131464925 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105807206 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167273207 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176224856 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17535944 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115239012 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124079347 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097715508 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123047193 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164098821 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106952864 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3160253 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.344056942 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110710719 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096462 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130248639 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267153773 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08862511 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230535983 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137627054 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19297642 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110532321 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786583481 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170796784 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087255698 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122350055 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117770986 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094291665 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123020061 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173295767 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.428791364 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124895011 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094320535 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108780155 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213878229 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087677812 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110895402 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167761837 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112059919 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097119099 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128458371 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123315328 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175265838 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254068292 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126415128 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119439853 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095326289 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123680422 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.089669078 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216303388 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22146239 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161126209 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.239015929 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101535193 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.192040906 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170051008 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122915067 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176045558 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117680721 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108113527 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124354162 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21968365 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145945864 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089826851 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116327635 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095691029 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149171643 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113523381 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09665141 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171014561 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.505767625 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168156545 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107256865 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093818974 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119794108 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165919951 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095171512 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265989533 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121233581 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172366269 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116864863 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086550944 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119936797 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168493448 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125785122 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097742084 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124386428 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118041053 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.25463366 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222650645 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104749865 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245179226 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18219911 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098973296 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198603498 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096920555 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194185098 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099546949 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12308335 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08933828 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781627278 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124677363 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09724756 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117470791 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19523363 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088710235 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112421608 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088805047 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107855884 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785516214 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114313722 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.086273335 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.111847214 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098963245 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120033678 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094349926 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117554746 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163587343 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239588879 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124943905 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095614838 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.111991047 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164747154 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.112465778 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089154711 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110332414 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090469471 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120530126 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093647297 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112713337 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178207173 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161343824 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227080999 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.552195965 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112354089 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087997332 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234566436 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1108635 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285287156 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120590836 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230975211 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171086614 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108554734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317814535 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.195666942 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196107233 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09214173 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174502298 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107825942 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.094651665 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.188496438 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088919771 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118387559 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162772147 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128171291 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103802619 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.161865829 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111494212 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234620914 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08520805 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.195300067 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091498255 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123127195 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312141955 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089515449 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132113992 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165007309 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115309947 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090006762 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.026608685 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.112932312 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121024706 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099779238 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226486488 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.169732631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119848914 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118592349 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103567984 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187894949 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213845221 seconds)
  done (took 44.579184921 seconds)
done (took 59.756674111 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303926161 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26410835 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.294432853 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.195861737 seconds)
  done (took 2.00987371 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176379204 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151853029 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123047145 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107978196 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153401469 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086135127 seconds)
  done (took 1.679400204 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.473950671 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.37193018 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346830732 seconds)
  done (took 2.0750572 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253299217 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.279096848 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.318761545 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424991241 seconds)
  done (took 2.261250873 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.204755084 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126018441 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.098585534 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.138140777 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.169579073 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.175342433 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143023342 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.154288479 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.106401896 seconds)
  done (took 2.239521373 seconds)
done (took 11.146950287 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.216432182 seconds)
    (2/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.256956304 seconds)
    (3/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.229905218 seconds)
    (4/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.164153771 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.238711805 seconds)
    (6/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.129546024 seconds)
    (7/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.185467988 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.15819668 seconds)
    (9/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094174869 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.11513316 seconds)
    (11/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.274907144 seconds)
    (12/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.200515209 seconds)
    (13/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.107612392 seconds)
    (14/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.162937507 seconds)
    (15/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.258208781 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126007813 seconds)
    (17/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.211352161 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094089711 seconds)
    (19/286) benchmarking ("sort", Float64, true)...
    done (took 0.224427223 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11712708 seconds)
    (21/286) benchmarking ("sort", Int8, false)...
    done (took 0.205432045 seconds)
    (22/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.124509564 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103217924 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.124323618 seconds)
    (25/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097734161 seconds)
    (26/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.265093199 seconds)
    (27/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144273598 seconds)
    (28/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11117545 seconds)
    (29/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094217052 seconds)
    (30/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118172394 seconds)
    (31/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.192353499 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.218157985 seconds)
    (33/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091815124 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121717345 seconds)
    (35/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.231001485 seconds)
    (36/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.102467537 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115110658 seconds)
    (38/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091726932 seconds)
    (39/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12874854 seconds)
    (40/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.207510493 seconds)
    (41/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110720862 seconds)
    (42/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.154846231 seconds)
    (43/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13252889 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11933215 seconds)
    (45/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105394755 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086499466 seconds)
    (47/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113684428 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094776169 seconds)
    (49/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.20816241 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.139287678 seconds)
    (51/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.216928837 seconds)
    (52/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.126104029 seconds)
    (53/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138600212 seconds)
    (54/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.261483458 seconds)
    (55/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.199656674 seconds)
    (56/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129479673 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.0919117 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112389032 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.135150157 seconds)
    (60/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.182300326 seconds)
    (61/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.15188102 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140371739 seconds)
    (63/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.136064817 seconds)
    (64/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.123540252 seconds)
    (65/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.229844837 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081426013 seconds)
    (67/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.107849691 seconds)
    (68/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099620318 seconds)
    (69/286) benchmarking ("sort", Float32, true)...
    done (took 0.224596809 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.142052872 seconds)
    (71/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.150996939 seconds)
    (72/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095547845 seconds)
    (73/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.123318627 seconds)
    (74/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.132046724 seconds)
    (75/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.181575614 seconds)
    (76/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.197049524 seconds)
    (77/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.168132508 seconds)
    (78/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118346009 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.109810697 seconds)
    (80/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096848909 seconds)
    (81/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116164247 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.092214767 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.195230955 seconds)
    (84/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.190063929 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.124025716 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112914991 seconds)
    (87/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.193340667 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086955307 seconds)
    (89/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194313928 seconds)
    (90/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.114485864 seconds)
    (91/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202776416 seconds)
    (92/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.157516185 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118532813 seconds)
    (94/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164940905 seconds)
    (95/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.134348879 seconds)
    (96/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.214739213 seconds)
    (97/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116883798 seconds)
    (98/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0755682 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.076712263 seconds)
    (100/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.09918709 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091990948 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.098238967 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.168185385 seconds)
    (104/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.134426794 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180753898 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077077755 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124096213 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075684343 seconds)
    (109/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.181481495 seconds)
    (110/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.099006781 seconds)
    (111/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.076279583 seconds)
    (112/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.124691182 seconds)
    (113/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08782263 seconds)
    (114/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.198787145 seconds)
    (115/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.193377904 seconds)
    (116/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095119585 seconds)
    (117/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.108882799 seconds)
    (118/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076148273 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.183445322 seconds)
    (120/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134604951 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092205908 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122313138 seconds)
    (123/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098626824 seconds)
    (124/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.1105695 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.139702159 seconds)
    (126/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092151789 seconds)
    (127/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.191318843 seconds)
    (128/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.171096055 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092906203 seconds)
    (130/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.150413934 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.139681228 seconds)
    (132/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.173255697 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124945712 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186008846 seconds)
    (135/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160275474 seconds)
    (136/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097088992 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.122636622 seconds)
    (138/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.205580651 seconds)
    (139/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.082975538 seconds)
    (140/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.197161357 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114138515 seconds)
    (142/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.104823901 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087212539 seconds)
    (144/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113513877 seconds)
    (145/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.074756244 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110070991 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094626271 seconds)
    (148/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.097257587 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09555524 seconds)
    (150/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.182025418 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093639361 seconds)
    (152/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.118436441 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125946326 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07934183 seconds)
    (155/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076679138 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.174640059 seconds)
    (157/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.103166748 seconds)
    (158/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09160021 seconds)
    (159/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137492261 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079582642 seconds)
    (161/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.101429207 seconds)
    (162/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086848973 seconds)
    (163/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.10271145 seconds)
    (164/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.075084482 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124310942 seconds)
    (166/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101977284 seconds)
    (167/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.112564543 seconds)
    (168/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083939667 seconds)
    (169/286) benchmarking ("sort", Int8, true)...
    done (took 0.217150624 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.139240444 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112637089 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119551458 seconds)
    (173/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.183760197 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.0947384 seconds)
    (175/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.100964573 seconds)
    (176/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101341021 seconds)
    (177/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.0989163 seconds)
    (178/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.091735842 seconds)
    (179/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.141182613 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101095021 seconds)
    (181/286) benchmarking ("sort", BigInt, false)...
    done (took 0.228212463 seconds)
    (182/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126253344 seconds)
    (183/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.116097477 seconds)
    (184/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086196498 seconds)
    (185/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.158683147 seconds)
    (186/286) benchmarking ("sort", Float64, false)...
    done (took 0.148679928 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.217729625 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.115777876 seconds)
    (189/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.077491019 seconds)
    (190/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116267653 seconds)
    (191/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187649241 seconds)
    (192/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.103337153 seconds)
    (193/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.113225442 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090906504 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118305533 seconds)
    (196/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102692322 seconds)
    (197/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.097993393 seconds)
    (198/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091223736 seconds)
    (199/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07850357 seconds)
    (200/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.097950181 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093583975 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126069665 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123604237 seconds)
    (204/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096454185 seconds)
    (205/286) benchmarking ("sort", BigInt, true)...
    done (took 0.246382632 seconds)
    (206/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.099603358 seconds)
    (207/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085726847 seconds)
    (208/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.122282878 seconds)
    (209/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.150444865 seconds)
    (210/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.099740157 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10143895 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113595073 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129832262 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093531119 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.112832539 seconds)
    (216/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159509445 seconds)
    (217/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115769579 seconds)
    (218/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076599827 seconds)
    (219/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.127091623 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.09396506 seconds)
    (221/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.11684339 seconds)
    (222/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09439486 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118511345 seconds)
    (224/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.083671249 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117578876 seconds)
    (226/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09726472 seconds)
    (227/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.103439209 seconds)
    (228/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.098384238 seconds)
    (229/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.100164273 seconds)
    (230/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076644781 seconds)
    (231/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.101232552 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093248102 seconds)
    (233/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137848764 seconds)
    (234/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.077357668 seconds)
    (235/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.099769936 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094032601 seconds)
    (237/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116448066 seconds)
    (238/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.075322537 seconds)
    (239/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116451141 seconds)
    (240/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.100918381 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110941676 seconds)
    (242/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095907204 seconds)
    (243/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.116631363 seconds)
    (244/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.103300076 seconds)
    (245/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.115432383 seconds)
    (246/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.0770068 seconds)
    (247/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11413116 seconds)
    (248/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075921249 seconds)
    (249/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.076010565 seconds)
    (250/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.246636595 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119334624 seconds)
    (252/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092345301 seconds)
    (253/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.101022533 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.10123211 seconds)
    (255/286) benchmarking ("sort", Float32, false)...
    done (took 0.17582828 seconds)
    (256/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.100755893 seconds)
    (257/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091914758 seconds)
    (258/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076097802 seconds)
    (259/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.102222226 seconds)
    (260/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.076387682 seconds)
    (261/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119107065 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095839393 seconds)
    (263/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100572833 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088112978 seconds)
    (265/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.117321686 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088963077 seconds)
    (267/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117493257 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.101624033 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.11805743 seconds)
    (270/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076752271 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.116751683 seconds)
    (272/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087876565 seconds)
    (273/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103229845 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091841938 seconds)
    (275/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119018233 seconds)
    (276/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101845716 seconds)
    (277/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115871077 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.089790124 seconds)
    (279/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.106684943 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093603836 seconds)
    (281/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.104860038 seconds)
    (282/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102456326 seconds)
    (283/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.115069453 seconds)
    (284/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.079449936 seconds)
    (285/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.105982871 seconds)
    (286/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078918445 seconds)
  done (took 37.572889749 seconds)
done (took 38.463449106 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099688728 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150944424 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098621857 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139520904 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.099771677 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128593147 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121002909 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099454281 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123709013 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.101719971 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.125001911 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.082270848 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.121762318 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098157801 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122722619 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14070029 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101832567 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120618403 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.090147078 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113780725 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090213419 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114899459 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.092486429 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.105843888 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.098574955 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120617888 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094036009 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121938433 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.091431123 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112715878 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090047276 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.094234885 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.113200095 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123880821 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093437819 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090568583 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.123189449 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096668284 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.117898343 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091600636 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119468087 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091570035 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118952963 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095555198 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114653055 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.089773782 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114087804 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124664408 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118086342 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11541147 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095659471 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121968642 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099252947 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120019319 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089988044 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.114157213 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091998263 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142004691 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09098391 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11591464 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.113692475 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.118890208 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.090762313 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.114047237 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.092074382 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121817459 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096375723 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113836319 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098349595 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117724512 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086566756 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114613132 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089305466 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089462037 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.121452253 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098126404 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109198019 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09213955 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118550939 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09305079 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114497777 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089149336 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117684431 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.091935095 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113245269 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083520923 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113117498 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093268931 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114908773 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.091569431 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117240213 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094124048 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117127022 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097460828 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115015044 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092340786 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.115744425 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092169808 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117253273 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089804973 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110410418 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089154413 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119185005 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089889076 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.091947392 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124683378 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089057831 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118783549 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090928125 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.114775418 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126939537 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097795787 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.115519486 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092397479 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087816985 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120349692 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089027775 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112920417 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.089189249 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.116435906 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091993208 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.116278473 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089302992 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118849429 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100145027 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.1124129 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.08986454 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114787719 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.091690187 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.117845306 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09227009 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.114054507 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091674995 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.110410322 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090031562 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113041854 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0959213 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113432267 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09113036 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116508598 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091248012 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116496237 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092909334 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116325765 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089415938 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.108298904 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092452044 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089670239 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117308211 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091901298 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116626747 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087473439 seconds)
done (took 17.014086632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.099075839 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183466449 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146946206 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.149304237 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.123225503 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.132418959 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125125817 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.145221916 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.098867992 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142440119 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145549169 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112865811 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151510708 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122610984 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.107439281 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.122055799 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.096625589 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.130570155 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154578517 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116523498 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146620617 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12318236 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144171558 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117376835 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121454534 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.140949452 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.10079245 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.122136237 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103134715 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138479671 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.112594176 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.124841089 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.123431565 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.109808831 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129302253 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.096389132 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.133348539 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094124845 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.122078002 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.121675184 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.110366614 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132939219 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095015784 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.130352496 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122915281 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1013828 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121456778 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.096475973 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12238313 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093608948 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126993197 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.143066133 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.097039714 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124345486 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.122818729 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098219563 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123872738 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.101426455 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.123859227 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.101140483 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.122361471 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.125392765 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.103418588 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140070076 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.122323732 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.099692325 seconds)
  done (took 8.979701653 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111770368 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.148973508 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129052294 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10596151 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125647406 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087150509 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111493943 seconds)
  done (took 1.772417621 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088858601 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141980412 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119995703 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144523654 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137684371 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.123992891 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131152661 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089247503 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136970903 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.098211941 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.142482308 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166218371 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089419172 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124994212 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146790918 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089177373 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147308209 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088964008 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121471491 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120226824 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118224011 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135026159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.101891068 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114601946 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109973952 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115619788 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.178760196 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101177585 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113715335 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096276811 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11849386 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.183128858 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110711699 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124608875 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087362595 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141277778 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136493868 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094458304 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.140679486 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093506219 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.137322835 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095776914 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121790616 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0948881 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121860839 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103707517 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125627546 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.122539307 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095227673 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141837001 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.100510873 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135682702 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091352508 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118491344 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099189625 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120716633 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10372261 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119181186 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117279655 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121484768 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139491901 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11435741 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134992958 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138998669 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106355984 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136236492 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.110086732 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120619612 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096569738 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121333045 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.114118669 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119546683 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.124328003 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103955174 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123714404 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115593193 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14059316 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093829254 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12708727 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.09350573 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117417588 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09085315 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.130672286 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093364309 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117561813 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106083624 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126610832 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.094906096 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.119233253 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.135530333 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093799612 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.127295405 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.101235793 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119206629 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128426157 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.117216629 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12477995 seconds)
  done (took 12.424642415 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094315773 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.091906061 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121000529 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.093216341 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.117456406 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092330046 seconds)
  done (took 1.574238272 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122064583 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119491375 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.106666702 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122426016 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157886681 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.113746227 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13858322 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099956648 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135036359 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130311577 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.113863427 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.141225528 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.120755978 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122476676 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.138924584 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097845551 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.139762972 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095062771 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130315528 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095177677 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13192854 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098220696 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119578295 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112559588 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.124216216 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098990594 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122922373 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130241063 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105419931 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125152177 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098189551 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.1237865 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09806414 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125100174 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.139545332 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097458398 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118812809 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.100364164 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123099241 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.098314119 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139674308 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095391595 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129275309 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101059883 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125145584 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123711765 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100181278 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12287421 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.114780113 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.125578023 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100546361 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.124119954 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098855518 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.126736198 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098164947 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125427713 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.099929441 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139837254 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123532727 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098036504 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12061567 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098957319 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126224115 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098639118 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122807521 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.101320037 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12376058 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095282257 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120346055 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098417464 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125810089 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09488245 seconds)
  done (took 9.339731818 seconds)
done (took 35.038475569 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.676671894 seconds)
  done (took 1.635459973 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.827469081 seconds)
  done (took 1.78983009 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.29549642 seconds)
  done (took 18.283701587 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500579111 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589016584 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.980583873 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163782639 seconds)
  done (took 3.193440995 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.936976268 seconds)
  done (took 1.91676319 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297823811 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259204786 seconds)
  done (took 1.523931752 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.790277758 seconds)
  done (took 1.765335784 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.537822126 seconds)
  done (took 2.50827513 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.354344135 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.20022383 seconds)
  done (took 1.536740889 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.565728766 seconds)
  done (took 1.537414279 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.343088636 seconds)
  done (took 16.32226732 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242923141 seconds)
  done (took 1.230070073 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299668759 seconds)
  done (took 1.277078057 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.558680593 seconds)
  done (took 4.534498176 seconds)
done (took 60.021402279 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0998872 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128174007 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10449688 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.10139897 seconds)
  done (took 1.407689038 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105814621 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124213269 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103335544 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123137154 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106560388 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.124173621 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.09690869 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.130865357 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098858156 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.125344738 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.09931157 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12485951 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125735187 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097598508 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121185509 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100155938 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127116362 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.099715943 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.1246008 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.099694749 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123056014 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099981684 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126644811 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098897241 seconds)
  done (took 3.691565816 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101044348 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.094939199 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.122351381 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.094817569 seconds)
  done (took 1.397771948 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10459355 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136640687 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11103043 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128923703 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.111591436 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136540636 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12001231 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094612612 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097321168 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130693779 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094819207 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139333042 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136387568 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.090210688 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131642122 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091890542 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116373919 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110848986 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.129569164 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106088565 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119667427 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103619063 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.127706011 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108932039 seconds)
  done (took 3.76552041 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177382807 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.133748806 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144064604 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.101459055 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.171315726 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.145889245 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.093582047 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.145823126 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.094732714 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.142313169 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12367933 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.147759237 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.136178745 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12293613 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096126989 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.127047872 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.110764673 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.140401378 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.122602171 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106833918 seconds)
  done (took 3.574209151 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103458101 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119212917 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09044058 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.093576306 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.126095842 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096969644 seconds)
  done (took 1.624097018 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092533024 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.089007702 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114896954 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.089199663 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11893724 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090160383 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088080655 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114914365 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089303311 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114948136 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089524166 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11347286 seconds)
  done (took 2.198107106 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.416581921 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093774347 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12724259 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093441184 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.133817243 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117249319 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.107316881 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118424815 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.168801645 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.099571946 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133017541 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.165857325 seconds)
  done (took 2.763772439 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212455301 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098905387 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264336362 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.422706476 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157825008 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167767093 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.326490805 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16627583 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.186410741 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139961162 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197332398 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159956477 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155766475 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181688364 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142390794 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.17838532 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177405038 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202745103 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150686648 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207935591 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166861978 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169981029 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182362581 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155229656 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113104255 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159886338 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121455876 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10477781 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174495539 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172647989 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204386747 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150515327 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116598277 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229689144 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216534997 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180759621 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.381338589 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134664246 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191197686 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.185409081 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227385643 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141831174 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196005634 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156906524 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133047663 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183689216 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160211095 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.182701846 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133177593 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117039229 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20978487 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179293046 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.182945255 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112739616 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370889589 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150198171 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150217671 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190256744 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190365755 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19304907 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170092721 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124086131 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222213536 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18210228 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181144449 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146452053 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.168618653 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127223602 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180233275 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196809296 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178914964 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171095922 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21397668 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109542242 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166636215 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171010773 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156865954 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180554332 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165487341 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122371205 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127131427 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140402798 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130340006 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.160592571 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125751957 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205689804 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138635352 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.26988207 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217364645 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161116126 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164389683 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16823261 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169427304 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150549658 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094058367 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150758296 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.164097943 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162342063 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106446658 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159321842 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149639847 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130866516 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156640169 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099449723 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16235408 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136117921 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169538147 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165795132 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105117325 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166569169 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153561316 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.160185924 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174622155 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188755734 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107888427 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136276968 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195884558 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162654653 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139509738 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176580523 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188249509 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.166753923 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113845986 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171533053 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224928524 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117845314 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189720246 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145191581 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137082183 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.153851235 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164307817 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158884517 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.130454732 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132818073 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155111081 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196186907 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128796507 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112911594 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17823569 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129262259 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104144192 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147404753 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139945948 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.117916817 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153050668 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.142591741 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159441949 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164047101 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154662772 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134310439 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145724433 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221645715 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108152372 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.163267945 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150481994 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094292068 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.181592598 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213929704 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104084132 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188657041 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17181213 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265133575 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166396632 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133776083 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182124968 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105427468 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122741161 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170004861 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164321002 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164114584 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1850281 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236493705 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.167604891 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155315164 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152917253 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170294018 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.177125879 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159275299 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.148257494 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166352357 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171876206 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097239189 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.126944468 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.102219371 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143734485 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134485775 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107511363 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211453647 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16838758 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229265456 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161985638 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143623974 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18505267 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100671811 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196442524 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174216706 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114280063 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18586763 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185879577 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170740235 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145591664 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175184288 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123536926 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100771317 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136066051 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169565224 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106874393 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136823905 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146918919 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184812283 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179776697 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153884603 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265772787 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173987324 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194513339 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097392838 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166805118 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174085964 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162503051 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.164748517 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134149288 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162675075 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18003013 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147405118 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194772267 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167280998 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171613314 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201343699 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.159688121 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133413024 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151535997 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170570548 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115276831 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164796217 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149323489 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136968288 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130109168 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138716194 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128738429 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185692045 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147321422 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182799195 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.159339446 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176085406 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101888756 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146114824 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164150478 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150110518 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093117791 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172853002 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217485084 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11832706 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162354547 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177951071 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133088886 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.352030669 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219122952 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188885524 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139948941 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118850002 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165972957 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161990476 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168188552 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184998593 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146165889 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183573743 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162662149 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.117944432 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138249944 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149930261 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124544286 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.154582183 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137451399 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.156933143 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146302835 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18913059 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147121579 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134176075 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168682957 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150800353 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.158013225 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115377163 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232177006 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134165391 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208867477 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13101407 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.168475076 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191336717 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129018593 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103193775 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13105007 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184695449 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135646568 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134572007 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.252221725 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269984165 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162063879 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17336004 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113484834 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126955354 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163471718 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152644549 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238108655 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141916926 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.141512482 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195219912 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.154752203 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105231666 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166024505 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360946562 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122510946 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203845791 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.097115248 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.320417622 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129570324 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1341702 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134957038 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172524689 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134817688 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185924104 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169107685 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119311096 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162196314 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141751738 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254096649 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220896277 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174012885 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179611372 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146910729 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160693789 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166370069 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180480904 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146153064 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.120934929 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165439501 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186263395 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.187280564 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13676634 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167557035 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167808517 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163466517 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17655866 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108408891 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189919849 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135875077 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169130933 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143619408 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098595656 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162433172 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.251721953 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134603732 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179223312 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133071218 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134711079 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128582742 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126000265 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163273007 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147584516 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132066076 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184072818 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102816572 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165931408 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183638638 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134788721 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15724615 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121063285 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135683822 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146223608 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119399106 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138855946 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.148072822 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209505076 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.105480942 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179911531 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175111457 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195660959 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135103889 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148825667 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664255764 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102324639 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184415494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150339167 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188879346 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152764744 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171083922 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165363344 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153058696 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172677962 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124961856 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.222542506 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169328231 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.162315344 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134630152 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147707553 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120984258 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.135126866 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154405407 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165918418 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116632398 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.141113318 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.161314909 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14832662 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.119873401 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143770496 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188190335 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151659101 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186834764 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186035127 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140856245 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170506592 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176842723 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104715616 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164278946 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174422961 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145917994 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153725686 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.104782184 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139799356 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184068053 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098383647 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164587613 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165654805 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165640739 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168002924 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.137947467 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163520528 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116469877 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16415944 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129765767 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157296297 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158896155 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105973709 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130208902 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130724448 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163186694 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162500469 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129462334 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148344351 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180300411 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.128892075 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107954288 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.357878104 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163576106 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195907462 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.156384998 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137780437 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119935054 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158749742 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.157001587 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163785234 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10287266 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135849495 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.133965426 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.181879487 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.131231401 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161648479 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197969079 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166388197 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191874203 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140847362 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.265075252 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1142111 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159775218 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.13434418 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104355156 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145612135 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138527276 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120070406 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.256924263 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181876417 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.155702149 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118758338 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13159687 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129744933 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108270306 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165045129 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159718637 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162396394 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118046323 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.12263995 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148787965 seconds)
  done (took 78.931305151 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151337737 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.147792933 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15183036 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198445867 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169738638 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246415818 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208459673 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231944625 seconds)
  done (took 2.582779244 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105491147 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.137050404 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141751009 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.125897387 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.09473701 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.32720975 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.139730668 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126739171 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.123720377 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.139598503 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.12172602 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.561979784 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.097092871 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.12721818 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.116908118 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.093534015 seconds)
  done (took 3.650388123 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.278459666 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537017914 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.090131623 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.247427986 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.230458707 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.153818147 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.745788755 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.186077247 seconds)
  done (took 12.548028775 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.125973408 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.142660994 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.141910381 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.167602486 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.124237657 seconds)
  done (took 1.787854652 seconds)
done (took 120.901925912 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099562734 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.100836944 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125710997 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128562739 seconds)
  done (took 1.52791407 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.113138517 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.083764551 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.114345091 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08319913 seconds)
  done (took 1.471894156 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422507114 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.113014119 seconds)
  done (took 1.648769182 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120203159 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135856451 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.109134647 seconds)
  done (took 1.447929578 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108644319 seconds)
  done (took 1.194568804 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10263114 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.101851424 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.144068687 seconds)
  done (took 1.435258221 seconds)
done (took 9.810718705 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115754324 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.42867147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.388874186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14085834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724099262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383273163 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029735322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159046964 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139919683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121654254 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110001721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.700491856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983744731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.368868269 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969947191 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.367221488 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676307904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124258942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100128425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123667393 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978049035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120931308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094506786 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123724822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675560077 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425790588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09428767 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.383930027 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093589762 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126862727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382787747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122303801 seconds)
  done (took 16.850315034 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102100548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182843469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.101662391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124545157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098433564 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124277086 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1043501 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.135780927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181379964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093240648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14037913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093161679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128764733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094417222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143054498 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093688264 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124854764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095874477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129176769 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096096741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142194464 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093030541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124029437 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096310755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122227065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107777792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121576252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.107772419 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121278788 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098957586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12685877 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094481548 seconds)
  done (took 4.83208422 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147826106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191360662 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131260325 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128493939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173057795 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095719624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.206268267 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161939112 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185093675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122068946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112231404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121521846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130489062 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123742386 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114733288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122382707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097887994 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124584327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100383311 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123931224 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113913848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121598793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095554597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124463631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095215828 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135742318 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095309766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.135917351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094179425 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126806603 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099984479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123586725 seconds)
  done (took 5.170111258 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104965541 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130929314 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11062488 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138618698 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097386647 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129916591 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.103965128 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124178547 seconds)
  done (took 2.033462912 seconds)
done (took 29.965114589 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113656706 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.100362391 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.136659861 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.106711199 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.13289516 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.117899009 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12211468 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105239619 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135516403 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102862303 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138244339 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093331431 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123459318 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093723211 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.106839847 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.1286968 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.109369052 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132072012 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.114749893 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.137975952 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095320956 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134330289 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104802173 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.143907988 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.113920369 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.143676321 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138129396 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100938046 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122245283 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095739928 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.139069526 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.119814789 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125478586 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111570183 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127858768 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.099344871 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.095005391 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.125012348 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108762434 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134023869 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100380501 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134426327 seconds)
  done (took 6.051712027 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.12070106 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.165172794 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.095062502 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125013111 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.096374845 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.161960397 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.157615949 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.095358745 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.095850937 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.148305215 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.148820856 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.09674277 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.095174874 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.12605398 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.094234214 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.125218161 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.117213631 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.147948236 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.153739127 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.124635774 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.167371832 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.154820957 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.129089795 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.146575521 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.134523264 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.157542174 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.144204929 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.129911826 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.149385485 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.094242374 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.154597745 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.154418065 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.095591794 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.123422476 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.134244508 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.158217579 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.149835891 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.134392935 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.153584217 seconds)
  done (took 6.255691647 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103607823 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.109691794 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.145108093 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190679697 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133581656 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.13654301 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104823318 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142733147 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111281038 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123855985 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.104874026 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.155291747 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111430393 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131522503 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.099771629 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139556219 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.114034283 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.127110335 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100181334 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142685037 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113362766 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.138832147 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.107898609 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13453517 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094469782 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133022276 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098360482 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138624391 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100063812 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132094107 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099443973 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.127880649 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102964729 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.136913337 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.098681621 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.131828459 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116910051 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133742627 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104193311 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.158160297 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.135966176 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.09978649 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.146390932 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135225869 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.124445744 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102759027 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129962254 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104693519 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122726447 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114586068 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105423706 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.124191247 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.138807075 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.095658835 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093825605 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13907108 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097023958 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.126198846 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103195946 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131021724 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.11508358 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128577367 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110478474 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.125390861 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101026776 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.124230612 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.0954669 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.129710794 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11791564 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128445486 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134587577 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.125939097 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.101871403 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131985995 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101166317 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134937937 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095202535 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137769616 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10530233 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12956803 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.105940446 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126700023 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100344944 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141905224 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.110061741 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131535694 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.101751034 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.130982119 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099834265 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.133960366 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109414879 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127268915 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.09955088 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142063523 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096405299 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.127225548 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102617405 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128728119 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095974818 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136744137 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10146253 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124711742 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105832783 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096420785 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.130859792 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105472168 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128713455 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095352928 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129722029 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102398932 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124861453 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100473047 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128846256 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.097599278 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.137595524 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103148068 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12704719 seconds)
  done (took 15.06993899 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.238982116 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.220429597 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.196721357 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303731766 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.147172693 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.122471926 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21718659 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.176812204 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095681842 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.164747647 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179303451 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.191059163 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.180151942 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.190700001 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.182093523 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126448646 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11717163 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.177588958 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.221449699 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.299792589 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115872846 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.141635229 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16759829 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.165033447 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.114293629 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.143102601 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.153536444 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.119291703 seconds)
  done (took 5.971689547 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111505353 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165570392 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.103707083 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.155795168 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151868336 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.096789128 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.132067732 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096755586 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139647111 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.110038871 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.127833998 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103314733 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.13152009 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105552989 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.126791242 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105280327 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.136798438 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.104934718 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130464866 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100411663 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.144040134 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.112797748 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.132640129 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102023785 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.144163088 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.132369535 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.098591155 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.147387231 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.134104366 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12491258 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124096243 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104841994 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140701003 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097098874 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.132570829 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.099261318 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127315959 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098752494 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097700753 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12330348 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096023878 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.117167432 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102942899 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.141129252 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10352752 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.128196917 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.10175395 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130957314 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103409724 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122649097 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098489161 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128716269 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101193749 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.141998357 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099399785 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133017474 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100362568 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.126262353 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105645872 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.099367212 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.124078615 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101930704 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.132760157 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.130079485 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105234063 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102278388 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130851467 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098129463 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.132124 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103031755 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.129822928 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.108047369 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123608687 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097867698 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.136655968 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.107974385 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.131202016 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101876716 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132945857 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096229828 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.115674307 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095544746 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.084059463 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.132721602 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095576411 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131688927 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099525388 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132421795 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.142820016 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.106164438 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133475 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097864535 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.131428754 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101019609 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.09480136 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130949973 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.114006972 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.147714627 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124645173 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.093761607 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.141971362 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.09862702 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094581393 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118519645 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108455359 seconds)
  done (took 13.451171869 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137252443 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.177392196 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127237969 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116478914 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.161369831 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.167565725 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10540273 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105208017 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128398324 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116504279 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.133554515 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105667632 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134181456 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.111128692 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168072911 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.136965709 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097637257 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.140608955 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102292136 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.180699623 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.145732087 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.136129248 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.170239433 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.133936018 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.101797428 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.163433472 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.171634077 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.110352922 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139502078 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170519808 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110548425 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.170696454 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172313126 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102870482 seconds)
  done (took 5.776066098 seconds)
done (took 53.665521497 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.190793107 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.402327078 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.178427088 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.176736889 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.230953203 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.216487775 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.181023999 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.374589383 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.911837715 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.170543234 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.176526987 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.17679341 seconds)
done (took 27.496407859 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.216416366 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.345598318 seconds)
    (2/2) benchmarking "String"...
    done (took 1.488141233 seconds)
  done (took 3.939949787 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.177625903 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.178537746 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.42197485 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.178794608 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.177825369 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.19456489 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.189962978 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.178949257 seconds)
  done (took 15.625151212 seconds)
done (took 25.066654292 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.229566305 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.362003919 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.423944982 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.201705043 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.177213016 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.175981981 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.177027304 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.205162306 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.185062921 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.176622705 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.199631712 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.426200072 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.199707092 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.561221107 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.178831469 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.185066909 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.194739388 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.425849021 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.177875775 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.24062918 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.164480423 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.168646089 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.17961894 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.199719319 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.184440458 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.184780144 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.196219113 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.185327317 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.372587781 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.19136424 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.219238648 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.179758559 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.203135182 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.177261242 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.286035404 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.21153835 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.370330708 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.183541133 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.16613356 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.180596198 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.370040386 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.569530675 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.177254771 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.183242906 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.177060072 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.242419149 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.169524635 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.891943796 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.180754801 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.180150118 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.179104662 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.564540612 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.182408665 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.193047548 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.204793484 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.420407377 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.19625869 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.192851191 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.203369231 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.183089837 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.193043572 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.176501277 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.224325982 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.182041219 seconds)
  done (took 141.853963273 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.176193476 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.183644055 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.180436928 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.237419976 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.184177993 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.183298181 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.181178075 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.179410797 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.177187406 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.208164485 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.182869852 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.177681579 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.184340418 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.171390704 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.18007139 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.189844848 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.18509301 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.194512308 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.179439853 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.180034355 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.176492721 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.183460294 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.196299827 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.181644324 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.221439992 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.261124363 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.213025658 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.201851146 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.180124827 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.180620848 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.217629414 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.242467079 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.768196567 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.031953121 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.191835262 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.191568087 seconds)
  done (took 79.461945824 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.178143626 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.178380024 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.180213276 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.178836421 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.20869037 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.182387347 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.708661338 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.707485501 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.898575512 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.522925738 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.184475486 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.469309751 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.464406469 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.183959362 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.27049551 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.19454587 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.182802849 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.197034085 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.208772553 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.178934872 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178953757 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.720888655 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197349664 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.267449901 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.351865193 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.194197021 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.208122543 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.573745008 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181450622 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209221649 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.503993696 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.225971117 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178818227 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.521501237 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.749114602 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29341402 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182214858 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209803761 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.181139257 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.45601174 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.180601633 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.181831943 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.18470816 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.82201303 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.192743159 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.704619659 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181215735 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.109625445 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.184936338 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178815158 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.126927913 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.183092647 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.788381712 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.195524414 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.181244522 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.182948093 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.177972426 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178559726 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.209554109 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.187067018 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.273464602 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.181667168 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.184318334 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.208734263 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.181949309 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.227658264 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182231772 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.436287464 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.238198511 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.292077285 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.702453564 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.183401698 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275310354 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297537502 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.180569808 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.178774658 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183170812 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.17937648 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.287048092 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.180429684 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.562433019 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.347303066 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.198158983 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.416002518 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.280116337 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.182874613 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545919865 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.18409124 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.182358334 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941086054 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.276360049 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.179942814 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.180452287 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178594173 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.56161808 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.699822352 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.416813269 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.18571675 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.469799777 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.188605391 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.183734615 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.572058179 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.696839797 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.849985368 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.188907066 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292839105 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.349006288 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.198216803 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.181482018 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.410256135 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.187088681 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.243616128 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.181525958 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.577742877 seconds)
  done (took 363.857796255 seconds)
done (took 586.285326981 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.89877944 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.851038811 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.977397427 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.876780146 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.844421847 seconds)
  done (took 10.5579034 seconds)
done (took 11.665033471 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.362064408 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.360202072 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.240812755 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.363921937 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.214360883 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.378910146 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.345597978 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.203748418 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.28122954 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.259189082 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.281738896 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232519676 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217431224 seconds)
  done (took 17.851104474 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517124694 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.184924682 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263890055 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.500066265 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224234477 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501552225 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389878393 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.201619853 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.383670976 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.198995463 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196392002 seconds)
  done (took 17.673093658 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506423319 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.184022904 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268641609 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509704653 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226059231 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51812664 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389459489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.200805477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.394156862 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.199993012 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196442948 seconds)
  done (took 17.70516264 seconds)
done (took 54.338850321 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.224399888 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.346871074 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.216342999 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.198604609 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.194916814 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.196222615 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.200370483 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.203029899 seconds)
  done (took 10.891572569 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.191142309 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.1927955 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.190938558 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.193123025 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.192318351 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.190853891 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.190284738 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.190542053 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.663719596 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.192950067 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.191893329 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.194479166 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.190874557 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.190838084 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.193882857 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.194348503 seconds)
  done (took 20.657270837 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.193797849 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.192125765 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.191638146 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.191688739 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.191102604 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.191141276 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.192097093 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.191060612 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.19157112 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.190968352 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.193070766 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.191294933 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.190111199 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.19035351 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.190733179 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.191685885 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.190051727 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.189839688 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.195827196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.191947709 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.191510481 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.190739205 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.190368627 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.191675828 seconds)
  done (took 29.710942428 seconds)
done (took 62.370922886 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.198555606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.191364081 seconds)
  done (took 5.502784234 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.25220237 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.257041069 seconds)
  done (took 3.626809427 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.194580529 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.192459428 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.194588028 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.193488545 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.194553433 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.194016349 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.194348055 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.194156939 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.193985528 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.194684833 seconds)
  done (took 13.052331015 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.193891001 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.195224851 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.19251362 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.194790245 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.194147276 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.192314587 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.195608341 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.194132514 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.194772485 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.19257523 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.196044014 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.193736176 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.195084976 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.193193464 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.19510231 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.192725641 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.193528932 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.192908018 seconds)
  done (took 22.605200187 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.20857728 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.217303705 seconds)
  done (took 3.539583186 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.323168909 seconds)
    (2/7) benchmarking "second"...
    done (took 1.234621189 seconds)
    (3/7) benchmarking "month"...
    done (took 1.303381468 seconds)
    (4/7) benchmarking "year"...
    done (took 1.291119447 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.235330426 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.214910525 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.235741776 seconds)
  done (took 9.951847101 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.197944504 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.388239171 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.494939209 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.796602752 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.198122223 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.201297878 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.055237197 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.200418412 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.202952374 seconds)
  done (took 13.850628103 seconds)
done (took 73.241177655 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.192386508 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.20701491 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.198116248 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.20446724 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.533750988 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.241208931 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.19361094 seconds)
done (took 15.88516422 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.183681966 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.190184836 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.185200814 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.192688782 seconds)
  done (took 9.8668619 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.180408503 seconds)
    (2/2) benchmarking "read"...
    done (took 1.543368238 seconds)
  done (took 4.843625925 seconds)
done (took 15.825800898 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.198749043 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.197122082 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.196023403 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.199806161 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.195319805 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.19574024 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.197797577 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.195369055 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.199230158 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.198471113 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.199129605 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.198753239 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198846188 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196510491 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195958727 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.198473699 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198902518 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.196675337 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198002847 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.19702846 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196611615 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198911719 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.195847903 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.196926971 seconds)
  done (took 29.858028328 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.199373013 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.196946894 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.198938231 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.199486194 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.198728958 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.200116556 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.199277761 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.197000341 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.198712543 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.200641854 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196916927 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.197068589 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.200695468 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.198376059 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199099639 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.198503092 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.200418035 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198305996 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20142247 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.199166807 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.200316942 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197752528 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.198891563 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201430235 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.198365556 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197950857 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.200678708 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.198312036 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200204457 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.199290128 seconds)
  done (took 37.090770057 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.206497489 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.208432022 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.201874267 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.200816881 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.202282763 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.20124344 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.201832363 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.201335936 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.201997735 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.202886498 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.20157512 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.200644482 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.201204043 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.202634156 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.201840681 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.20153726 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.202729095 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.201751379 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.201424755 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.201221283 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.201546666 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.202082305 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.201057333 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.202387289 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.202325989 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.202846932 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.201536788 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.201996505 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.201385241 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.201512672 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.203202938 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.202270421 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.202068316 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.203054271 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.202269461 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.202996181 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.207275996 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.210594787 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.203228671 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.203014451 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.203200126 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.20330873 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.203042059 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.203363992 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.204263238 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.203698939 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.204560768 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.203265339 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.202544528 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.204473263 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.203357288 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.204721337 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.203239997 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.20355789 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.204010972 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.203147947 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.204829463 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.205031665 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.204870091 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.204341818 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.205227675 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.204578365 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.203896295 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.204816996 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.205407584 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.205822654 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.204687486 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.20515118 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.20630548 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.207596472 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.204803932 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.20551288 seconds)
  done (took 87.766775024 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.205142477 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2056687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.204200374 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.203273861 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202534713 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.205628842 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.203680729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205884144 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20490499 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.204941711 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206373458 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204135273 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20346566 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208337645 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204858847 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.203032965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.206088007 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202078699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.206707798 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.206868891 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206263769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.205888633 seconds)
  done (took 27.635151774 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20607095 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.207460824 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.205229576 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.207548687 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205632269 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208670443 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.207753114 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210598036 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208685446 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204018103 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205575862 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207138146 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.205866926 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204621697 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204208011 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205754035 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20702769 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205047002 seconds)
  done (took 22.841062926 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.204586837 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.205115842 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.206593536 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.203840605 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.205733125 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.210027336 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20613179 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208075272 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.208163439 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.205350612 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.208647083 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208582266 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.208319254 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207047628 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20944813 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205507471 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.210165526 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207618559 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210460487 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207047166 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206761171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208270931 seconds)
  done (took 27.686252937 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209436684 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208673219 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.20605781 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.206134761 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.206871227 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.210222575 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.211319352 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.208870723 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.209703862 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.209004176 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206630127 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.209558487 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.208421116 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.206832856 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.207033698 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207048063 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208580248 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.205641446 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208863407 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.206457057 seconds)
  done (took 25.287996754 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219150447 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221083213 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219209172 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220622538 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220185514 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.220701636 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220745881 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.220337853 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220603456 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221226803 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.219198295 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220367516 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220367443 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.221515308 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221510327 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219746678 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220696424 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221054311 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221679685 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222497303 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22162804 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221307973 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22215261 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219855584 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221178044 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222279005 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220926379 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221677678 seconds)
  done (took 35.311657249 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212225213 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.212501261 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.209367548 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.21181068 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.211184611 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.211233532 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.211944397 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.210448136 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215296747 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.212705391 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.21294714 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.213426069 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.213809724 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.213584545 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214764892 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.213052191 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214677831 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.211737633 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212168713 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211246382 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.21394804 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214396664 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.213367608 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211216417 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212233048 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.21501132 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213188832 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.212964658 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214313778 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.212031947 seconds)
  done (took 37.514467757 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.25961139 seconds)
    (2/2) benchmarking "in"...
    done (took 1.260716123 seconds)
  done (took 3.651148443 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.212549711 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215085016 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.214303711 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.212854615 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213207791 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216028755 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21532764 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213156867 seconds)
  done (took 10.843906887 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.215079327 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.214896689 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.215920161 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.21704131 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.21609593 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.215043879 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223194918 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.234255065 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.216670617 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.216616518 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.224690273 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.222778968 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.218581776 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.215846483 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.216210933 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218129602 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.216892024 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.216605385 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.21702064 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.217776054 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2172589 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218696873 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219934066 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.216269947 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.21928148 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.228044663 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.219424651 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.217318143 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217766956 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.220652114 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.217670771 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.216448729 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.217501689 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.217785559 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.217356871 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.216958825 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226236622 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238184222 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.224318565 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.219116282 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220235696 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.214438299 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219615423 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.218115287 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220500084 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.218075483 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.220225523 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.216318716 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.21831428 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.222768676 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.223621264 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.218678926 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.21626523 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221320118 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.219531266 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226094465 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.236891552 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.221935271 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.228597537 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.230052091 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.232916549 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.242815314 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221710773 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.219748139 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23023848 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.241497662 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227236684 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.238207696 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.218078573 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.221044218 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.226456602 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235236534 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.244335697 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.221008848 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221654924 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.221644358 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.221173179 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22049365 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227861006 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.240420666 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.222604755 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222026501 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230929969 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243354528 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221967673 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.221059 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.221602926 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.221802049 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.224222931 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232178345 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.240782513 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.222249514 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.221845858 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.221797651 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.223561683 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.222313553 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.222335972 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223909437 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.220517332 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.223890651 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223383399 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.226951079 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.230806073 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222743666 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.222017845 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.229492448 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.222954819 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224019955 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.228829541 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.224703854 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225056404 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.226235795 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.230031535 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.221848185 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.227276882 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.23203016 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.22268214 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.223423267 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.222980952 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.224565702 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233352159 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.248624049 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.225341048 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.224694774 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.23008366 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.234970125 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224866139 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.226104122 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.225569399 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.222412024 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.221539388 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.225052822 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.224219497 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.225801833 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225171784 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225931024 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.221534828 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.224372724 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.225347578 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.225511443 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.22577785 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.225785699 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.226358107 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.226931029 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225452996 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.226097452 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.231582834 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.224660947 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.226094687 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.224957467 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.223738987 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226154527 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.22665809 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.22632979 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.226926343 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226473106 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.226994786 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.22789711 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.226844789 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.227403683 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226751846 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.226831175 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230017802 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.226642199 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.230568175 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.227539714 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.225688256 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.226957001 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.228447322 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.226196305 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.228279617 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.225306703 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.230762333 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.235463729 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.230179047 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.227617207 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.231287061 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227965013 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228871507 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228929036 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.231793765 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.23536588 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.229444691 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.233826085 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.228506659 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229129038 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.230201157 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.228179319 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.228764716 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227711739 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.232755723 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.2360465 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242506932 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25317695 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.230439652 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.238060967 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.235615391 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.238976593 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.237484157 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.23323411 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.230298149 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230744912 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229070718 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231387561 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.230421326 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.231021722 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.228615919 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.23029196 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.23196796 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.229358204 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230942495 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.231084538 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.229900252 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.227830365 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230376195 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230476325 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.231122048 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.229162592 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.229453302 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.23185158 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.23055448 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.233161768 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.235910761 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.229453024 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23270805 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232917158 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.232324706 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.231113484 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.231984314 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232690373 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.231166712 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239362698 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.249675074 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.233794759 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239600228 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.250019517 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.231857439 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235551368 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.232822391 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.229914658 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.23593503 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.240730865 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.234123754 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.232310875 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.234199264 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231611809 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23440722 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.23909994 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.230176479 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.231917199 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.234121567 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.234276355 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.23043194 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.235012974 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.233202974 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.234295717 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234895644 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234381646 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.235162267 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234679301 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.234717871 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.234555792 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.236508231 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237352208 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.241397831 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.240074271 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.233451444 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.236467037 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.236692349 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.238430436 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.235173985 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.236533017 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.234602243 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24629798 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.257347676 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241131298 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.236198445 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.235363072 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240688331 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.23606275 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.237390738 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235392395 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234921851 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.236407865 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.237663685 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232285113 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.234999375 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.23728937 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236214781 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.238946786 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.239670887 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.236716059 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.235904635 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.235823489 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.235310977 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.236616474 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.237942189 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.237483406 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.237193245 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238899016 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.234433613 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.236739213 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242562891 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25532267 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.235829717 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.235779049 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.236970495 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.235826567 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.238302742 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.237977173 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.241190447 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.244556565 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.23944985 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.245905036 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.239756613 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245507224 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.237408604 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.240197322 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.2476463 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.234338949 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.235555459 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.235716725 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.238465147 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242817429 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.255875538 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.238962225 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.241935107 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236904433 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.237107623 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.238622434 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.238951559 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239515466 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.237540139 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245702748 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.260368102 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.242795259 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240368005 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.235339973 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.238813093 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.239486443 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.237010825 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240790528 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.237739959 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.239704289 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.239850018 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.238611943 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.239907576 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.240011304 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.240973543 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.23591923 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.239514105 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245942467 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.26139366 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243411185 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.239536268 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.246032496 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23955826 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246379901 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.257892951 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.239821778 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.240559525 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.240445456 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.240739861 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.239807707 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.240820655 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.240980072 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.241305568 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.245267056 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.240796809 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.242700794 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.240361563 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241004341 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.240766359 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251985101 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264735498 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.242438741 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246243622 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.239004843 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.24236518 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.247172909 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.241026348 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.240608923 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.245611027 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25285182 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250817348 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.241427923 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.241236614 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241196546 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242852562 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.241821033 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.241999424 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.241712634 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.244597426 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.240792879 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.242152454 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244553946 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.243571395 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.242362283 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24264225 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.244146023 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.25266719 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.242345752 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.244714883 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241320762 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24424241 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.243064196 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.242130664 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.242360089 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243404962 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245124964 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.244264236 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250856683 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.250342246 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.246765001 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.243182719 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.242511016 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.244154483 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.243935946 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243826068 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.244130433 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24490635 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.24436521 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.24440881 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.243015775 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.243008445 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.245241013 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.243023662 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246081011 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2477481 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.25136989 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246044907 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.242444068 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.244224154 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245245208 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241732497 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.243790598 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.252327913 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247410348 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.255786911 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252938272 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.248456365 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.243979575 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247478121 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.252906903 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.244055288 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.245713016 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.245123854 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.245544142 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.247346909 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.249675507 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246275379 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.250514151 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.24611494 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.245311509 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254907172 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.26774514 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245754663 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.247999175 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25071349 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.246297576 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.24469613 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.248058782 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.246830516 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253782237 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.266556152 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246920596 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248822231 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.24652567 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.249115123 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249991591 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248308152 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.247552075 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.245187982 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.247771118 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247111969 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248308192 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.24471083 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.247982575 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.246076412 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.250655328 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.253071045 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.244888112 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25012303 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.247670698 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.248276693 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247788324 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248089773 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.246018424 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.245426734 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.247273935 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248813301 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.248990585 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.251896833 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.249805962 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.249014778 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.250532132 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250197156 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253497735 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.261809212 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.257732892 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.247216515 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.248404872 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.250936301 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.255619705 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250326176 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.252637808 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250318175 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.250301846 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.250382811 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249963845 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.251301392 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.253364064 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264996277 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.272099629 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251178955 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.251784254 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253739912 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.251322994 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.248922759 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.251831928 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.252949955 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.255272112 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.25990234 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.255176906 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257800955 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271006963 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.253307665 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.257180067 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.255427625 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.258198084 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.256493982 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254008394 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253381003 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.257035059 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.268673938 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253458706 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262385009 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281328664 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.271045113 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254454825 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.253978713 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252410295 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.253600084 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.254613684 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.254039569 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.252779193 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252821765 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.253495553 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.254641709 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257738578 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.25455007 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.255692348 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.253752716 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.252244743 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.254518161 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.251580507 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.253691466 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.255320459 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.253376781 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.254920067 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.254226392 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.25591052 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266146806 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.280186508 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.255159452 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.253857898 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.25285151 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.257247653 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.258791855 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267164689 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.261727576 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.255724802 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.254773446 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.2569361 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254303034 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.254034216 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.255307603 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.254667471 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25532613 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.252231754 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.268059451 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27989523 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.259893604 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.255262231 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255991202 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.256200488 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256694861 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25705455 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257237154 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.256854911 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.259662135 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259599966 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.257373602 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.258470023 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.259868323 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.266128339 seconds)
  done (took 739.39099824 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254536816 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254323714 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253905618 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.253628195 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255070956 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254672057 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254064404 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253393613 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256177211 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253833972 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.255586949 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25488069 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254454608 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255986194 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254441347 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254411575 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255469896 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254500053 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25471365 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255719484 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255222069 seconds)
  done (took 27.519813021 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.25825745 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.256496469 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.256785068 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258336278 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256104343 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259363618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256285707 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260373953 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259837874 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256596525 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.259257993 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257643 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.255859781 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.256105614 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257006371 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259074737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260139324 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257051465 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261043501 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.256984955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256957355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.25773777 seconds)
  done (took 28.843915202 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.260674733 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260093252 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.258926682 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.255369925 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260012488 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.257001538 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.259001103 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.260161651 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.261974264 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.262581641 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.2602755 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.263273235 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269392856 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.267125059 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.263459062 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.263377535 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262827705 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.262836375 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.261823037 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.259881662 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.267777075 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.259877231 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.260068778 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.260552036 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.261415432 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.262976556 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.261428318 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.261334757 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.262227302 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.264834413 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.262231016 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.260744407 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.262717955 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.261166327 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.263077882 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.265430985 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.261192504 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.2589972 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.261198449 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.272819825 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.282579434 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.262461292 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.267518018 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.262586232 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.263738754 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.265878065 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.270148074 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.260288574 seconds)
  done (took 61.791338309 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263920087 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.262646303 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.25873541 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262440724 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.264797854 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.263870362 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.263726337 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.261993017 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.261693504 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.259885759 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.262796047 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.261128432 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.260989345 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.262675762 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.262215982 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261051229 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.261172936 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260905792 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.260165716 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.260203427 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.260443725 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.263127784 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.264116862 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.261954232 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26395837 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.261771437 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262191567 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.262878134 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.261758547 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.262363333 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.264028417 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.264669698 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.265811967 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.261674532 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261855534 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.264330129 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.264854788 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.262521058 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264318913 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.263000087 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.264863922 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265520345 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.266509876 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.265849352 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263382489 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.263884115 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263837994 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.26252133 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.264268404 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.265792862 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.26550811 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.264194575 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265072606 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.263089735 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266879774 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.26490355 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.264173143 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.262853077 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.26701413 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.264482907 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.264704586 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266114192 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.265099503 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.267356593 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.268086054 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.265330186 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.263588271 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267776345 seconds)
  done (took 87.097829452 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26810464 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.266146243 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26715744 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268096742 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268317039 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267997464 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267645042 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.268107306 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269328195 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268319539 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267679471 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270507877 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.268246089 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268341465 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268422353 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27036304 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.268971645 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269725027 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269023696 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269974591 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.26847767 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268968014 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268008731 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269861041 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271874703 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269926863 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2697967 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270468679 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269454827 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269234236 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270869208 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268884541 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269082849 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268434137 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.270303937 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.270813908 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.269736277 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271607006 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.271010898 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269494144 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270017436 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26916448 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269427597 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271437598 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269359802 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270891257 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270173427 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.270467018 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270283908 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27153852 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.27008107 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271282485 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27266177 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26999433 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272624981 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.270280244 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270798851 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271200061 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27087926 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271935577 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271737074 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.27171013 seconds)
  done (took 79.905441395 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271676713 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272186651 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.269683791 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.268453187 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.271164363 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.270219069 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27339953 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.271906218 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272263297 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.272208863 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273950851 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271137821 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272021856 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272933731 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26913615 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269531767 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270686856 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26864736 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272457851 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.270422774 seconds)
  done (took 26.608045205 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.269253853 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272407386 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.269983583 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271056928 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.272277278 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.268823522 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.27338067 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273464963 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269234483 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272643766 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273262995 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273032599 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27049545 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270692787 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272329496 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27147748 seconds)
  done (took 21.527443833 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.270539532 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272895674 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.273913989 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.273074668 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.270286007 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.271083596 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.273044855 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269879766 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.273996175 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.273837858 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.273100531 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.274736042 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.274061955 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.274358704 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.271341228 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.274616617 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.271102497 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.2708656 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.273521667 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.272786321 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.27279578 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.270028305 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.275030389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.274063213 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.273290671 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.272880064 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.271733668 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.272171643 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.272224834 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.273598218 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.271844087 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.272692754 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.273369952 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.272781099 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.275170496 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.272507732 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.275463693 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.274766919 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.276696605 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.274812861 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.275843437 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.273559923 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.276487943 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.276234225 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.272973333 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.275974104 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.273855489 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.27345362 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.273381915 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.274456959 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.275843581 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.276569163 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.277070326 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.276754062 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.277176164 seconds)
  done (took 71.236890091 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276287207 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27678088 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.273842302 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.275476383 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277219829 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.27535692 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.278046662 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27614184 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273762123 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.278772966 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277347573 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278856314 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274456247 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275914693 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274948978 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276814149 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.274761819 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274776141 seconds)
  done (took 24.15624404 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.276999057 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27538669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.278192873 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.274131611 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.274621337 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278232885 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274185589 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.27692718 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277311511 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.275755317 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276397173 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.278348326 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277755128 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.279012167 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27637011 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275949529 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.279239913 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277469001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275965672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274855257 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279128281 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278558186 seconds)
  done (took 29.279444786 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.276475011 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.277926231 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.277308987 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.294695563 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.29632257 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.277714701 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.276807022 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.2778448 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.302562014 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.332472398 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.325592125 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.297161459 seconds)
  done (took 16.70158339 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277373416 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27987092 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277720088 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280437729 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280872416 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277257308 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277360777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277780569 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278337807 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278955393 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277215783 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280376208 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280985232 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278282587 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281508607 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279740761 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278554647 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277246962 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279403075 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280327495 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277994198 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282731053 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277710321 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28000749 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27979257 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278334124 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280470114 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27987804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27829752 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280768522 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28085988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279379814 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280984317 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280431402 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281145218 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282022316 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279682586 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282120434 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282059804 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28001191 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281661736 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281518096 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283029829 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279952986 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281540456 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280758041 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281701051 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280419536 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279996971 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282840206 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283365856 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280519736 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28411379 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283481311 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282523099 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283727844 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282471812 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281103318 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284156118 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279790936 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282877697 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283190826 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281171274 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28283981 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283990752 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281332834 seconds)
  done (took 85.710142591 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280456661 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280794079 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282224972 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282247439 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281558348 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281873119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282523288 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281326975 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280711075 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281763291 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28422848 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28187553 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282679724 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281641001 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280973202 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283118173 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282769231 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284534694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282775 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286518027 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283082977 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282690878 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283701784 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280930847 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283063796 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285102732 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283744702 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28431782 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282409495 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283007204 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282572873 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283777366 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284566377 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28341132 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283127045 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284266381 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284542902 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28141969 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283283913 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287217089 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284255483 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286776997 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284216147 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284995332 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284973747 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28551794 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284743099 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283868763 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284095291 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284698753 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28508345 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285494873 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285285387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28640936 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284119867 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284763778 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285724951 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286249667 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284910215 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286905495 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284833631 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286272327 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293303157 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286804154 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286476434 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285252907 seconds)
  done (took 85.939749778 seconds)
done (took 1732.313826871 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452099607 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.404092001 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.285127436 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.298521219 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.286205495 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.309784211 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.29833898 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.287193108 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.288011373 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.285501537 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.287363945 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.477515109 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.342660167 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.287453533 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.287155376 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.38361123 seconds)
  done (took 26.45729792 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.31644229 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.293590755 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.403209718 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.30982075 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.315894213 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.476523661 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.345915411 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.293113072 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.461066957 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.333240949 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.295563136 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316865478 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294141124 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.284597796 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.310817048 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.475188146 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.53842995 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.282969912 seconds)
  done (took 28.546401428 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.735130368 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.308310714 seconds)
  done (took 5.242780965 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.313778633 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.292755712 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295603707 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.292001231 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.282791526 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.284407305 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.292058133 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.28940442 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.287223713 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.416700147 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.295796106 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.304685843 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.313644082 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.294075984 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.29040707 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332891432 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.444744608 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.292794388 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.289583352 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.299511129 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.294218982 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.396189042 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.334356479 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.293112993 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.417353877 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.286907346 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.29633603 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301335976 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.441634106 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292482257 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.293193666 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.294657905 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.295593396 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.223941711 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.739627981 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.285850355 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337589781 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303959746 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29155669 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.43983478 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.296861298 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.30096067 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.296945004 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.737066815 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.435801463 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.410192735 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.302699667 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.296583367 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.296630715 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.356661062 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.296843315 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.296256353 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.339058015 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.086189561 seconds)
  done (took 83.025381464 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.3015699 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.287932755 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469050956 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.310780301 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287125281 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288243164 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.306057941 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.574359864 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.326126642 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.289412103 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.584252011 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.839687613 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.308489687 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.337213388 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.141032247 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.352882594 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.289100526 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.306649698 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.28893411 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.289267825 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835368428 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289662209 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.288924382 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.516501799 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.329435887 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805188937 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.301495771 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.289485882 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.308490977 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.288846818 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.79780232 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.310653176 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.352348195 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.292317292 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.565235773 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.667411539 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629383374 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.292984097 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.310774784 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.289290613 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.295396354 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787259632 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648767964 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.290755345 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.291219323 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797559077 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.290529025 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.294621728 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.300403299 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538845213 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.291478082 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.295465001 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.307197167 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.30862129 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.29200071 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.394077859 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.365687614 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807973664 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.29267366 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.2923905 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.359078656 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.292328752 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.297485939 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.293105042 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.2939724 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.652756694 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.437366331 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.298064198 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.650720505 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.795059526 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.311361358 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.882725548 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.310608333 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.310157067 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.436494444 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.305943545 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.29289676 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817401482 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324435465 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.293679064 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.633019071 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.29605789 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.590358196 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.312763377 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.294981997 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853201058 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.305108724 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.30292885 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.293590961 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.295289586 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.293771338 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.300895588 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.574096439 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.34476052 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.295030428 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.294684728 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.331667477 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295433807 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.295225543 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.301593389 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.86587644 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.316233586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.294115931 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.296313273 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292584894 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.314612816 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.294888909 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.297864368 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.558419446 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.305614704 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.298952761 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.299270252 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.294784803 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.304284943 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.5212849 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.301801634 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.605379174 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.298846704 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297584504 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.298921697 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29580729 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.344868821 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.298226621 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.296556576 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.185281765 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.594843299 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.317559959 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.312704225 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295889527 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297798124 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.296210637 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.298638921 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.345937857 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.299247922 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045311505 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334786311 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.323002817 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.296808889 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.304127256 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297076513 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.298496599 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297631948 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586878653 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.576105442 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.440801536 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.301047239 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.297893146 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044791095 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.357181212 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478663685 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.31792849 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.298778027 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547449371 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.517090273 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.300100071 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.298997334 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.298357322 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557283401 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.29878279 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618077301 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827942661 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.315314795 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.301089758 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.048418313 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023134401 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.302112998 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.302161213 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.587984545 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.317825854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.297881082 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.298012737 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.300372195 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.297037736 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.303105078 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.303409481 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.299695644 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.298167675 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.415319172 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492101444 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.318656692 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.306842338 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.810351665 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309848259 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299644603 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.317140192 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.302466855 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.300160075 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.362627644 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.304193012 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.333574468 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.301818449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.309120501 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.862426911 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.301044327 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.301633999 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491212137 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976152687 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.316990927 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.302046844 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.316490484 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.203607259 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.834967448 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.351980412 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.611382014 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.310077188 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341702215 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301613365 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.411334681 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835061944 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304763343 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.317650947 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.947046489 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.31763329 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.148671634 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.300809621 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.302678043 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895986888 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.318705514 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.307942384 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.303061553 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.302505863 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595280679 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.302825163 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.317638766 seconds)
  done (took 490.625765835 seconds)
done (took 635.0944899 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.304297017 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.305935644 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.2946846 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.308431212 seconds)
  done (took 10.437084285 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.311453244 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.309132495 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.31907706 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.309402275 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.313518966 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.308524281 seconds)
  done (took 9.088559851 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.300107777 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.305781119 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.30915176 seconds)
  done (took 8.131605431 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.51182409 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.322732856 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.638438367 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.330011956 seconds)
  done (took 9.021312102 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.319912797 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320876622 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.319866063 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.313197872 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.315357325 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.314375352 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.31426561 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.313306564 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.316136753 seconds)
  done (took 13.064351209 seconds)
done (took 50.96572456 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.329951342 seconds)
    (2/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.293827617 seconds)
    (3/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.657056237 seconds)
    (4/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.304286305 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.316208511 seconds)
    (6/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.067898315 seconds)
    (7/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.315099133 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.319172373 seconds)
    (9/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.330065805 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.550916305 seconds)
    (11/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.320994105 seconds)
    (12/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.315666977 seconds)
    (13/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.317131081 seconds)
    (14/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.308917615 seconds)
    (15/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.337622823 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.346840107 seconds)
    (17/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.294990703 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.33129947 seconds)
    (19/286) benchmarking ("sort", Float64, true)...
    done (took 2.306240364 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.207921531 seconds)
    (21/286) benchmarking ("sort", Int8, false)...
    done (took 2.307354225 seconds)
    (22/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.392777477 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.318994879 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.322792666 seconds)
    (25/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.3953093 seconds)
    (26/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.293102814 seconds)
    (27/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.308028235 seconds)
    (28/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.064168162 seconds)
    (29/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.395930259 seconds)
    (30/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.161491477 seconds)
    (31/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.290140305 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 2.306789463 seconds)
    (33/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.308663003 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.419358184 seconds)
    (35/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.658249307 seconds)
    (36/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.438701334 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.757340876 seconds)
    (38/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.310616774 seconds)
    (39/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.316687239 seconds)
    (40/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.293703758 seconds)
    (41/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.34528409 seconds)
    (42/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.664902678 seconds)
    (43/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.312221317 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.932217374 seconds)
    (45/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.305744716 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.063888127 seconds)
    (47/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.371615677 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.505619475 seconds)
    (49/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.295836615 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.560414191 seconds)
    (51/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.295484774 seconds)
    (52/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.937154039 seconds)
    (53/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.306457703 seconds)
    (54/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.317876989 seconds)
    (55/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.138831432 seconds)
    (56/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.308338093 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.307078382 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.373030909 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.304623116 seconds)
    (60/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.61593402 seconds)
    (61/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.300032522 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.334391998 seconds)
    (63/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.306852463 seconds)
    (64/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.334453032 seconds)
    (65/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.301481834 seconds)
    (66/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.301433093 seconds)
    (67/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.921893677 seconds)
    (68/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.140071344 seconds)
    (69/286) benchmarking ("sort", Float32, true)...
    done (took 2.308438835 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.14452976 seconds)
    (71/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.139070617 seconds)
    (72/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.354029096 seconds)
    (73/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.435765563 seconds)
    (74/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.298655775 seconds)
    (75/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.337828629 seconds)
    (76/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.317408792 seconds)
    (77/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.31372602 seconds)
    (78/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.320157031 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 2.310335997 seconds)
    (80/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.399031293 seconds)
    (81/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.395619267 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.210162733 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.29820506 seconds)
    (84/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.311176176 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.64035457 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.33576234 seconds)
    (87/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.878985588 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.933206029 seconds)
    (89/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.297898526 seconds)
    (90/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.327827493 seconds)
    (91/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.300895996 seconds)
    (92/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.417302227 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.33690367 seconds)
    (94/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.30954015 seconds)
    (95/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.685838265 seconds)
    (96/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.205202601 seconds)
    (97/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.356208136 seconds)
    (98/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.110306978 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.297953882 seconds)
    (100/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.299176132 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.9496808 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.296364699 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.338832803 seconds)
    (104/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.30722714 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.436725742 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.299598613 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.524661846 seconds)
    (108/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.298646687 seconds)
    (109/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.299378324 seconds)
    (110/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.313061134 seconds)
    (111/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.299968994 seconds)
    (112/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.312197084 seconds)
    (113/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.518744305 seconds)
    (114/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.300053427 seconds)
    (115/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.671373501 seconds)
    (116/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.329340792 seconds)
    (117/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.476399004 seconds)
    (118/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.909543191 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.85439179 seconds)
    (120/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.328789382 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.523021941 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.353710468 seconds)
    (123/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.32341851 seconds)
    (124/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.327183145 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.593620481 seconds)
    (126/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.441294583 seconds)
    (127/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.300828367 seconds)
    (128/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.300362153 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.071151516 seconds)
    (130/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.931280749 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.572688246 seconds)
    (132/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.297713411 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.219340059 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.301265508 seconds)
    (135/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.429544372 seconds)
    (136/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.395182478 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.42405965 seconds)
    (138/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.301599915 seconds)
    (139/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.307050402 seconds)
    (140/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.313407064 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.34463001 seconds)
    (142/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.308180577 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.561471648 seconds)
    (144/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.513971398 seconds)
    (145/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.47827927 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.077446944 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.340521312 seconds)
    (148/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.478754167 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.341439644 seconds)
    (150/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.307565426 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.325215231 seconds)
    (152/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.334788412 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.3440009 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.312100578 seconds)
    (155/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.30329697 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.309588467 seconds)
    (157/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.380034701 seconds)
    (158/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.334535097 seconds)
    (159/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.331484234 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.304932866 seconds)
    (161/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.317024548 seconds)
    (162/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.179041555 seconds)
    (163/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.30396179 seconds)
    (164/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.303217037 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.314239729 seconds)
    (166/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.343223244 seconds)
    (167/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.316804226 seconds)
    (168/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.308845356 seconds)
    (169/286) benchmarking ("sort", Int8, true)...
    done (took 2.317031382 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.333683926 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.146053899 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.333966657 seconds)
    (173/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.313629232 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.358135288 seconds)
    (175/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.307553871 seconds)
    (176/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.320872458 seconds)
    (177/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.304778375 seconds)
    (178/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507494642 seconds)
    (179/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.359289597 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.35878552 seconds)
    (181/286) benchmarking ("sort", BigInt, false)...
    done (took 2.317000061 seconds)
    (182/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.067215713 seconds)
    (183/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.362059941 seconds)
    (184/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.334819344 seconds)
    (185/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.093634946 seconds)
    (186/286) benchmarking ("sort", Float64, false)...
    done (took 2.319705729 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 2.316996912 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.393186174 seconds)
    (189/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.30480437 seconds)
    (190/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.382582428 seconds)
    (191/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.460785928 seconds)
    (192/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.402634858 seconds)
    (193/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.342647293 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.310996183 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.326569551 seconds)
    (196/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.328964089 seconds)
    (197/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.673618045 seconds)
    (198/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.441914619 seconds)
    (199/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.303757333 seconds)
    (200/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.509034358 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.71225084 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.335160708 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.521760219 seconds)
    (204/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.317379882 seconds)
    (205/286) benchmarking ("sort", BigInt, true)...
    done (took 2.322093281 seconds)
    (206/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.306618064 seconds)
    (207/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.323380634 seconds)
    (208/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.543531832 seconds)
    (209/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.306215714 seconds)
    (210/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.318632241 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.707498913 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.363022198 seconds)
    (213/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.317287617 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.648484244 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.378756881 seconds)
    (216/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.316947084 seconds)
    (217/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.383327034 seconds)
    (218/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.304289243 seconds)
    (219/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.336204436 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.434548287 seconds)
    (221/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.319156174 seconds)
    (222/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.350154596 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.716363756 seconds)
    (224/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.093866558 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.719710734 seconds)
    (226/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.337933955 seconds)
    (227/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.327945017 seconds)
    (228/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.44353802 seconds)
    (229/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.318993903 seconds)
    (230/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.320790609 seconds)
    (231/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.309012946 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.877618996 seconds)
    (233/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.34842171 seconds)
    (234/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.306864703 seconds)
    (235/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.212461665 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.183543854 seconds)
    (237/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.331920007 seconds)
    (238/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.962753253 seconds)
    (239/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.330937096 seconds)
    (240/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.438482492 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.532669305 seconds)
    (242/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.347706731 seconds)
    (243/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.372255657 seconds)
    (244/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.406047985 seconds)
    (245/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.40309529 seconds)
    (246/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.184226362 seconds)
    (247/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.321923469 seconds)
    (248/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.310909384 seconds)
    (249/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.326641355 seconds)
    (250/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.341389252 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.348732769 seconds)
    (252/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.440626924 seconds)
    (253/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.905885447 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.712193127 seconds)
    (255/286) benchmarking ("sort", Float32, false)...
    done (took 2.320800234 seconds)
    (256/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.308930442 seconds)
    (257/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.404368969 seconds)
    (258/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.64115592 seconds)
    (259/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.353786233 seconds)
    (260/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.337564725 seconds)
    (261/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.348146763 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.429598197 seconds)
    (263/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.141106224 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.409991273 seconds)
    (265/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.326044134 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.498266455 seconds)
    (267/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.433873774 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.321592527 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.333150946 seconds)
    (270/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.858329296 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.230320621 seconds)
    (272/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.803269145 seconds)
    (273/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.309406985 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.365170253 seconds)
    (275/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348936564 seconds)
    (276/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.329855906 seconds)
    (277/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.328150416 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.351128063 seconds)
    (279/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.31007615 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.236610284 seconds)
    (281/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.32241006 seconds)
    (282/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.074986619 seconds)
    (283/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.434285405 seconds)
    (284/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.309212054 seconds)
    (285/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.3475038 seconds)
    (286/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.321249829 seconds)
  done (took 562.165556294 seconds)
done (took 563.382967203 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.368319944 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380024222 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.335300429 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.368528511 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.449522811 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.512575691 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.343519895 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.375658966 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.3825747 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.38374311 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.341003259 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.511317779 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.338230888 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.335053599 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.334143467 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377171507 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.332981357 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.336572582 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.352206852 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.371102609 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.353290195 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.340826807 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.385172564 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.51215155 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.338718705 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.338026772 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.338482537 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.358597289 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.452075387 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.34072925 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.339427248 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.348689894 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.331464829 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.340868225 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.331523297 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.359521664 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.348332121 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.345971105 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.370676138 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.452631755 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.336642129 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.343375672 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.339596239 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.33840748 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.339057629 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.376217634 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.338154005 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.395831471 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37968664 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379373723 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.32717458 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.352721929 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.346547374 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.338234684 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.348666529 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.337860567 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.396324664 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383724845 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.359368101 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383834994 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.327875621 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.343481835 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.37770209 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.354772768 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.350278597 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.330598585 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.337512522 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.379055051 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.341099107 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.343204991 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.331557847 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.352358805 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.339707704 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.353192509 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.375454948 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.338707148 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.335974474 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.339696396 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.350889205 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.338836514 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.387937614 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383217484 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.390044083 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.340434663 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381637739 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.517084737 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.351323037 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.341173294 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.374771914 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.359950562 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.352064675 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.353126982 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.374314267 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.341341791 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.388170952 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.398292512 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.349120955 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.350360855 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.390462884 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.352019222 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.34148184 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387577019 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.337965499 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.338127272 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.340716371 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.463534552 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.343382819 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.341308734 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.376415331 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.389940473 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.401963701 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.330851179 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.35341455 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388357416 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.35303842 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.402582122 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.344757754 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.332240789 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.331136611 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.464046099 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.344598441 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.347912792 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389083123 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.403341004 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.343622226 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.345326144 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.3444816 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38506517 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.463302205 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.352593972 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.457041784 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.341335941 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.345838263 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.376104031 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387960107 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.378462924 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.404864857 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389709872 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.36150863 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.345201476 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357342038 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.355464281 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.345582946 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.402646118 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.341623229 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.380060927 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387284089 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387781938 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.37764115 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.467160542 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.350615646 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.335376774 seconds)
done (took 225.017401355 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.403446744 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.341190227 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.449641096 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.343168201 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.441530856 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.442666953 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.340563247 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339779532 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.340903256 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.731880818 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339080612 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.339106232 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.340894663 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.34057649 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.423822629 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343763644 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.338754612 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.681292874 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.343730786 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412348768 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.340765709 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.340262274 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.342617875 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.720788226 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.33883007 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.337358656 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413701434 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.342673434 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.687167229 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.337612207 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.339481492 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.688157289 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.434422179 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.360091109 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.353615021 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.350238851 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.443921278 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.362308651 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.423302691 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.423809939 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.45094261 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.382076424 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.338388671 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.341322207 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.344835988 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.346447782 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.342519596 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.371165 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.343200326 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.342756246 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.685674809 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.355279318 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.351485548 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.342270909 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342471078 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.365545126 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.342966431 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.34662241 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.435401116 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.34647571 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.40743302 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.723558334 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.722462427 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.345643405 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.344746114 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.343833075 seconds)
  done (took 105.112295234 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.413078557 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.419677253 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.45874993 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.346808285 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.397285801 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.465229976 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.347283607 seconds)
  done (took 11.099729435 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.352057423 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346331072 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.399863837 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.39491124 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.344812779 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.560768824 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346853768 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.357221008 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.344134202 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425781009 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.357881225 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347745314 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.353607964 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.344581323 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393941854 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.35885761 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.461911481 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.347117641 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.347641455 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501281725 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345415127 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.355180071 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.42758681 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.358676596 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.358996087 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.356917414 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.295689201 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348550215 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34525804 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.347717965 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345818941 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.459718219 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.349272914 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.347750463 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34515946 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.50761521 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.349649359 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346369075 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.349418998 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.346683729 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.349106592 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.347865774 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.34878586 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.346120972 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.348478159 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.372298999 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.35002536 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.348907349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.349578285 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349225431 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.430667673 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.350496037 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.347423138 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.345587395 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.42842998 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357136405 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.348600955 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.348272262 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349829078 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346006333 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504421103 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395804878 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.349151131 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397066538 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351127168 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.350550846 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.350617726 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.350408086 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442037879 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.350368645 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3970313 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.347600447 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.574022865 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.375583117 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352543251 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.353398608 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.353612634 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351366317 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.3473899 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361209289 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349273808 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.351119752 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.357396889 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349186978 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348676535 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.534509031 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.507927152 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349688022 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.363872529 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.3577784 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.349597185 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.431948933 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.352454048 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.349931272 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404226426 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467409669 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.433500841 seconds)
  done (took 139.704191621 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.35691653 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.359488422 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.355440452 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374103706 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.354158408 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.351885854 seconds)
  done (took 9.40730768 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355353326 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.353251576 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.352368524 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.354728188 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.353746349 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.362747669 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.364974091 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355125786 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.35835254 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.35487066 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.364285082 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.356060674 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.357514479 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.353815009 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.364757912 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.354452664 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.364773262 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352746755 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.353653567 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353040798 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.353716197 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.354348404 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356056308 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.355436916 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.370580339 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.354623247 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362576287 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.355254687 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.354380477 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.362277497 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375616162 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.365206287 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356371131 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.361960441 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.370237756 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.357067495 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358667881 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.357412438 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353113003 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.365787292 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.35689036 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35560884 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.356209075 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.358962019 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.358395949 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.361082537 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.361788968 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363403422 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.365137514 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.35898526 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.358011053 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.357733565 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.3672486 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.359019533 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.358300246 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379490709 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.362419217 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.367342168 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.355759793 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.358929342 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.357666518 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.367647007 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360071131 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.370497163 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.355863488 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.358298408 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.35958329 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363306022 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357895768 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.358888497 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.359685553 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.357215326 seconds)
  done (took 100.145301247 seconds)
done (took 366.713275562 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.821431185 seconds)
  done (took 4.083130018 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.436143076 seconds)
  done (took 3.698984894 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.837239783 seconds)
  done (took 23.102610682 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.368454462 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.415605961 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.367836842 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.352204343 seconds)
  done (took 10.763684872 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.608194997 seconds)
  done (took 3.866516442 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.348793505 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.355027793 seconds)
  done (took 5.96287185 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.654273685 seconds)
  done (took 3.912390369 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.790230346 seconds)
  done (took 4.052617056 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.371329703 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.364573952 seconds)
  done (took 6.003543547 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.33615765 seconds)
  done (took 3.594029747 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.482694945 seconds)
  done (took 16.74507609 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.361787015 seconds)
  done (took 3.626432934 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.368430439 seconds)
  done (took 3.628723176 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.015629618 seconds)
  done (took 6.276768666 seconds)
done (took 100.57851154 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.353738409 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.357488258 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.356255725 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.355943037 seconds)
  done (took 10.685507131 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.393922825 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.393409944 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.395786938 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.404177625 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.395489298 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.394518452 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.386905895 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.385853698 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409086698 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.403395966 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.402333618 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.40149032 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.397304691 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.386166774 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.396791324 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.395723782 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.404712294 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.396132497 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.386400862 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.398106881 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.362162293 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.405009889 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.397126565 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.360959558 seconds)
  done (took 34.716360249 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.878439062 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.430396689 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.513956922 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.414405151 seconds)
  done (took 7.500281314 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.430763178 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.431559384 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439878581 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.478406416 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.504888051 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440629341 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390484079 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.383988142 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.370762114 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.432182383 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.491297289 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.427770197 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.505559635 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.362728364 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.551199308 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362867244 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.362800224 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.440433507 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.479972636 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492934889 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364323741 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.440536868 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.440799312 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.429446094 seconds)
  done (took 35.72045534 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363516861 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.38141359 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.363973978 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.361558523 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.371265391 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.36299972 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363703837 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.363870278 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.36348343 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.892797621 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.362498671 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376803701 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.881907962 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.363427892 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370959317 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.365511298 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.897811954 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.883880866 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.363554374 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.371159968 seconds)
  done (took 30.691852566 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.357215624 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.357834266 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.712004489 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.615568844 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.357730951 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.358482348 seconds)
  done (took 14.025860433 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.438638386 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.583911025 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.369153617 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.734422979 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.813099737 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.369868324 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.369545875 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.623321426 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.953494463 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.939110975 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.428193277 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.442077733 seconds)
  done (took 20.333089295 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.366541074 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.358646498 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.364036606 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.378493564 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.423032604 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.370484506 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.376262928 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.358652251 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.426832756 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.42883528 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.369700727 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.427260868 seconds)
  done (took 21.916890704 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456795302 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358980031 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360744781 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434237415 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361605245 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205264416 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428402655 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121617905 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.387918092 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633994946 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369606356 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456915207 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617344468 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361435221 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365402411 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.350579653 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592345229 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867057148 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36436388 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36019203 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39573582 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37256397 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366093638 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605589937 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36564262 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362696669 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.623007994 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360057106 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657254651 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376258109 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372198654 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362945674 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637066212 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053038749 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491706938 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586064121 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378958092 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364321299 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.389732232 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.364441834 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364361941 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364892902 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374405098 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362767595 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36262845 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370040952 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138427173 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.392605312 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.360332802 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36313568 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633912826 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461878967 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.366447537 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363635914 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467729548 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365622485 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.368510052 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.362280328 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941652451 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363976262 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375911729 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.366299882 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376221776 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364684702 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004477504 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.371033316 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.368437667 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368738532 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363761873 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362532605 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380394233 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36404846 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.391191807 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363982269 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086705476 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380707535 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367275821 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932233296 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368399731 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.3673566 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597670475 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366194259 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363707408 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.363400717 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364110066 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102065765 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37326052 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.351128428 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365904865 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.128944596 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.616516875 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391649576 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396936554 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590195576 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.351747411 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364820208 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.376878556 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367502053 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388126635 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135138938 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389701091 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.371464853 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624624003 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.577890581 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380908045 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.368549698 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882872243 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398160014 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385285563 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371438904 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598288691 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.979227564 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383926028 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36699535 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384403655 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368555512 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139018065 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376591583 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.474735043 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376298105 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641717377 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.181392629 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368874063 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43700304 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372765168 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369044946 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369706578 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37066223 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367023128 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.587150031 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402522239 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.38293783 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.378826392 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370320717 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.366945653 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370413849 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.371400492 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593243239 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376147698 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650173854 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369602597 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36853959 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369390203 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.592042437 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.378424072 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.707670153 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633549617 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379734931 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385098902 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385397775 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389795393 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477853827 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392449305 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.371561707 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628790195 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.374499367 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.376135221 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370947402 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372799422 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374563063 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.377244869 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40600598 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977513412 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34860014 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380249925 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261550094 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.385899095 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439067784 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378051537 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600390467 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.373036913 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393557678 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.37834752 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.36829554 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598211964 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382176052 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.371903419 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450458836 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.884712627 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003227189 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385499206 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.371510633 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.369449441 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.369359063 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372629254 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371288794 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371898938 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59991689 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391417362 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392853158 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.983175841 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373939399 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373671474 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.378598257 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385148905 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.38001398 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372653967 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.368870716 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374511488 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378016052 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.388856714 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51773946 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.38784559 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373693407 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.890588008 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380937961 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376708898 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37328062 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41102894 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373587247 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288984525 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642020048 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397588061 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649103723 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381508538 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.393102454 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.374682302 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391617581 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38647219 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.402742001 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383714856 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.386229642 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376149519 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377107291 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949750372 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127315576 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935000051 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378287265 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.413692441 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379912877 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.148149394 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398720529 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37688969 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620716498 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148579202 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400205937 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895120769 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.409076753 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169553876 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650544088 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61367474 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39371863 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.380717296 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654461257 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593435121 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414437613 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386426735 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379334185 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.363465899 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983145674 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411724628 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456943229 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151788451 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403362921 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380653321 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.463043383 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393834532 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811863477 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402439273 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377267967 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389258565 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378581815 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287960166 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390696551 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380140942 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023137578 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386767595 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.895940995 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403093078 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607756624 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.395322275 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.384243926 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.377204644 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.388336128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.634335036 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654523171 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383194901 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391583519 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945399252 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.334804103 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.385620996 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37953641 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15125314 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383933028 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683859923 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.386556232 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.378079543 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382300787 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381921432 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378931267 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.377051134 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386918807 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357774487 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891977677 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.405927903 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424664097 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381883307 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380515807 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637024174 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.39523333 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990001733 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613932081 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403811841 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404964904 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.385890908 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383792582 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.369710942 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381435297 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381940981 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460149536 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609980518 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391508319 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.370003952 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.459116829 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596914078 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383059854 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382992705 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640505998 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.383676231 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.392482121 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111742697 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416135067 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381688932 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384052553 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406550235 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381831111 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456891125 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614255452 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.399110516 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.395124059 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822005587 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407497876 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387005743 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.398273898 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47950659 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388611281 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.381420724 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.156087999 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997119027 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138797895 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001474421 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662729882 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389376353 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385600916 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384777446 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547710601 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384878778 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658417864 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384290798 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.396672401 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407231014 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390662095 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394138293 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602527217 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66022229 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3859039 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384411644 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408099862 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.384295721 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396692801 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.596859454 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90323999 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961562045 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388018841 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392254067 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.168086944 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684517851 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385814008 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387005209 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38547427 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.401163427 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.391884501 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.417495777 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386241904 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53072183 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660982834 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092650748 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.420650699 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.413773943 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.15982576 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391288084 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642167238 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391869191 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619394975 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006935907 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122594042 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655912424 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459255863 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618713035 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.390761595 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550342178 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.384318272 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387887805 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388943972 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388737405 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.385632313 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.40043295 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006988239 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654201236 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.393125845 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.385509867 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421705757 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.398420312 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.613029226 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13952145 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612702893 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399343834 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392693155 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390031555 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008623731 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666900287 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3955359 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.394080762 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647326568 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394114094 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415518038 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.842618673 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.384959999 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966842944 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.361687036 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410647324 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388807506 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.146687966 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009561743 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.396738757 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907000713 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393111824 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396300646 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668369585 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.396135149 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391141147 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67151771 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.396091894 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396752776 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627048918 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.009792982 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191280593 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.413981972 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404037124 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.39357673 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391896441 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484694163 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393342078 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40014883 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.844269596 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415514429 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391722401 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403253799 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.392342144 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391492824 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.393446204 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392471626 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.397800152 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.390181876 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.40867919 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394108378 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396987997 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008612922 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423390499 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.063283129 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.720287976 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650839324 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400769687 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.382017234 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.398148525 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391686918 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393213782 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39276391 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412446954 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97122392 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.406473428 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.40923874 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398680387 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.611390972 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607409761 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400718346 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626974468 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405950084 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413999801 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.380950809 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394217598 seconds)
  done (took 984.146496516 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.422354044 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.432990371 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.428898377 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.40901719 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.432134284 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439378873 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.462173967 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.414762541 seconds)
  done (took 20.740108871 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.397392375 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.403685792 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.395567895 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.404891755 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.39911836 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.888797561 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.426268048 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.406172567 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.406910453 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.409301522 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.408790151 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.128968378 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.423422552 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.398540464 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.399374133 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.404348362 seconds)
  done (took 33.007570432 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.520261746 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.578777009 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.584146401 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.397541724 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.433712011 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.404314169 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.676392238 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.428795901 seconds)
  done (took 27.325189993 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.409737073 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.409634319 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.407546854 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.409570225 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.407876334 seconds)
  done (took 8.347460843 seconds)
done (took 1250.419215881 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.401613059 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.405048143 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.400402822 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.402728025 seconds)
  done (took 6.912216394 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.383340469 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.386118482 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.384490763 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40100336 seconds)
  done (took 9.8559696 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.153336845 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.072634657 seconds)
  done (took 5.527467146 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.399805339 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.161307196 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.138123425 seconds)
  done (took 8.001835562 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.70854937 seconds)
  done (took 3.012156746 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.820407198 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.771913536 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.594837793 seconds)
  done (took 6.491505008 seconds)
done (took 41.100240091 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.4120476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.647139202 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.559474185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.410940519 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.563057738 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.56078638 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.14091696 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.40273013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398528435 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.432770223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411522816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.563106654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.121944811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.647424372 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.120240804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.648436683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.563532642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.403223114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.402419208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.400030769 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.140761665 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413229108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411822256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.400773789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.562836171 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.549174896 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414216278 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.64938235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412468891 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418900723 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.548790104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.40356004 seconds)
  done (took 83.440968921 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404155881 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.402251668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.423771866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421247829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.401397205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.406889612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.420495258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.401990689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.418703344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416764076 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.401296219 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.402002881 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.403767775 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.403648769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.404018586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.404044644 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.410997509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.410508505 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400900579 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414973835 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.405819211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415987839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417088842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416188182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402075429 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.405502813 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42387308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421982746 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.407673124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.407447266 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.408038496 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420240846 seconds)
  done (took 78.433661646 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.405848265 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.403035075 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.409081564 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.40560767 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.402586337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.406212989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.405267352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.404478106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402665795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.42084086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.42654502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.404976087 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.423089636 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.404412658 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.426537254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.404649264 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417521361 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.41156665 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.405279889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.406532355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.407385978 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.406197313 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.403649726 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.40695944 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.416839169 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.409353382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.407807533 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.405750867 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405494419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.408211228 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.412366992 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.407680287 seconds)
  done (took 78.404006939 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.688060948 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.41392676 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.414634766 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.40635337 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.414588841 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.415144432 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.407008297 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.686592038 seconds)
  done (took 15.157360762 seconds)
done (took 256.7385081 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.405849219 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.406833677 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.619639749 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.433638485 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.416912165 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.434377744 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433260708 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.638908177 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.407170611 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.660076573 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.425331108 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.431415307 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.406059948 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.432136555 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.694053208 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.561228084 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.326006761 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.410075175 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.757209729 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.437783672 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.689654364 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.406953782 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.711822329 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.37941968 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.426746249 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.4089413 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.408313789 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.31782981 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452065468 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.769065449 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.418353091 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.414401276 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.4996294 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.520712395 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.63302135 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.574398196 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.408203352 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.517283338 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.644866517 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.418460017 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.409416015 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.199587951 seconds)
  done (took 84.679301056 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.416995217 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.531403545 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.416980581 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.417114055 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.416041131 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.535069144 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.512283064 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.416689054 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.416886339 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.415538056 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.415854096 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.415991666 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.415447576 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.417281671 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.41592368 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.415902029 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.415921648 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.427315899 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.429372311 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.462147816 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.538864212 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.443944702 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.411613255 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.416101117 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.519449457 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.554679221 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.416447415 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.412509603 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.462145402 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.4180608 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.422187618 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.465000552 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.418524573 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.419767956 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.53260866 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.518800247 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.429562737 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.416376433 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.532157841 seconds)
  done (took 57.790509214 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.419514235 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.673632237 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.863605738 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.427309582 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.420267096 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.42304715 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.501823125 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.42016959 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.424120005 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.425893735 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.594147779 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.423086506 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457375871 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.891487843 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.425472185 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.420592129 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.422818263 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.422394897 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.685653594 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430112752 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.525048488 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.422352345 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.503118636 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.432791859 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.446363837 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42469408 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.427178987 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.99465979 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.427146524 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.596849169 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.266554012 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.505084482 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.942580174 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.878464142 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.283461865 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.426251538 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.422112725 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.601041599 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42589549 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.423401202 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.504861378 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424701738 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.876165458 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.096729696 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.445154253 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.423463309 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.020320178 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.601444511 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.678674333 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.432246199 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.905514514 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.427503889 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.425113957 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.4271584 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.678361291 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.432463548 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.42585757 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.012748693 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.448533868 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.50612096 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.427487056 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.426093394 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.693753323 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.427248725 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.683109539 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.428794592 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.433817482 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.446645242 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.875680032 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.42722282 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.106770274 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.444226818 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.421931534 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.598135252 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.682813698 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.057617815 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.431688574 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.700090029 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.954483057 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.506449659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.430386283 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.99566478 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.510413056 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.428947649 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.429352101 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.428141648 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.426539344 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.47702254 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.506229289 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.04745463 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10415131 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.042096739 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.530144376 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.44108156 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.42926492 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.050591902 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.446451054 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.426918928 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.874675067 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.11332486 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.445868543 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.434546517 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.128092507 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.449466228 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.510796033 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.434756225 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.889444652 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.430349466 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.477956736 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.426730519 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.434754192 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.451711742 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.509936474 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.433807125 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.428565533 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.082091814 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.629391841 seconds)
  done (took 187.972247846 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.423890606 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.42261544 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.422440458 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.422142958 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.421382006 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.429917922 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.420330024 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.423004513 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.425560061 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.422196683 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.421114944 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.421902622 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.423495263 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.431810392 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.435013803 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.429605048 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.422391611 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.427062476 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.42278897 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.441715941 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.422488459 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.441562183 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.423837125 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.444566885 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.4253741 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.423258587 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.433387275 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.42531395 seconds)
  done (took 65.275791496 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.431369126 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.015227899 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.431830735 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.568757845 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.454576252 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.428584311 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.566168371 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.491567048 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.431481325 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.42825388 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.429399797 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.744551838 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.431641553 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.965170497 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.632408913 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.568588814 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.964478206 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.450037677 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.427635338 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.427487044 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.569362048 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.443246415 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.745257228 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.017864216 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.433674564 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.017834079 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.424346487 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.431183921 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.429026063 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.02061315 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.430625396 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.747548764 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.511911861 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.493281719 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.021122284 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.968394399 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.985490101 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.588019813 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.432231885 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.430236278 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.43023125 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.423721444 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.021541668 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.433550963 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.434667524 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.01819762 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.45207684 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.434304907 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.437882346 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.432452284 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.494824631 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.499770551 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.751377451 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.026081628 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.513665824 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44449563 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.569344657 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.809978322 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.434119499 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.973850878 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.423059832 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.027070044 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.456406763 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425047857 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.4336401 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.438883615 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.59264668 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.572165381 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.971991041 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.454510277 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.970413902 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.610759807 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.43251788 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.432599604 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.436404271 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.026134874 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.970698094 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.610662001 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.576599205 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.640758912 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.426741943 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.436038928 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.428169894 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.515768709 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433548752 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.029901698 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.992471995 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.454638023 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.435053664 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.4360942 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.435567529 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.624666642 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.028674733 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.517662357 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.970475138 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.77424618 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.755701336 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.436066507 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.497900049 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.453370561 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.756025636 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.438074767 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.496396087 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.875778937 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.758801446 seconds)
  done (took 170.70775537 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.688706449 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.451827047 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.557456373 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.593724155 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.050703578 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.023070865 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.43210479 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.567902826 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.553571636 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.715071861 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.435890042 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.530206767 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.6615837 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.523275417 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.14353352 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.510375868 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.530757341 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.593057277 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.58236144 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.451085355 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.101710374 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.753804875 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.625572328 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.455227906 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.575063879 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.238232238 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.029792208 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.968822117 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.624471991 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.450053949 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.978778946 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.441916951 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.393049925 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.120410465 seconds)
  done (took 66.688758099 seconds)
done (took 634.42391608 seconds)
SAVING RESULT...
DONE!
