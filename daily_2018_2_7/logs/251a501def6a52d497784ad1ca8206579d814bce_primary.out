cset: moving following pidspec: 21542
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.160546246 seconds)
loading group "string"... done (took 0.586835854 seconds)
loading group "linalg"... done (took 9.645854777 seconds)
loading group "parallel"... done (took 0.16719189 seconds)
loading group "find"... done (took 2.442037261 seconds)
loading group "tuple"... done (took 2.220826177 seconds)
loading group "dates"... done (took 1.385695095 seconds)
loading group "micro"... done (took 0.19371158 seconds)
loading group "io"... done (took 0.507944533 seconds)
loading group "scalar"... done (took 54.716898517 seconds)
loading group "sparse"... done (took 14.095367604 seconds)
loading group "broadcast"... done (took 1.299148999 seconds)
loading group "union"... done (took 10.368575166 seconds)
loading group "simd"... done (took 3.556848596 seconds)
loading group "random"... done (took 13.272087548 seconds)
loading group "problem"... done (took 2.196089531 seconds)
loading group "array"... done (took 23.54256428 seconds)
loading group "misc"... done (took 1.104536721 seconds)
loading group "sort"... done (took 3.759820521 seconds)
loading group "collection"... done (took 20.558882079 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.893539055 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.178619273 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.241052478 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.260250299 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.308843504 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.207245415 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.203159122 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.200138979 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.704822357 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217638073 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.194019916 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.404874255 seconds)
done (took 6.820288047 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.343622019 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.551698785 seconds)
    (2/2) benchmarking "String"...
    done (took 0.488547904 seconds)
  done (took 1.715362192 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.090104225 seconds)
    (2/2) benchmarking "String"...
    done (took 0.145570048 seconds)
  done (took 1.006992786 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.135350144 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.201494347 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.150735583 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.149055132 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.136276621 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.151220421 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.134684077 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.151506151 seconds)
  done (took 1.745340457 seconds)
done (took 5.613929126 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.521869244 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.988058269 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.56837161 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.214214559 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.347590524 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.360504721 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.379609469 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.268818507 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.13296204 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113024944 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.238481744 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.496854512 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.46469472 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.021684345 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097943876 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.152739341 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.201543674 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.893872865 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.124438085 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.152186026 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.526603781 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.24367282 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.16053907 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149506608 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.229083862 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.169917501 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173926032 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.145685143 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.805790956 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.179464609 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239092206 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.126740087 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168650129 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.205834434 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.278137037 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153833736 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.778944909 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.244514501 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124092076 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142310271 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.786709197 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.167908084 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.249432637 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148845086 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113486529 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186942609 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.141663141 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.121853705 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.152868773 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.144453753 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215341683 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.520546303 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.149542295 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.2393824 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.153631513 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.794497401 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.141690946 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.328857229 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.17065761 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.150527511 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.135115 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.132600989 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.222425318 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.137532542 seconds)
  done (took 23.386121849 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.249221013 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.252428874 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.123147571 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.204909136 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.185026246 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.124543056 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.147054498 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.123630253 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.172457633 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.224930172 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.18622031 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.256846704 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.137642765 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.13467815 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.225509896 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.301251458 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.153033759 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.166574732 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.150252143 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.139677583 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.185489245 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.13966855 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.15445978 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.13879985 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.217131882 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.266762071 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.154044099 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.16849471 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.14915404 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.141883815 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.186498971 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.205771278 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.121186165 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.149452494 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.217260047 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.167598505 seconds)
  done (took 7.116054806 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.256027879 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.280053905 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.166252921 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.289117063 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.233317301 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.170934252 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.239032631 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.221635628 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.329461937 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.310604489 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.22663256 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172872367 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.140569646 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13943483 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.12528542 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.138309893 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.871937873 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.217314079 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204409486 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.229827653 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.157485413 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.125701942 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.764070183 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.145053061 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.129293547 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.155826538 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094317507 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.279083481 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13866658 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.522444914 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.142742999 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.141085286 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175999632 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.241220865 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.181443815 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.163963146 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.156229858 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.146541378 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.252190885 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.143964411 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.138614138 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122570799 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176747292 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.174966299 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.150828741 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150691638 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17950021 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.146341912 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15159531 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.162614374 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.241658457 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.223532761 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.129745845 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322100927 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.168799777 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.142906196 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.153303157 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.882316842 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.165576486 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.142658376 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.123607504 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.15619615 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.141190998 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.854542523 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164450231 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.292418398 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.12615885 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.202151249 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155187116 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.160076175 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131586737 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.146794891 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.151504507 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.147016859 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125679995 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.147127876 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.125406716 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.150496344 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129160741 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.159315293 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.130081791 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.141666394 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191579912 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.156568042 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.149788488 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17269566 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.149211526 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.12848674 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173686695 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.140980443 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.132646862 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.246481259 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.146456698 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159355694 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.144215547 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157989559 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.188534454 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.13116466 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.353624535 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.14199268 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.128299263 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.18360369 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.146881034 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17110749 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.141337046 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.141691191 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.130322081 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.141560583 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.129826798 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.20584729 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.131058217 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.142050848 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.133316107 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.153575991 seconds)
  done (took 33.337523532 seconds)
done (took 64.510123502 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.428982324 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109153947 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.130199516 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109538185 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107400638 seconds)
  done (took 1.63098809 seconds)
done (took 2.359683029 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/21) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.227808269 seconds)
    (2/21) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.329324601 seconds)
    (3/21) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.243444363 seconds)
    (4/21) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.152961889 seconds)
    (5/21) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.214028007 seconds)
    (6/21) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.213545934 seconds)
    (7/21) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.194765181 seconds)
    (8/21) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.21094534 seconds)
    (9/21) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.213289883 seconds)
    (10/21) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.228813772 seconds)
    (11/21) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.132934867 seconds)
    (12/21) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.236845423 seconds)
    (13/21) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.228340358 seconds)
    (14/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.222788554 seconds)
    (15/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.133858156 seconds)
    (16/21) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.249085563 seconds)
    (17/21) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.208454367 seconds)
    (18/21) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.212359942 seconds)
    (19/21) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.238335821 seconds)
    (20/21) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.144945959 seconds)
    (21/21) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.151390275 seconds)
  done (took 5.136194055 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150148352 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.160870235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.153982443 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165882655 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.132983048 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.146859018 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167461925 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.151177217 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.167597706 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.140345225 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.152716309 seconds)
  done (took 2.43104269 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146487523 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.159977137 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.140025607 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144954851 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.151023408 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.145073188 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163586922 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.152742588 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165604404 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.141544018 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.152438959 seconds)
  done (took 2.406069722 seconds)
done (took 10.704543654 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245009926 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.996221618 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.202548332 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.313394467 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.380872408 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.32013236 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.676643332 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.253184362 seconds)
  done (took 16.239043439 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.162555529 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.159071419 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.137631806 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.154827668 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.247839573 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.13801181 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.154721068 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.142203726 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.156010185 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.13831008 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.15938648 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.143181274 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.158049665 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.142815662 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.154396807 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.144880249 seconds)
  done (took 3.294794394 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.183393474 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.182204498 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.143953025 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.16406492 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.141874529 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.165049558 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.151006979 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.163012872 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.140541912 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.159278102 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.149509309 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.162203843 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.143820176 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.158367056 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.161956298 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.166991683 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.158746692 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.146405924 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.179513587 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.14621464 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.162459219 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.143634385 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.160291838 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.145963133 seconds)
  done (took 4.590125002 seconds)
done (took 24.869788233 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197700965 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.148729681 seconds)
  done (took 1.100188334 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.212380835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.229762389 seconds)
  done (took 1.202675957 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.160245396 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.155269603 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.168265852 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.167947577 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.138072894 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.155798581 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.179752726 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.139768206 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.154047729 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.14143729 seconds)
  done (took 2.324514984 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.142423004 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.158197303 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.154165355 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.223019891 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.163982804 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.140993572 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.160989036 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.142025979 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.161107544 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.139006514 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.159652372 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.156318835 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.159889662 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.156604675 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.160930873 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.142440487 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.165618891 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.157567256 seconds)
  done (took 3.607711123 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.139518884 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.139085307 seconds)
  done (took 1.039641525 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.141164817 seconds)
    (2/7) benchmarking "second"...
    done (took 0.153268862 seconds)
    (3/7) benchmarking "month"...
    done (took 0.14152083 seconds)
    (4/7) benchmarking "year"...
    done (took 0.156414893 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.138447157 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.154797601 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.138338246 seconds)
  done (took 1.791106396 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.555406806 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271794333 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.405245047 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104503761 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.156068677 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.377179154 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.157053048 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106701325 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104364665 seconds)
  done (took 3.029874249 seconds)
done (took 14.856236897 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.140117166 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.254749429 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.668014223 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.160926542 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.157029665 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.199426678 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.396661577 seconds)
done (took 2.752119021 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.379016388 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.210098632 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120698254 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.140656606 seconds)
  done (took 1.618553131 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.131963658 seconds)
    (2/2) benchmarking "read"...
    done (took 0.146293201 seconds)
  done (took 1.055303327 seconds)
done (took 3.450002805 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.158956067 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.157700821 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.142919712 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.158831704 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.143030926 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.159130181 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.142883128 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.15697948 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.141836696 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.156522673 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142385536 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.159474605 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.139674061 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.159983237 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139976114 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.159274988 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.266339717 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.158116223 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.139894799 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.160458356 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.14196903 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158048307 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.143057093 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.16049098 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.14110173 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.160526314 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.139952684 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.158466668 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.142003011 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.161008522 seconds)
  done (took 5.421637166 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.145425802 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.133451421 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.156548384 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.14445623 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.155045184 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.136981792 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.152541413 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.138199579 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.15796782 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.137384603 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.157617288 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.137848978 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.155669825 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.14033629 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.158522042 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.141022887 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.163877037 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.138535265 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.155916026 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.139692323 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.158247831 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.138334315 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.156071334 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.138958815 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.13668654 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.155226644 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.138108175 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.156789474 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.139614754 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.156607752 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.140841053 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.159734848 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.140139234 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.166850487 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.142214253 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.157252601 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.144525665 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.155888872 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.139385967 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.154976403 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.135548277 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.157579838 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.13889612 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.161886323 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.139291652 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.156546561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.139150807 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.158095456 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.140398216 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.159837485 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.136835687 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.140371134 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.161886892 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.139195597 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.162003698 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.135984478 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.159145604 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.135189074 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.160966121 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.13887796 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.155878941 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.136230772 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.163170356 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.140917003 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.172241965 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.144983721 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.157774864 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.141294971 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.15865807 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.144369759 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.160919915 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.149271023 seconds)
  done (took 11.489264207 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.139847757 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.138171137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158883429 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137398366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.159960053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.139259283 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.158660153 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138611648 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.158910261 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.139303984 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158549474 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.139155085 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158439711 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.139200217 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.158008655 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.140111367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.139525859 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.159563183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.139697458 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.160219061 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138937249 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.160789153 seconds)
  done (took 4.051068466 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.287264679 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.147430696 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.209433716 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.174429017 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.15901664 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.172860027 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.144736842 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.168733119 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.145434109 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.169159935 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149529812 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.166536253 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.176632179 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149696023 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.169551291 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.15145985 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.165181455 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.151014575 seconds)
  done (took 3.850387004 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.140784385 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.140073216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.160154377 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.139706566 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.15997674 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.139168329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.160053809 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.140779379 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.160226615 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.140643306 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.159956375 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140804031 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.158813834 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1402938 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159772485 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.141634862 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.139318979 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159778481 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140314281 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.160554384 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.140443642 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.161139947 seconds)
  done (took 4.080443606 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157493354 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.162381251 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.160553996 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.165600855 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.142694469 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.161574672 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.150300559 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.162532705 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.148734603 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.162895793 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.143607125 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.162152369 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.157495236 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.161866057 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.147764149 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.162685867 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.142413872 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.162833919 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.142840528 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.162109786 seconds)
  done (took 3.918968144 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.234363657 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181047631 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.178941888 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167117923 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179724143 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.158831565 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18569359 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.158272294 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.179251175 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.189139628 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.159643038 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.178341396 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168410444 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.183124743 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.157912461 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188184775 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.18783308 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.169410297 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.179334264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.15878872 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.189614658 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.158554345 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.185652811 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.178825324 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159634756 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.179548552 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159357518 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.184274161 seconds)
  done (took 5.738277417 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.154843126 seconds)
    (2/2) benchmarking "in"...
    done (took 0.17302758 seconds)
  done (took 1.131859099 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.145610463 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.143043206 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.164328682 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.143431192 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.163933016 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.144521187 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.170907407 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.144029271 seconds)
  done (took 2.022214247 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.254045485 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.260239695 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.147059661 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.178096881 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.259479444 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.239316619 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.178237395 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.168012283 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.141385484 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.156655198 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.251888433 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.133417277 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.164338587 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137995356 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.164217656 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147970966 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.164053338 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.150794159 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.169853446 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.145868119 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.170006004 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.167712672 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.144897138 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.174587733 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.137863597 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.164380346 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.146710226 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.185829874 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.139228173 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.164227943 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.141263748 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.163238589 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.14692674 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.167991824 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.146305167 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.258747836 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.171431855 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.140339699 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.16507215 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.148457453 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.194221035 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.14416545 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.16487649 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.141503198 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.167070417 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.147343053 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.169608709 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.145131857 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.156288759 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.138689355 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.165189041 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138488726 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.165801099 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.143317945 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.164226423 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148120864 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.165694289 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.14045007 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.160183561 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.137825401 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.163127387 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.138069451 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.165927709 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.146426878 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.163906065 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.143357967 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.164305157 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.147882313 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.173245835 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.150013759 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.165094259 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.156989104 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.166113618 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.168827814 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.149681497 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.143479206 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161525489 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169495807 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14361289 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.163431912 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.149478804 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.19097255 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146341542 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.158540942 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.139142725 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.170061379 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.146902568 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.166404924 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.137112363 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.171827018 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.146794258 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.165392375 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.137791097 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.161192128 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.140919781 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.166089889 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.1372266 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.163310658 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.144021607 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.167985697 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.150625593 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.160895494 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.146257555 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.168985421 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.150080384 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.162834288 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.193176019 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.162001081 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.139954034 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.166350646 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.15085031 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.160192022 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.142912373 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.16310308 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.141942482 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.161035988 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.15046436 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.165215449 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.146109848 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.16911052 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.146179379 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.165587567 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.146478035 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.164711417 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.140590607 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.169169514 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.163655651 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.166636397 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.145891398 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.166785877 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.146460759 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.166850013 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.148718758 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.162465699 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.149340649 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.162190365 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.144925546 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.167936093 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.149828876 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.164537375 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.14029169 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.16404977 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.145741281 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.164451713 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.146785093 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.166392335 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.140587817 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.157445936 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.145121814 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.16190368 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.145790686 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.174622426 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.140221569 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.168596502 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.141090189 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.174664671 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.140710239 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.171972222 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.148447692 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.171478798 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.149760488 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.158928401 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140991929 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.168443298 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.145553384 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.162345744 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.146350512 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.166234656 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.152567706 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.158447661 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.149732328 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.157636305 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.141701655 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.170351 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.148824823 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.16849546 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.141824242 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.202333108 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.157675025 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171393037 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.144618687 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.166095636 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.148327391 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.165515685 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.150310562 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1729915 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.151377858 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.163930462 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.142820146 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.172509616 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.141359355 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.167967762 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.143689317 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.167635447 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.137578882 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.168159555 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.13830745 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.16976023 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.147549156 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.171549316 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.151606172 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.167753687 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.144799244 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.174501319 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.141303545 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.169557026 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.139193844 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.171544272 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.156579635 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.171460048 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150987458 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.167162158 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143508503 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.168931605 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.156714586 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.169727794 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.145282106 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.167988056 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.139515046 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.160444553 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.151073172 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.16887847 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.142486125 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.166648137 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.147280529 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167845791 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.14376579 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.158275108 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.151422971 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170538976 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.141379468 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.165866805 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.142895054 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.164046324 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.151982396 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.159042181 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.141958877 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.168474035 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.150129937 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.166637352 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.146856489 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.169841399 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.153078986 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.170382628 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.148792178 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163654586 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154310802 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.164408409 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.146625292 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.162252377 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.149173061 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.159664233 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.148715171 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.165572578 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.144910018 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.161362405 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149245642 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.171319282 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.151729275 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.165349664 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.150668643 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.171184458 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.151539583 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.163715721 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.151498907 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.161735911 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.139405395 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.162386016 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.139249374 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.168416161 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.142383929 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.170837412 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.143636839 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166171332 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.149566648 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.167287489 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.144098836 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.171271804 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.15705544 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.161704569 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.139967298 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164513505 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.144609166 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.163727396 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.141679763 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.168066658 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147756051 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.174301886 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.148453206 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.164626266 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.146305666 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.172215978 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.144000901 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.174829645 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.15262206 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.173812238 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.142272071 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.172761681 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.143670893 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171038143 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.140149672 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.168107804 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.146510839 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.166979901 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.143536705 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.166518762 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.143135303 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.160811357 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.143768515 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.173503246 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.144715025 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.172082086 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.146404658 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.16590453 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.142807897 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.163947672 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.15236318 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.166139221 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.153277624 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.167908139 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.140556446 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.161017458 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.151312513 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.168161436 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.152952234 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.162356946 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.150117983 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.17445859 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.150724722 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.167892576 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.155963947 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.174602092 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.153603683 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.171857222 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.140901071 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.165651826 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150831648 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.168551119 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.149058244 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.171226801 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.142611927 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.169897444 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.152485685 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.169273481 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.145490795 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.160537353 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.149315735 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.17480333 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.151234227 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.171147563 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.150262708 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168970336 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.143060523 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.170979617 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.152511396 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.167649885 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153684141 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.167524478 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.151222918 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.165637682 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.153887523 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.169151863 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.142576082 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.161244119 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.146003313 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.173604365 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.142243548 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.1511486 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.172665857 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.143154274 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.168285924 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.151761525 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.165748258 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.148828385 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.172909468 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.14467744 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.178831506 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.148713803 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.167445846 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.151536278 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.174368061 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.140174617 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.168847714 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.146638762 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.177248158 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.146262951 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.17495758 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.146543198 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173418108 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.151384848 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.174644865 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.152172818 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.176019339 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.141870418 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.17611605 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.150074984 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.172270676 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.145843751 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.16901512 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.141993209 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.167689408 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.153482201 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.167027447 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155176716 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.172676537 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.144417455 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.166829607 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.152587007 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.168677805 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154308045 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.166922369 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149359113 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.164911195 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.149705346 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.1702154 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.153600788 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.167564696 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.142242805 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.176566405 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.151683463 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.174327162 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.150484974 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.176247621 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.14154546 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.16509833 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.1505538 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.167999648 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.156591813 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.172702707 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.145914679 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.169650256 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.151333815 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.174213352 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154365049 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.165783774 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.144852023 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.171379135 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.14948024 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.169724056 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.143805747 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.175492132 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.146840125 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171722304 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.147412553 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.165350301 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.148721521 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.178070578 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.146549883 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.166229121 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.145813289 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.177039144 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.147734453 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.167422903 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.142428191 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.177598553 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.148978845 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.176630953 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.14604222 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.171453542 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.167225987 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.152415316 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.156406122 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.169318432 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.148140712 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.169531523 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152852354 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.174836058 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.141337694 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.168456289 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.179864257 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.155355915 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.170197488 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.15253791 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.168149891 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156718956 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.17578424 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.153415886 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.144408736 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.165921393 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.146596052 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.165060029 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.150933962 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175600591 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.147612858 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.169801446 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.153967865 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.175721963 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.151336293 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.17406618 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.143864975 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.17902916 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.146737683 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.175376473 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.14313435 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.16538949 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.152313483 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.177309872 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.148791442 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.171480183 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.150374266 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.174466623 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.144243817 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.168528277 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.151908841 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.177342252 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.154920235 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.169583918 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.148037633 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.174781134 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.160483101 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.172598728 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.149332996 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.178139459 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.155096855 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.172576843 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.149584572 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.17580445 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.155919403 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.174564879 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.156453618 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.169508065 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.148441199 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.178571886 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.157341093 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.180738513 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.14866014 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.166041656 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.153754608 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.170355722 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.143706659 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.175320589 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.156244222 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.178583652 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.149263387 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.169687778 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157616043 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.176423404 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.149762801 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.169851602 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.147053779 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.175627927 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14858259 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.177698659 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.146646927 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.179726987 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.156746531 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.178694133 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.15770145 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.166848452 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.155543899 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.174610946 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.158056955 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.173581117 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.145019151 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.166785011 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.152122801 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.179369723 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.155680472 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.176332293 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.1531225 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.176254218 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.151105913 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.172841551 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.147872897 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.17938071 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.155904073 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.174408152 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.151396917 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.172093678 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.152159979 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.173925991 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.159249997 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.179756104 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.151084484 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.182527556 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.154368489 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.171465089 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.147829919 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.172972697 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.153139187 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.172919287 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.155149521 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.171025309 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.144746203 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.178721608 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.156599186 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.171709378 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.159574994 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.181257478 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.148690552 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.176288669 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.158200207 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.177157168 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.152907207 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.173552634 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.153714911 seconds)
  done (took 96.017026874 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.200762768 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182697546 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.15257168 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175759835 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170738578 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177764097 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152551895 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.177077911 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.155252546 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184461161 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.152852394 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176998244 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.167982222 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.195646476 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.19279586 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163177366 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.177088808 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.155666321 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175508722 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15488427 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.19015433 seconds)
  done (took 4.538613725 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.154046164 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.153382073 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.176529448 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152715272 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.175526844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.153026826 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.17529951 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.152647245 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.177234517 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153487673 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.175495628 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154233439 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.174430416 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.154700709 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1746156 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155269073 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.15244551 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.176224313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.153045209 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.176879811 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152729785 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.177268055 seconds)
  done (took 4.509963155 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.181533804 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.155786197 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.174915221 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.15327806 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.180316006 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.153212292 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.180386071 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153522934 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.185907716 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.148134971 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.16839291 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.149267291 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.175295517 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.154304497 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.171567587 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.154592384 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.186313082 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.156853539 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.18143303 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.154798166 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.168146088 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.155396403 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.17907058 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.146749744 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.181553442 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.159518476 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.179569297 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.15746646 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.144780704 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.179741775 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.153461053 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.171926391 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.144775905 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.169711137 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.144753181 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.180247072 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.156790145 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.17747095 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.154167364 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.168752479 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.154978442 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.182384761 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.145974367 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.176976842 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.154582262 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.171475607 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.157867217 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.176542611 seconds)
  done (took 8.826692125 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.184874027 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.2161767 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.156651092 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.209347207 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.194321883 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.165129726 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.183339139 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.185399254 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.182242909 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.157158978 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.194190752 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.16896691 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.184044241 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.184820299 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.16149647 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.182689021 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.161601199 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.178542298 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.163541181 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.181103837 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.162251708 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.184133864 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.167648816 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.192315667 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.159862349 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.182364782 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.157718177 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.185044528 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.188491911 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.164899628 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.18563194 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.16348433 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.191938715 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.161760497 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.182431309 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.159552578 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.19513066 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.159748204 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.184509745 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.156841095 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.183270362 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.161858548 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.183092891 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.19316011 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.160830686 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.182736262 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.160329247 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.179414495 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.1686243 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.183643198 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.165370224 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.19317824 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.160432218 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.183014113 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.162081962 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.19123783 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.185813386 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.160263425 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.182058215 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.16923583 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.181032549 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.162142499 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.193349424 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.159407531 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.188474024 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.169579857 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.184462895 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.161980805 seconds)
  done (took 12.986014962 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1919155 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.186230697 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170518802 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.194847911 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.164023876 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.187039914 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163465175 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.187277837 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.185409664 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.170054305 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.443016947 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.297736808 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.166015506 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.192285182 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.162821299 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.190014782 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163818744 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.187538387 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.162150895 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.186866653 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.161816713 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.193221338 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.186371996 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.171232765 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19708551 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159659492 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.187077594 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.162844075 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.194289785 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.18564675 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.175120939 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.186798658 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.163832664 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.194855092 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.173283279 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.186698425 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.157802863 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.186676803 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.1869965 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.166224366 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.184272585 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.171484943 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.186392769 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.160663269 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.186576782 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.164293465 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.195523739 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.173714049 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.192060344 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.190059233 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.166082356 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195613276 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16447847 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.188492567 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.172058442 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.203472107 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.19464168 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.171682931 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.187708799 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.170625319 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.194353747 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.200903368 seconds)
  done (took 12.480249449 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.163618716 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158489065 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.182374686 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158325747 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.183675436 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.158093889 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.183978493 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.159459278 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.183552017 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159040605 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.182736641 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.160309119 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.181258848 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.159878909 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.182622367 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161760289 seconds)
  done (took 3.658089213 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.181768136 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.198276331 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.262853562 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.163184789 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.182744529 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.166216643 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.183025769 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.16252953 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.180092698 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.165892029 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.186451049 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.163618641 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.198292554 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.161052248 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.181835019 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.163669733 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.182673696 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.164317899 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.18136939 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.264675263 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.163339455 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.183495348 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.163810376 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.187329793 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.163568734 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.188097115 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.16562035 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.18410795 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.162690816 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.182830513 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.16223288 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.18987329 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.159885003 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.187175574 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.161147621 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.184599529 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.160212343 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.183827598 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.163319933 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.184276661 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.162299523 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.186647828 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.161060057 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.185973427 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.159232889 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.184563921 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.15904719 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.188358806 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.161775918 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.185675234 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.161552499 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.187916275 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.166545645 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.191876845 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.167279896 seconds)
  done (took 10.731061407 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.176635958 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184689174 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.173332874 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.182041368 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.163597249 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.186353352 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.163240767 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.185059875 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163652156 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.181445173 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163817276 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.185186652 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.164619446 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.185972376 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.164120593 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161554494 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.18325385 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161539195 seconds)
  done (took 4.084971123 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.164090344 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.157486101 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.18348656 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15812851 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.183515153 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.157736421 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.182245566 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.158770499 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.183454813 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.159694911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.182989156 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.159714354 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.182652597 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.159774664 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.183457874 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.160488879 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.159621873 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.184723439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.158292227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1841502 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.158119086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.183923513 seconds)
  done (took 4.702839508 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.17607355 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.287154088 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.191693589 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.296901493 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.156234173 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.181204777 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.165710233 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.182425223 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.195891927 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.158119652 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.178149018 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.158059099 seconds)
  done (took 3.286110228 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191039489 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.219720343 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.161978438 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186237189 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170338554 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191141338 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165476169 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189626504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171956228 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199376032 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18882457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174962768 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19788647 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173069362 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194270719 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192299695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167472489 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188944513 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163622122 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203516381 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165134838 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199055107 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164788438 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191328863 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165630037 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197347427 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197241095 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178500079 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190552662 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173122764 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19565587 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16506306 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198304209 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201558043 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162910533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19709034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166217966 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.207382514 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169330655 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198231361 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.186039354 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1725533 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197581632 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169803664 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199667433 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165660072 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196710173 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16648699 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192446489 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.210365166 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171922252 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200019925 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168936728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198442879 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198967478 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.187841624 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201829073 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196390558 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171130484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.203420811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173766545 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197149768 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197109865 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178804701 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197624951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173871768 seconds)
  done (took 13.211464032 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202606274 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18870144 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167608576 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202770039 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174328288 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191875065 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165586009 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191012273 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189107625 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165071753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.232856991 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166676831 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200243409 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197844339 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169380704 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191504112 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168738168 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198439607 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164411767 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.211979271 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16702996 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198474295 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199869701 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174860341 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202193624 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171802765 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191588889 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166095596 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192752064 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167137642 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196393115 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191088455 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.176207223 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.188447492 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174595038 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192842355 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166553601 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198029949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16813479 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197195893 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200761296 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.180657581 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191950646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167337002 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203031229 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167556476 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192125985 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163342652 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192647304 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188770282 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.180908966 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.202875085 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17716042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200360754 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191652249 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169281868 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191722034 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170464814 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191130124 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174134208 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200628425 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16821168 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.21304071 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191553348 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168878628 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199944605 seconds)
  done (took 13.236102377 seconds)
done (took 234.750873312 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.236386441 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.277464349 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.261004946 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.244218944 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.153034921 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.216065188 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.185758032 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.260407309 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.179584282 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.154234885 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.177155531 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.156512368 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.2443921 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.154956151 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.177394596 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.156908049 seconds)
  done (took 4.204526651 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.256396648 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.426717581 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.172054471 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.181642423 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.161286713 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.183075295 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.158234339 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.184196709 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.160117803 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.187903401 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.160393562 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.179205833 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.164889959 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.178350827 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.159256386 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.183095152 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.164734502 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.183680792 seconds)
  done (took 4.427552204 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.181277252 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.234298089 seconds)
  done (took 1.399913085 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.195122008 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.274993708 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.381511584 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.232471394 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179572632 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.200416828 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.232477413 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.171871769 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.274935196 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.194927102 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.17211048 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.181100914 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.185065216 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.18905432 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.175531643 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.182907415 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.18707902 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.199741525 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.173643715 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.185914988 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.206677754 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.164396535 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.190064433 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.176023545 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.265146573 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.174972613 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.188578043 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.185423411 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.163282611 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.196241805 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.16731628 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.200100836 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.170370029 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.239864587 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.188014745 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.238816283 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.165299618 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.185999391 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.173367789 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.185119842 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.162881652 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.189103782 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.195243208 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.161227982 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.185203521 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.167083423 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.186843761 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.163655428 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.193669453 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.165881518 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.194274628 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.164960042 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.235218967 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.192666498 seconds)
  done (took 11.533648865 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.980037311 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.207958253 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.186664277 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.133551909 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.207975544 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.173966552 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.970137874 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185248089 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.31319539 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.016952356 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.175640903 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.19331913 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.301898735 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.344095536 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.362416064 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420620955 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.828908793 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.17191649 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.217169158 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.229465706 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166146507 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.203033042 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.198874148 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.486869115 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.18624014 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.159161908 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.190355936 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.192502087 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.214841693 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.186978483 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.164646819 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.285328002 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.333261915 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.302432037 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.160154705 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.185092153 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.159355739 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.249693542 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.331815141 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.307009514 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.253238781 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.158744824 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.157884989 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.19088134 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.199205403 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.15837334 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.24439778 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.258091003 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.256727675 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.187718266 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.171052236 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.193657831 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.163892719 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.243429653 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.184973633 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.424281431 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.454544073 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.161913207 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191506418 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.174563452 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.328533853 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.188719453 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.299664846 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.209152163 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279683164 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.184918683 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.865471678 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.250247245 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.159659947 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.191861163 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.165404443 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.19307058 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.18867236 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.221544757 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.485043498 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192901207 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.165602172 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184647963 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.291662705 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.160558014 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.186394973 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.244313486 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.161769079 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.192171947 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168917936 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.19303202 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.255342233 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.339639117 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.167682414 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.194085558 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.18986597 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.17227898 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.185914772 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.270662119 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.319030084 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.244138208 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.295461596 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165422867 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.247001214 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.251791483 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191652003 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.256305744 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.166538785 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199556147 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163469769 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.316958405 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.222200243 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165243569 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.190613079 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.167893188 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.227521096 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.164284187 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.194214692 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.255992701 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.546247753 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.253656665 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.157938199 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.212454984 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193882755 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.21920102 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.195369088 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.325587056 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194078269 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.251845718 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167195858 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.18460393 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.168787274 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.247438461 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197895525 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167876128 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.193252358 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.169669815 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.342742102 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.312481132 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.170480147 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.336045239 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.235108833 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.193284596 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.259205204 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167788831 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.250279447 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197271827 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164329421 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190439041 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.866819312 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.199191869 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.167884803 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.194254689 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.269595364 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.162950374 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.19040038 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163021271 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.184777034 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862152752 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.165355603 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.186840798 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.165209549 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.19300281 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.167060411 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.194370973 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.168229857 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.247534833 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.337319901 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.170948625 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.194069182 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.161482898 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.242916111 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.1903353 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.162707978 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.189153456 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.16201383 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.195810072 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.167310538 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.19192537 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.256141973 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.245783977 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.29745479 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.631943279 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.189478147 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162014524 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.335785857 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.161633789 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.416886014 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168342947 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.327640805 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.248731284 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16166764 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.452568099 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.225440155 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.270859208 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.191791172 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.257681039 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161049619 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.195172834 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.245955652 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.16348551 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.195863171 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.246988496 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.172655115 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.195852151 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.337809927 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.18862547 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312013798 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.161656912 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.256429953 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188260764 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169902442 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.393415584 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.189674654 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199144189 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.220913128 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.195340909 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.187509299 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.941999825 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.163976424 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.196142761 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.169627933 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.326006335 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.248511903 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.169872408 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.194369609 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.172287446 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.246431774 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.294267685 seconds)
  done (took 61.937924634 seconds)
done (took 84.482590741 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32133183 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230505192 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.427016046 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237848437 seconds)
  done (took 2.296181899 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.346062961 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.203665824 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.304356243 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.187096189 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.311861077 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.159928716 seconds)
  done (took 2.541777734 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.232977945 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230001134 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228707662 seconds)
  done (took 1.726149906 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271331575 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273059069 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.411809236 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325256262 seconds)
  done (took 2.369882362 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.340419545 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.179188292 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.221230433 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.292612388 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.308633163 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272686359 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.21304583 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.211567083 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.220553128 seconds)
  done (took 3.322740504 seconds)
done (took 13.289490427 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.444422717 seconds)
    (2/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.197613715 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.363722096 seconds)
    (4/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.46689531 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.301048067 seconds)
    (6/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.203132691 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.175764933 seconds)
    (8/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.411293418 seconds)
    (9/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.515445113 seconds)
    (10/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.391262097 seconds)
    (11/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.380401808 seconds)
    (12/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.217983512 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.301530597 seconds)
    (14/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.221149127 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.352828704 seconds)
    (16/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.172245847 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.351433243 seconds)
    (18/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.319774668 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.268146922 seconds)
    (20/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.226251204 seconds)
    (21/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.221144906 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.221710846 seconds)
    (23/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.281980243 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.319613804 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.198617429 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.184839218 seconds)
    (27/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.283912171 seconds)
    (28/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.172946434 seconds)
    (29/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.162066996 seconds)
    (30/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.195826186 seconds)
    (31/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.191292197 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.184245301 seconds)
    (33/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.291949937 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.158570383 seconds)
    (35/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.193605558 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.215722419 seconds)
    (37/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.188725695 seconds)
    (38/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.225534996 seconds)
    (39/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.179168435 seconds)
    (40/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.253742136 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.165306113 seconds)
    (42/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.315894048 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.165002967 seconds)
    (44/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.198771798 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.182813788 seconds)
    (46/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.201029115 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.164346816 seconds)
    (48/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.230679264 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.372735512 seconds)
    (50/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.219333333 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.298699426 seconds)
    (52/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.179275386 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.196528053 seconds)
    (54/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.265806535 seconds)
    (55/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.242701161 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.19317951 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.177487569 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.269297939 seconds)
    (59/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.130287247 seconds)
    (60/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.133145726 seconds)
    (61/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.20761173 seconds)
    (62/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.132078473 seconds)
    (63/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.44081128 seconds)
    (64/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.223046493 seconds)
    (65/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184790594 seconds)
    (66/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.200565564 seconds)
    (67/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.217074296 seconds)
    (68/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.221662969 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.216239308 seconds)
    (70/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.138352069 seconds)
    (71/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.21869871 seconds)
    (72/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.165041969 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.169892406 seconds)
    (74/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.226042525 seconds)
    (75/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.135578283 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.134204273 seconds)
    (77/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.17463924 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.288423718 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.213731592 seconds)
    (80/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.191032808 seconds)
    (81/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.1648481 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.170204563 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.215062826 seconds)
    (84/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.131593908 seconds)
    (85/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.222845688 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.203158332 seconds)
    (87/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181282491 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.191567894 seconds)
    (89/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.128559625 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.201821053 seconds)
    (91/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.20292948 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.166047595 seconds)
    (93/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.202401448 seconds)
    (94/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.1728546 seconds)
    (95/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.265113845 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.269435447 seconds)
    (97/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.186362247 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.215902618 seconds)
    (99/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.19354634 seconds)
    (100/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.134525997 seconds)
    (101/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.135303073 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.197238709 seconds)
    (103/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.127356247 seconds)
    (104/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.226455297 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.167292908 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.13016523 seconds)
    (107/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.162462916 seconds)
    (108/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.131805073 seconds)
    (109/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.128168834 seconds)
    (110/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.21433536 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.136023427 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.172937434 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.196324852 seconds)
    (114/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.129403844 seconds)
    (115/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.138267656 seconds)
    (116/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157920726 seconds)
    (117/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.130471722 seconds)
    (118/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.177332846 seconds)
    (119/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.154792056 seconds)
    (120/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.180320898 seconds)
    (121/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.129972095 seconds)
    (122/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.216603624 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.136943952 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.212758335 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.190368843 seconds)
    (126/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.132498696 seconds)
    (127/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.155101191 seconds)
    (128/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.132282835 seconds)
    (129/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.244711617 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.164854959 seconds)
    (131/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.175992953 seconds)
    (132/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.220654374 seconds)
    (133/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.130496722 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.13607691 seconds)
    (135/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.13124277 seconds)
    (136/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.163337227 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.175902604 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.194706994 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.172032454 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.195036679 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.130276396 seconds)
    (142/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.131543036 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158567332 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.166955333 seconds)
    (145/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.135237084 seconds)
    (146/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.193733783 seconds)
    (147/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.17239139 seconds)
    (148/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.203169386 seconds)
    (149/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.173900429 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.196289003 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.166351761 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.193925081 seconds)
    (153/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.16562962 seconds)
    (154/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.208913104 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.170521525 seconds)
    (156/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.13208135 seconds)
    (157/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.209974517 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.16432747 seconds)
    (159/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.161934336 seconds)
    (160/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.17509113 seconds)
    (161/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.132294879 seconds)
    (162/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.197226406 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.174230015 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.165059745 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.190973975 seconds)
    (166/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.196892786 seconds)
    (167/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.13187832 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.131520834 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.198891938 seconds)
    (170/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.130282071 seconds)
    (171/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.129850892 seconds)
    (172/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.168109845 seconds)
    (173/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.135009103 seconds)
    (174/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.131181216 seconds)
    (175/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.131522721 seconds)
    (176/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.157638055 seconds)
    (177/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.138184882 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.167358801 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.21588523 seconds)
    (180/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.134023243 seconds)
    (181/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.13291426 seconds)
    (182/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.160639888 seconds)
    (183/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.133700804 seconds)
    (184/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.130826893 seconds)
    (185/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.136537678 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.160208164 seconds)
    (187/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.131030373 seconds)
    (188/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.137156193 seconds)
    (189/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.157585065 seconds)
    (190/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.178874027 seconds)
    (191/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.204843642 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.171278778 seconds)
  done (took 39.029830317 seconds)
done (took 40.0687646 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.320912118 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.156617619 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.175798441 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.204707929 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.303146784 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.183037424 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.221935687 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.175717193 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.215820729 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.174503125 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.19439608 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.189946635 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.204466578 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.314083403 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.207545846 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.169721949 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.195924396 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.188701939 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.219266085 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.193570724 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.302052294 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.198120613 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.187903246 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.195114237 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.302839334 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.171088884 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.204454157 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.178334772 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.21712005 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.176631166 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.205082755 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.168269823 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.218609483 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.191839068 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.195004143 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.178310484 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1933675 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137966845 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.176581183 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.206987237 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.190051823 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.206198474 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.176870037 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.19760518 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.177209941 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.205906086 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166466461 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.208950628 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.166460107 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.205726377 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.169515996 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.220844407 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.175157535 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.195086908 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.165941054 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.197106025 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.18657802 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197430913 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.189524693 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.19689921 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.168282885 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196186394 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.179152285 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196029989 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.178429684 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.197820787 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.17747591 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.208064538 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.175743054 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.19918597 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.167827438 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.205077152 seconds)
done (took 15.35622439 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.177168819 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.237811868 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.320843021 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.321805085 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.196008586 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.214432463 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.210059483 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.191940102 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.208036182 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.185450399 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.231534575 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.199483264 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.320415043 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.214730352 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.213669625 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.183609884 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.208086429 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.176331161 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.318411882 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.221783461 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.191341227 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.215169772 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.192827411 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.215894977 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.171002692 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.223512383 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.204062105 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.181364819 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.199392371 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.190690013 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.221240751 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.173168988 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.204221569 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.189279559 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.21812207 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.182433899 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.214327999 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.180863286 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.202089433 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.172046645 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.207735291 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.214779463 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.174822351 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.212343966 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.181523734 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.215310797 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.180118648 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.211653671 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.174982091 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.207924704 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.174988497 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.22596566 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.184064821 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.216959455 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.185300111 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.214358677 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.184971763 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.214805643 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.175599902 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.214685795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.172647131 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.203106325 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.181019948 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.222729095 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.203474041 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.186587972 seconds)
  done (took 14.730056265 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.196846867 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.232473355 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.183676336 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.212938239 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.178793179 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.196686696 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.166427086 seconds)
  done (took 2.489284013 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.174128285 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.337215417 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.327092082 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.328181769 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.347759179 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.34210238 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1911991 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.201595931 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.204685254 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.211368794 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.337271036 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.423085609 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.18036873 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.214961663 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.332846486 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.168539422 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.329855338 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.202502739 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.183657937 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.360799467 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.186716564 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.232425456 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.183067021 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.20098049 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.333613107 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.169424941 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.411491393 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.188223927 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.210788182 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.183756705 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.215326048 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.273721172 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.334361851 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.183649854 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.208430515 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.332816131 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.321598093 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.213340894 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.381050249 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.203342598 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.318465144 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.184712632 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.215695532 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.1860873 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.215055541 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.318399283 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.188966263 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.216466894 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.183537338 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.370169424 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.183420344 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.334880785 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.212308716 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.184067502 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.211555745 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.186039989 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.22175745 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.185215104 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.337801472 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.220972197 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.329362906 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.328998218 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.323733866 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.359272654 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.196685228 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.336631308 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.312266173 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.214611704 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.181350029 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.21774036 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.334166885 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.183124817 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.214978011 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.321561637 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.218509271 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.337147055 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.335585484 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.180951831 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.21505949 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.173669463 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.215144075 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.170214273 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.319949369 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.21643096 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.182595066 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219879629 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.214393445 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.187213957 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.204508388 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.194254327 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.215454272 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.18310192 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.220271713 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.184853671 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.217130776 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.337082415 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.213175776 seconds)
  done (took 25.178701661 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.176928433 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.171278319 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.205718248 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.200219007 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.174480543 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.172030492 seconds)
  done (took 2.252541729 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.212518771 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.216040362 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.194813801 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.216273566 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.234988035 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.322150738 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.331133918 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.213314113 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.236112497 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.198516262 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.326014606 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.328343473 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.325702751 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.221488696 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.332069892 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.187654472 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.330447319 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.216948112 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.194360395 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.216421817 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.184478426 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.222141844 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.182649377 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.346701155 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.188475942 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.218893432 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.181290803 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.229194601 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.194797933 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.212041188 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.190886077 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.21801062 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.178528863 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.210415427 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.333551835 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.177742659 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.217888753 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.220340585 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.190027054 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.215791857 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.331064447 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.18553469 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.223009932 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.190051421 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.212495817 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.178739049 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.220387905 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.178571648 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.33011615 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.223308348 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.222690665 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.189555162 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.220961222 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.192282442 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.208478545 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.181742739 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.219723098 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.334971651 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.19086642 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.212266432 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.186603596 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.220426195 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.180169066 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.221726652 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.18615705 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.221928342 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.207624654 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.190855888 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212769361 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.189820635 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.218989801 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.188957021 seconds)
  done (took 17.400109528 seconds)
done (took 63.155246595 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.640809934 seconds)
  done (took 2.794986969 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.173588795 seconds)
  done (took 2.329731448 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.427800476 seconds)
  done (took 20.613516375 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.508132791 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.425446266 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.099389375 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.248133233 seconds)
  done (took 3.434634749 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.184371481 seconds)
  done (took 2.358366436 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.481547549 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.350698 seconds)
  done (took 1.996495042 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.847489486 seconds)
  done (took 2.026130247 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.982877007 seconds)
  done (took 3.15023246 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368990356 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.287875677 seconds)
  done (took 1.831992638 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.729692383 seconds)
  done (took 1.909415775 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.462979499 seconds)
  done (took 19.645472716 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.325499187 seconds)
  done (took 1.510026254 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.364750581 seconds)
  done (took 1.552501039 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.971061828 seconds)
  done (took 5.159314666 seconds)
done (took 71.483186069 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.192273802 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.219177003 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.191968275 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.217150989 seconds)
  done (took 1.987643466 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.196651195 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.214663553 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.192806936 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.213507644 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.19350304 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.215738409 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.187690395 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.218213775 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.188534205 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.217192942 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.189515442 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.214656915 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.191658551 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.215329607 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.187945599 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.218051652 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.191534995 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.216423783 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.189471383 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.2156959 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.18937289 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.217652499 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.191047586 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.219875893 seconds)
  done (took 6.067516801 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.18565571 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.176842617 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.212037643 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.17559749 seconds)
  done (took 1.929561499 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196471436 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.229966964 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198409644 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.224724657 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.19909354 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.228194109 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.185159255 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.216336897 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.187341638 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.227424117 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.200860822 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.23185338 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.227406834 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.192042681 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.226164031 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.183588179 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.216961015 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.199345783 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.224157009 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.197031545 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.218954687 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.195400551 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.223423085 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.197684761 seconds)
  done (took 6.216771011 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.263136328 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.232398822 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.214136523 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.2648292 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.248085985 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.186993714 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.245337071 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.192203728 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.223257735 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.196724064 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.218882822 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.233524317 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.225873295 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.18910827 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.219298254 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.192971601 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.229473074 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.220896316 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.2305094 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.222586925 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.193001839 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.231654841 seconds)
  done (took 6.066837963 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.194054313 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.207781532 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.179796173 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.207545795 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.193303833 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.210919611 seconds)
  done (took 2.389729335 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.179688415 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.171800607 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.204902923 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.171956469 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.208757962 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.173364827 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.203001891 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.173562998 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.204515439 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.173537633 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.20408765 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.173506584 seconds)
  done (took 3.435219189 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276304115 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224354368 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.354185968 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.474411425 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267269077 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259611457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.385012582 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229471317 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.27882793 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238307872 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281410698 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234123456 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255089225 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289090219 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213093851 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245125576 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27392998 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279276854 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244676832 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313547983 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257262624 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276119794 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259554282 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25091536 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239242922 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233560883 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.222802065 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198485099 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269143324 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267298085 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278578516 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251521516 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212188571 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288347931 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.334408186 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279841233 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.368205944 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236467407 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.259876244 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.259810411 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.329934246 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244585183 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294592339 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253742815 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199031426 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293412014 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251627222 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.287803206 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.204408273 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244079153 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281984181 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249264311 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.270426693 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23873938 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403843193 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204379828 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.242990028 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279750079 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290563568 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301521968 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24898044 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.225410669 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270984387 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292928747 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315695638 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.20978436 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.266305379 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226438488 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234190408 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306696992 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284893 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264431144 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.293245194 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200934508 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27455313 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266725123 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255480999 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307327183 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241780097 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.222145319 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219222283 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236355497 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227743433 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.259482675 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223606941 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319360805 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201323613 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.271353113 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277917779 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221472889 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263639044 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26358069 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262594513 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220214167 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.18876453 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214408993 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.259527719 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257962152 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199501606 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252223313 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21008357 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.229460152 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252627991 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.193674338 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271653986 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.190435101 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26288713 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272306245 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.201777568 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283087656 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249869313 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.231088141 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271131562 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295811888 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233370605 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203565255 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321069216 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274473011 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.237579003 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.240614787 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.299221801 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.242824558 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205299008 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269179272 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298914257 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246878488 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302160176 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212244501 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238264915 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.194668314 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276697313 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262563621 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.229522733 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231545393 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.267999011 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289871779 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.197423392 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242093381 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283513827 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203925631 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227521194 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207921139 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240914439 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.212611053 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.253838179 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.24094485 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225582488 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269721867 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.268334783 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258326219 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207141963 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276584577 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233129319 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.240670859 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251936818 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.188642445 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.276725433 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300192377 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23285486 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250267293 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.26351989 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28340519 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276663876 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199899133 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.28499925 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231969169 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.192409664 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265351036 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.271952122 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263677098 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.259076413 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280729144 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.265936018 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.267201468 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252392735 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239256758 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.287541739 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260633529 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.242556187 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.242928471 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273733352 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.223550508 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.19462675 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.230902301 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210295387 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232834045 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20712203 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283644494 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269320392 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276107686 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.271497627 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210394537 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.294502387 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.228313404 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230112159 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.278510611 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243832745 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.292094988 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261309763 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287122979 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24466791 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267187105 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.191649862 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228961657 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.205487505 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263426971 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208050051 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241230521 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245184228 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.292957756 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238844156 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252879225 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29119299 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271740936 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.30496839 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.192284069 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.266547248 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267968923 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239878029 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.293957354 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206556329 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.264189836 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29621172 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245000449 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263423095 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271350217 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286707943 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299907006 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.267220852 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20317063 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248586934 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231041794 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244578871 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264732229 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214214452 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23644682 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250287366 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.210320951 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244643001 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291699649 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215703887 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278484956 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.258676835 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272293206 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198298219 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24678077 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276478641 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21772967 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.194520638 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237212869 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295594352 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254302791 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255373328 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240113001 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236561599 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.422432229 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253126806 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276425451 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240789953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210424978 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.278107166 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.260685499 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231835069 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.288731967 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247374374 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314710701 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273588006 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.21248956 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235700019 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219608855 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255757465 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.228982748 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.224372346 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.270577493 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.246676325 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292310302 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211482089 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276708509 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282501675 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.219061911 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.255093553 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210749343 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329271147 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275079578 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278332104 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.273115365 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.235095529 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288315346 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228846255 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20107739 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.237865097 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.255822358 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235946762 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28524667 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.269223199 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283186228 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247582557 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265115785 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246353509 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.199522267 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.27265507 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253044816 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284012378 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208618656 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.242880731 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291420108 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.185702953 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236121421 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230848588 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399485194 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254318255 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273593211 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.16676807 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.390877285 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202602061 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238642569 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262269869 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24225049 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.23911175 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.261966135 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27756729 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24746187 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.229242456 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240828089 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.279918215 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284995129 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272249951 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277714058 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.219600415 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.267663368 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261915507 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242769259 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252329517 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.251414614 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231586104 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300449538 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.281604335 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.204685325 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276449617 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277455171 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275739754 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245769875 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2469181 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287461479 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200359639 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273895711 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243456653 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198181754 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267002784 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.269082764 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205038825 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279207377 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278662265 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203964257 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234077501 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252798509 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239778418 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247738729 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.235956656 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258893699 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.237341056 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288038696 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31644646 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203543103 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272955977 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215021574 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236682997 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244790018 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216637892 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238760458 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.251805805 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283207768 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.236504497 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247044754 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271236965 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270262508 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261061725 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214731861 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.372106692 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.200197237 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298358235 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258286369 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303503661 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221174466 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283021011 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277534617 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255583436 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23969815 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255164301 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.328298866 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238950052 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.277049716 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239481082 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21658334 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245594985 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.205949232 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258457719 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277033894 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214683642 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.243265423 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.273682263 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218368793 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.253374381 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248478979 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272611088 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.25797514 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295758075 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.294508902 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212191288 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283933888 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282107821 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234550389 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.238172566 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278865796 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251666361 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226542595 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.243309278 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.209786659 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322244289 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.235147158 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265297477 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249503041 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.277956514 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280840568 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.208534048 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285193644 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248365831 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250945339 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234282948 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.258452643 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244086237 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243588709 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.200394786 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279342108 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268518562 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.272236191 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21636393 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.288698126 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302578648 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.198424335 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239244764 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369824995 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269815973 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302179081 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.191736195 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245573496 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253390169 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234252771 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.272592282 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278916295 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.205187428 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238647425 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.250562943 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.224191714 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.229773329 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243454053 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29145345 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26693011 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257705562 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.243819602 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.366391027 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215597963 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280805873 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.176338386 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.237267732 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247474214 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211491325 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250990457 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283288851 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32874957 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.238328666 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.256375739 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242931051 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.202371745 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237558505 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236464373 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258936391 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276127785 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222387145 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.196691738 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215813511 seconds)
  done (took 123.693698437 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256669747 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.250315431 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.267851323 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.318585532 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.296134613 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.39243056 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.32527742 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.346571008 seconds)
  done (took 3.779383206 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.197397438 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.241182032 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.249499765 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.194001103 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.220422292 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.599091016 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.246542638 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.234010054 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.235054086 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.232823476 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.217560295 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.64988619 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.228153763 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.226540519 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.228972523 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.185880387 seconds)
  done (took 5.69665393 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.427273222 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.666654776 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.615224973 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.37998085 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.349051519 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.294610523 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.946435733 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.274489557 seconds)
  done (took 14.276680329 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.249862106 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.281085738 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.550008304 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.423366896 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.295558159 seconds)
  done (took 3.138562872 seconds)
done (took 179.84978937 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.202615123 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.232871166 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.203176971 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.236682979 seconds)
  done (took 2.194909126 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.25820312 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.15428918 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.191713034 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.153009967 seconds)
  done (took 2.087923048 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.460104333 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154136425 seconds)
  done (took 1.9735284 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.223057198 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.246244685 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.212454153 seconds)
  done (took 2.031758282 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.212619141 seconds)
  done (took 1.555649005 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.193589795 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.730440717 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.392733387 seconds)
  done (took 2.662458417 seconds)
done (took 13.845020068 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219341917 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.041228686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.661476863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.209460853 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.830364154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.475675837 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.548738646 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.256844623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.310960334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188680887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.253645483 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.76892016 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.534343999 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.956628492 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.516130678 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.952936392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.80420964 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187822245 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.227719668 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188367809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.527330111 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186562133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.222848019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.18846258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.802001339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.493638895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.220572032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.965137721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.221350632 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196358322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.50997409 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18683291 seconds)
  done (took 24.171236762 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.192284261 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.27788372 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242056532 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.225044213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196690873 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.224041167 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198321398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.235407337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.322403657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188939565 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.245143533 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.186705603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.227731508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.18884961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.246794368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.187149278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.223473628 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188877591 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.229275783 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189873398 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.244662549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.187624424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.225009812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188662449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.2221636 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.205503983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.223582457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.199471334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.222686308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.197992371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.226847466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.188631718 seconds)
  done (took 8.299287287 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.234468467 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.288449473 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.243449116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.262441098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.27790897 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.191506412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.31243202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.259111319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.295773147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.224572004 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.209628292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.223779462 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.261823358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.191743559 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.24670639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.189592817 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.224983661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.191332361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.228589592 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.191868116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.245701078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18921821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.2246454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.189509716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.223279298 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.209230457 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.222895684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.201224162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.222632945 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.198343309 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.228417717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18925245 seconds)
  done (took 8.649091709 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.20653254 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.202847459 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.24579237 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.246483692 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.200793041 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.23507553 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.204371849 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.197574552 seconds)
  done (took 3.099180118 seconds)
done (took 45.547488739 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.214326955 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.237771581 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.21041664 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.237090162 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.358599745 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.196592887 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.241164951 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.196347627 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.237812136 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.212437934 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.187972516 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.234175794 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.209543297 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.234886614 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.360725711 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.23936103 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.364099117 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.36257978 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.197399334 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.241396482 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.198193967 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.363450139 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.240870887 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.197946576 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.34075632 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.229677156 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.353773226 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.200513467 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.236565398 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.188871975 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.361742993 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.2381315 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.198082257 seconds)
  done (took 9.660312121 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.308201693 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.235469509 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.198623095 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.235367747 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.200407906 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.234606761 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.348304807 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.198328617 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.232872581 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.198516848 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.232869984 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.328203119 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.204665241 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.228839448 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.201448518 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.17433391 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.349328465 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.235061231 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.190812449 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157249661 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.231078521 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.198066654 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.35747837 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.230540018 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.199985178 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.234385257 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.199811447 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.239169069 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.200953964 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.233268361 seconds)
  done (took 8.38912707 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.206708768 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.210219713 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.252325768 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.300343358 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.229618736 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.246337484 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.215067369 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.245966211 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.220350807 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.229830942 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.20831154 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.264350178 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.208166906 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.238486218 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.191521995 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.243907761 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.207475098 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.228957079 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.201294851 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.245609121 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.211732708 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.245744755 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.213676982 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.236575504 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.19110898 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.235519613 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.201772668 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.238617263 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.200050206 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.245177801 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.193310856 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.23244436 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.194646835 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.263014324 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.228097854 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.207108807 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.247940857 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.205591436 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.241069616 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.227339231 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.230025279 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.195438832 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.253459722 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.249192264 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.230089283 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.203115898 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.229826938 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.207502207 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.229964111 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.210593804 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.271136882 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.19276212 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.248564449 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.191758144 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.226041275 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.200649879 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.229681742 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.197392146 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.243465876 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.194415355 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.250387384 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.1999226 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.240519859 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.195351231 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.239478164 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.191636666 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.228270324 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.197025552 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.254901223 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.200547079 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.267067224 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.192301058 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.241274939 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.206652366 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.24121152 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.205504968 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.228696273 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.204698604 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.241329046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.197865499 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.241155401 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.195966224 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.230323029 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.210110578 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.249844629 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.207616103 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.240725976 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.203746104 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.231510374 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.195866963 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.246156478 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.194481528 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.233824347 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.206332086 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.230777436 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.197852607 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.239587017 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.201900833 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.227149758 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.218833271 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.23205464 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.194444036 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.25432607 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.197466745 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.232068913 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.203533669 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.269924886 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.193487003 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.238054591 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.205101293 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.229514523 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.202237517 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.231558212 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.193889692 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.245545051 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.210253617 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.236070882 seconds)
  done (took 27.462080778 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.460091909 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.450244732 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.299069935 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.534164464 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.206427554 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.408299545 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.449662204 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.451472709 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.232782859 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.228708464 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.287309983 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.453481217 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.196051409 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.259145784 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.456612836 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.53741484 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.224498972 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.271170706 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.266511491 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.207975772 seconds)
  done (took 8.270349868 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.204718851 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.263572247 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.21802809 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.246941898 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.205715323 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.246449155 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.195859476 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.251195236 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.207236195 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.2377856 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.198479195 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.236920183 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.208403778 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.244492537 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.211378442 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.211500675 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.23889368 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.234028118 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.217891093 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.234222328 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.171286313 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.254195283 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.204416361 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.251581933 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.21322638 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.239494317 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.195709782 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.233785057 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.202797138 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.237317068 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.199315111 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.236253844 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.203486024 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.171348913 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.243593449 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.210295769 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.236044515 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.198073834 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.235256945 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.197855755 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.24401526 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.20726226 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.23722727 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.166249571 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.21386602 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.213226943 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.210586285 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.242703102 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.174119027 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.249583056 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.209108131 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.244407435 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.204078322 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.251248611 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.203230265 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.246331362 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.207145564 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.243295704 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.200893209 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.228420713 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.194558468 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.233096497 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.205337422 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.243692705 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.209184523 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.237951005 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.204877421 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.194785294 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.236628378 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.198075314 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.233852544 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.208646941 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.252252249 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.203847106 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.237979999 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.205220705 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.240138712 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.161887322 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.239792363 seconds)
  done (took 18.801839354 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.221399752 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.240365888 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.213832016 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.264339966 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.209321901 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.237406316 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.206615142 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.250057327 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.210270219 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.248878722 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.21147006 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.244953172 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.219201774 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.241435783 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.206544702 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.246784927 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.20774512 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.271148404 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.208066357 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.259552375 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.209795577 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.238937779 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.20879295 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.243926518 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.222955172 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.244505279 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.223370294 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.245008518 seconds)
  done (took 7.870095799 seconds)
done (took 81.81333711 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.586771453 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.752366066 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.508385023 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.507086703 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.512397756 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.517892519 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.510375321 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.508539889 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.337117239 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.484585135 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.509493687 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.521132528 seconds)
done (took 32.709043278 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.607975769 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.188712531 seconds)
    (2/2) benchmarking "String"...
    done (took 2.226086179 seconds)
  done (took 5.821282391 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.201778329 seconds)
    (2/2) benchmarking "String"...
    done (took 2.203378395 seconds)
  done (took 5.802449623 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.500181089 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.498099777 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.789006155 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.497234679 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.49692516 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.497264414 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.505566894 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.507662147 seconds)
  done (took 18.187457368 seconds)
done (took 36.319124674 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.504252698 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.73678271 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.746766967 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.484722066 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.517548187 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.508320228 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.500770874 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.547142401 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.501127839 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.49714518 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.97129369 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.767533406 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.51412615 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.883603183 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.486361806 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.506488962 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.502759133 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.775876346 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.502971849 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.496760141 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.482517757 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.507301175 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.523172831 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.510631349 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.518043592 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.514961639 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.518666143 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.500957141 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.770923689 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.522703284 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.489291488 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.520435208 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.526079857 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.503464363 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.509150363 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.507922853 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.770724571 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.516681559 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.505394335 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.509359992 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.773922146 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.522637281 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.50447699 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.508237468 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.500827846 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.516263442 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.488691499 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.630594525 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.525799375 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.50704093 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.59453088 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.9297487 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.504151161 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.507417433 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.515124152 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.789210594 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.514715971 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.628538314 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.538948134 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.510669033 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.506780433 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.505290279 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.519720108 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.519653135 seconds)
  done (took 163.639355652 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.504122205 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.507321615 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.508564164 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.511502621 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.506280037 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.506701318 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.50356972 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.502458096 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.507248569 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.532758122 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.505075496 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.50644823 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.509716586 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.454241623 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.511501132 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.527161071 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.523533312 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.503403059 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.516237418 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.503531416 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.513097325 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.509840681 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.527820922 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.5072299 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.51985151 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.607387067 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.536594391 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.546268853 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.515388489 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.508548578 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.525730506 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.5106001 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.276502456 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.377127734 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.516634776 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.527168348 seconds)
  done (took 91.580392722 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.505733455 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.504917331 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.50636472 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.507411441 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.544319185 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.50349495 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.184175461 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.181668325 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.556193073 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.811218107 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.177420825 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.852782833 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.506096059 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.603278517 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.517276664 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.50719029 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.60766048 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.533663264 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.50850632 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.50469178 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.213044572 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.521974446 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.599163504 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.703591194 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.50686064 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.545744072 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.912360842 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.50701123 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.548048075 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.861628124 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.545487726 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.507310421 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935959332 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.326054762 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.626720607 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.508278533 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.549724671 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.508651432 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.805781442 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.506822375 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.51006721 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.513990474 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.236369 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.50937862 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.185246964 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.508318517 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.575863544 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.509975077 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.510769507 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.00941732 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.370983332 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.510158358 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.509038388 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.512526877 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.510870154 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.510388564 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.55117172 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.078593982 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.478861412 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.510838723 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.512676995 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.550315853 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.509151794 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.742392854 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.51068592 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.8441873 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.57124605 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.654600082 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.188722879 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.509861478 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.612332509 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.634391335 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.510989123 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.510862883 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.512711043 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.512598651 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.630417008 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.511084184 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.51262501 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.371362702 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.70682068 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.507937751 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.301554129 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.619687048 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.514548993 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.971167098 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.510596792 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.512326523 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.324005199 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.612241686 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.512643485 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.511735901 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.510671372 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.513399728 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.373010741 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.188705424 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.89957292 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.511781691 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.579009364 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.518096114 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.512096779 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.52820982 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.181105882 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.261362941 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.514210221 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.62955492 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.710920371 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.512745071 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.511107312 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.295571623 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.515678607 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.572344978 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.514691907 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.921088946 seconds)
  done (took 417.681442815 seconds)
done (took 674.298717564 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.495787597 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.497381542 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.494640274 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.4978285 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.497252184 seconds)
  done (took 13.890638664 seconds)
done (took 15.30121682 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/21) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.743919159 seconds)
    (2/21) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.732639754 seconds)
    (3/21) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.732325947 seconds)
    (4/21) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.587593799 seconds)
    (5/21) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.745225756 seconds)
    (6/21) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.751802763 seconds)
    (7/21) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.648369392 seconds)
    (8/21) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.74887143 seconds)
    (9/21) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.751170242 seconds)
    (10/21) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.737921087 seconds)
    (11/21) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.555117848 seconds)
    (12/21) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.756085862 seconds)
    (13/21) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.718288681 seconds)
    (14/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.757155635 seconds)
    (15/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.576970473 seconds)
    (16/21) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.639806251 seconds)
    (17/21) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.678522085 seconds)
    (18/21) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.668790401 seconds)
    (19/21) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.659762223 seconds)
    (20/21) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.573904526 seconds)
    (21/21) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.55145619 seconds)
  done (took 36.719871319 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.845102146 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.527573781 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.581536413 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97801592 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.562571566 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.823272831 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.897129165 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.526870417 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.73006662 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.539781444 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.536652163 seconds)
  done (took 21.962408797 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.840533346 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.527030418 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.60218843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.817401408 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.564350043 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.868049311 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.881700386 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.525407253 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.753657409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.541375557 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.536915873 seconds)
  done (took 21.871516629 seconds)
done (took 81.966479806 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.557202461 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.62944057 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.550047219 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.532770654 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.529892794 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.531141031 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.533183779 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.531508564 seconds)
  done (took 13.810337913 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.530307003 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.530675012 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.529961278 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.531267079 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.530093983 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.532336823 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.531065388 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.53188888 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.533622274 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.531820138 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.532162954 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.533442348 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.529870649 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.53203758 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.531262019 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.531326907 seconds)
  done (took 25.916158643 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.535516847 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.529835053 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.53157542 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.534153154 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.534342622 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.531732345 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.533852162 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.534507311 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.533403577 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.534310328 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.534782108 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.534416655 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.532104212 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.533519205 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.532266374 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.535198278 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.532960252 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.533256188 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.538581389 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.53421781 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.535795958 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.535687929 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.536014832 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.535972953 seconds)
  done (took 38.23202949 seconds)
done (took 79.376311592 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.518588875 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.524078739 seconds)
  done (took 6.456946967 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.59201045 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.594256891 seconds)
  done (took 4.606213477 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.535743811 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.532983849 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.536392577 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.533359316 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.53717785 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.534164171 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.535863106 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.53418023 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.537427163 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.534934187 seconds)
  done (took 16.768402629 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.534316533 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.536209574 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.534417249 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.53428746 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.533126503 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.534812279 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.535319686 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.536507767 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.534703078 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.534229224 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.534574485 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.533941466 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.536924662 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.537000828 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.536718218 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.534589406 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.536910964 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.536694432 seconds)
  done (took 29.053155644 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.553508059 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.55485596 seconds)
  done (took 4.527995927 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.667829549 seconds)
    (2/7) benchmarking "second"...
    done (took 1.57890815 seconds)
    (3/7) benchmarking "month"...
    done (took 1.641536451 seconds)
    (4/7) benchmarking "year"...
    done (took 1.63083743 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.578700915 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.556175062 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.578822235 seconds)
  done (took 12.649247911 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.528753854 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.835223893 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.028098084 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.702240418 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.524710789 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.549555895 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.508207613 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.553854995 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.551478455 seconds)
  done (took 17.200037112 seconds)
done (took 92.680843389 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.525362535 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.554957643 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.55248269 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.541425923 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.836353035 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.538280358 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.52619032 seconds)
done (took 18.499407129 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.507986704 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.510348865 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.521120883 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.549809435 seconds)
  done (took 11.510450036 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.525812541 seconds)
    (2/2) benchmarking "read"...
    done (took 1.849941084 seconds)
  done (took 5.798452882 seconds)
done (took 18.731347585 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.53984008 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.539995738 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.538462063 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.539153878 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.539614821 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.537024536 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.54048054 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.538710454 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.53886468 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.536944815 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.539243917 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.539583047 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.539309089 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.540846764 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.53705063 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.538807795 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.538790668 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.539729943 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.540153116 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.539403486 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.541319056 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.540911248 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.538350311 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.539591554 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.539549523 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.541322403 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.540773167 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.540338952 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.540637658 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.541312288 seconds)
  done (took 47.605904598 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.542777318 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.543069398 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.541437469 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.541525254 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.541976899 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.540325025 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.542419319 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.541796255 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.542815153 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.543243513 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.540609081 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.541754876 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.5410841 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.544718624 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.542594259 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.540425881 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.542112883 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.541761049 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.539036678 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.542032395 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.542693232 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.542023018 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.542014052 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.543442906 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.543309509 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.543325083 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.542296293 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.54264314 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.544077616 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.542509383 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.54136297 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.544602836 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.54302601 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.53968317 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.542373165 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.540913319 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.546295253 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.545249584 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.543536498 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.54368864 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.543750869 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.543698272 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.543942206 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.541759843 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.544673036 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.542486559 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.544246449 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.542504077 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.544257897 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.544256674 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.544115383 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.543096775 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.541350283 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.543762654 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.544733975 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.542641197 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.54600506 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.541546706 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.543095882 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.544002357 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.54385771 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.544206261 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.544883459 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.545736068 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.544500452 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.542471335 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.544724514 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.54651348 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.544913996 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.544589163 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.545443999 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.545275867 seconds)
  done (took 112.530783848 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.545545299 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.548218619 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.54495088 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.544319253 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.546685718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.543695349 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.545492255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.545528925 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.545115276 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.547336949 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.546950444 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.54790343 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.546686219 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.546278096 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.547252949 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.546100906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.547644206 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.546649209 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.54610792 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.545484025 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.547458501 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.54792906 seconds)
  done (took 35.441810542 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.548304861 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.550018444 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.549496318 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.54587779 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.545381606 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.549366801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.547825459 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.551918549 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.549394385 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.551861 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.549697557 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.548991164 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.551947266 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.547993478 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.547671092 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.551823346 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.548146102 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.550168263 seconds)
  done (took 29.315905853 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.549671047 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.550060498 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.546042476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.551438996 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.549938053 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.54821408 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.546985146 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.551062396 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.552242385 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.549380329 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.550456967 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.547109539 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.548965093 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.552687038 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.550124772 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.549653587 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.550264285 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.550565961 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.550813137 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.551579967 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.551822903 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.551738647 seconds)
  done (took 35.530366559 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.550586399 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.551459891 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.554215867 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.552946416 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.55138669 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.551881022 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.55253183 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.551357666 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.553859622 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.552879821 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.552973305 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.550905933 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.552039673 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.55339796 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.550410771 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.552003577 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.551502701 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.550689219 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.552090256 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.552567782 seconds)
  done (took 32.474183998 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.552419505 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.554071022 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.553304018 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.551590703 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.551487069 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.55191778 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.552514934 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.552816718 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.553363329 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.553725082 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.549591455 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.55079493 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.554242771 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.554474119 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.553839803 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.551843895 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.553753444 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.551140084 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.553403318 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.556324875 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.555232703 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.552482324 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.553972379 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.554267213 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.554421468 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.5528938 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.551822768 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.553752328 seconds)
  done (took 44.920159228 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.57400035 seconds)
    (2/2) benchmarking "in"...
    done (took 1.57229912 seconds)
  done (took 4.58172087 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.556500736 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.556480409 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.553197151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.555496074 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.554796578 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.55339211 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.557119322 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.554602028 seconds)
  done (took 13.874996423 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.549923278 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.556049471 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.553611503 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.553948264 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.555267754 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.550334341 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.557183322 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.559584348 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.551941903 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.548737313 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.553379038 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.553016325 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.55342777 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.552566488 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.553198381 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.55553229 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.558923051 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.559812943 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.555819606 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.556736678 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.557956527 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.554742571 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.555285625 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.559914571 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.551931393 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.559654414 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.558742488 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.562188363 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.551707811 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.558641973 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.55454337 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.560081368 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.558451081 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.561615025 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.560453298 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.559218698 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.563754935 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.559282182 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.563984144 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.564180924 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.557096526 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.557006018 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.555029099 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.557550785 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.559657785 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.56283848 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.561956457 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.560252492 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.554760859 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.558000228 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.563334363 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.554519269 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.55902887 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.557693241 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.561394534 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.563847028 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.565797622 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.557290471 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.55718179 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.563242638 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.573674919 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.56666733 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.559213772 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.564625903 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.561361875 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.564300534 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.566821171 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.568200087 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.561344869 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.559374229 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.56494456 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.571215471 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.570056097 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.563787401 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.561516789 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.561442809 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.558265587 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.568251591 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.566673244 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.568664046 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.568969638 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.564592901 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.562772472 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.561094245 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.556949932 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.567510381 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.564452354 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.564369311 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.559529981 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.568602226 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.569848746 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.561815905 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.555866341 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.56395438 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.565844932 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.567135167 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.556884798 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.560466817 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.565735655 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.563161689 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.562722472 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.559627106 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.564744818 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.569263956 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.56412648 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.567825458 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.57195146 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.559231185 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.570773031 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.570714049 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.563352974 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.558947916 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.565338496 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.568808773 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.560077095 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.566158863 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.566666262 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.562339595 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.56779153 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.568272675 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.567680508 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.574722352 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.570458579 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.566846702 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.559065213 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.572098077 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.564605714 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.56670269 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.573485394 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.566210743 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.564526425 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.566176388 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.571799062 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.561038175 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.571394168 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.56327473 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.57149076 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.566274708 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.565429102 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.567087031 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.569354918 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.571727366 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.567315844 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.572540018 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.573813185 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.567813206 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.58026708 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.56967766 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.568690636 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.573149913 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.571240878 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.569461246 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.564119239 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.572273438 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.561506498 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.571862904 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.56453181 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.572794715 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.570847253 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.566064208 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.568854869 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.564194629 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.565566059 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.572130742 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.570478637 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.573007041 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.572520394 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.568543772 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.568689728 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.564590816 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.568849064 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.565609749 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.569140676 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.573770175 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.568674342 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.569130643 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.571568196 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.577605514 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.572934672 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.569286277 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.567438304 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.570303827 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.576827587 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.57674877 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.578113299 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.569772242 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.569148348 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.568113592 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.568385959 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.572995077 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.567218386 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.575811562 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.580057602 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.582844381 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.568571428 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.572998845 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.563831356 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.575422813 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.5719915 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.580375606 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.570732615 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.572755278 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.569017285 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.57399859 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.570079356 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.577361827 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.566837274 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.57646098 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.574970376 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.574796973 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.573098496 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.569049417 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.574517203 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.576527956 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.571335941 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.571252492 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.568310545 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.577781294 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.567023236 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.570822204 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.577271473 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.575762957 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.577533328 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.583445089 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.572132232 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.580899014 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.575507393 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.571063039 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.575226147 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.575397162 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.576723537 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.582186655 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.579284859 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.56978521 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.583101583 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.579244655 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.571653633 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.57642941 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.582022752 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.575194638 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.570274284 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.579314274 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.580284305 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.57598768 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.575940277 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.571376725 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.576713734 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.579539027 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.58319881 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.57235278 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.579121292 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.573848182 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.578735304 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.574944348 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.582172521 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.579378847 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.582854116 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.583111381 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.575216017 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.573580028 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.581645547 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.577871275 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.579315069 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.572365814 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.579573276 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.580877528 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.582441064 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.577848532 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.575726511 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.582842578 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.571067015 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.577880864 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.574817492 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.591218195 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.594360257 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.583921773 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.584328286 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.583466491 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.584624429 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.58149618 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.575822467 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.576987078 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.576914565 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.574684798 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.576396236 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.583182412 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.576954294 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.58139385 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.580960974 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.581644047 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.582122255 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.580418056 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.576070035 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.581901198 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.579323162 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.579529841 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.574509277 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.580353689 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.575493709 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.58119168 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.581381676 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.575045503 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.588591687 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.586255344 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.581113861 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.580252739 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.577289851 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.576832307 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.579362762 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.585483492 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.580385756 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.584733654 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.576703642 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.581662885 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.581621597 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.586263179 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.587744294 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.579426765 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.585038438 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.580522756 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.577500337 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.574684306 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.584806324 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.585975648 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.592494647 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.576343557 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.585511116 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.580699965 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.584257643 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.584675075 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.584033333 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.581257276 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.58244478 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.591757039 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.587883408 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.578513425 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.587124707 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.59023318 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.58327615 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.583830108 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.576417945 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.585637813 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.59060403 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.580545289 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.585432104 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.580205215 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.588034424 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.585477776 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.584464796 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.584570369 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.58249833 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.588309928 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.590739879 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.586417294 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.583861358 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.588902692 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.592919637 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.588277269 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.594477451 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.583799102 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.589880642 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.584830923 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.583012644 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.582052415 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.580267345 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.588207461 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.581179929 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.589470996 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.586750438 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.58253949 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.58821581 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.592855192 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.583883635 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.586134126 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.595422113 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.580697648 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.587861712 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.585156463 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.58084683 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.589297771 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.586944365 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.577898688 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.584326751 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.585763832 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.590007417 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.581453784 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.591375989 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.582268323 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.589879293 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.587855019 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.588747093 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.586151749 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.584338003 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.586561465 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.589954176 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.59108464 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.594681325 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.587154977 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.593620865 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.584596978 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.595281368 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.595194404 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.585068768 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.593205494 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.589786415 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.585776633 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.590238525 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.595497313 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.586011567 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.591366884 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.584564536 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.585798894 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.584960078 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.590259028 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.591173798 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.591775991 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.585696629 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.586746381 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.59263902 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.589964019 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.590760152 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.587847046 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.597137446 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.585545228 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.584701368 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.592361222 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.590789622 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.596634444 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.585365999 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.589005599 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.589076616 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.590570792 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.589043856 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.589993466 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.586201995 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.588757291 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.599227249 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.593926115 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.590231933 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.587100581 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.59258857 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.587936946 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.591224028 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.591726916 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.587783999 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.587252324 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.595543893 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.588331263 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.588584733 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.588440015 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.594374933 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.600004072 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.595115562 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.587249471 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.603816068 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.602255106 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.598532474 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.586552497 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.590486052 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.591131278 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.595608762 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.592801909 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.586896637 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.600096093 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.599660145 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.597369091 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.595406138 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.594506987 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.588577306 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.596334029 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.594195559 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.592742415 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.601144176 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.590229453 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.599461574 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.595203811 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.590554271 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.586016153 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.589502818 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.592396176 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.592655002 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.594025791 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.592930568 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.595811452 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.594206187 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.601507941 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.594242108 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.592974699 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.592729875 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.590935115 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.596735293 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.589335783 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.595428907 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.595002702 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.590240659 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.595724418 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.595207343 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.592216444 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.593137578 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.597596855 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.593810743 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.591529274 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.597218149 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.604252689 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.602619168 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.59691319 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.590725277 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.594141099 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.602005051 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.595183141 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.596606428 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.591200365 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.609593824 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.608585346 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.592073299 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.595704886 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.601229338 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.604370549 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.594717089 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.596441677 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.59385671 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.59823258 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.601481203 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.598941459 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.604342107 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.6029736 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.595140986 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.600217961 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.596159741 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.596660069 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.598646215 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.606761451 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.600492194 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.597705549 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.606781059 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.608762544 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.600245402 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.612143996 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.603533772 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.59956653 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.604503817 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.593600593 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.601067916 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.597612695 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.602710499 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.601047392 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.597576365 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.597533307 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.593779604 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.601996146 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.607891983 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.607231384 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.600710734 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.592269784 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.596014169 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.601340571 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.601237467 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.60003146 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.600984206 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.601630608 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.599519732 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.595868441 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.615750975 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.615001512 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.605022866 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.600591595 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.601127152 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.601301471 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.604541698 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.601654883 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.641889941 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.601755214 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.600664818 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.602264798 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.609314009 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.601494654 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.595953029 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.599116157 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.600411022 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.605068728 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.611525896 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.618537487 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.608254024 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.607638551 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.606090885 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.604733628 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.599496103 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.603903512 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.602539608 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.598392276 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.601668565 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.607645845 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.604703218 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.602602481 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.598091829 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.607362427 seconds)
  done (took 943.589754777 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.602921149 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.602567352 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.604363298 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.606289958 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.601867768 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.602295429 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.602514927 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.601909222 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.602879177 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.602379237 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.603857264 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.604002143 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.607257737 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.604148525 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.604298428 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.603577381 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.605352973 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.602042843 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.603476154 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.603849407 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.603913935 seconds)
  done (took 35.148372496 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.602591243 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.603568667 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.604523526 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.604905511 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.604012371 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.60262382 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.605564172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.606154629 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.605787658 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.605113497 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.607082462 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.605085558 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.604900252 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.606180959 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.604543322 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.605113122 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.606415022 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.606225646 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.606001358 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.606704473 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.607170193 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.605321114 seconds)
  done (took 36.791054659 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.606404187 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.607007892 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.60215996 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.610394896 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.60793641 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.608144986 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.608688695 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.607336382 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.608606565 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.60247723 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.601245828 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.605349559 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.606151679 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.611682 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.604700066 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.612536178 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.608491439 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.607134566 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.606596245 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.607808739 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.613314955 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.616584867 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.607138748 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.603209139 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.609198206 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.607016275 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.606529306 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.608075847 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.602291488 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.611386942 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.607018918 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.605127025 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.611322308 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.608912179 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.605235027 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.609930356 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.609993625 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.609931995 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.608162462 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.609420728 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.618573374 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.610082806 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.615094147 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.616676335 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.610556219 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.606767739 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.614639119 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.60871096 seconds)
  done (took 78.688416769 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.609665628 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.610093731 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.612157517 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.609816417 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.611264505 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.607514009 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.611466186 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.612854954 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.609206526 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.610517652 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.609492303 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.608874089 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.60955282 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.610505942 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.611515347 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.610009366 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.609951809 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.609673452 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.610845586 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.610223593 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.609436487 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.613162352 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.612760946 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.610124819 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.610743793 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.612908501 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.610355879 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.611436207 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.611653291 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.614704518 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.61089582 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.614611405 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.613564166 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.613654397 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.611435004 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.611186865 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.613616603 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.610710693 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.612724042 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.61176476 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.611535632 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.611846374 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.612521211 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.614461588 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.612496352 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.613813851 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.61195312 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.613924793 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.613856165 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.613233523 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.614231541 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.614968526 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.614129769 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.613262895 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.613592882 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.614748801 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.613278507 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.614637027 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.614915334 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.613767259 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.615495273 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.613766643 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.614783702 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.615093642 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.614738264 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.614420789 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.613550457 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.614737439 seconds)
  done (took 111.116651372 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.61431149 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.615930831 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.617063067 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.61482597 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.616839908 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.616692788 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.617114242 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.61770886 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.618083139 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.615684685 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.61798745 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.616162765 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.619374816 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.616871311 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.616345156 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.618792346 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.618347109 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.619008487 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.615696944 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.620351038 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.61926065 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.615959397 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.619221109 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.61818794 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.620310693 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.616704607 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.61619438 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.618936889 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.616965407 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.618052704 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.617549787 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.619004002 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.618682449 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.618848695 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.619371335 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.618992116 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.619342187 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.62009857 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.617706042 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.620523516 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.62165101 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.618124914 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.618877175 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.618444637 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.619265026 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.617927115 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.621222199 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.620816852 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.617460729 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.617858362 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.617905668 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.619350081 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.617183636 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.62030929 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.619627066 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.615568915 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.621093472 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.62071665 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.618732578 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.621066073 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.619026191 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.618955194 seconds)
  done (took 101.820255522 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.619172008 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.620196957 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.619090759 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.620133264 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.619611531 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.618586467 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.617877071 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.620366706 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.617759991 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.617536577 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.618635359 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.621477221 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.617661501 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.620090712 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.621534203 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.623352979 seconds)
  done (took 27.400796688 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.621678934 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.622688523 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.621544533 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.618421761 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.618979289 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.622333021 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.618816587 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.6200368 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.619864714 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.623041589 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.622325209 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.619816105 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.623363056 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.624044512 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.621537836 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.621259637 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.622425966 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.62291863 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.620558029 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.624232969 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.622521889 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.619654338 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.621523913 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.622640029 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.621938068 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.623017287 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.622544801 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.620083417 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.621787654 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.621401363 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.623665067 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.621389802 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.622914059 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.620575972 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.621477106 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.623312342 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.623487686 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.622962652 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.623076168 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.62148525 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.622723957 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.625566903 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.626251832 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.622976962 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.627112394 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.625513628 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.623732816 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.626036188 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.623387198 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.623997026 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.623376137 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.624156905 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.624168575 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.626272187 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.623340342 seconds)
  done (took 90.730154826 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.624388822 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.623946794 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.625984839 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.624013191 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.625003177 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.624777653 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.624683239 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.627415205 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.625782412 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.625915442 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.626895722 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.624413901 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.624491101 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.623396 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.626192117 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.626337235 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.624356227 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.624940648 seconds)
  done (took 30.749870525 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.625117496 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.62361302 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.62364884 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.626723582 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.625546662 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.625530385 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.626139596 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.623399442 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.625577386 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.628262429 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.62409525 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.626849044 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.62746621 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.624631991 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.627055379 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.628806195 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.624631693 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.625343084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.623504339 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.623875579 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.62538337 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.627146451 seconds)
  done (took 37.25633598 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.6175614 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.617446476 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.619030937 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.634605363 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.629748078 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.617693563 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.621017761 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.618587974 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.634962503 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.642386068 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.644827227 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.627512704 seconds)
  done (took 21.022219894 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.629117116 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.625870145 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.628198893 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.627290896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.629628261 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.627444426 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.628853598 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.628338237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.626041822 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.62832889 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.627519542 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.629364741 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.626841518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.625203665 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.628157217 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.626599654 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.628921358 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.627873954 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.631639721 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.626429939 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.626116239 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.62815675 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.630782335 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.630088825 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.631152809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.6273304 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.628527018 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.63178765 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.629260533 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.629302088 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.629349896 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.631667725 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.627856366 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.631212552 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.630403279 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.632059617 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.627709515 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.628983925 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.631780451 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.629047556 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.627208119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.629268115 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.629042322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.629771167 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.629065983 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.630167323 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.629432578 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.629773116 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.629780693 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.630957054 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.629674279 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.632277128 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.630174948 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.629585267 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.627467306 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.630564076 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.6301043 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.631946128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.632527969 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.632333129 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.630035875 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.629021223 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.630886046 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.631514179 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.63116715 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.633513567 seconds)
  done (took 109.038401529 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.630224097 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.631664155 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.632920885 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.634902845 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.635703598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.633245531 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.636493378 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.634034564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.633111359 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.631479431 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.629351607 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.631868893 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.634540144 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.635219467 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.633494958 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.632864827 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.635347853 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.634059984 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.633473286 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.63432267 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.63265831 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.633728102 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.631359515 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.63202784 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.631966971 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.633309815 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.633368821 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.633074384 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.634052961 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.634336796 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.63072705 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.6337037 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.630625255 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.634702566 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.635568602 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.635215431 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.635635135 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.631392243 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.633081543 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.631595731 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.632905432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.63222493 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.632602799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.634133144 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.632495185 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.632513873 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.636810921 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.635879418 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.631505658 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.633334782 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.632916995 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.636253851 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.635505745 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.634690286 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.636026277 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.634076598 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.634628324 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.635956961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.634196695 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.63761868 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.633999079 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.636364423 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.635583672 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.636429072 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.636217995 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.636369709 seconds)
  done (took 109.331427571 seconds)
done (took 2090.384048216 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.792989131 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.753059884 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.628736361 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.659850229 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.629373049 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.648527183 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.641508789 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.631071956 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.628896933 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.628225072 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.627737728 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.842388137 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.66141219 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.62779238 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.630388872 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.726575499 seconds)
  done (took 32.263484919 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.663331222 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.639005789 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.779553723 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.632956486 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.662695385 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.869884775 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.702365264 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.636677257 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.853109152 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.63471232 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.639697751 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.659008064 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.634314141 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.635418479 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.659315441 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.868893811 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.949762105 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.640347136 seconds)
  done (took 35.267877176 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.211601341 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.684726317 seconds)
  done (took 6.40021862 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.659459665 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.635155256 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.634591203 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.635953013 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.6328244 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.627312016 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.635488778 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.626980427 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.630702161 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.794261037 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.635814626 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.647528416 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.636703948 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.635852387 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.63954172 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.6846089 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.767083546 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.643364189 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.639953444 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.641743309 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.634186732 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.749244092 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.686203747 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.641808433 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.795051139 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.633847447 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.637303943 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.641524504 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.77184273 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.642937952 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.635721187 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.634233466 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.636997212 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.630147926 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.225941273 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.630179019 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.665037241 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.643781583 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.641578314 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.792158194 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.635797927 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.643603242 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.639045348 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.221712118 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.757674144 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.780076078 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.637224828 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.636702687 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.640287547 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.713434526 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.638746515 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.640045116 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.702664211 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.500248246 seconds)
  done (took 102.356998265 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.652773972 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.631173665 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.819469346 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.662116731 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.631390209 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.629302815 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.653623928 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.001198123 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.682624994 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.629325428 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.976462813 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.353349498 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.635869577 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.694338207 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.678748812 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.69667397 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.633633193 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.633583537 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.632209883 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.638613327 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.252163018 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.633472151 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.631391263 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.788399344 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.677765596 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.267453064 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.631691047 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.630663725 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.63708064 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.630422592 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.339393415 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.639255857 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.696055825 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.636558479 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.960355519 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.148522342 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.107836557 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.634258403 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.676081887 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.63095409 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.666115751 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296520498 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.131454049 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.634135716 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.637687617 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.300427033 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.637562317 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.634606734 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.633136468 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.909020057 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.632956482 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.632170007 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.648550187 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.637914581 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.63240478 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.697443644 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.706591556 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.299523785 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.639294957 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.636332081 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.671188783 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.638100239 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.644077557 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.63391103 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.640238638 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.128052983 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.813568127 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.638902543 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.130673454 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.333346665 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.637282446 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.40456954 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.638096229 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.646273332 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.710522868 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.641833374 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.640499861 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296098918 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.665516022 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.636090364 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.107963882 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.640232194 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.005613798 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.662386447 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.637892282 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.280502889 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.645326326 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.70226622 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.638290384 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.639189436 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.638595386 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.645573005 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.982562924 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.663070693 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.638411835 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.637392191 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.684853802 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.636760559 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.642484265 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.642132925 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.404837533 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.651076457 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.637715039 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.636912701 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.649226456 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.641099059 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.637140316 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.638059034 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.930408874 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.642246711 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.638392965 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.63592147 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.640142867 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.641035163 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.790247177 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.643867038 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.064322851 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.644540172 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.63749349 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.641538046 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.638293965 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.650076368 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.638165323 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.670463304 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.617442487 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.014731718 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.664717817 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.642457978 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.639141234 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.643323938 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.644099841 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.64718085 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.681522492 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.638541121 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.53200697 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.663242283 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.667730484 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.637335368 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.641837784 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.638435926 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.643118486 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.640897744 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.97777056 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983418499 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.838117977 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.642343563 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.639063672 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.529529326 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.64768697 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.830097707 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.669132965 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.639308516 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.949064979 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.841211573 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.638021174 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.640382999 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.641501698 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934726322 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.645023189 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.990223282 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.343262873 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.645189284 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.650783801 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.517129244 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.423235986 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.640847842 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.641977005 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.999334562 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.665879991 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.638883622 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.639653782 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.639696033 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.642039869 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.646336993 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.639681311 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.639547932 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.639914129 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.713940639 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.846119089 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.664732234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.648206291 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.26900085 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.648845113 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.652533836 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.644266972 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.641971665 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.636510723 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.689204356 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.640212446 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.685060974 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.638268828 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.649164416 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.358269364 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.640394942 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.638263094 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.841030528 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.480161749 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.639026905 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.639421877 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.63887177 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.685804733 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.299656456 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.695973367 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.040430591 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.642199736 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.68485194 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.643123444 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.664877984 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.299935206 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.663144592 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.639196196 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.465810732 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.642469297 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.328497375 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.638751227 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.641079393 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.40177341 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.640854719 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.638702686 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.639617034 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.644675542 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.960287411 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.642249947 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.643264704 seconds)
  done (took 570.642983321 seconds)
done (took 748.437178897 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.639064671 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.643747201 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.643906051 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.643059042 seconds)
  done (took 12.086387522 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.654233366 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.647236622 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.654373396 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.646787282 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.653695892 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.64617943 seconds)
  done (took 11.421460304 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.639940866 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.645492834 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.643517755 seconds)
  done (took 9.444803284 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.90958152 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.642696273 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.10406612 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.658985319 seconds)
  done (took 10.834194477 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.654573867 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.653288366 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.655831202 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.654357195 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.655358361 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.656420761 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.655121537 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.655946123 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.657366832 seconds)
  done (took 16.414570022 seconds)
done (took 61.719586844 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.628398341 seconds)
    (2/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.682964843 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.769544828 seconds)
    (4/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.627359218 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.733649151 seconds)
    (6/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.677338484 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.674429382 seconds)
    (8/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.115424611 seconds)
    (9/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.979223018 seconds)
    (10/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.628465678 seconds)
    (11/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.652851972 seconds)
    (12/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.728361607 seconds)
    (13/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.714016436 seconds)
    (14/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.805457036 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.203449909 seconds)
    (16/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.682946099 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.828920702 seconds)
    (18/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.276617601 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.793628229 seconds)
    (20/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.648218753 seconds)
    (21/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.726868589 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.62581784 seconds)
    (23/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.726620726 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.643911662 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.780492595 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.929126252 seconds)
    (27/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.627150776 seconds)
    (28/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.71971316 seconds)
    (29/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.280759284 seconds)
    (30/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.68519893 seconds)
    (31/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.720166951 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.824904948 seconds)
    (33/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.630304819 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.167366937 seconds)
    (35/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.992067019 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.674929291 seconds)
    (37/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.807016638 seconds)
    (38/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.943235395 seconds)
    (39/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.65111352 seconds)
    (40/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.822849494 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.784785906 seconds)
    (42/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.111223952 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.827308306 seconds)
    (44/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.868619489 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.758721455 seconds)
    (46/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.680994096 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.757853823 seconds)
    (48/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.980862134 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.959402469 seconds)
    (50/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.047346892 seconds)
    (51/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.062515048 seconds)
    (52/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.048696439 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.646696823 seconds)
    (54/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.499566362 seconds)
    (55/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.628468103 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.649650365 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.762089945 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.638904347 seconds)
    (59/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.634161835 seconds)
    (60/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.657606915 seconds)
    (61/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.980668105 seconds)
    (62/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.663029445 seconds)
    (63/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.743911376 seconds)
    (64/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.991921344 seconds)
    (65/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.874079971 seconds)
    (66/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.8412662 seconds)
    (67/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.681211092 seconds)
    (68/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.630713509 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.73832027 seconds)
    (70/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.631672222 seconds)
    (71/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.782002018 seconds)
    (72/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.632571968 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.777714135 seconds)
    (74/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.805794594 seconds)
    (75/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.178758663 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.015835021 seconds)
    (77/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.637540448 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.132902418 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.732507871 seconds)
    (80/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.721021744 seconds)
    (81/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.632784591 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.790154 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.729836904 seconds)
    (84/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.938683486 seconds)
    (85/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.634346624 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.685501013 seconds)
    (87/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.740617705 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.794943766 seconds)
    (89/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.765168356 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.681663728 seconds)
    (91/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.943415137 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.75739243 seconds)
    (93/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.681551788 seconds)
    (94/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.687966195 seconds)
    (95/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.941549821 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.293512505 seconds)
    (97/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.635290907 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.73948009 seconds)
    (99/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.746388889 seconds)
    (100/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.486228334 seconds)
    (101/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.960914384 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.936680388 seconds)
    (103/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.650250685 seconds)
    (104/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.885520672 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.758626592 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.091582971 seconds)
    (107/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.944161433 seconds)
    (108/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.06831146 seconds)
    (109/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.804269985 seconds)
    (110/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.728335652 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.041223559 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.686333448 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.683001365 seconds)
    (114/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.894193165 seconds)
    (115/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.63312106 seconds)
    (116/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.827274981 seconds)
    (117/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.647510068 seconds)
    (118/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.834265191 seconds)
    (119/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.690025468 seconds)
    (120/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.737706447 seconds)
    (121/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.771800459 seconds)
    (122/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.749891373 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058176517 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.790111987 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.739856235 seconds)
    (126/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.632325633 seconds)
    (127/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.73976639 seconds)
    (128/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.848030256 seconds)
    (129/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.633441645 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.659112796 seconds)
    (131/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.694407146 seconds)
    (132/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.723322318 seconds)
    (133/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.688232072 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.208833189 seconds)
    (135/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.769141989 seconds)
    (136/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.817067057 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.727047178 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.823866004 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.743662803 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.835665849 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.635748289 seconds)
    (142/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.251582581 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.845509351 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.790547868 seconds)
    (145/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.964733468 seconds)
    (146/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.882613358 seconds)
    (147/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.797484196 seconds)
    (148/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.687685314 seconds)
    (149/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.68589634 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.751809509 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.751789393 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.790256048 seconds)
    (153/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.78968799 seconds)
    (154/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.784933122 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.669899403 seconds)
    (156/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.847371211 seconds)
    (157/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.680998028 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.727181545 seconds)
    (159/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.88476214 seconds)
    (160/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.686346252 seconds)
    (161/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.767421838 seconds)
    (162/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.67067314 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.693315923 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.645018187 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.762111743 seconds)
    (166/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.65772811 seconds)
    (167/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.766099341 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.642324159 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.794048976 seconds)
    (170/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.63680766 seconds)
    (171/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.640031914 seconds)
    (172/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.952470897 seconds)
    (173/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.889016927 seconds)
    (174/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.638024321 seconds)
    (175/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.639698786 seconds)
    (176/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.693615293 seconds)
    (177/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.639841128 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.840521813 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.863226076 seconds)
    (180/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.948333475 seconds)
    (181/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.98501424 seconds)
    (182/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.904868181 seconds)
    (183/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.638668699 seconds)
    (184/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.756170049 seconds)
    (185/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.179175271 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.640237697 seconds)
    (187/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.640939551 seconds)
    (188/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.30648864 seconds)
    (189/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.639314735 seconds)
    (190/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.746578366 seconds)
    (191/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.74185654 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.948143897 seconds)
  done (took 395.83894301 seconds)
done (took 397.358673125 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.68915347 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.756484979 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.668261741 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.668929725 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.670209567 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.677420168 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.689753996 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.668602516 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.681670829 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.681773665 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.678786084 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.676098609 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.682850636 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.680403872 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.703213342 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.669658104 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.667302183 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.67810614 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.682489272 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.684390624 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.670624676 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.671585298 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.695649151 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.668131443 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.676202793 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.676993245 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.674436993 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.662762696 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.675581504 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.682379081 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.675473266 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.677373271 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.685143427 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.680898383 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.671790357 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.679944341 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.672002117 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.758180113 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.69150223 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.681034652 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.677478249 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.686068146 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.674771947 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.673937293 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.68014225 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.69829554 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.678095023 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.685625798 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.675088686 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.672125303 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.692080452 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.6828476 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.678656537 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.671458886 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.670154623 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.687086777 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.681099102 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.691253817 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.677633102 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.673508654 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.705030008 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.692238867 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.682426021 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.681056096 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.677271151 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.686183253 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.681524564 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.687412288 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.680307688 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.673073798 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.674370244 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.679123829 seconds)
done (took 130.626687494 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.794628544 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.666720569 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.827471034 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.676304276 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.844252426 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.797182691 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.676763129 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.677343015 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.675190115 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.473335449 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.675765956 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.677210365 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.668957036 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.676486592 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.796639239 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.677231454 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.676386516 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.371209759 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.678231709 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.812316472 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.670491122 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.677080576 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.677545446 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.477247725 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.667834119 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.664218344 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.811677347 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.676977374 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.377357663 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.664025334 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.666728451 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.378388671 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.814136875 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.697584467 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.687958372 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.688493426 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.846620537 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.682943775 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.799114136 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.798500127 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.832107913 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.716508549 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.664860985 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.670927343 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.682317246 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.681624998 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.680602029 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.706854126 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.670513723 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.679740432 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.373803916 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.689764853 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.679772695 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.681562947 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.680792672 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.708036316 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.68105575 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.681334031 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.814703849 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.681325917 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.798962893 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.479281763 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.476457821 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.680291148 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.669777904 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.680992697 seconds)
  done (took 131.224393608 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.745376732 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.750157537 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.802098364 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.675155844 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.725901091 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.806345442 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.675308489 seconds)
  done (took 13.718532015 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.680421365 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.682281944 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.72377449 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.725707188 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.682038609 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.847865824 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.681740057 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.688592029 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.682037901 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.735414249 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.683267467 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.682447859 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.692595966 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.673275063 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.723403517 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.688062266 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.791033343 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.677775919 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.683072492 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.831591185 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.682282077 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.692336036 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.727446769 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.688604673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.683799945 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.683011484 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.451050864 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.683361658 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.682019078 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.684119398 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.682092728 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.744555728 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.683846605 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.674942707 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.68292685 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.793807996 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.685596525 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.684922977 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.684244685 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.678583119 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.683647459 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.681730301 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.683486566 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.683361418 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.684008735 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.702501736 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.685253308 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.684119681 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.683311424 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.684664809 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.734842049 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.684286224 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.683927997 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.683576634 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.74082494 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.694037362 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.68492101 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.685579372 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.684401585 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.685172291 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.835481423 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.728817141 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.683964386 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.729792852 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.685188445 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.685134186 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.68688743 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.684860064 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.771000138 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.684876362 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.730005688 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.685054933 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.876748866 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.704605819 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.68737865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.683789494 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.6836818 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.686170386 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.676355814 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.688620924 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.686682983 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.682442104 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.686994962 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.685563488 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.687371804 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.84009578 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.790518099 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.685723377 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.696799488 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.689175542 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.687095321 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.738887741 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.687502817 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.688105457 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.739345472 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.796291211 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.732884984 seconds)
  done (took 171.750614065 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.693926823 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.694245641 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.687734226 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.711977007 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.684808041 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.683212977 seconds)
  done (took 11.700748802 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.684744726 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.691765179 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.687791072 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.688802457 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.689370669 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.688091636 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.688572588 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.684498853 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.69410953 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.689218036 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.688750173 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.690815402 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.689507176 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.690031841 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.690450315 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.689118397 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.690354939 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.688966728 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.689944415 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.691343847 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.679661584 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.690440385 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.691212255 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.686325626 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.695275038 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.691129744 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.708355368 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.691308578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.691961572 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.689908681 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.697265186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.691034982 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.687365708 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.690994853 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.694790312 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.68696619 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.69447209 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.691612519 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.69179437 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.691363226 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.693511284 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.692850181 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.690396367 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.690806685 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.688037234 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.691159699 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.695688716 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.709411017 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.692043732 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.69220426 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.693481627 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.69193631 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.692248876 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.693783768 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.689257081 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.688571158 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.696215725 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.693650956 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.692131523 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.688800617 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.695257261 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.692308931 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.688557927 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.697508125 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.69243537 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.694073582 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.688995964 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.698402203 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.694377056 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.694703005 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.694497467 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.694647824 seconds)
  done (took 124.349752078 seconds)
done (took 454.280273224 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.065871777 seconds)
  done (took 4.615572902 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.890857088 seconds)
  done (took 4.444480073 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.222460503 seconds)
  done (took 27.781548734 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.694912276 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.685031047 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.68976189 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.680316043 seconds)
  done (took 12.300792371 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.370371146 seconds)
  done (took 4.920224217 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.688509421 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.706666165 seconds)
  done (took 6.950084225 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.133471217 seconds)
  done (took 4.683866265 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.639743892 seconds)
  done (took 5.200544216 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.693458986 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.689511163 seconds)
  done (took 6.943761486 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.666189644 seconds)
  done (took 4.216086911 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.276769412 seconds)
  done (took 21.831427041 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.694211841 seconds)
  done (took 4.249500498 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.715339386 seconds)
  done (took 4.266509043 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.09274758 seconds)
  done (took 7.643808413 seconds)
done (took 121.600750165 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.682775108 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.687393445 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.687062297 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.687426092 seconds)
  done (took 12.295890129 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.760733172 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.759677577 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.768496048 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.755817522 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.753628119 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.762333738 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.721378301 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.722415257 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.750200111 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.748058245 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.765159931 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.755285795 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.763036213 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.722444651 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.746971295 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.764384517 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.753190944 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.769213571 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.722787421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.755516096 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.697104695 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.755458922 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.750023621 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.697078186 seconds)
  done (took 43.476137108 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.187379848 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.764420026 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.845325205 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.742906758 seconds)
  done (took 9.093944311 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.80299889 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.80215733 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.822155215 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.862133503 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.9043255 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.817327826 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.725224347 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.720489277 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.704868734 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.803356468 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.886839362 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.802659385 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.018926842 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.697186811 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.0180901 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.698001226 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.69900692 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.803479389 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.852480051 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.882674589 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.699558545 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.802906227 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.807446099 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.805006126 seconds)
  done (took 44.994809693 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.707926421 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.716339469 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.701899759 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.714482416 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.700742586 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.70155132 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.702747635 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.708648829 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.700546475 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.700127517 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.701532718 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.714283533 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.701039105 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.700137269 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.708895787 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.702931199 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.702185866 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.708094284 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.709404784 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.70275219 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.703447004 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.707426375 seconds)
  done (took 39.073869417 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.690037222 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.687568757 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.042154001 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.943257265 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.689363664 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.68888696 seconds)
  done (took 16.299950703 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.785361403 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.9458692 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.696598917 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.165423981 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.249707694 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.696669689 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.697300204 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.995317912 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.401686303 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.439274413 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.750794022 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.781962839 seconds)
  done (took 25.164358325 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779319762 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.69812376 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.697263599 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699982756 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700717296 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.698587357 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.699079172 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.28686214 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.70845348 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974385736 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70995041 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78390827 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.947752727 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704390181 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.698696872 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.694141478 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927337127 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.343398941 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705876963 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707176582 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735293464 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.697320781 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.699921458 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.973430093 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.704937754 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.699475658 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.963477565 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.699279675 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068830188 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047871161 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046143078 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.706539117 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974632011 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233623926 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808015611 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966214311 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705333346 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.70131905 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.720741633 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.704265763 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.735665853 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.70202417 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039556104 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706378402 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.700498205 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71446812 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291096809 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.713895514 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.70178991 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.702546059 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043770392 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788495102 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.707497137 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.700933491 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743979296 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706019452 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.706195884 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824864697 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340091513 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709425836 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707561763 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.704795015 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.706545471 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710262896 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48540677 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.715636764 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.707384543 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708420434 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701284091 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.702118335 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729200139 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.702815292 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.722149996 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.702622683 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666066117 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.707900172 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726700035 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394891622 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724019097 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.704467079 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929966627 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.703220592 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704215338 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.7028651 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.702081889 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662788545 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71632047 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.680064312 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.742156308 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.291894337 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.977246578 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728517935 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73451879 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.927102267 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.679094941 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704951852 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.719866431 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708910434 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726670247 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295345253 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706737378 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.708622467 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953467194 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.91806844 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705672453 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.694645932 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302339368 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.7121179 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.73365425 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711371248 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979247309 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.460511039 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060629339 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72714245 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742758854 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.706117116 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.726130021 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713937446 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.71485581 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716100056 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048724746 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.707099995 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709979959 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780592803 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.708121458 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.705988795 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.705159057 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708723981 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.70581746 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.960386858 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.721068524 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05373258 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.716607853 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70768032 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.725214052 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711783338 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.710086895 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.930930692 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709302793 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984868768 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70893182 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708675381 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706905057 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.930281779 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.719984774 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.719627803 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048317077 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707481771 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.712891613 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057655485 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748543247 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821045857 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741959383 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.709947089 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963211092 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.714844706 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.715422982 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.720883477 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.715279884 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715740417 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.716234298 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.733499479 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464301307 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68688566 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.715509903 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.709569814 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.726389615 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784830663 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719033822 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981816157 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.728319771 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711096548 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.722240076 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.721071501 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938058472 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0547798 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.716110008 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8897057 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.301028886 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458077256 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731535439 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.711004946 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.711268749 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.710850103 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712412189 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709361973 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.712408713 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98025875 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067345378 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.718080391 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.46525983 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719185034 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.710617822 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.723335383 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054049506 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.726416901 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713795979 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.710828697 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.735659237 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.729835703 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060155529 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938878902 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.730219368 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.713861038 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.230019122 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7208255 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.713914524 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.711405036 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739862174 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.711126299 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353141384 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052939262 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.727000653 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061218128 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.71962211 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.737051234 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.711999661 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712838318 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.755182194 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.743245678 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72783972 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.985163997 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.718734702 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720209701 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353072003 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68565965 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402333415 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.721042349 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.733516151 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.719342492 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312620821 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719532311 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71602407 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009046721 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311678278 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718533835 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30873933 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.719880405 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.721023411 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064313621 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948750919 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.738969118 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.717313792 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065690753 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936064832 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741159005 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.716746078 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721808346 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.691824041 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351576889 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.73607955 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898890072 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312151626 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721170267 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.720930504 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.802435666 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.748072504 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.237530203 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.720960845 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717510623 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.726319047 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.720437581 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3611385 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.723835885 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.717064828 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.491359557 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.73422071 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.321717371 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721976164 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.991488415 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070870954 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.051964782 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.724386913 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.72995351 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.968643389 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067099672 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72472476 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.722417056 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.407399189 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.584095465 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.727258855 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719757882 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.738740835 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723739487 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096561976 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.724883362 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.730247056 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727622668 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.71971325 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720595998 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.720039711 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.726900731 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69001285 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.357427248 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.747681455 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.748116475 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.723718176 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.745812328 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972064022 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.738362766 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.469546819 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955736292 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71394456 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760631714 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.727648421 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721005462 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.701673452 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.721900525 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.722617729 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.758398931 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949849603 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.727576892 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.701199186 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.743477782 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.93895366 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.721467834 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.720238766 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005045602 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.726269775 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.723419699 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703329607 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758303166 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.735765786 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724892289 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.722302411 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760897716 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798340906 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995757571 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.076308086 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.077082242 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247389717 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729466628 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.729205341 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.738441456 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805404896 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736987572 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.724655942 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.727279781 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470305295 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706307098 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480419099 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079944345 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.72892006 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.734973781 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724018593 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96685188 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.72266231 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002654715 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725070589 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.717688646 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751355016 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731958262 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.732424812 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941357912 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999498644 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.725092906 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726643521 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729577936 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.727055397 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081660491 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.942586223 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.382237624 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432504378 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.732774927 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.727487924 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332042857 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007240022 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726810254 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.726345109 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726997774 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.7336613 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.755160381 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.739199364 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726353199 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955925982 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076283098 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279698524 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077233308 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.75460934 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.597728787 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.741384391 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981295418 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.559624591 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00210223 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483070612 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.623598193 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987535027 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803937703 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003894992 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.732710456 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966883017 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.745813303 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.732133547 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.727867113 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728320477 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.725763077 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.074308786 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484521941 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989591122 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.734605962 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.744280628 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763223825 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.004074674 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.9576791 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.690266666 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958052231 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087601542 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.741427753 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.72992206 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491799281 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086988908 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734729004 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.736699586 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013450726 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.735288261 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76519652 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.620033818 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.728729888 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431717957 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.951194402 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753411319 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.730482938 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.651017702 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500825341 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.753829709 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387149143 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.736790008 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731976678 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01033366 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.739312576 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.730697253 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.023055253 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.736271276 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.733150186 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011642958 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.484118426 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.679874951 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.742762795 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.756381837 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.738978783 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732042978 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.738742485 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73753891 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.731212678 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.248102176 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.737251637 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732503022 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745528908 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.742487845 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738496052 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.73666872 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733904311 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.741929889 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.714366023 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.74734417 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.73774349 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864147114 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379604828 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73559784 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.351691887 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.071967081 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.982446625 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.732488333 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.714078899 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.739551606 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732940549 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.733518078 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737035565 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.749837408 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446129272 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.741025172 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.08942777 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745153382 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.948437209 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947940455 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.746797031 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018758416 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.758401585 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758867131 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.711609256 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736058694 seconds)
  done (took 1156.442734181 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.754790701 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.769279387 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.782323857 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.744884765 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.763143872 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.847714488 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.764382025 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.82863641 seconds)
  done (took 23.845587306 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.734209767 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.737476111 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.733893955 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.738584194 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.747655029 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.310814734 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.736699406 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.740050729 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.755104693 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.735922026 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.733193639 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.475672721 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.740064629 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.747133579 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.733382768 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.740849136 seconds)
  done (took 38.74629595 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.08715901 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.00986324 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.606556901 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.801240381 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.776538658 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.745731515 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.22862094 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.753560925 seconds)
  done (took 31.602519655 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.744706534 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.745735322 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.746143824 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.745857727 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.748720499 seconds)
  done (took 10.324418787 seconds)
done (took 1452.915900349 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.744760836 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.74422932 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.745843753 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.744691686 seconds)
  done (took 8.572285105 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.714905983 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.715569813 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.716118543 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.730941894 seconds)
  done (took 11.471794535 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.199783461 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.4379977 seconds)
  done (took 6.230931574 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.739720204 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.50407291 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.489872909 seconds)
  done (took 9.330366672 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.040013401 seconds)
  done (took 3.634282006 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.189079964 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.2732145 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.733479077 seconds)
  done (took 8.793707646 seconds)
done (took 49.627896095 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.739651685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.501692132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.890468573 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.733095891 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.893719748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.890274185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.01911045 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.739721258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.734147271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.764006698 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.734224257 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.89225568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.005488933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.501890129 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.005593218 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.499157853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.893388004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.737935484 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.733852294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.734283615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.018335538 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.737228885 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.739627088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.745726524 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.894076119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.879679383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.735256256 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.501104609 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.7461181 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.744522114 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.879838579 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.754310369 seconds)
  done (took 94.615540802 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.734523696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.756611628 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.739058175 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.753030062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.743956232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.739893969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.741228248 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.746416678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.742174493 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.738223174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.737144223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.743926648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.734269703 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.736320573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.738834511 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.735096162 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.736566705 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.739630799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.738804003 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.753211644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.742733814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.735117073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.762666609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.737776799 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.736551177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.737156079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.735316276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.745673352 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.736621245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.736255228 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.735866024 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.736597713 seconds)
  done (took 89.305322088 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.745401515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.751532183 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.739498657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.736468252 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.7372483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.739533613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.741227175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.737166597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.759889574 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.753210437 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.738621291 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.735134472 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.740017871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.736863006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.758559185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.756637502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.737700184 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.738263173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.758582188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.73765938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.73830501 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.738896936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.738876358 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.74530682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.738112427 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.738936342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.754688479 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.739441796 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.743938421 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.739023355 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.740662181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.742319162 seconds)
  done (took 89.377610858 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.97973461 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.752749599 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.754605663 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.746123247 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.755563698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.75227833 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.746864033 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.984786162 seconds)
  done (took 18.072840123 seconds)
done (took 292.97116531 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.746295213 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.747229355 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.77862315 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.748662914 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.77013739 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.779221352 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.995534594 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.777147142 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.984576462 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.750212369 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.768894902 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.750176632 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.750777626 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.903468111 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.745636423 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.751392719 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.760893553 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.742564866 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.751317188 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.036767853 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.777172578 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.744546917 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.751679084 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.751045217 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.731910063 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.833445551 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.834934027 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.91961514 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.885396897 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.832813947 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.759045596 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.75528381 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.751294489 seconds)
  done (took 78.970322446 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.750207114 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.756575766 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.758130472 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.756948636 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.756677637 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.757020407 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.750883022 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.756225665 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.75806095 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.75665583 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.7581511 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.758897857 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.759996938 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.757101687 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.757019789 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.73696183 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.751678264 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.758195968 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.750522049 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.737941653 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.756620204 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.758204983 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.758223167 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.758768795 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.758017537 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.758309942 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.7595994 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.759897689 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.75891558 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.75914761 seconds)
  done (took 54.275284904 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.758757969 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.746192109 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.750278506 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.759692047 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.755030641 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.758870686 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.145334639 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.764949556 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.757599554 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.758584529 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.764212026 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.766203682 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.810292446 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.74828721 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.785458161 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.760064691 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.762053903 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.755961857 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.747685425 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.776470971 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.144330516 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.761904414 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.139507306 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.770648139 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.759883002 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.757018847 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.762133941 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.753561482 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.758015842 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.76841007 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.759692844 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.136652848 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.74810509 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.758466263 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.758167793 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.767336084 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.762561646 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.749153375 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.789798822 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.755034444 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.135840185 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.757408885 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.748716607 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.75715 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.762969978 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.763305769 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.749051582 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.753091253 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.081377488 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.764361647 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.750589672 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.761424037 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.766209565 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.758179235 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.082271309 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.760848347 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.758574933 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.749904141 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.763715544 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.138757697 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.765538362 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.7590801 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.762277595 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.758283859 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.755153163 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.758823739 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.773849529 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.76037789 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.752421254 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.760618622 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.752261229 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.75909053 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.76359993 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.75402449 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.758416169 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.753039609 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.760783979 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.765640764 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.751022545 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.137731541 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.764170505 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.752593713 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.153414461 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.765350203 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.770841813 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.768513338 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.765894263 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.83268631 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.139373609 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.731615074 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.777461311 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.7537366 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.144732377 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.770728571 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.762011651 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.752966504 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.768317834 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.765920738 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.75269334 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.754556363 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.761242628 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.77540965 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.755434406 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.76529391 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.147020521 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.768315012 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.75444124 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.76393911 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.833531863 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.767486863 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.775251017 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.767248024 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.155354321 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.76615023 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.7683118 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.754993689 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.756117852 seconds)
  done (took 251.01409444 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.754961596 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.757807743 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.756009203 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.756372553 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.757756153 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.76530767 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.758360813 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.759514604 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.762566557 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.757110678 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.759071294 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.768451943 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.764930006 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.757699166 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.763217987 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.757718352 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.756507709 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.764956561 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.758052325 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.757602072 seconds)
  done (took 52.80881003 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.77074436 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.497278537 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.472250032 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.770952311 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.771026404 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.76394665 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.837197958 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.771642327 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.771957045 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.159375351 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.996488961 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.772685719 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.771707562 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.771257584 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.473624465 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.7523463 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.158630571 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.499408965 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.77335415 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.499891125 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.751184717 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.771883466 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.764351315 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.499461243 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.166782913 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.151229952 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.842773972 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.500280863 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.772995805 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.771958653 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.499061933 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.774564671 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.76651665 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.487501405 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.773506359 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.787598236 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.772197988 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.842993725 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.844772017 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.162897215 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.521027321 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.163913924 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.787420391 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.954565692 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.777602979 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.750022847 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.511563494 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.774044016 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.753309023 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.776225749 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.780312387 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.487229246 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.770105063 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.488396898 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.778595291 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.776546264 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.504334737 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.487466808 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.490737299 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 2.004780863 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.767918947 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.157154818 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.778535289 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.511514789 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.775861733 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.77522164 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.774876673 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 2.001708554 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.505276713 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.158294002 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.168871501 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.163085675 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.775551116 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.851987485 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.776328875 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.163825015 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.851117453 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.207020959 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.165369568 seconds)
  done (took 161.046442565 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.100421535 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.880359589 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.24762496 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.430626493 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.361346606 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.929423099 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.906024547 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.053871786 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.773268237 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.904680881 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.593392803 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.877308487 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.626965298 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.855192654 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.893798726 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.909263353 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.266417196 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.766265212 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.51351803 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.572343874 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.775048185 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.888190708 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.608143304 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.216453535 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.779239779 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.569283266 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.781201424 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.383017327 seconds)
  done (took 66.083048187 seconds)
done (took 665.800710932 seconds)
SAVING RESULT...
DONE!
