cset: moving following pidspec: 8161
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.438228189 seconds)
loading group "string"... done (took 0.498823084 seconds)
loading group "linalg"... done (took 9.492178081 seconds)
loading group "parallel"... done (took 0.17414083 seconds)
loading group "find"... done (took 6.432369165 seconds)
loading group "tuple"... done (took 2.124842596 seconds)
loading group "dates"... done (took 1.446302436 seconds)
loading group "micro"... done (took 0.200867098 seconds)
loading group "io"... done (took 0.544498359 seconds)
loading group "scalar"... done (took 58.347194693 seconds)
loading group "sparse"... done (took 13.999068245 seconds)
loading group "broadcast"... done (took 1.353840599 seconds)
loading group "union"... done (took 11.229976751 seconds)
loading group "simd"... done (took 3.845843932 seconds)
loading group "random"... done (took 14.005451481 seconds)
loading group "problem"... done (took 2.220488516 seconds)
loading group "array"... done (took 25.153405487 seconds)
loading group "misc"... done (took 1.15826889 seconds)
loading group "sort"... done (took 3.741901181 seconds)
loading group "collection"... done (took 22.147454067 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.617285177 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128073122 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.205497345 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.227659542 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.219754093 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162818354 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155660635 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.23625499 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.518248406 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.196678738 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154641761 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421809551 seconds)
done (took 6.004630666 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255143932 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.245346088 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166966348 seconds)
  done (took 1.114643636 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076632413 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158196256 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108760027 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094391889 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094169917 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108772725 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094480503 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109502833 seconds)
  done (took 1.474424739 seconds)
done (took 3.626416247 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.499167107 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.895644055 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.5103166 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.145148018 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.315177886 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.289813866 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265752512 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200208475 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090418499 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089210269 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175088829 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.380991494 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.394769699 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.938505868 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087362427 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.10898181 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.115284376 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.765617634 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079106649 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110430432 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.512780299 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.193528925 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113892706 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106348795 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185863278 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136544823 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161468896 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100816619 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664668211 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130783775 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180652987 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098248473 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158162605 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.187242743 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214127937 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094014132 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686498595 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20284047 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099666406 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100667821 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671012167 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120199252 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186692409 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103973094 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087703665 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181825799 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.10152238 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09322583 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093149361 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086267292 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16013586 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.478664356 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107874536 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.17017343 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092002916 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.704383286 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099201265 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275512039 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125968286 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093472926 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092635101 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087475616 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156687663 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093491764 seconds)
  done (took 19.988549942 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147665664 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164922153 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07930823 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155957908 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120773951 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079183615 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100915968 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078205704 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126233345 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17741698 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139103967 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152718696 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091780235 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089660504 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.129553278 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246907724 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108248143 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120585779 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088878744 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089432495 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139923488 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097100824 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107335768 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092013478 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169545969 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202576747 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109419097 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121874776 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090942882 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096204099 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14160032 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144285808 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090661671 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088916407 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188453388 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106498844 seconds)
  done (took 5.193158596 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.221632027 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104462301 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.229119749 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198880137 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.137443819 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184801681 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.167921343 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25936967 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.214015861 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182042578 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116379386 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.185870224 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08314615 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115361932 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080219398 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08024892 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096862424 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.467499697 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146627188 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.191738516 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164773624 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111678732 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081682397 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368971 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100697959 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085220018 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112652842 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065566714 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201529583 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094339825 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.134449043 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082625781 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121070575 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132586533 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195833292 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128426604 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140314791 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095166968 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102993964 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.205552381 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100387224 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101770155 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094643159 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116195339 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13151926 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115232984 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107867815 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110659218 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221291542 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086510043 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129711334 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.061345137 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195808172 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127143904 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084584288 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294044838 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128092647 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100470588 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110990069 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.791306547 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131372909 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082212119 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078149311 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113402 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079134616 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431838825 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125492831 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.308267417 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084570566 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157731665 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096966889 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117716904 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082314714 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099811091 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088314609 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.107865847 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.102715262 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079297545 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085783084 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096594605 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090219917 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113162064 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101114493 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079140033 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158199923 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100362673 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107130035 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126719447 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090573786 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.102360281 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114800338 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097711926 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088533535 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165432593 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097252128 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131647551 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113200797 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129381088 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101873014 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.225534416 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086186334 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121526065 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10032189 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126165694 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101185351 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079647611 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101554679 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078674514 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079120358 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159792146 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089562257 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080617387 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105144526 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094697612 seconds)
  done (took 28.544827966 seconds)
done (took 54.42985492 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.447073817 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082509793 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081463075 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100788926 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082315063 seconds)
  done (took 1.570370837 seconds)
done (took 2.326440524 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.324580788 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198048627 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102059791 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187139328 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085372397 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193156968 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179339062 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100309135 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206113076 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083611802 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184780193 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084719337 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102252488 seconds)
  done (took 2.811484731 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101655855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10477591 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.118283487 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101973102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084808018 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09977358 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117260317 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107133725 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099345396 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11215118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084888788 seconds)
  done (took 1.881734219 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098364062 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103098708 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09103809 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113609782 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085476035 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099543993 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113301653 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105087987 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097642108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109978752 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084357133 seconds)
  done (took 1.857010148 seconds)
done (took 7.305537762 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.068826971 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.518817757 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146191493 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210824129 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344058171 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.234299538 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.564579108 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152289229 seconds)
  done (took 14.137035719 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.166531715 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107694483 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095380086 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08996209 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090747048 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.111892349 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090247473 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093530233 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111369041 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091732481 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090315198 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.108112648 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094514375 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091374367 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092064514 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.108861593 seconds)
  done (took 2.450445203 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142716261 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139608198 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097656653 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097392748 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109881209 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098217038 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100435025 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114255476 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093610174 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093835467 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.116250568 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099011135 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096747755 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109086422 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097350716 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116895725 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.108764295 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097884642 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114561026 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113555038 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099548567 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095756182 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111890065 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098854425 seconds)
  done (took 3.398954292 seconds)
done (took 20.74288739 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146610709 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099977341 seconds)
  done (took 1.002191803 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139850605 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156458522 seconds)
  done (took 1.059306761 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110217617 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089179216 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135911914 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103174559 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089164757 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105775913 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115645165 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106931177 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090133669 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08969052 seconds)
  done (took 1.802531355 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093795933 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095164954 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121565708 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134925749 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097516857 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.10921353 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094446411 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092528037 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112540522 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089160838 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094736918 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124471348 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094886343 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124032917 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09379719 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.21219031 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115069927 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093823831 seconds)
  done (took 2.762402417 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08874315 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090440499 seconds)
  done (took 0.948661874 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092708764 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088824222 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091698008 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108144727 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089302524 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08816095 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104705661 seconds)
  done (took 1.432586356 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.496577263 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261895112 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.358802607 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108803811 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.148146776 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.349462152 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.15047883 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103612265 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.121808074 seconds)
  done (took 2.903353475 seconds)
done (took 12.675383042 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090493129 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.223656761 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.605136104 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111839644 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088667633 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157045823 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.287574795 seconds)
done (took 2.334918361 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34401743 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140575807 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081755356 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091539048 seconds)
  done (took 1.426847543 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082284723 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098142989 seconds)
  done (took 0.959751798 seconds)
done (took 3.165136303 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089059735 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.11890642 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106570055 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088836042 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087223268 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.086245879 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.104926516 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.087477013 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086753912 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086985491 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.10710832 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089255164 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.086925817 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.104451238 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087859178 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086311014 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087051768 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104041658 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087257541 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086500105 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10328302 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08831379 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088374636 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085881201 seconds)
  done (took 3.048119388 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106347448 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089613384 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108413666 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093942886 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091414276 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108944304 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091476335 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088799376 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108187196 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090767621 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092822228 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108200387 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089964736 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093155311 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089638743 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108531327 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09256817 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088894008 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106234131 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092840128 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091190609 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107777165 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091861199 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0913872 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108354616 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093632329 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09019826 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106581247 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092008551 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092448239 seconds)
  done (took 3.688267974 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097245445 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085371629 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08825928 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113738006 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08522138 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088582384 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101484171 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086390709 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089489617 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086932931 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107123707 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089085361 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085109997 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10654768 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089852411 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091270279 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097332185 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.1040216 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086010059 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089690308 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107652297 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085670853 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088767342 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087739008 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.104928267 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085406786 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088313568 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.104896484 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089599228 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089464022 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090685924 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108414117 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089942912 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098615097 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.108463236 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087680063 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093321927 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102448486 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089707708 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084862882 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085109019 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105798297 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086277878 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094160408 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105409273 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090389202 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085703936 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089986786 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.105262261 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091131636 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085363962 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102203383 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091383846 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089073807 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091127287 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102313451 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088403902 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084492652 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.105635343 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08868359 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085090499 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085477392 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111388249 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089658431 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102740851 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111572589 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085986152 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089245785 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106964729 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094302693 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090240119 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115708282 seconds)
  done (took 7.577495367 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101340021 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09613225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088957389 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106666029 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089162614 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089216291 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110462016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090422028 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090716963 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111925066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089651454 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090101053 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090380017 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108656187 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089762834 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090175213 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112313457 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091042317 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089818308 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108050279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089922844 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093478855 seconds)
  done (took 2.903133064 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23471329 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096363814 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137475294 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122208592 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107594547 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119527176 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095016021 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095589862 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109595494 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099708166 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09844802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111118864 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110069182 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098122477 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115294154 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10004179 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109434275 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100424194 seconds)
  done (took 2.848016732 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102977097 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091294932 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126513456 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091649492 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092768432 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092701228 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113300702 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109734935 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107408593 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09240957 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097693364 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090475992 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108412172 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090783031 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091069972 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108435983 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090714285 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091596886 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114250411 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096093063 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095790911 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114693653 seconds)
  done (took 2.999567839 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104246119 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092119334 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126153225 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095087756 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090091207 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090365716 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113998906 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092436018 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096273937 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108095099 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091967962 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090025903 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121667026 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090649853 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096244692 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107136292 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091223557 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09183864 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10735205 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091062099 seconds)
  done (took 2.776728658 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.16893614 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122733753 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108155114 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114912102 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124371001 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10689943 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113900308 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124449967 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107644438 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133874198 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106730404 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107010547 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13231117 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111927823 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105716068 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131144805 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11603248 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130682227 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107042835 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106836742 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135564843 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107332094 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131716022 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107618135 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107247338 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124258053 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106820143 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111110337 seconds)
  done (took 4.105244608 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090036781 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089228757 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089612728 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106148086 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08997402 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089154274 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089016109 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106861216 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089669913 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088716051 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.106174905 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090858951 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090025487 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088770171 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106300559 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09006614 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089405101 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105854702 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090423252 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089381251 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089354562 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106140985 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089596542 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089540494 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089853264 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.106017803 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089560793 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090210189 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106120286 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090764467 seconds)
  done (took 3.617654104 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102908444 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101552942 seconds)
  done (took 1.000333036 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097506551 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104404501 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08942114 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10915196 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097129107 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089584247 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114384155 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095592685 seconds)
  done (took 1.593762447 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.139750381 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159619378 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095944936 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10159531 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159504985 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150601713 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13191148 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094778958 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106989796 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083865453 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.153805422 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084015852 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091675122 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087782302 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110026829 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098530456 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091399719 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.117291699 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097561714 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092550791 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11445771 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097101222 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093238217 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119905769 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085906267 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092811317 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112279085 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102935556 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087716796 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111101012 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089599588 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090350668 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.111019846 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096493952 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091008482 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160433402 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098158221 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104968126 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092358497 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095642501 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140158991 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092791996 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092020231 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106179373 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095170684 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095948571 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.094579891 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108962825 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084127698 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086061455 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.108040182 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087333629 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09045261 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108106827 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092239934 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098562021 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.110907646 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088279997 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087175739 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103997518 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090824718 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086988315 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110758938 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095245871 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092188781 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108747408 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091298042 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091453123 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092890692 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.109420426 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090851927 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106530378 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110292942 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096265037 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096064646 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.10952365 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089579198 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095419453 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107822984 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092624223 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095242711 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136325579 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093777828 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087328718 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103926248 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098260556 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092538332 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.11037407 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086191208 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099978617 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.110619252 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095448943 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084041209 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089031927 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105014545 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093860768 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084074148 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110057158 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090597427 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095960975 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113167764 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092019806 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092520717 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113998073 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09745617 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090709977 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.154098872 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087906202 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086561218 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.111972077 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096426113 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086263452 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109747147 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090429698 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087514576 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104337209 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097763257 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091450462 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.108525666 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09625869 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093235752 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110163801 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094032383 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090356894 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087437981 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.112329371 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098950843 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093032983 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110211025 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093765647 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092789935 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108339532 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094378532 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088428177 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113804768 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090477489 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090545991 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.092832941 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11320818 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092399198 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087158998 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10938178 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093074787 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091029381 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.111939898 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093388397 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087168653 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102146816 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093301616 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087626767 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.11038602 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099714428 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088009936 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.111727898 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090225281 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099191999 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106687089 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097271344 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093144439 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097090164 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114926102 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08402723 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089681361 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.11398303 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093906077 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089123249 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.110526632 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091712549 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097921018 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.111198569 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095702773 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08527341 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089294822 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.115158828 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093242246 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094836283 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106035082 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133737598 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103690742 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116473022 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091063743 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091966467 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113081315 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092145591 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095599186 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114979873 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.096352198 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089402529 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107576095 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097987931 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088081652 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093333839 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109049019 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093021495 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08363264 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112386154 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084189329 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095640937 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11118998 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096701774 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.095834244 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112283609 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09256731 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099262058 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10554259 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096490105 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084987068 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096819164 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.129119403 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09792521 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096638545 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111369064 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091848298 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093833154 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119834946 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094213055 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093383447 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.110891071 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085897006 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086115383 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097642475 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.111984661 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087549449 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092441425 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111835538 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093865347 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090171085 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103947869 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097635699 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096498225 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107157556 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0940757 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089752704 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109291641 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100750091 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085974523 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105968403 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09539224 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097052127 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.110928555 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09380161 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095691512 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097601029 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.113856145 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095592433 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089917352 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1183236 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090225804 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091608045 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107287385 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095671268 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08664109 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093543071 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111333255 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089398861 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089455939 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115169016 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10036111 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098390056 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108875326 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098195045 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.098244073 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.117259217 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090890448 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098256335 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106335501 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085411149 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089286653 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084594303 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.113090785 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088692137 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097664659 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.109356396 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091770222 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09598635 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113831996 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091152239 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098155007 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123057167 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086599 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086956475 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10933167 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093589043 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089694716 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107873626 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094705672 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094120628 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.115470441 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096123966 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089471732 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.110909654 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100989424 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089635471 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100280222 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.117247901 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099355088 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089387798 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.115622958 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089989576 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096841514 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.105726393 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093731154 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092421816 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111688481 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091916171 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092782532 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108914428 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086754155 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090314655 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.117959605 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092792261 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09789735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092466849 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110002441 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089412898 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089039504 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117922055 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092577799 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098901475 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.111578394 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087394492 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086643009 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115936218 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09421385 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099113829 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107193308 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097901563 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099780159 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09638291 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.113043464 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10243718 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100935445 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.118104772 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100622252 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086737434 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110198991 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098934077 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093196508 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.114171937 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095815114 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088347611 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095236295 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.119010613 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095445046 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091625713 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106334817 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095142626 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098889297 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115335005 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097608555 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096639038 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113473096 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089797747 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09736179 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098084628 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.113439625 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10017953 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094170597 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115856471 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091050045 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098474953 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.112565249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088805821 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08772354 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108287275 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09963777 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087408112 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09662806 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.116458499 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09093607 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091083827 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.116911761 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090480204 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096494938 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116066002 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091725611 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103013801 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.112642547 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092608591 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098002537 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098257045 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105809767 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093133371 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092320715 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119873563 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09225271 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098178719 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112712783 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09806185 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095331321 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116650287 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09909259 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098278908 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086451692 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.118881821 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096954958 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094676264 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109542111 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093503122 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088752453 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110565574 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100715498 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09100574 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119480994 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100715169 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092432139 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109864664 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100011266 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092309504 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118222945 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090660373 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095547075 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086756029 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115739242 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093627886 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.098795694 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.111116613 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088150643 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098352427 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.117301843 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097426228 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.0968299 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.117823311 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088430247 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08730858 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09629145 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109974616 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102835229 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095987603 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110969183 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093130908 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095172236 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116441523 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100223039 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089331986 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109541598 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094819163 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095445812 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110360241 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089819919 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098267601 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111317123 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096602768 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092462938 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087810933 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112254075 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100700113 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092060708 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108824468 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092242736 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101146286 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111149803 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091914218 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088494029 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118704117 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096758904 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099610194 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110648694 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096120235 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091563377 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.114083464 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103572258 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09247047 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111417921 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093961337 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099439195 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098153735 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106823086 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091811509 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102513637 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117030814 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096389539 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096583166 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113369431 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101573595 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100506051 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.115086058 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089357766 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088786172 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111522789 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089244016 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096842565 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098466462 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112186532 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091571858 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098056342 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117077731 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096332992 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096628128 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107424142 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101918043 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091771762 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116140664 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089404726 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089179061 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09546143 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118594482 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093578845 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095328865 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116906223 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097137696 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089282694 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.11068599 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099352555 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09924875 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099058461 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113666785 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094666358 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096134217 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122841756 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09616488 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092690164 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120888804 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099828538 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094867748 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113119531 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098922609 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100551852 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.11572864 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101965108 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092525344 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11298383 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101712941 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101119579 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123230527 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093645134 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088744272 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.116157488 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093082792 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087916315 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098711998 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121650598 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100621198 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094321917 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112042973 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103586525 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099739161 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11392394 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093425501 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092311101 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.11805401 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093648803 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098335178 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.11054248 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102585379 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101119533 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118378795 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104038264 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088731601 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100140182 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116662857 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102070948 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095676404 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10814365 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08984223 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098054537 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.118715263 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100730654 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09867945 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097013052 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118466368 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097312083 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094519752 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111532503 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101210581 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099484327 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.114902675 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098488299 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094042527 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115474486 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096846179 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100172593 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100092369 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114547223 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104261737 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101692922 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114473126 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092778587 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095830338 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.116862261 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096324654 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099992697 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.11199864 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089326492 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099562501 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119982193 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096507532 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102470541 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119063628 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096886483 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097562431 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101721384 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.120156354 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096927904 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095853799 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.115781323 seconds)
  done (took 60.855428608 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14401696 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102368249 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116278349 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096930454 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1140256 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117622928 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097832524 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098967779 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117040096 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107980988 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097515919 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115135403 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113550229 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11800568 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133098069 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106106099 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115312501 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099065657 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097637442 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098078008 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130979489 seconds)
  done (took 3.180421416 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115144706 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109852058 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127512542 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11179913 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103337578 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127158242 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109394662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127544482 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111038269 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10540622 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130446973 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107794913 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125331763 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10599046 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106279773 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125859375 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112062381 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103888258 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127323294 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109107928 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125292544 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109746602 seconds)
  done (took 3.38098598 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127492066 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100309453 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094569684 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115904585 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100146871 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096572389 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119485965 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098842965 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106781816 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091935979 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107458581 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093767755 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096447539 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116650832 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092159471 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.0972229 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123951318 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101350286 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103778895 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096511527 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106927547 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096505027 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098366344 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107107153 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10268035 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101287187 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096644446 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119375476 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089208289 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100214247 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116055307 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091958736 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090165945 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087753043 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107587035 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101018358 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100164314 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.115895302 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098937401 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088707221 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097745925 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121400644 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089310145 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097207505 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.115062095 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093156655 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100857682 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096186749 seconds)
  done (took 5.757952705 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126654771 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161973796 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.332619993 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135468755 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13268959 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106946245 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098653755 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135503933 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100254382 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12183725 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112514394 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110696808 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124051881 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103855895 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102016278 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123128722 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102586382 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098586299 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125014855 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101796746 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104879594 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122834413 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111119699 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129056366 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103183815 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101014169 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12074305 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104415628 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110525233 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125562979 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105275863 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104600384 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131076315 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103951922 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099843643 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122155662 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111750687 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.12109084 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103419735 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098888124 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119949383 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104262611 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103621832 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132411875 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104031778 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103244597 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120712884 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100414368 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111615123 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121601885 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.10773002 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11210431 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122391744 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102554629 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103988306 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133243795 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102464239 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.098585244 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123197963 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109694927 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.117752251 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104657371 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111417705 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.119926423 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108125726 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111110662 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.12262149 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103243909 seconds)
  done (took 8.915010977 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130443837 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10519342 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134315784 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113271551 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104252222 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124746548 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106066536 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.10485721 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123911713 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111302859 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124188372 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.197309575 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122250758 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1093415 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105463469 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125770687 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106199215 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1057527 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125139592 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106294829 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104898051 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133263912 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106194892 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132110275 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117196289 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101851546 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125058008 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10521692 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112806524 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126760753 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118412904 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124272867 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106135596 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113505685 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135817332 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105838264 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099255778 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125701163 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105960597 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105174697 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.121722709 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11435466 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124831485 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102957364 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105413916 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123755145 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114640182 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114795037 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132019248 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11194205 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123725392 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114951013 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105104499 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125646754 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115613273 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13987017 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114723516 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114231062 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125216996 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114736348 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132243768 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120609098 seconds)
  done (took 8.163364315 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099021337 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097395331 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097778534 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117691802 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099379638 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098502073 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09793769 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118627752 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09792578 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099530199 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117703816 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099022647 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098037215 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097721626 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117763013 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099639738 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098126917 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117134646 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098814817 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097571187 seconds)
  done (took 2.927922907 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109246285 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114171129 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119797135 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106850824 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101095289 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125228066 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102608541 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102421128 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100145092 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121569782 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109654085 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12803911 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1024211 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106283323 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128119097 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108125801 seconds)
  done (took 2.650124052 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118773689 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117073455 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185333418 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102724528 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12102277 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107864699 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102937303 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.122086212 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101583392 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107020904 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104334645 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124826017 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102098244 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102041817 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12198235 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104918648 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101392646 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123659833 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10340369 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.184477016 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105331447 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102320725 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.101180485 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124276006 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102354121 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.103877171 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.129118422 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101467813 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102345338 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122368563 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103677861 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106203161 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121336375 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106211437 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102341002 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121213356 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102630777 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10173845 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122882248 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102556859 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103778456 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.120645642 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102125582 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104040329 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099907868 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122153089 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100159524 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10627586 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123203083 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103700038 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10137401 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128578328 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106236699 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109466759 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127386585 seconds)
  done (took 7.070379522 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112994239 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102345399 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132745414 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101201711 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10220837 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101045829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122767226 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102975463 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102080819 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119348087 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103085266 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103222533 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121648875 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103431833 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103412433 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120454482 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101162294 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10261222 seconds)
  done (took 2.825140327 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106325514 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101407961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103751108 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121993036 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101398195 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101121369 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119412902 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099935687 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100528135 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10028705 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123576322 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10204888 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099716273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121535867 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102844584 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102096144 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120037274 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101563309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101554381 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098854194 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122531299 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100709138 seconds)
  done (took 3.225359979 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113099068 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.18272946 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107982927 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192074891 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097026416 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097189905 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127729256 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099290166 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112688848 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117346964 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096973642 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095843963 seconds)
  done (took 2.3131258 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128663302 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137222827 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121442575 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102800769 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110631822 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126551329 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106963878 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107106578 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132765435 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118378723 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125067802 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114233582 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113601966 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134359563 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109475717 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129251115 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106958564 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105796488 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120504873 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120935626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105982392 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132189456 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106260206 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106143454 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125187782 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115306212 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132268128 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118538403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105753147 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134584034 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109974978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105436072 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134849456 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11815898 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122479245 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114103212 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105203862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140992442 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111098704 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135173236 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102421898 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110034398 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133501877 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11090868 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13246345 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108141627 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110609516 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125393981 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106571066 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126531583 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13116224 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112818177 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130585958 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114661467 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113132192 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147846916 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118178272 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13472312 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11041607 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137866008 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115693394 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109414747 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134962818 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117256107 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131452661 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114085475 seconds)
  done (took 8.769287977 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142848865 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103485577 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126892375 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120060642 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13588479 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108910193 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107199063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127042248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107928318 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102653099 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168957119 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106577337 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134246947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117079806 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106449473 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126853299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107097682 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113890679 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124504358 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129128943 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127358772 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114991969 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11453492 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136012099 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119662848 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130695232 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106995151 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105963774 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126820017 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108483894 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110617809 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128243728 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11574942 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102093925 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135706801 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107188574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126764594 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113386677 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106839843 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131192089 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115120899 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122929305 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128524961 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107030777 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13911954 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10689097 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106458941 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123504003 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107417032 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103380892 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140382949 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119685896 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139503788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114614278 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107229518 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128397316 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107679519 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106497496 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127651608 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112767997 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134910898 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108531758 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12720846 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127998449 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109039172 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115185361 seconds)
  done (took 8.756602923 seconds)
done (took 165.730264241 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148503146 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.185154848 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144569935 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176253466 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093092581 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128117717 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145642981 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146387882 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091626198 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114114586 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093090364 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09459418 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181183682 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09409394 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092680905 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093987043 seconds)
  done (took 2.898755384 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191487018 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305704808 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107732508 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118435118 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100187769 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097339939 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119343487 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099603371 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098369405 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126542528 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098877617 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093405342 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12612921 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094220817 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098320699 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.117211651 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105778224 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097765578 seconds)
  done (took 3.085621241 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117919536 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141132058 seconds)
  done (took 1.144708342 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129728138 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211575442 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27982584 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167930306 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118870563 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139072609 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146911262 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131705305 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186381381 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131665555 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1106658 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094401276 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145575194 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103779723 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134016453 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096077774 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125395204 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134460717 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11263049 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100407255 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143525406 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101888091 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103733582 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13430916 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178450602 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133056475 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102059754 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100791316 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121644011 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112094781 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105762522 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137634297 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110703784 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179107755 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100964833 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17448974 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.125338513 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.098817613 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11237366 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119799867 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102967813 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101220104 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133559274 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096328375 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102037843 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126213173 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103086669 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102351709 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128167158 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106621869 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.126316074 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106924501 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.173053167 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106896804 seconds)
  done (took 7.796511732 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862565552 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139247314 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09871865 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.013208798 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149390453 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112161562 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.888982665 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121937596 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254236164 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.886628807 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113796346 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13418635 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239535581 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28083656 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.270531745 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359597041 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.730832361 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110860652 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151478073 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.141299671 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129972302 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125459091 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142208414 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.49262597 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.121359979 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099920916 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106320906 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133668823 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174687362 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10126686 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102514144 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196466329 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291773629 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209397347 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099517851 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120640025 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0992134 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185849836 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275139516 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221224268 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172469325 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117380021 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098921044 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107000944 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.140258072 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096085674 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178996767 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192470634 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188346473 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104775168 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112685919 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132396097 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107761258 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177560373 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09672053 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357245998 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384179804 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099249006 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108747727 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136421562 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268108888 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100722518 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236958254 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149518061 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215509281 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098319977 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839354401 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184810623 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09888207 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128254914 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106953891 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125962929 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108858871 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187144934 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.475612229 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134055195 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104707192 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100148556 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232511463 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121089581 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099681457 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180733578 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100952826 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109838127 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135091486 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111259954 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189666093 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272708366 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112079276 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131065196 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106258255 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112517092 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122048091 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210402912 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251740139 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15269737 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230615833 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131088557 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159603796 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183591077 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128104958 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166637258 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129608468 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115991617 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12870106 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225135418 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135072207 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12473447 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105849284 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109393312 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159849943 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103656534 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131780906 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164128428 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.552832915 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184645249 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096844937 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125888029 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110905022 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179415191 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107552263 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261089476 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130065714 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164381551 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128610089 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097231902 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108131852 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180968029 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130881275 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109161378 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10816897 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131620271 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277602863 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222509601 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113869289 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253227601 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.199938615 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107858095 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19158089 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108586444 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189620445 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109748598 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130756401 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100944123 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821088999 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136651244 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110292671 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1051253 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.207052553 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098516254 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124441788 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100200273 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097505965 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814671348 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124519124 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098308479 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102002221 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130394895 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108793548 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108241355 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126883093 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157005541 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269229653 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112854873 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1289764 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100588191 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178659581 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101296035 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100783708 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121659342 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101187648 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10966472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126479479 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103799642 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192018637 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153666099 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.25261775 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.653855513 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100212089 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100771157 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264537245 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100611871 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325543107 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109175933 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.258206128 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164380785 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12016002 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361959839 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185648589 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183558785 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.124902106 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169389751 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118974248 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109487585 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180715177 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101100112 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108010939 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17773425 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136065068 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114305439 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.276657617 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123260539 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227881261 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.119520404 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165470237 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124178127 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108431129 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325099612 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122859788 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119587424 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179095597 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10426233 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122067215 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.599031629 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12401751 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113067613 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130601394 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235950558 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184536242 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109921497 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10992941 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136346351 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178826724 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207757733 seconds)
  done (took 47.704743631 seconds)
done (took 63.516810213 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263835774 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17546336 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280427934 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173923942 seconds)
  done (took 1.87258141 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.240672446 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155118168 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.199264943 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.119307263 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.204103735 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.119092118 seconds)
  done (took 1.947812601 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.173617743 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165079677 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143816822 seconds)
  done (took 1.390439489 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197636673 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212412498 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.324202536 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.229872158 seconds)
  done (took 1.95972202 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.261317043 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114829583 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124049568 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.203803293 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.224933072 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.202859409 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.121274103 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.171251234 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127604438 seconds)
  done (took 2.507196201 seconds)
done (took 10.591734395 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.20016168 seconds)
    (2/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.318858235 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.41254822 seconds)
    (4/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131286944 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.324059885 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.21033694 seconds)
    (7/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.365320516 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.193111127 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.225009205 seconds)
    (10/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.330186832 seconds)
    (11/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.258849097 seconds)
    (12/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.273104322 seconds)
    (13/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.096914496 seconds)
    (14/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.128134465 seconds)
    (15/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125977231 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118053821 seconds)
    (17/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132071863 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109308784 seconds)
    (19/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108620845 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.144578811 seconds)
    (21/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.192548099 seconds)
    (22/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.269323482 seconds)
    (23/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.238410027 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122360941 seconds)
    (25/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107648547 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123706128 seconds)
    (27/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.127862065 seconds)
    (28/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.23159988 seconds)
    (29/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.122763753 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.201652268 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.149926051 seconds)
    (32/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109400113 seconds)
    (33/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109131354 seconds)
    (34/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.1358637 seconds)
    (35/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.232440792 seconds)
    (36/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076061656 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07525905 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.154610977 seconds)
    (39/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.188479548 seconds)
    (40/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.269870947 seconds)
    (41/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.198577996 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.21799033 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108845224 seconds)
    (44/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21046983 seconds)
    (45/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.10092348 seconds)
    (46/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.143000597 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125665269 seconds)
    (48/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.240699561 seconds)
    (49/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.107617214 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104853863 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.123392006 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.14187414 seconds)
    (53/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115116824 seconds)
    (54/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109528489 seconds)
    (55/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083859695 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.10106935 seconds)
    (57/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.246348508 seconds)
    (58/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107723472 seconds)
    (59/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.125832412 seconds)
    (60/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.081703464 seconds)
    (61/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083315073 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149871504 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122250952 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.167959989 seconds)
    (65/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.186998549 seconds)
    (66/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182211663 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083348042 seconds)
    (68/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.128409215 seconds)
    (69/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.139175901 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.097420942 seconds)
    (71/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.195929902 seconds)
    (72/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083988929 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106593445 seconds)
    (74/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.100085334 seconds)
    (75/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084786304 seconds)
    (76/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.161197855 seconds)
    (77/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.137607396 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.122072179 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127966234 seconds)
    (80/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.207774683 seconds)
    (81/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080228631 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108664298 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120196274 seconds)
    (84/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.187726874 seconds)
    (85/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.137514758 seconds)
    (86/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.187430733 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.080909359 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110475236 seconds)
    (89/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077087049 seconds)
    (90/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083878287 seconds)
    (91/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.172131557 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101722206 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097716333 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.131812159 seconds)
    (95/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108779389 seconds)
    (96/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087375549 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.147150776 seconds)
    (98/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154788113 seconds)
    (99/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.104670213 seconds)
    (100/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132602649 seconds)
    (101/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.124720357 seconds)
    (102/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080551535 seconds)
    (103/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.153610271 seconds)
    (104/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084686708 seconds)
    (105/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079682209 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080949881 seconds)
    (107/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085652417 seconds)
    (108/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.100096078 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108958215 seconds)
    (110/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080684889 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083734326 seconds)
    (112/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.288127794 seconds)
    (113/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.141185545 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.136068213 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.131508006 seconds)
    (116/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107335051 seconds)
    (117/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126689006 seconds)
    (118/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.081336725 seconds)
    (119/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077396377 seconds)
    (120/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079531915 seconds)
    (121/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.164401357 seconds)
    (122/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078219176 seconds)
    (123/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.083204957 seconds)
    (124/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107549831 seconds)
    (125/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.267325328 seconds)
    (126/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078448911 seconds)
    (127/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.163571577 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.119921856 seconds)
    (129/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.105088401 seconds)
    (130/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084769755 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.145006303 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123447505 seconds)
    (133/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080777272 seconds)
    (134/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.121587343 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10297989 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108624682 seconds)
    (137/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110806382 seconds)
    (138/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.10618902 seconds)
    (139/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077977691 seconds)
    (140/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07990382 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101013842 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12417414 seconds)
    (143/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083454218 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101714299 seconds)
    (145/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.083351785 seconds)
    (146/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.106837508 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104094691 seconds)
    (148/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.20744364 seconds)
    (149/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077907958 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10082908 seconds)
    (151/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077321213 seconds)
    (152/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.077385371 seconds)
    (153/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.101762142 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10016392 seconds)
    (155/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085454769 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084390236 seconds)
    (157/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.155057794 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107660041 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.1004831 seconds)
    (160/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.163066983 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085010796 seconds)
    (162/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077717788 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121995545 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.100382306 seconds)
    (165/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084579961 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.101738324 seconds)
    (167/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.0848003 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076967872 seconds)
    (169/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.131826243 seconds)
    (170/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.110632507 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.101432657 seconds)
    (172/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.100882275 seconds)
    (173/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085881416 seconds)
    (174/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.110958384 seconds)
    (175/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.07753249 seconds)
    (176/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.079028177 seconds)
    (177/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.106428625 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102263809 seconds)
    (179/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082250112 seconds)
    (180/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080075764 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.124458876 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120453694 seconds)
    (183/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083621184 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080888027 seconds)
    (185/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.108371117 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102360495 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101757578 seconds)
    (188/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.102863304 seconds)
    (189/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081822212 seconds)
    (190/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0996935 seconds)
    (191/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107013744 seconds)
    (192/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.122839845 seconds)
  done (took 26.266779269 seconds)
done (took 27.184472456 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.205480597 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125900051 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108232091 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10712167 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.198293859 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116680089 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148359716 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111430046 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118361835 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132412332 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099536069 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121445617 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108262464 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.200660254 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110905991 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125521204 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100620491 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118228264 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148124481 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126681211 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.200475454 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103184178 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118074778 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124658137 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.176980489 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12660402 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110119211 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11047819 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.144097022 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110586536 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109798359 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.123438541 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.12693525 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125225951 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100375226 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134336913 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101206504 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084916477 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135722305 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112600574 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121390047 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133280492 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110465686 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10216464 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.133584958 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110581648 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101195838 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112799198 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.122684078 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11165109 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102248012 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.148715083 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109502205 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09946106 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122142671 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102730842 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119639765 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123496735 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12436006 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101055202 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.124164041 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102228657 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112650602 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100774055 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133282348 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101710294 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112745693 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.136521486 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110444616 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10326879 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123497584 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.10950403 seconds)
done (took 9.744840303 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106835822 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145564764 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198142267 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.210069829 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130264339 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140302254 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116493147 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12589084 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137115704 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121119971 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138272939 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157336329 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181416993 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141884796 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118201475 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112303963 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.136947637 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110985491 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.208200838 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.1251313 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150091468 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118055947 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127786088 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14232626 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106043161 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.127045382 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132576668 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114022316 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104179515 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14679902 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126747844 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104335207 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132882547 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12554659 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.143504448 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118049726 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116904491 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.13624064 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107176117 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105225163 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137145021 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12096332 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10597392 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141173366 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114225767 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119526662 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.135562006 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118773078 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106504412 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.135933292 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107704663 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13020372 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142528655 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122594351 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117166546 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.141544606 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.11900965 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118118249 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131438546 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118332834 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105581124 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129017781 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107293946 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126270344 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.13284461 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120528845 seconds)
  done (took 9.498977783 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125146307 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135966659 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139309489 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116200029 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111011911 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122978075 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099733057 seconds)
  done (took 1.811863572 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101881106 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185868649 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208129935 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207496957 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.180316581 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.218829907 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14894112 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101833497 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134909386 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136014519 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185068102 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236846239 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110121303 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141460084 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187483232 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126013605 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.211876063 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102055595 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115553844 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21035796 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117257031 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156837853 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116369047 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100292531 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205226074 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101988383 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.256074422 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118799153 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135491425 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117649294 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115488802 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204296462 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.205951824 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116079338 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108604809 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207728473 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.203087837 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114669754 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.219062147 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106075967 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206207634 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115282552 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11547489 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.140359663 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116225569 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.195278226 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121164024 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115829116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139429808 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188480679 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136320223 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183114953 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137921995 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11685601 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112219723 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1413169 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123217145 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11645133 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212690197 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118817435 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.207761183 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211183554 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.18068147 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.20966028 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123932304 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212095885 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203901017 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114258958 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108591478 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14363162 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185945717 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.14020617 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113807436 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199017062 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119685447 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211788305 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.209122426 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114772284 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114635587 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122687381 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.14081621 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102235376 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.20140734 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115304238 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113418265 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145134165 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115417946 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114582393 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.13233006 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.12554238 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.138830787 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115195201 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12048462 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.139799689 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119799021 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214600567 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112767983 seconds)
  done (took 15.608749596 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10430874 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10245634 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107519049 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.127269464 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103420617 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102232426 seconds)
  done (took 1.625308042 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139259726 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117365352 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149196694 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117568996 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160409073 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.213847145 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.218058448 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110923964 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155407644 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125500591 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.214617144 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.193258861 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.215314619 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119497811 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219372429 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118677078 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.220246398 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114512026 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.15015977 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114078231 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115184069 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145347751 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11502545 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.208331266 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117314146 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117512158 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136467481 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126381136 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.147376264 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111855436 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120251173 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.159594415 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111422888 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111868837 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.219908129 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108891003 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137760101 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119055099 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117799878 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142786174 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.193721476 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139607232 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123961608 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.11841537 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136114421 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110751891 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.143900393 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11165788 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.220959292 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119540772 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119993372 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.142168729 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118358781 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119260844 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.134576556 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112233158 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.1186068 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.221934829 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119670468 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.135966398 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118000584 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.115903056 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136848179 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121803963 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14080703 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121196789 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110041987 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.14121295 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114970119 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117828719 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.143431009 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118911888 seconds)
  done (took 11.120932797 seconds)
done (took 40.623344227 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.538879776 seconds)
  done (took 2.513206111 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.882591457 seconds)
  done (took 1.859182105 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.294510363 seconds)
  done (took 18.298674333 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.417660376 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.463848794 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.156775764 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.145957194 seconds)
  done (took 3.159099459 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.809497707 seconds)
  done (took 1.805658682 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.321816835 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235535892 seconds)
  done (took 1.539119975 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.705109669 seconds)
  done (took 1.694849547 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.497604943 seconds)
  done (took 2.47654637 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.284413437 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.238137994 seconds)
  done (took 1.519453746 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.605192125 seconds)
  done (took 1.59896357 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.141601851 seconds)
  done (took 20.13915376 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255586327 seconds)
  done (took 1.256265456 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284287643 seconds)
  done (took 1.284189603 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.362386586 seconds)
  done (took 4.359647715 seconds)
done (took 64.493811795 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113634079 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116851897 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114488917 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137552096 seconds)
  done (took 1.468821943 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122490911 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117123624 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144822261 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.116598236 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124171301 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11597311 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.140139441 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119175572 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115712122 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.142205051 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117221739 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115649424 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.142577252 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116298064 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114725486 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143488758 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119908228 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116094294 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141502625 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117011332 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117623027 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141063096 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120235149 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119273362 seconds)
  done (took 3.997205627 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113287795 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107731023 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108132058 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.129650173 seconds)
  done (took 1.459358043 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125075882 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128809418 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.149566705 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123752728 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128645832 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.150896514 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115307934 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113160611 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140022327 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124014958 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130612594 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153055421 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128420201 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11659478 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.149852321 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111448402 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115784463 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15075606 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12288553 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12321258 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.139976281 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122998484 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119858306 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.147353507 seconds)
  done (took 4.126767044 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189167826 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127549675 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171057475 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160002649 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174324726 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114548485 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142289552 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146344103 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122848701 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117183296 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14360721 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161285249 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145509381 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118373812 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116050076 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.145893951 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128963441 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121151681 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.185649748 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12126445 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147440801 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.12924364 seconds)
  done (took 4.130035728 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119804226 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10742581 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.126274404 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108081551 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121232642 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109878199 seconds)
  done (took 1.696821656 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106477792 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102470721 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102369371 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126283973 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105390212 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101451848 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100300861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127649427 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10329642 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101772684 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.124821182 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103120055 seconds)
  done (took 2.311581286 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.32663439 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107321917 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133350145 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108621114 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11350303 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104550278 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.142679995 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106601245 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.264956887 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102770949 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.129128501 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195157697 seconds)
  done (took 2.841244101 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198177542 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144188668 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250595957 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.377708231 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181597286 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185608946 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276448052 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188468217 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200250204 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135771221 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205845437 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157323861 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174883548 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182316402 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162550351 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157185196 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184547223 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204732093 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16462593 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233157392 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15446192 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197252953 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187549716 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1723059 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137919268 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185519568 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118798928 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12541806 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189047424 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187196553 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170901966 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17280952 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139316 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212649265 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250216171 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170036036 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291191619 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132605944 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.189073708 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188216321 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254792242 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139102504 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213382882 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174464205 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127490208 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208464061 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150869153 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20648457 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131785256 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168282934 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180769868 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20224589 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199227109 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135027601 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315183007 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132759179 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164699092 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176582793 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210181641 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223717668 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17433778 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.14685191 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199008407 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188098257 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23558771 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.138622948 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18754047 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121398329 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188356751 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230115778 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177289658 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183303256 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.23123 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128802772 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194921399 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166776869 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178502178 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229991682 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167392284 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.145817152 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148358861 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129933249 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149254923 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187208585 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144612295 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21277787 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155283836 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342117335 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179549717 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180915527 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156976778 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183555625 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18631955 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144588326 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101275456 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167311183 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160197383 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180340406 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126576657 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179908732 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138544768 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.122897739 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1745139 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119525763 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192579086 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132346822 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187152185 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166106534 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156343735 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175421033 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171011813 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.158718822 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191016155 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215740926 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129911014 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129476773 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241452794 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191880248 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135262388 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19743766 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193054381 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174236037 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134604463 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188505224 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190316479 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167526686 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223785752 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136770361 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131709559 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.164314096 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194421526 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158364718 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17720374 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125718141 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16132761 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213334227 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.14980357 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137695448 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204784284 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13252663 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121328833 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159975328 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133763327 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166710907 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147892475 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136288974 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178081018 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16288828 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188481981 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154102888 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159510606 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194981625 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1301001 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166896711 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172069288 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11726488 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197288593 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219510277 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127303299 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175837332 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188401685 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208521628 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169654853 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154096251 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180922758 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152369457 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118006584 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184924664 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169360254 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186233474 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184175246 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207115591 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189179456 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185961706 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14808627 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192562919 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181226071 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181924202 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141632331 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196827744 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165301805 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146567973 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121410203 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125669729 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162555536 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128565738 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134714099 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201586286 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18857587 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20381211 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164567244 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16159431 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188059617 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.148277682 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157518057 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199835619 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137489574 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213187569 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187804533 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202822727 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13869388 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188138845 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118507611 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151679375 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131659168 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186235328 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136994482 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132983233 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166189706 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215295562 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170664838 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171522058 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215672513 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162354425 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224907464 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118540951 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.18561411 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169087153 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191115237 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182387848 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131759874 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183615724 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217301773 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139685291 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217648198 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164004607 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203697955 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219927207 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.16319997 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154597833 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147276571 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184944489 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136433649 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159541247 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171691718 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128283929 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17856068 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135823255 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164584278 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18207868 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167658911 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202350125 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158240501 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195007341 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123752694 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137799288 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198766137 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141945703 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.130802968 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165718249 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21997891 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173774407 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155422943 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197671883 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128701505 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.335933066 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18535904 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20208223 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133583096 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164079504 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170239877 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185570965 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160414132 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209818177 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137873938 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231573888 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192981734 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139727984 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129871819 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1725653 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149844071 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.165556308 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150164175 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187224129 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140572224 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210307552 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134157063 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194510308 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201851612 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145372275 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146934346 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16391337 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248941491 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164369891 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197131119 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161270357 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190607845 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179731047 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147821652 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124982319 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129811754 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211446785 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127053667 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20054911 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202271135 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209795782 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173878957 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186132894 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138221559 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.150691588 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164192345 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171334246 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185439106 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158524092 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134315591 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212642338 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125716453 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156481727 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158996453 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30923916 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145228781 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197156437 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106839722 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305144434 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127243757 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15634414 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161426637 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194438311 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130712542 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.205135646 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173034777 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137887436 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190117162 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132442864 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206546361 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211959515 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163647827 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198434269 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.170417108 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16057446 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184262158 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172143972 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171549582 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145981131 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182872219 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191925178 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206714765 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129471001 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194423471 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165403406 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197528891 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200681411 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137912062 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17876884 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152689549 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162622059 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163604246 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122670766 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185301108 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200813822 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128926278 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173616629 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195258767 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129044874 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153544296 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146062901 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190565839 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136565657 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.151889952 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183233759 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.154338015 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178706201 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232512529 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127152733 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19122886 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144773292 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153287065 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138110584 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140814833 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157272198 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170519973 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205123835 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130191642 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201580578 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16351214 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188554448 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154496002 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169418764 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.326320573 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.15225876 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189017113 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175889334 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195108203 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17581441 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173340752 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19544675 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147392738 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189779656 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144585592 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245911822 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16237176 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.19321386 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128815637 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167776074 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136453183 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158261292 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151231516 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1941487 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138931954 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133378973 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192660147 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143446593 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.17283833 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140360068 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225926045 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151444975 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210191139 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213753326 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136030861 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200350817 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171992337 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154129662 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.162461991 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195772465 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142979095 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178171352 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132514667 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.162341667 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210230567 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.150604898 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158672593 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197313759 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167040004 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196752048 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133712589 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202763823 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138539293 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199441145 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126257737 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176033224 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170540702 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131773945 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.15303503 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169310828 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183871053 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162576611 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167682717 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172481548 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220214567 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121940502 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131812196 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308339516 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187121582 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192226859 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162617312 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135662968 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170172195 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156800669 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.188496785 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169261891 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128406649 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156453742 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142568884 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180445468 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142094683 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193834093 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182226368 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185575597 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18201658 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161344266 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251798106 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169685101 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169069449 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.143584545 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128097961 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138940192 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160389798 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139285916 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209571551 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240013771 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160884454 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.173371166 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133284551 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12499563 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156988929 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161795347 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175778808 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165173819 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173258721 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102699943 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137197022 seconds)
  done (took 85.038877758 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159451887 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148243007 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166646343 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219500082 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191736029 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287455923 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.225250406 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24181677 seconds)
  done (took 2.731048568 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117907139 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15692208 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141532274 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.140121671 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108167462 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.438492589 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.130185745 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144548127 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158976588 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148292454 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131522849 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.548930698 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115614586 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14185872 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119686539 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131387315 seconds)
  done (took 3.954988335 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.456692217 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.002355048 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.635428239 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.284874227 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.255644878 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.200429647 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.702969369 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194665234 seconds)
  done (took 11.821510283 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149210255 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.142504706 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.368959247 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.268281572 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.200721425 seconds)
  done (took 2.225669706 seconds)
done (took 128.792756798 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120860087 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120448734 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120051243 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.14895715 seconds)
  done (took 1.593150062 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.175297486 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090159409 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092054056 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115685807 seconds)
  done (took 1.564592836 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.50803926 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090783844 seconds)
  done (took 1.718198369 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149810162 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134304139 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.160575696 seconds)
  done (took 1.551394191 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141176883 seconds)
  done (took 1.237978333 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122386386 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123383137 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.227266853 seconds)
  done (took 1.574518876 seconds)
done (took 10.339958138 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118075361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.92110505 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429596958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130308189 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707739642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423294405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.397007457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171853567 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17329575 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134974547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12896789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688553733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.40910454 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871244474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.368132568 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.898447701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.690942354 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110137511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141817641 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109533671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.37588936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133163732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110187203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109953356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.713894811 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419256908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106977888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.911385104 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106901919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110926167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423166332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109389655 seconds)
  done (took 20.744106395 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115846118 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165641421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141970296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110684337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111561538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135520521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120092317 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120885244 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200369277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108826223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157095712 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107407365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113422247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134989724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134329292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107425179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137184458 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110936699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116998836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136686236 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131737313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106819398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135972006 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11132988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109580821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156777466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109639212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121054779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135983279 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113437453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113068708 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135337958 seconds)
  done (took 5.175418421 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156999048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175107952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144607802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145793612 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184479784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11119769 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221328919 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147686661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202172528 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111856437 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130135189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135691777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149404579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109022944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16256945 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108770545 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112105216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138230597 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117452604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110160648 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159064985 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108518066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109066408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138451579 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109140332 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131718345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135021808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120742216 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.132078583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113573466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11533205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108734981 seconds)
  done (took 5.460110915 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123049577 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123176935 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132004403 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.158843181 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117778481 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120847948 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150477593 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118485744 seconds)
  done (took 2.15788195 seconds)
done (took 34.640727587 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134223658 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128418503 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.12871508 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150932455 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.187981318 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143707229 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126138607 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115391761 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150152382 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129417967 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107761823 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116700984 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155633187 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119572518 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.217041206 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123330794 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.221218311 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189616837 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143558211 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124123109 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116847907 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.221236159 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120666141 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.115374932 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.219646497 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111799536 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.211325237 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119668784 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146850731 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11101465 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.216805227 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121050917 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1164515 seconds)
  done (took 5.962129174 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.205502747 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118429383 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146214521 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116744068 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118669365 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.144063432 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.208661625 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144619919 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117454608 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11669899 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116133643 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.218771204 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122614177 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141341437 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119301978 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108366804 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.236825175 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118711577 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108653438 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119630267 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113214415 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116775734 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248096524 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112370097 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.11554463 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.144759273 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120078034 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122656821 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.146077885 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120517863 seconds)
  done (took 5.327319354 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123180141 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129790353 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134324464 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.211516196 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145728674 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156630636 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137920385 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131669332 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.16703303 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111783208 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125781741 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175894963 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128204531 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121097021 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142932598 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130543623 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13349977 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139613198 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119605033 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12902853 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160889054 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.12912696 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134599322 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.146685044 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111138038 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119220121 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.148931422 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126376921 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119831322 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15193922 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114603921 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116000937 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113794164 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.175418735 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112900805 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15254241 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137494556 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124103648 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.152385556 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145899928 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115342343 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14047261 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138281465 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165434703 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.140064394 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126121659 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12365885 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.15373532 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110822843 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130716903 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.181288076 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113139287 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13338545 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.137346438 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11092301 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121268987 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.1112083 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.143585546 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127180158 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.112956463 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.163912511 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119490615 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122516429 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.140023954 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122889802 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111300298 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.110617314 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.142933556 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137164946 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118241235 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175930921 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111464227 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124284189 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.15252472 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122662223 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122855016 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.138213365 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124775306 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122019206 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.144279926 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125014657 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114419748 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.140410446 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129537026 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132546903 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.15371413 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124560748 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124814922 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.142219214 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115872121 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1290211 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11191727 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.145660764 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124609995 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111957328 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14353661 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126493367 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124199183 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.136253387 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137832705 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115925718 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.137609224 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138264842 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115620555 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116534209 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.150564306 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154106586 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111685715 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.150920507 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125450814 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111383043 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.147937963 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116819631 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110596042 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.158262574 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128849302 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117963094 seconds)
  done (took 16.683595605 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.315153269 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.272859487 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211851082 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.242346568 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127162297 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.236888255 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.299440656 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.303434391 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110994038 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180730656 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164798171 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.27214597 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11191903 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.1713101 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.304272715 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.356965261 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16999467 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150523526 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177910974 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12686127 seconds)
  done (took 5.443566092 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132571753 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147727899 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163266254 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140183655 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121758649 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.156098317 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112864697 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134151207 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151319914 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12301362 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114709036 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156072451 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124126969 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128958717 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156223411 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14548706 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119651348 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145822597 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134844337 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117358969 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128371074 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138463809 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121107635 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163228426 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131003015 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.122021808 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.139520599 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118232417 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118239288 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.14820042 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.11802189 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129987248 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149988096 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10536992 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12542251 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126333188 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.147748399 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115616172 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117485813 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.144574343 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129350781 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125930566 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.14897669 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098234234 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131496842 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109082194 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155246654 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125853871 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106480614 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.159111309 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12578192 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127745762 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119559787 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.163269286 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121231471 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129030773 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.152688427 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12696698 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116380889 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.13895045 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111568848 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11623073 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.148469889 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128134152 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123944672 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.159332633 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130214182 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111821624 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.14531254 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117797367 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115925471 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.154488309 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13580252 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121245739 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.146267972 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125370519 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121530231 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092821921 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.149867279 seconds)
  done (took 11.547886605 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138906276 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124246014 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130877872 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177845533 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125789302 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117968706 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151371852 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133116654 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127592793 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.158933103 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12856977 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125789844 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162780632 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123526223 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122349809 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156492188 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126057836 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150128267 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159512048 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141963465 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.155820968 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119383955 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125299501 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123405956 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170537431 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123812205 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167420533 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.127712835 seconds)
  done (took 5.040183615 seconds)
done (took 51.118311661 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.261534974 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.452337605 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.2438137 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.242584855 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.280675517 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.270455605 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.240858165 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.242923754 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.577464073 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.213744939 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.244209282 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.241007102 seconds)
done (took 28.654022819 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.305147707 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.765305393 seconds)
    (2/2) benchmarking "String"...
    done (took 1.526995023 seconds)
  done (took 4.426653319 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.234041135 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.234195233 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.482608513 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.233229913 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.23390814 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.23555458 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.246603144 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.247345758 seconds)
  done (took 16.046849855 seconds)
done (took 26.148878243 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.263009225 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.408551923 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.487684295 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.247345792 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.237602716 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.239676849 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.236205046 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.252460812 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.2376968 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.246518095 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.612497037 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.499069144 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.239906239 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.602561618 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.250219761 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.251095119 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.233128927 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.465468286 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.245046324 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.257223422 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.212397523 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.226452342 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.269110773 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.233915519 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.236093429 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.248385049 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.250316143 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.235312568 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.410521416 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.265108059 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.262809239 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.237065258 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.300133412 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.235986272 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.234577962 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.243850454 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.407980998 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.236975623 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.213262877 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.260334945 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.410311024 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.242300272 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.235618453 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.243745351 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.244610184 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.252570034 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.215933153 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.360923881 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.261316103 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.234934779 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.2773731 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.600685663 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.24103727 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.252521794 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.250150526 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.447145392 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.253162574 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.269850901 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.256920042 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.250844691 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.235722548 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.234671969 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.285826078 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.248326723 seconds)
  done (took 145.675369087 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.234686478 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.238305605 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.238320907 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.30047434 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.239484147 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.239279053 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.236664385 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.234956493 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.238341458 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.240002987 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.239755693 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.237684793 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.245589881 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.176291105 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.244560482 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.2564853 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.241306966 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.236149623 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.260788037 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.235499215 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.242102305 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.239641138 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.249974317 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.235607369 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.268956445 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.311457652 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.246010846 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.252850151 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.248808281 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.236785016 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.262882457 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.286295599 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.780426551 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.088758132 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.251870698 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.266965598 seconds)
  done (took 81.419856272 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.23512655 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.23630155 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.239172949 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.262865609 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.234843304 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.735901706 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.738637653 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.205043135 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.371361135 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.355882928 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.42619619 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.239500857 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.236087751 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.235275698 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323138441 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.245958197 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.236461012 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.250258579 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260918183 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.240294069 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235559189 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.731302465 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.252521298 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.455718208 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.397178343 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.247322444 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262568443 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.620743571 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.234995994 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262122267 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.55307387 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.275730599 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.235581873 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.485352929 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.481909333 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346666309 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.236369839 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262385693 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.235582632 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.504934803 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.234307275 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234670908 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.235376027 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.238157006 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.776884518 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.239308354 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.722661297 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.239224022 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.105935864 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.239005072 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.233790687 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.101520212 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.746713062 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237163778 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.232829062 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.234934827 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.236553994 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.234094075 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.259090402 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.120475303 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.324792262 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.233909845 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.23835651 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.261217451 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.234202306 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.404984474 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238717245 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.629027805 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293076895 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.33972901 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.710427809 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.237553216 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.232779311 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32206193 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344744783 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.232852148 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.233379329 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.234739383 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.233455672 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.338208129 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.233015602 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.849091567 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.393488798 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.247473546 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.277981865 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.330788831 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.232203025 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.486150077 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.235629887 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.233225102 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.874607814 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326186737 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.233843896 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.233335975 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.233097655 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.855073656 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.707807243 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.369158734 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.237804279 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.655161234 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.239403916 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.027578121 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.699129232 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.801975428 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.239352755 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338944535 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.394549118 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.249149257 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.234143311 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.281428865 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.237698896 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.287114862 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.238281747 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.629784561 seconds)
  done (took 374.132053729 seconds)
done (took 602.362620472 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.08669415 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.043528004 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.184107309 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.053342343 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.038273559 seconds)
  done (took 11.539820253 seconds)
done (took 12.67613366 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.405680295 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.409626674 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29068334 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.408205703 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268475823 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.417921241 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397369531 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.25697457 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.335174538 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.305681629 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337372763 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.280839147 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26717648 seconds)
  done (took 18.515500709 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.500648 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.25063184 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.304948516 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.482424574 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.283393939 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.487525075 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.529057223 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.248542923 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.384923867 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276564697 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254960866 seconds)
  done (took 18.139806256 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50180383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.250440186 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306782937 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.477010485 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.283991669 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528282237 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.53477533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.251517215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387235101 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258402901 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.256017953 seconds)
  done (took 18.171600517 seconds)
done (took 55.962602672 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.273087694 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.329713162 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.268164827 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.255873153 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.254868832 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.255864173 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.256546855 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.257117816 seconds)
  done (took 11.286869238 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.254325449 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.253038352 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.254353617 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.253322591 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.254879442 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.253846814 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.252867655 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.252720269 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.255229179 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.253119397 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.253940794 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.252953936 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.252764277 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.254323638 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.253141674 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.254488087 seconds)
  done (took 21.197324931 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.257819404 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.253405414 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.254417814 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.253567617 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.253702322 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.254788624 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.255983733 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.255213924 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.255968239 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.255169245 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.253280056 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.254465522 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.254095555 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.255029327 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.254359849 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.257262053 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.25377982 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.255425557 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.259149089 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.256120329 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.256321755 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.254295979 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.256053126 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.255496518 seconds)
  done (took 31.262464838 seconds)
done (took 64.886038099 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.247595977 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.240764029 seconds)
  done (took 5.62765751 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.314033312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.313993432 seconds)
  done (took 3.768801891 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.256711634 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.257147193 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.258549286 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.255580038 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.256489038 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.256082476 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.257241995 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.255390008 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.255903602 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.254982995 seconds)
  done (took 13.70324307 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.255670333 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.256059063 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.25831201 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.256742896 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.257752365 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.258479087 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.256465132 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.256624843 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.257189829 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.256580644 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.257579999 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.258447086 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.258536175 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.256730006 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.259091445 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.256690825 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.256728383 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.257315863 seconds)
  done (took 23.770458405 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.271111842 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.277052505 seconds)
  done (took 3.687377716 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.386632682 seconds)
    (2/7) benchmarking "second"...
    done (took 1.299401201 seconds)
    (3/7) benchmarking "month"...
    done (took 1.361830312 seconds)
    (4/7) benchmarking "year"...
    done (took 1.354666069 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.300611748 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.278958455 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.29960155 seconds)
  done (took 10.423705522 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.259467052 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.466257295 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.589113475 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.267198639 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.259745117 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.263554416 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.452669031 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.262965959 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.264006709 seconds)
  done (took 13.225370704 seconds)
done (took 75.347486053 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.243721525 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.257960214 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.276811336 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.262430204 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.596859568 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.263613136 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.248595567 seconds)
done (took 16.293232176 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.22271268 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.226766968 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.24590356 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.208175772 seconds)
  done (took 10.045152575 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.186799345 seconds)
    (2/2) benchmarking "read"...
    done (took 1.570401877 seconds)
  done (took 4.898631501 seconds)
done (took 16.087384966 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260381776 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.258519778 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.261771354 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.260366975 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.260023112 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.258718984 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.26086086 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.260684581 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.261468016 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.261661494 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.2602058 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.262638197 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.261391438 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.261182568 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261676322 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261594341 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262146208 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260596393 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.261966291 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260545467 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260867786 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260498843 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.261332428 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.261612288 seconds)
  done (took 31.406604955 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.263160343 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.260327993 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.260715596 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.263859513 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.260904333 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.26181838 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.262108761 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.261593224 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.262610948 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.262337541 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262556415 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.260794765 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.262545343 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.262946835 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262111984 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.262526555 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.262968995 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262639143 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262374003 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.262790678 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.262596937 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262217872 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.262030233 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26318285 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.261909264 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262423437 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.262241474 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.262138742 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262690456 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.262147598 seconds)
  done (took 39.012841351 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.265244434 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.263776076 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.2623126 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.263208921 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.263987107 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.263076832 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.263352183 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.263319268 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.26328223 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.262863309 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.262385752 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.264424138 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.264205066 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.26395347 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.264289576 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.2635802 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.264434015 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.265459207 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.263883532 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.263464671 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.264270631 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.263742766 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.265137948 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.262908511 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.263365647 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.263982316 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.265124529 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.263592395 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.266077649 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.264046157 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.265121528 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.263783087 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.263654455 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.264319636 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.264578649 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.264122462 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.267248105 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.266490424 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.265655268 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.264804641 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.264615618 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.265633341 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.265238292 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.264984061 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.266316707 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.26684146 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.265921981 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.265200642 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.265059914 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.265718331 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.265956983 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.266227414 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.267968347 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.265801146 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.265476248 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.264347518 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.266839053 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.265416356 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.265180059 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.26637875 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.266086711 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.265039698 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.265996099 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.266947619 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.268365168 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.266289607 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.267031973 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.267927762 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.266917069 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.267579164 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.266347418 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.267825491 seconds)
  done (took 92.231233681 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.269304408 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266617729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.266355323 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.26720742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268495131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266697934 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268054022 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265478947 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265672326 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267645639 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267561093 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268892316 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26930792 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268980432 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269212744 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268161019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268593419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267691788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.268447283 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268503465 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268357103 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267963085 seconds)
  done (took 29.042800181 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268444206 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270322808 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.269807962 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270660034 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269229875 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27151425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.267057494 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269103224 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269850126 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268899169 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269035287 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269393586 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.270244361 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265252646 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262173612 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264566823 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263532868 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.2632646 seconds)
  done (took 23.972786644 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.262986256 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.262175114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.259767189 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.253520361 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.25466617 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254362955 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254971895 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254378709 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.255735449 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.255048382 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.249775504 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244776416 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.24325868 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243775531 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244251591 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.245051251 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.24496478 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245073758 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240735228 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236165712 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235824072 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236507099 seconds)
  done (took 28.62218 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236537473 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.234946821 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.235033251 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233792519 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227512795 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228275294 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229968576 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.227773426 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.229195516 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229153937 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229601816 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228629043 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.226442313 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224622118 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.224238177 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224191327 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225644937 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224584269 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226955441 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225962747 seconds)
  done (took 25.696667584 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220984238 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222620961 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221954715 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221869559 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221361052 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222607557 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222710588 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.217945924 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219831536 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220109593 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220546741 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220508108 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220115859 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220375349 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21908876 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22087101 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219352033 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220131732 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.220943408 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220338984 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.219135453 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220135514 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22112517 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219737212 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.219548809 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220898662 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220821169 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221097304 seconds)
  done (took 35.288605129 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220806184 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220772604 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220458768 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221239014 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221604124 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220418829 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221248515 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221896706 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220527336 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220100705 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221887663 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.220812201 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220993573 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.221894589 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221155996 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222273305 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221673034 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221996107 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223220587 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220449924 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.219268767 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219728492 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22016817 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218179191 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21948627 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.219180415 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220665903 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219645915 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219108169 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219829828 seconds)
  done (took 37.732019792 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.235976312 seconds)
    (2/2) benchmarking "in"...
    done (took 1.237261789 seconds)
  done (took 3.580662621 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.217993795 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219210972 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.216615625 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216998253 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216713347 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217907189 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217127313 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216602579 seconds)
  done (took 10.846614994 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.210371258 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.215743426 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.213910977 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.21367432 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.215878951 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.20666101 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.213106868 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.220129174 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.208109022 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.207340905 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.2090105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.209588099 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.212856682 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.211340714 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.208526487 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211697774 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.219737221 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.216181853 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.216347499 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.217676542 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.216723839 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212175008 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.211969146 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.219746515 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.207599252 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.217654679 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.217809785 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.221102413 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208903699 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.214457788 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.212460167 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219261149 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.217247438 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.219045409 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.218326027 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.217608693 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219727914 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215948165 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.218921829 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.221456654 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218342789 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.217721734 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.212937693 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.215700611 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215295043 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.222813755 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.219722088 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.217247157 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.210235415 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.213617556 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.220392144 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210088906 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.221861252 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214909501 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.219074761 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222120206 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.22572389 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.212121382 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.213336581 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.220546227 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.228595592 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.221452443 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217600838 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.225078875 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.216801134 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.219585714 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225753189 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.226859718 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.220196855 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.220545146 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.220934585 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229714168 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.225202617 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.225504672 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220030724 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.220584223 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214565239 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224172237 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221457031 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.223441198 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.226868047 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220564651 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.217448076 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.218935262 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.21599338 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.222846856 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.220295347 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.221906283 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.212078119 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.22420478 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.228716411 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.222283695 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.214745336 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.215412338 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.217560853 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.222632387 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.211681247 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216204207 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.225067969 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.222005275 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221609756 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.214642613 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.219597698 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227170923 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.221480619 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.22550663 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.229067953 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217142058 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.225744619 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.228661502 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221625844 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.214197459 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.219104299 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.224632861 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214117913 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.219132069 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.22694315 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.218843805 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.227942403 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.222486376 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.218707692 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.226096241 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.228523751 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.223482107 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.216649248 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.226921494 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221935997 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.221126772 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.228903646 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.222097807 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.222950443 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.220039155 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.230563018 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.217738975 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227178857 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218841508 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.228014838 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.223777859 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.223276245 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.220166792 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.224180701 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.21912654 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.222574841 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.226785269 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.229522711 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.221961394 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.231440862 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.223471695 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.223138388 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.225989207 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.228397318 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.22500056 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.218988424 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.228656868 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.216809287 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22582334 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.219156487 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.223917153 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.219359273 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.220915577 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.219967887 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.211808198 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216229135 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.223997896 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.222295746 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.215869817 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.220402875 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.21671714 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.2156103 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.208567291 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.218743836 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.208992384 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.210921818 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.221655217 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.212922598 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.214783282 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.212519175 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221444902 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.217642954 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216305529 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.207044551 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.211690759 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.218796182 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.216099567 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.222162007 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215518787 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.214330961 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.207996301 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.210637495 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217287244 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.207678835 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.218326448 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.219753443 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.220862859 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.209897548 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.215186271 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.206314534 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.217192915 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.214002294 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.222158438 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.214481079 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214702794 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.207248792 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.217693115 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.210458926 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.219395066 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.206862291 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.216608896 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.217054791 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.21667833 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215074181 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.20896759 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.212892879 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.218017457 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.215603895 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.215928652 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.20929618 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.218090267 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.207244176 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.210703649 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.220372811 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.215622813 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.218826669 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.223278359 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.213601062 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220340354 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.217108348 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.211650063 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.21871154 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.214272589 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.21747968 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220846571 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.217685528 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.212812653 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222960307 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.219614918 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.211555104 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.218512375 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.225166899 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.218706284 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.209005563 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.220384696 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.216355863 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.217297386 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.21696728 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.210664534 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219954425 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.220055449 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.226387035 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.21010765 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.221457352 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.213609918 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.220829602 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.21443836 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.220237466 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.21848989 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221509919 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225946198 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.218626835 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.212962453 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.222688881 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.219345684 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.21952598 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.211781294 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.222958443 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.220103937 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.219682852 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.217919521 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.214761658 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.220446102 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.212012797 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.220045969 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.213594714 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229654173 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.234671652 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.222655287 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.223602978 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.224639982 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221674442 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.22242452 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.214147571 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215932208 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.217776951 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.215544236 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.214940846 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.224534633 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.213152483 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.222954815 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218151216 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.221114118 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.221340102 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.221122657 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.21336543 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.223958882 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.220464567 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.22001074 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.212702435 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.221897718 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.216078091 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222746449 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.221162568 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.216527086 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227659183 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225726646 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.218447491 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.21753455 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.216347124 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.21471293 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.218456321 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.22610548 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.21446565 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.224611781 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.214250856 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.218964826 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.217090637 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225201433 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.231247111 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.216159391 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.225618923 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.222389904 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.213517078 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.215674108 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.224000249 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.225783433 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.234178599 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.214584602 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.224175495 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223693708 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.223267817 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.222136141 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.22375258 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225015343 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.22184308 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227665862 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.2276786 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.219363795 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224980981 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.231962068 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.223406423 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.223093347 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.214697056 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225322836 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.232686594 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.218236406 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.221267355 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.218839344 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.224813018 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.224772624 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.224672021 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.225837993 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.224636533 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228776294 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.227908354 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.22733688 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.225145213 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.230011227 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234974655 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228961548 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.237663695 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.219298062 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.229488195 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.225018201 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.22017004 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.221264708 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.221833476 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.228498404 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.218173013 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.228594788 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.224806551 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.222186096 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.226111619 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.231293067 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.21861306 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.224051741 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.233225967 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.217868469 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227890372 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.226195486 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.217806611 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.230024876 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.226048983 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.216724249 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.21988583 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221727937 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230914508 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.221216077 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.230416218 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220214912 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230914819 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.227225506 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.228133483 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.227770922 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.22631783 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.219842567 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.230119115 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227144956 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.236901633 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.223191895 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22671554 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.221872768 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.232580058 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.237259952 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.223696752 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232314649 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.228669408 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.221904944 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.225713258 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.23257612 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22146475 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2321473 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.220570706 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223404566 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.223162505 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.229719795 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.23053245 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.232531061 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.220710842 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.223268763 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232004899 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.229037209 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229654635 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.224917241 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.235685145 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.220529204 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.221845215 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.232996565 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.223827433 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233833565 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.221670558 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.225993159 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228059785 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.232542909 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.230113356 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229932048 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.221186572 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.224047984 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.235473177 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233094575 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.226125992 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.225874142 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.231864278 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.223545983 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226960671 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.22717849 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.225164418 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.225842483 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.234215962 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.224389041 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.224984834 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.224736245 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232560258 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.234396097 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.233800379 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.224294766 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238588692 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.241280063 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237750043 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.22351431 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.226394937 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.225746103 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.231915932 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.231771781 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.22522892 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238892321 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.238241461 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23492943 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232068914 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.233451174 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.224584942 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234288282 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232687185 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.226887813 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.238301064 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.228755753 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239862521 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234184742 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.232705248 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.226847989 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.226239388 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.228037704 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.228436897 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.233377866 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232950703 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.23539901 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.230697486 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238139696 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234899795 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.232815058 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.233397609 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.224890314 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2345651 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.225141012 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.234158691 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.23514046 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.228164265 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.236798698 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234621017 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225902853 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.230263575 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.238359656 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.232752812 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.227495611 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.232422045 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.23969464 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244850138 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.236340712 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227879039 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.232663032 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.239264348 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23585895 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.234343465 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.228723206 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244838304 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.24959069 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229364185 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.231746008 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23746938 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.244424495 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.235509581 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.235844051 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.23115914 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.233990077 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.238883788 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.236227978 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239888056 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241410183 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.2311224 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.238464351 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.22963355 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.23028381 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.23692649 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247316634 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.236633182 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.230748556 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.243973914 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246901561 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234543806 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248590333 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.243172972 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.23734039 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.241975252 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227884715 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.239015978 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.234489871 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.242299035 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.237593471 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237268171 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.237924981 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.230155711 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239085363 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.244801606 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.24726648 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.239000106 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.229876733 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.232806754 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.240713671 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.238379161 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.239630924 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.239694503 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.238901655 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.23753461 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.232942538 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250112632 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.25227789 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.243201635 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.239664528 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.238012773 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.239345597 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.241251086 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234889233 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.243879239 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.240037488 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.240168544 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.237515449 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246980157 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.241301461 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.233232521 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.23398289 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233561313 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.242325932 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.248115593 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258486525 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.242609677 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.243373828 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24271472 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.241139428 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233117037 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244093845 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240633611 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.234087985 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.234352311 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24296936 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.243298022 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.240237651 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.233688004 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.244482404 seconds)
  done (took 730.975935125 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240764282 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240853556 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24023703 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241697773 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241184614 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241592284 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242083619 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241030542 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.241907089 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240283027 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.242497024 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241369872 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24029948 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240924992 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242736386 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241746382 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241732994 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.240273031 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241732189 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242602544 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241501307 seconds)
  done (took 27.196159523 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.242716946 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.243907884 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.242535986 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24208335 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241897381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.24303171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.244402548 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243880031 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.242435333 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243605486 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.243979872 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24376814 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.242784887 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.242712148 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24322912 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243919812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243873124 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243707851 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.243659562 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.243589613 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242791778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.244604187 seconds)
  done (took 28.481156132 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.243712235 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.244683915 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.236793004 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.247124029 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.245027795 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.243880629 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.24389478 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.244306953 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.244532617 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.237417446 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.237626637 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.237587978 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.240145459 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.248079019 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.24043227 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.24905364 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.245483409 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.246514813 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.244895145 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.244849533 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.247414485 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.256314734 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.246211484 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.236517283 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.247678324 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.246730644 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.245240615 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.246351025 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.237602572 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.247511749 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.246181253 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.237992939 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.248651257 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.246757622 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.239798718 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.248549466 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.246940271 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.245738372 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.245811227 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.243079572 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.254374532 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.246968449 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.249449352 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.259401658 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.246969605 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.240546285 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.250378979 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.247915673 seconds)
  done (took 60.900346536 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.246355141 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.246865556 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.246959122 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.246551583 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.247132707 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.246592362 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.246724937 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.247304764 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.24706158 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.24646379 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.248092758 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.248320716 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.247006916 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.247917805 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.24736752 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.246767281 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248918709 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.247578912 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.246685734 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.24806125 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.248755942 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.247845512 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.249188689 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.247997008 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.247880897 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.249037263 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.248261481 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.248053218 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.24814826 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.24882909 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.248151324 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.248704081 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.24875454 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.248129859 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.24855981 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.249996969 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.248419637 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.249251413 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.248107026 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.248728232 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.250258123 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.248665585 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.249534124 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.248931098 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.24957161 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.248461866 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.248800818 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.248875613 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.249796392 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.250712137 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.249014078 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.249975545 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.250419053 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.250156248 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.250367416 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.249371421 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.250619677 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.249480786 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.250562374 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.251027423 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.250020083 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250059114 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.251051903 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.249650989 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.248962863 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.250389324 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.250357702 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.251476403 seconds)
  done (took 86.046843837 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250523745 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.251729531 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250769623 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250962302 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251415966 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.252100032 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251668725 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.251868998 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.252486373 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252907889 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251783841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.251179623 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.251606186 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.252067164 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.251833277 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25217843 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.253347253 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253572268 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253076144 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252465593 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.25228577 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.252202889 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253092074 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.252885322 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252740746 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.251351927 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253111735 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.253462267 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254178122 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.253044183 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253085125 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.253913087 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255193189 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.254555497 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.25459863 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.254483904 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.253808958 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254146587 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.253909294 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253411775 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.254443148 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.254195597 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253617287 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.254885738 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254398511 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254312201 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25563799 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.254749652 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.255675549 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254493228 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.254957094 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254544096 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255898529 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254744484 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254707411 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.255872929 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254917972 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254849245 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255094263 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255432264 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255886041 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.255693384 seconds)
  done (took 78.855957947 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254475802 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256080797 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.255623078 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.255405929 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255390914 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255044274 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254743001 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.255205311 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256620454 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.255256995 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256786632 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255042543 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255565512 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256994134 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255707535 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257067019 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255871289 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.255787611 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255514101 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254586812 seconds)
  done (took 26.252544185 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.256329395 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.256807668 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.255246559 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.257778318 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.256119984 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.256239384 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.257147331 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255840909 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256972015 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257546582 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257358533 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257941847 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256150742 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256047801 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.257978398 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.256221744 seconds)
  done (took 21.247953417 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.256395398 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.258791002 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.256768469 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.256971893 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.25739405 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.257959332 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.257748819 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.256682422 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.257735655 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.257845456 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.257752014 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.257974967 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.25712973 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.258905327 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.258776129 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.258976946 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.255987755 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.258733565 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.258635371 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.25855007 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.25845444 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.259171787 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.258560103 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.258552644 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.258982103 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.258660296 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.258659121 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.258843581 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.260192445 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.259806001 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.260804003 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.259570075 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.260607561 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.258115523 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.25920767 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.259143488 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.260218897 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.25981799 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.259274445 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.259378852 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.259263321 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258952079 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.259292649 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.260476976 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.259926077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.260517863 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.259226075 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.261662744 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.260790383 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.259440213 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.260211806 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.259442839 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.260837462 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.26152813 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.259673268 seconds)
  done (took 70.386042264 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260558507 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261173866 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259752265 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.25977025 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.259657852 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.261189712 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.259860535 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.261970284 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260834254 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.260739696 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261452705 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.263402661 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260934667 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.261424143 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260680967 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261174896 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.261775185 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.261113555 seconds)
  done (took 23.8416543 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.262255545 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263018539 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.263263321 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.262693344 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.26241711 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261599758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260846152 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.261041001 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262609954 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.260893324 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263129314 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.262735311 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262379678 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.262803426 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.263799388 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262300672 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.263541173 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2638509 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.263580853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262168586 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263250444 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26396657 seconds)
  done (took 28.923806943 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.253990919 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.253412577 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.25373324 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.266238184 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.262533797 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.253859365 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.254211587 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.254741314 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.27002221 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.277551357 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.27173953 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.262144262 seconds)
  done (took 16.279798507 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264415244 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264541474 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265252172 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264254933 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264145121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264945113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26554371 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264601225 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263354883 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26337502 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265394165 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264604689 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265174265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264564713 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265046307 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265523649 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265973803 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265996581 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265402612 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265356758 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264649907 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265199164 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265281186 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265821511 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265661533 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265459529 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265747919 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266078161 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265438379 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265804151 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266061841 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265883924 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266651137 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266113745 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267013693 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26777632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266227547 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267548381 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267656187 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267931452 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267002843 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266834239 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266902044 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266469467 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267701373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267744276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267491395 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268362391 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268992308 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268057403 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268069696 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266404975 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267117916 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268316226 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267841281 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269502998 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268086097 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266937052 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269120637 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269219303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269199052 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269852471 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266429447 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268087463 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267808542 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26839187 seconds)
  done (took 84.736627554 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269542531 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26849288 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268400075 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269175533 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268262659 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269091979 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268211618 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268824123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268477186 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269894422 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269665798 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269567727 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269072138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270229358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268678871 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26905919 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269779309 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269009807 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267918861 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270513286 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271591225 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269120837 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269841313 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269344194 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271214284 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268968998 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269485701 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269540828 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269492506 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268825684 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270532783 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269010246 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271165149 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270473561 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270838068 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27144607 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271383389 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270822216 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269792388 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271285609 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271668878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270275025 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270573778 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270471584 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272752042 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272655435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271454495 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27146982 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271067877 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271029832 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271206804 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271799138 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271075761 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271637872 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272683772 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271960028 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270790268 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272442416 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270948255 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27249096 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271430732 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27050322 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272579674 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272241678 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272647811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274753165 seconds)
  done (took 85.003837571 seconds)
done (took 1727.706250546 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.431346773 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.382333267 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.26160232 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.272401367 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.26162376 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.262663687 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.273859145 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.26163735 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.26288835 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.26255869 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.261643413 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.453978394 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.297801521 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.263452115 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.263165945 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.358871539 seconds)
  done (took 25.986728692 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.285705717 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.276906723 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.377116446 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.278870931 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.295325511 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.446982085 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.333242757 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.277707841 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.428717902 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.296622882 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.273505982 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.299315663 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.274749005 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.272570056 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.296361643 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.446392285 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.521504116 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.271230225 seconds)
  done (took 28.108444714 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.674771701 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.291282798 seconds)
  done (took 5.128780716 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.293652032 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.274024856 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.27477327 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.273935729 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.272524894 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.273629808 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.273351391 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.277675092 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.271312919 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.392928174 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.281406913 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.288726013 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.289892047 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.276011773 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.284129658 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.317162426 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.416222385 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.285839205 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.282632565 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.282328514 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.274176197 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.359940076 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.312732214 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.286253418 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.389936343 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.284023833 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.283893422 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.283478297 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.388547525 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.285759642 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.27671276 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.275788881 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.277722675 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.180081239 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.796832422 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.275301208 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.298351741 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.284313997 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.285075279 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.402855916 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.278164058 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.283406594 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.269308209 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.799033945 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.380902502 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.38578178 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.289468645 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.283168832 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.278826683 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.335664 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.277508668 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.278455092 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.333427904 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.06163212 seconds)
  done (took 82.084281931 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.327632162 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.272663466 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452014726 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.293514585 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.273060705 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27524237 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.276782811 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.531321307 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.298272005 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.273595141 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.580674575 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.867811356 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.28727764 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.33557666 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.314069107 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.322987977 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.2707726 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.270716027 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.275535618 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.274758581 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821314178 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277850591 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.27843514 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.352789046 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.311230527 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.789107634 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.278160282 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.277804724 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.282757484 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.272239171 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840145123 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.280991946 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.324934329 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.277689576 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.55019827 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653973733 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.609488273 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.284500438 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.300010686 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.279365998 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.297627043 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780917439 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632854992 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.279050059 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.272610767 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780923772 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.279653769 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.283017933 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.279277815 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.540567289 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.274381096 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.274434104 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.276297225 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.278932756 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.275235916 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.325557537 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.318456266 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794986146 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.280029289 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.275559101 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323724155 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.276039152 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.279896094 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279088357 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.278710236 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.627384167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.519217742 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.277433799 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.628135244 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838390485 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.292709942 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907087825 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.281711552 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.281643373 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.303784123 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282409938 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.275607969 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.797052494 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.312369883 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.27599972 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606247356 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.281775572 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.570143932 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.29362065 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.277163197 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837676554 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.288007351 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.325547561 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.276192143 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.281731311 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.276706413 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.282167119 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.558306534 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.329979834 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.277901762 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.277762374 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.287272035 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.277361311 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.292549209 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.282730405 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906188648 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.290957447 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.290357662 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.278196959 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278110963 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.284146999 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.280143987 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.28193203 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.556011602 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.277551603 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.302576374 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.278284622 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.277997649 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.29353357 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.352535341 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.287947714 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.571504169 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.285444907 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278625171 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.289331453 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.278473152 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.296968721 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.279700278 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.299165974 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.273516585 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.581697722 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.294879712 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.293732589 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.279093585 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.279157917 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298547914 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.282407942 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.334630502 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.284051167 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032608653 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325430597 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.280097894 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.28035005 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.286861446 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288169143 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.290375895 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.281498009 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.578626107 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.55719797 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.508643829 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.283538434 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.279159668 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.057244334 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.314620928 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459386142 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.298826776 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.280510747 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.558271592 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.507243569 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.282158916 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.280469093 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.284811141 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5560274 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.285791675 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606481361 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.863941416 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.287153078 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.285046756 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.038964042 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.091289082 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.282868496 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.280338824 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.570860983 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.302868258 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.281695301 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.280586807 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.282478247 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.280789691 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.287049655 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.291228283 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.280874399 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.28333463 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.623436599 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474399766 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.297682025 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.294785832 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.798430027 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309092598 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282570395 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.294515918 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.286461144 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.282298695 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.329619206 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.285686148 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.304262317 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.284992893 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.291869885 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82572345 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.287796486 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.283502506 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475696183 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988724451 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.288329072 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.284140862 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.283441508 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.342011531 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828067798 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.315590705 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.575089753 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.301711306 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.323078024 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283866461 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302417549 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828670471 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.289431739 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.284662758 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.005733316 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.289806039 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.714141859 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.2838795 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.293675648 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923194183 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.289901462 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.285110642 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.289442676 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.290671449 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.598854351 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.28984704 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.297877681 seconds)
  done (took 486.210091094 seconds)
done (took 628.672573952 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.285641231 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.285473841 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.290212439 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.290537398 seconds)
  done (took 10.331139681 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.301917903 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.291336639 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.301951431 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.292112395 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.302966206 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.290613966 seconds)
  done (took 8.959890815 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.28494249 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284985096 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.289894352 seconds)
  done (took 8.03939723 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.48211423 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.30982933 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.621926194 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.302419689 seconds)
  done (took 8.89676117 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.301722174 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.301028747 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.301176003 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.303989529 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.306790147 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.303372413 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.304460052 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.303849976 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.304156048 seconds)
  done (took 12.910523769 seconds)
done (took 50.316348344 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.391847128 seconds)
    (2/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.396895746 seconds)
    (3/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.694819817 seconds)
    (4/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.445493653 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.263621949 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.269442937 seconds)
    (7/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.519831295 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.359858945 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.299019113 seconds)
    (10/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.524394201 seconds)
    (11/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.515874023 seconds)
    (12/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.469215399 seconds)
    (13/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.439482305 seconds)
    (14/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.371513724 seconds)
    (15/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.354075793 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.397864898 seconds)
    (17/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.322146998 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.321324813 seconds)
    (19/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.32197195 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.310868404 seconds)
    (21/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.29804177 seconds)
    (22/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.510510933 seconds)
    (23/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.384221752 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.435126149 seconds)
    (25/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.327587044 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.301398744 seconds)
    (27/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.362204122 seconds)
    (28/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.265944913 seconds)
    (29/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.382248135 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.501124495 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.370530807 seconds)
    (32/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.327462617 seconds)
    (33/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.330799903 seconds)
    (34/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.309753788 seconds)
    (35/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.521020521 seconds)
    (36/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.271131859 seconds)
    (37/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.272932385 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.380305117 seconds)
    (39/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.266271234 seconds)
    (40/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.401969751 seconds)
    (41/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.403100973 seconds)
    (42/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.414856594 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.361747456 seconds)
    (44/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.266144002 seconds)
    (45/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.307259994 seconds)
    (46/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.382021511 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.312808954 seconds)
    (48/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.27882593 seconds)
    (49/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.69417035 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.411422424 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.521896159 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.417366712 seconds)
    (53/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.304619883 seconds)
    (54/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.373912607 seconds)
    (55/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.267174839 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.284292808 seconds)
    (57/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.388790727 seconds)
    (58/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.537445999 seconds)
    (59/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.396151257 seconds)
    (60/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.44976044 seconds)
    (61/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.583510631 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.448113259 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.384683891 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.267786552 seconds)
    (65/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.424310763 seconds)
    (66/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.506081027 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.428863868 seconds)
    (68/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.351419482 seconds)
    (69/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.287039419 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.40519955 seconds)
    (71/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.362383444 seconds)
    (72/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.573277013 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.334880655 seconds)
    (74/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.31671349 seconds)
    (75/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.528666688 seconds)
    (76/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.273724704 seconds)
    (77/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.483140412 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.358037759 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.376994812 seconds)
    (80/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.457625216 seconds)
    (81/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.443256727 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.408749844 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.377518282 seconds)
    (84/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.413552706 seconds)
    (85/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.321847011 seconds)
    (86/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.269485929 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.451529902 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.435790413 seconds)
    (89/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.272130571 seconds)
    (90/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.310218599 seconds)
    (91/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.50979389 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.418103868 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.415020561 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.327289986 seconds)
    (95/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.325542289 seconds)
    (96/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.270074505 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.389207474 seconds)
    (98/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.497928938 seconds)
    (99/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.400646248 seconds)
    (100/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.327723802 seconds)
    (101/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.369799668 seconds)
    (102/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.414497677 seconds)
    (103/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.299878192 seconds)
    (104/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.278806395 seconds)
    (105/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.46941789 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.272012711 seconds)
    (107/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.294017185 seconds)
    (108/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.375735475 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.337171529 seconds)
    (110/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.369373001 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.589977141 seconds)
    (112/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.423810497 seconds)
    (113/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.500684877 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.403695909 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.357759678 seconds)
    (116/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.33052429 seconds)
    (117/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.296225725 seconds)
    (118/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.462728315 seconds)
    (119/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.271646365 seconds)
    (120/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.425164743 seconds)
    (121/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.50228176 seconds)
    (122/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.274294574 seconds)
    (123/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.52118267 seconds)
    (124/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.32924001 seconds)
    (125/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.273404249 seconds)
    (126/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.297326096 seconds)
    (127/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.365047276 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.533109094 seconds)
    (129/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.474655405 seconds)
    (130/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.275368812 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.438854612 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.387094236 seconds)
    (133/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.630213055 seconds)
    (134/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.415389119 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.408164335 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.36421474 seconds)
    (137/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.372740679 seconds)
    (138/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.470206327 seconds)
    (139/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.274312261 seconds)
    (140/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.451374259 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.410389943 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.407148524 seconds)
    (143/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.455434374 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.539511267 seconds)
    (145/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.536298038 seconds)
    (146/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.298905359 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.323298205 seconds)
    (148/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.378840059 seconds)
    (149/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.27493304 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.451302033 seconds)
    (151/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.275191445 seconds)
    (152/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.371087553 seconds)
    (153/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.37360687 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.358000622 seconds)
    (155/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.303957591 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.58607635 seconds)
    (157/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.295674337 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.341313453 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.396793486 seconds)
    (160/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.409682435 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.455169746 seconds)
    (162/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.275371844 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.423972172 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.286535624 seconds)
    (165/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.455372441 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.401282667 seconds)
    (167/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.302219111 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.281950405 seconds)
    (169/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.331593166 seconds)
    (170/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.366044195 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.542846843 seconds)
    (172/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.327233817 seconds)
    (173/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.641083526 seconds)
    (174/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.450237789 seconds)
    (175/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.325581923 seconds)
    (176/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.359362978 seconds)
    (177/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.594450581 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.443297404 seconds)
    (179/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.408724837 seconds)
    (180/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.454612744 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.454272429 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.503109545 seconds)
    (183/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.513434041 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.287417948 seconds)
    (185/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.518703462 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.335741933 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.453159459 seconds)
    (188/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.569521951 seconds)
    (189/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.524251281 seconds)
    (190/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.418952384 seconds)
    (191/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.336816436 seconds)
    (192/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.475659947 seconds)
  done (took 316.819272488 seconds)
done (took 317.999492445 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329591991 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.404959348 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.307759438 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.306684647 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309002485 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.302278251 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.33047463 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.310221583 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.322813097 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.322733011 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.304516915 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.318999078 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.326120234 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.319755643 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.343375197 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.308915013 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.30887202 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.321229931 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.325346397 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.327063188 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309790888 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312243099 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.337414845 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.309472606 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316652939 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317325552 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.316539398 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.301713394 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.318143803 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.326050053 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307013812 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.322310137 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.327948034 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.323081278 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312329276 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.32046067 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310343689 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.404487142 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.33290189 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.321465922 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.320445816 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.326543197 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.31630637 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.317942028 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.322730673 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.338970841 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319047406 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.326604975 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.305584313 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.304250334 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331756939 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.322808696 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.321433103 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.303530471 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.309358184 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.332125826 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.321374435 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.332305819 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.319123413 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313353714 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.34521938 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33201657 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.326014169 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.320328922 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.321634702 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.328761125 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.322770444 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.329340792 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.320818052 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314326325 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.31348529 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.322453769 seconds)
done (took 104.394631552 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.435076731 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.309627045 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.469037548 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321069649 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.474785507 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.434525156 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.320818817 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.32168602 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.320558748 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.115909854 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.32201104 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.321659837 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.31201972 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.321408943 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.43138362 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.323259764 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.321237912 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.014057055 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.323647473 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.448856874 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.311783565 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.322578069 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.320904476 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.120361986 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.311236343 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.306753681 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.449788663 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.32222043 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.019988907 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.305966085 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.310893408 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.019937007 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.450395644 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.341919829 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.332178061 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.332283999 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.476338932 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.326673443 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.4379453 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.436429446 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.470999794 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360322672 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.307495948 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.313152515 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.3259061 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.324965933 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.323119154 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.352536296 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.312679679 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.323994885 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.016423158 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.334186451 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.332141654 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.324484422 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.323935718 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.343650809 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.324736561 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.325288258 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.451061598 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.324170399 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.439784426 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.123277708 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.118922596 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.32493687 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.310989816 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.325645013 seconds)
  done (took 107.276000063 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.384912598 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.390383578 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.424601179 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.315539191 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.366094068 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.428011368 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.317868146 seconds)
  done (took 10.826655919 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.322941635 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.324536409 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.363409352 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363652441 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.325602011 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.489850916 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.324746976 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.328270828 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.326408877 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.367519485 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.325254845 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.327928516 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.334330337 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.314275543 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364800927 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.328490108 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.435603704 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.318399197 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326263576 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.469454391 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327407355 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.336708925 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.367452106 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.328604993 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.327716775 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.325098003 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.100180495 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.327508813 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328634367 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.32834259 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327579066 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.38222457 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327011393 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.316163205 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327248263 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.432313755 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.326505591 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328729416 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.32878719 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.320961516 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.327718204 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.328988216 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.328936771 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.328375793 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.328033262 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.342896289 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.328177338 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.328466811 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.327833961 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330417273 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.369312873 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327843322 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.32886764 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.327988687 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.371658679 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337503004 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.328935772 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.328455099 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.327838532 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328945675 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.471016528 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365688717 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.329080754 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.36750742 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329616577 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328796682 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.328988103 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.328658203 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408839262 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.329435103 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.367129916 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.329340667 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.502424884 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.344648264 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.331514983 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.32347361 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.323338469 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32902551 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.318470837 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.328349545 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.330800679 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.321593053 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.327172237 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330312093 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32994198 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478817016 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428943294 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.33087809 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.336819923 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.328550234 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.331038992 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.373760458 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330200786 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.331451923 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371108389 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.43975502 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.372133617 seconds)
  done (took 136.656838063 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.334085995 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.334776386 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.325539344 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.349889843 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.324057755 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.322207609 seconds)
  done (took 9.195970646 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.324519031 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.334527636 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.331713248 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.332183236 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.331379765 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.332388727 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.332118438 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.323713628 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.334123142 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.333244198 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.332972034 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.334717351 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.335120715 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.33303615 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.333066878 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.333506944 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.332367341 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.333122565 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.332798403 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.332586271 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.321103386 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.334124672 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333663187 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.326085661 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.337849386 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.333129338 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.348130023 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.334344193 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.334043762 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.331235522 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.337072748 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.335218643 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.327125775 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.330822975 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.338135517 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.326926253 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33685352 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.336591053 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.333945305 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.336576912 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.337151188 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336802459 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.336498943 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.336627948 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.328337868 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.330366209 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.340600944 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349799951 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.336735442 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.336967347 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.33661064 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.335865424 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.336374187 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.336328312 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.328636809 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331275297 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.340854395 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.336345912 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.335054389 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.328443264 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.339188892 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.336874189 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.329283611 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.340034365 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.336367662 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.33692985 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.329075683 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.338653896 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338514338 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.336662656 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.33851975 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.336776091 seconds)
  done (took 98.276495911 seconds)
done (took 363.427827196 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.733721902 seconds)
  done (took 3.944091984 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.590133544 seconds)
  done (took 3.802909981 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.90011986 seconds)
  done (took 22.368793662 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.344818153 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.352225313 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.341221484 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.337775221 seconds)
  done (took 10.587781184 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.581504311 seconds)
  done (took 3.793518111 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.332568759 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.335648638 seconds)
  done (took 5.883116984 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.494788598 seconds)
  done (took 3.707146339 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.575269997 seconds)
  done (took 3.78837099 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.337557995 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.340162958 seconds)
  done (took 5.898168226 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.301433485 seconds)
  done (took 3.514144605 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.148756678 seconds)
  done (took 21.363342895 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.347411444 seconds)
  done (took 3.564054134 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.355663791 seconds)
  done (took 3.568779584 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.751463265 seconds)
  done (took 5.964512676 seconds)
done (took 102.959621386 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.323683972 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.327759024 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.326975324 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.325763754 seconds)
  done (took 10.51740081 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.402824451 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.4036602 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.413175506 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.398134712 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398249219 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.408590431 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.380684184 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.366897928 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.396565127 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.392536141 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.408275683 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.400008786 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.402512614 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.384559578 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.392593443 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409616398 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.396085532 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411604471 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.366838103 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.399188812 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.342219134 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.40059177 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.394636289 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.34344058 seconds)
  done (took 34.627576588 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.826338749 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.403170115 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.484924954 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.381738482 seconds)
  done (took 7.310492538 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.446498232 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.446831405 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.463725586 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.49943436 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.548025052 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.46128731 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.367289246 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.363257185 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.351396907 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.449222437 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.525362393 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.447108126 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.661962182 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.34332721 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.660548012 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.341878718 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.34280529 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.44712225 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.496915649 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.524128598 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.34391597 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.44637285 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.451343381 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.446708571 seconds)
  done (took 36.091675589 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.351296491 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.36063866 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.344838932 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.358927313 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.344125089 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.345645182 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.346339178 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.351205673 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.345565828 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.345162822 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.34631738 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.359113308 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.344571291 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.345275748 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.351008661 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.345511697 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.34751803 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.35101486 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.352739592 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.345465906 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.344019482 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.352610787 seconds)
  done (took 30.895990536 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.330319625 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.329986879 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.679550382 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.584909806 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.329583161 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.32928895 seconds)
  done (took 13.800996403 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.400340522 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.539791527 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.341908829 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.671002399 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.762646203 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.343214517 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.336997742 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.570333077 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.85811214 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.852473408 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.395946786 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.403725798 seconds)
  done (took 19.695426651 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.335517339 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.335604214 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.33875338 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.352178767 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.388816365 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.341370007 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.34334457 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.332033424 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.393022831 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.392121885 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.342084745 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.391230679 seconds)
  done (took 21.505143006 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422242212 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342379366 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358197221 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413937437 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343358324 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343420284 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335025382 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045526408 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.351902329 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618776597 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341512569 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42296086 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.58782115 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346932513 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347791492 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.278649366 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576665221 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809769651 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351801153 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345115706 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37417822 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346190002 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349487342 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.542201076 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350297703 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343093792 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.605035417 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343430767 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616809656 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594423801 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598281891 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353195214 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618599294 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973360654 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456734084 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536580266 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347638539 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346548824 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.340384951 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.351130059 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362850471 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352063642 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591969922 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353183792 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344035094 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345046115 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054672642 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.358963261 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.345860042 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34716618 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593776851 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434894208 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.35212412 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345699087 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355991713 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345978575 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.353371274 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464984319 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984237311 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347110054 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384553074 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.35233399 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346337467 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34927538 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993131063 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.357305598 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.353046159 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353215217 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346064551 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358122647 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377409111 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346691424 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.36859105 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346086111 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109877914 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359182644 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352084736 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86977012 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358278489 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.351994789 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572473076 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347214773 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347048839 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.344908302 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347569625 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056490775 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359045272 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.314948865 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408276985 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047122844 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.548834255 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373154904 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376815626 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569311903 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.315570579 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348754468 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.349660497 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354669756 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368996974 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052460269 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353250876 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.352234184 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596340681 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.559979533 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358154013 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.296114658 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805804213 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358585578 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.380096421 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357050279 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549708151 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.956399982 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609987101 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35609743 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389356387 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349137726 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116151594 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357398861 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.360454654 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357402866 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621074495 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.134509627 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355570485 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421727188 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351898987 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349076136 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361266434 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354592728 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35137703 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.520252829 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365814704 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604755743 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.360368114 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35175451 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.35453837 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364970943 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.35253626 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.572019795 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351710386 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633965623 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351134387 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351454619 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351947017 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.568706594 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.360199369 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.364750445 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691557943 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357176714 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363762611 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607498449 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392478098 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464671615 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383841668 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.35460496 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60419803 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.357377093 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.359051503 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360700382 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355180149 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357357913 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.36287887 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36845471 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96237082 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336033121 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359004941 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354447699 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.368712341 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429527195 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361853231 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.550475645 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.371459925 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359175209 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.364836674 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.354679417 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594283397 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601401781 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.361036553 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534512344 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.805615806 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962859023 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37653062 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.354978305 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.354139069 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.354429751 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355898067 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354510873 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355748289 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549191959 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614391089 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360932895 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.96678859 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363601761 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361999236 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.367466361 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602465991 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.37117112 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355882054 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.355734098 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36484898 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365459903 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.611453077 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581996216 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.371003053 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357578745 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.874297003 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363159762 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358274215 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355972483 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383829765 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361956256 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174201807 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696423074 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347260309 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608707305 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366736778 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.379842818 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.355154506 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358724143 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358790296 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.383815176 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386211945 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.552977742 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365135682 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36484875 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995610436 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126925967 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913379227 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364743291 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.375274445 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365536004 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.065234537 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363235091 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357756522 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599205226 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071375158 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36434244 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81179772 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.375668357 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101399539 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61490217 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589508608 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359487002 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.369104103 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611806909 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57562992 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386985663 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366886319 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364914017 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.3272268 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874074875 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359760365 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543939281 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066603153 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369656948 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361524617 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.387008497 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.377319289 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741139698 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364959485 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359468935 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360957566 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376494927 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17659854 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363629177 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359935875 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989918176 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366911659 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.820304535 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366448512 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.557779081 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616550452 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.591757741 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.367366815 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.368920389 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.608974967 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613614004 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369059189 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365375426 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91470208 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.223770405 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.368799793 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362456018 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132827501 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37694611 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641334855 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.378814303 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.3681057 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386538359 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362589697 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362680902 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.362526187 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368274174 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34497895 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834126863 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.37333341 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373158138 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369616088 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36867649 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608191311 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.378822414 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.971940071 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594729907 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375157582 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402143156 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.369339412 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371689763 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.333783309 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363132772 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362263701 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383653408 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.584245467 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362821555 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.337561117 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430892165 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575269989 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363663704 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376255131 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57157269 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.371467141 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.370197072 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163548017 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402005338 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364382046 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380784241 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354364207 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417351794 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437577879 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560634922 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.622624598 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622968886 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747777951 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370042679 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366808085 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.380192504 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445169993 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365243575 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.371237311 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.370827312 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973508183 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149418163 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.98784799 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626064596 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375043655 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376598228 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365601351 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606240328 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36582206 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642086226 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367673424 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.356979493 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404433656 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376868833 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378306318 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584575776 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640687049 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36630081 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367368992 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388654013 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.366357325 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62499952 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.584140609 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841730869 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902349759 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372740181 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379454424 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.083548611 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649135507 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367432779 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367808003 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367302647 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.372439512 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.374154179 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.381235916 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367753376 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592110389 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617490132 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00866306 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625511204 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.551724954 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.29178841 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368874954 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614622191 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200862094 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564927305 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989844901 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086149413 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626194242 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442927994 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567419991 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.373168404 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605543601 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.377719437 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375155329 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37036918 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368924701 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.369351622 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620993028 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989917185 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627877884 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.374543461 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.37726894 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404754324 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.566782254 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.597501056 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089345733 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592272419 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626870939 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383126044 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372433241 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990329167 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631282113 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378463393 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.37626994 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578323621 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377919081 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405463433 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.241466327 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.369577164 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903745121 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.58645587 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391395905 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371861934 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090494704 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994950967 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.380135633 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853520947 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379564944 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377652371 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654047454 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.377436043 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374112862 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660587443 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.377063859 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374113721 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579278533 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.987181307 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123282902 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.387702344 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378969962 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.390085276 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372887358 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423513622 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377406956 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374164747 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.750527428 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37900992 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374315983 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385988072 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.372917855 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379941983 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.379200243 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375373686 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.381223261 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.350548673 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.363340299 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380647619 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496118888 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898396346 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376972105 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.988245367 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.706748675 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620567892 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376053929 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.347795442 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.380229003 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376109751 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374587294 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375229887 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370515322 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914681365 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.380636806 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.633650921 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386757219 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.58448856 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585486745 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375688054 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580161089 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389290671 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403013778 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.343159684 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375422934 seconds)
  done (took 973.639883773 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.377874357 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.372366287 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.394979338 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.43583312 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384380918 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.379659603 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.38144599 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.433512137 seconds)
  done (took 20.410930759 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.374866957 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.380619857 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.376060691 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.381571763 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.366804963 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.90239029 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.371543059 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.376381993 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.388709502 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.374040007 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.372163432 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.027027393 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.37571194 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.373299381 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.374892348 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.384747704 seconds)
  done (took 32.451485292 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.093328101 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.39085922 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.923497176 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.40366916 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.401311481 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.380442403 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.506921771 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.377166258 seconds)
  done (took 25.729548337 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.382597114 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.382331861 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.382509432 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.38320648 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.38319115 seconds)
  done (took 8.164717369 seconds)
done (took 1236.056198975 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.383688796 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.384371534 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.385383289 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.38490686 seconds)
  done (took 6.790728756 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.348319363 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.351063173 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.353704629 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.36597956 seconds)
  done (took 9.670846766 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.046561168 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.879754489 seconds)
  done (took 5.17756355 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.919507259 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.918874553 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.9169878 seconds)
  done (took 7.008990849 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.666249259 seconds)
  done (took 2.920832924 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.360795102 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.377442252 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.098825986 seconds)
  done (took 8.09067606 seconds)
done (took 40.911710572 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.370790095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.133976316 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.52795609 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.370126065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.538425789 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.526313576 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.622092809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.370496267 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.390871153 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.378971146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.372813135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.531205744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.61047859 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.133886399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.608785215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.134118583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.531737776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.378530048 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.38237174 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.377164832 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.622217614 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.370309108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.372484462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.388523493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.553947102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.517373194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.371071456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.146154411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.380898676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.378599887 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.521872351 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.374864231 seconds)
  done (took 82.543099014 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.3713614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.380989215 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.380419273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.371607015 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.386732201 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.401415564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.371526948 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.373695857 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.381950103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.378858196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.372499587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.388264396 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.38985752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.372980433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.392004556 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.373194064 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.391129895 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.378970197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.373165923 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.38892626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.376490298 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.373811961 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.382787422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.376806379 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.378282776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.38920131 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393503341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.374510659 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.373748564 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.374002441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.380471832 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.391627978 seconds)
  done (took 77.441340702 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.372645228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.381291582 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384551265 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.378920694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.404763832 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.383555434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.381059409 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.380163865 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.378311197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.384135785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380095474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.390423107 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.38179996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.389994631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379786572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.389161942 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.379891412 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.379351727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.394940486 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.387186713 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.37981049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.378185131 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.38262766 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.380307705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.382147816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.38383095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379469156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.381147637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.38028314 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.381391849 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.38241724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.381235283 seconds)
  done (took 77.512377104 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.614671785 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.392139608 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.393636243 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.385332894 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.394209428 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.390583491 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.386652248 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.620363423 seconds)
  done (took 14.836373333 seconds)
done (took 253.587644667 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.385982951 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.867802978 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.418823026 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.385498752 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.407666107 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.411732048 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.600981263 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.416024912 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.603259958 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.410982875 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.405530183 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.395883556 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.166071838 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.540167667 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.190785572 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.299162808 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.239511389 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.390434709 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.932920195 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.667297778 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.417784524 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.379280141 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.205314041 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.26095312 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.361125889 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.469476694 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.479014273 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.612447716 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.543878176 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.463842241 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.886513853 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.392897828 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.39342258 seconds)
  done (took 64.262272126 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.384832208 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.394538333 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.395220428 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.395383203 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.393859359 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.396088086 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.384166554 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.394216875 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.394204655 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.395707786 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.396141195 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.394506551 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.39844431 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.395818363 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.394889204 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.366507389 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.385106639 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.394328242 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.386279277 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.366088308 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.394710267 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.396397716 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.397289479 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.394775133 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.39539365 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.396226651 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.395517696 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.396812473 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.395468242 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.395109324 seconds)
  done (took 43.026829465 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.395741976 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.930659626 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.11257141 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.398871145 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.387969577 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.391663791 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.669048783 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.402869066 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.391000862 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.391728881 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.8569426 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.405408197 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.42082247 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.117690217 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.395271721 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.397595874 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.397656699 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.389280915 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.938488451 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.397555433 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.668425378 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.405747009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.670449274 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.404850574 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.392957779 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390497774 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.394846091 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.206479109 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.415946166 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.866419609 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.141845158 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.670168776 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.142343104 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.16742851 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.139782181 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.405766037 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.399548098 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.86212404 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.398152961 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.391201472 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.666511783 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.396667103 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.123228031 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.068006737 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.408450474 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.40035845 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.237187381 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.870443305 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.631220854 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.402168424 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.153810285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.400419231 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.402327071 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.392952123 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.62583499 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.400390047 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.392011135 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.234693851 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.402251709 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.670658728 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.407039706 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.391891609 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.937716053 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.396728182 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.935071889 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.400319594 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.401930767 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.393800467 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.127515585 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.400239693 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.079877487 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.410201843 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.401271716 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.863139841 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.943174777 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.292270132 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.400294702 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.945816387 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.175556071 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.692814714 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.403641441 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.187287043 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.694520689 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.40253588 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.403438061 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.40348532 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.401914671 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.46808243 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.669526947 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.005910264 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.084698785 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.246330747 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.679782435 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.408164262 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.395193395 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.238584713 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.408420445 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.403465082 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.122185075 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.094076584 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.412198019 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.403471801 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.06634975 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.413719387 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.675672665 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.40537097 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.162992561 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.401352819 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.469970675 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.405584156 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.401472397 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.399270216 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.674536124 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.40496755 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.404160423 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.069492461 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.904455161 seconds)
  done (took 194.462966552 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.390765658 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.391048715 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.390128159 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.390213851 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.390121406 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.397209753 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.38938753 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.391851679 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.395454602 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.388684342 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.390430376 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.398801598 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.397388962 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.39129025 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.394928748 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.391188053 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.390698432 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.396230024 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.391695791 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.392380607 seconds)
  done (took 45.12103492 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.40763055 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.948050253 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.914318661 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.41407778 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.406770912 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.397594118 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.451370787 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.407775651 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.40768211 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.689967876 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.569725578 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.414898845 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.406448798 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.406064149 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.909691015 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.383808875 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.691871352 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.953958574 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.413058154 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.947769599 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.384441067 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.406571919 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.39801474 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.947051437 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.708723776 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.680793827 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.459657778 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.950517097 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.414916802 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.408944469 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.950644341 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.414140558 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.398674063 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.933584697 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.415673768 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.421289618 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.410084744 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.456169573 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.455829867 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.694858411 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.960167501 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.693104339 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.426289456 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.558853817 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.411651109 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.378263375 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.962004535 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.415241791 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.37922281 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.409778582 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.414848618 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.924856542 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.40617567 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.924700232 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.416823834 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.409957044 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.952552837 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.931512228 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.923379942 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.573390499 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.400336159 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.680240667 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.415572937 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.963914788 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.416419428 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.411261601 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.412203554 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.570327459 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.954900426 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.688627267 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.702028666 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.704373804 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.416991859 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.466295878 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.412271255 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.696835506 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.472799529 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.780101844 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.699328739 seconds)
  done (took 126.865091717 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.661088016 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.514044259 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.775043568 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.98143565 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.906297181 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.551319089 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.513303763 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.647482281 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.411593713 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.51621064 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.050229057 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.500864964 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.154199082 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.473495476 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.512520682 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.528351272 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.795480719 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.343352551 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.03836816 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.030551198 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.41307429 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.509370533 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.906974691 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.594461848 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.407187153 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.952182187 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.351673934 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.924245943 seconds)
  done (took 53.242224725 seconds)
done (took 528.239350764 seconds)
SAVING RESULT...
DONE!
