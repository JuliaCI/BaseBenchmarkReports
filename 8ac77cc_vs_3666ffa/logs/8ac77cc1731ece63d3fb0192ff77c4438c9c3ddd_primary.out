cset: moving following pidspec: 3602
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.162412477 seconds)
loading group "string"... done (took 0.702894408 seconds)
loading group "linalg"... done (took 13.394678288 seconds)
loading group "parallel"... done (took 0.239744401 seconds)
loading group "find"... done (took 8.145187469 seconds)
loading group "tuple"... done (took 3.003854314 seconds)
loading group "dates"... done (took 2.009388505 seconds)
loading group "micro"... done (took 0.274836039 seconds)
loading group "io"... done (took 0.881840047 seconds)
loading group "scalar"... done (took 76.137808058 seconds)
loading group "sparse"... done (took 18.655693716 seconds)
loading group "broadcast"... done (took 1.722470909 seconds)
loading group "union"... done (took 13.753501727 seconds)
loading group "simd"... done (took 4.394006094 seconds)
loading group "random"... done (took 17.150877059 seconds)
loading group "problem"... done (took 2.872830699 seconds)
loading group "array"... done (took 33.581921559 seconds)
loading group "misc"... done (took 1.623136085 seconds)
loading group "sort"... done (took 4.881604918 seconds)
loading group "collection"... done (took 29.383283815 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 1.082075056 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.245187187 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.329633126 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.365096289 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.365273094 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.215160047 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.233984379 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.363007219 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.876182905 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.321962761 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.209925303 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.613678674 seconds)
done (took 7.979403816 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.368278495 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.412830945 seconds)
    (2/2) benchmarking "String"...
    done (took 0.266161275 seconds)
  done (took 1.365177488 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.12328527 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.250111254 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.171807313 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.156707671 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.157500092 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.156056549 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.17024805 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.156185722 seconds)
  done (took 1.904426209 seconds)
done (took 4.457429396 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.751450408 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 1.025591584 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.675470912 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.267993061 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.493546684 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.48927661 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.399305766 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.305621494 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.178199018 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.151082338 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.306088383 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.486898922 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.586167134 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.296748156 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.143823908 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.141517379 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.230104157 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.872313872 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.129710301 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.1523212 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.824440785 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.338079595 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.146139625 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.148865921 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.233759571 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.173850403 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.2130287 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.14131236 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.718148228 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.185059554 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.266702917 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.133740437 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.212009265 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.303711043 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.316356343 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.141001057 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.718207995 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.238623816 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.175934161 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.138777172 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.712809254 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.181157405 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.285250327 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.158016165 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.141745006 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.22144514 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.166296444 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.127094437 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.144962644 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.151969047 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.195649677 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.485723458 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.140583493 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.262340445 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.140931639 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.715928312 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.148234963 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.3213175 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.170200105 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.143043394 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.122940627 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.141614426 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.203639763 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.147776617 seconds)
  done (took 25.218460349 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.279990828 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.287203006 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.139340886 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.200851186 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.201714974 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.131942188 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.136458239 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.139750386 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.190391838 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.261701371 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.209092912 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.295747611 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.134012305 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.139868215 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.233028385 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.317839907 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.179155155 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.177625916 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.137596825 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.144844503 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.18501017 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.163962662 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.168269056 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.154950261 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.226916728 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.264316589 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.166705937 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.166957631 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.122476437 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.17554164 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.186935209 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.207634488 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.137622742 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.140032375 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.274162569 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.166473515 seconds)
  done (took 7.559866104 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.364230941 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.18513763 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.39520458 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.290867288 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.222392329 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.273628676 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.284786374 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.436917829 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.796293856 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.327949147 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.225121383 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.180698497 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.153939121 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112732841 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.135412375 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.129541899 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.130400555 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.601586145 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.2560271 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.253265944 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.283293814 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.177457782 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.122748723 seconds)
    (24/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.131666228 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.154927144 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.144627862 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.161677758 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.177826149 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.459191032 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.344383574 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.15970269 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.784107292 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.13495588 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.136631258 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167210886 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.132653852 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178733768 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.190209738 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.206876179 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.158840208 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.158708778 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.31787336 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.170606223 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.12603473 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.204487274 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.16735942 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.184385303 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.156401046 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.200321879 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.311947614 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.141649005 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199708041 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 5.610054792 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.245107812 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.238230279 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.141391325 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.468476143 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.164377333 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.18415 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.152795797 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 3.442074034 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.198571033 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.130913901 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.131748364 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.161738467 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.129136452 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.677270313 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201526951 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.316808194 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.129551892 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.258959416 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.173988197 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.169139425 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137984395 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.137193132 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.180839925 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.143214268 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129299228 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.142557796 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.128646775 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.148883326 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.176253988 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137247387 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.132345007 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.195693127 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.156295334 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.164439628 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.174475666 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.147960082 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.142720726 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.162834875 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.130726207 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.145925993 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.278591134 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.166229796 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.186579764 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.16104645 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.172607608 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.155551511 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.765967244 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.129443791 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.185670295 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.152474388 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.164267923 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.162186126 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.131049809 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.13757614 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.12774011 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.131947631 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.195151533 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.143295809 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.133050212 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.146101934 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.154652161 seconds)
  done (took 40.71100613 seconds)
done (took 74.178063637 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.781761412 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.149753063 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.151702344 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.149693367 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.149757582 seconds)
  done (took 2.165771995 seconds)
done (took 2.92262852 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.612069523 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.324626663 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.174246085 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.302767044 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144133685 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.316729374 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.28630874 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.160853121 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.368476935 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.139670371 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.30126183 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138784414 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146741872 seconds)
  done (took 4.208093858 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.137390295 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.158858915 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.156688785 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.155802961 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.133860953 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.154624652 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.152589579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.165890661 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.153311139 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.145849076 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.133720317 seconds)
  done (took 2.402518248 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.132975788 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.155446519 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.138149436 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.150613105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13310605 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.15039861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.149454388 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.162469392 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.152052676 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.147838257 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.134068417 seconds)
  done (took 2.358508775 seconds)
done (took 9.714170498 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.698791356 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.083890198 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.290191434 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.360445677 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.558444045 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.436574697 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.919171595 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.293106576 seconds)
  done (took 15.611229172 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.286318624 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.166346597 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.139713083 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.12214367 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.164288461 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.163339702 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.161268785 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.137557724 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.139340162 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.143351802 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.141942687 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.167837548 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.16854241 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.142227768 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.142074071 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.141828553 seconds)
  done (took 3.359548443 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.192137704 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.191126882 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.168595542 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.156374313 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.144843777 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.144340521 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.149409131 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.150833364 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.145531244 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.145924232 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.158076065 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.156596576 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.154743696 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.145114425 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.152846027 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.157994908 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.147672926 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.154220326 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.154696288 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.154972741 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.157700221 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.150709327 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.155584671 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.157318477 seconds)
  done (took 4.614269577 seconds)
done (took 24.33933647 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.265550391 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.13846181 seconds)
  done (took 1.163924515 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.249615386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.270955736 seconds)
  done (took 1.286557549 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.178114083 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.135327925 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.200915188 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.183120597 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.141353676 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.124556591 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.208163048 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.141673033 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.140351832 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.141132699 seconds)
  done (took 2.365184302 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.157118445 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.158489317 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.170252173 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.24366387 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.186001123 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.155315397 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.142719615 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.15609897 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.144046753 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.141371362 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.153127883 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.193527877 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.153304436 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.182201549 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.146762727 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.170182996 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.177328799 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.152723163 seconds)
  done (took 3.752226218 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.119985524 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.139922173 seconds)
  done (took 1.029350729 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.14684179 seconds)
    (2/7) benchmarking "second"...
    done (took 0.151666311 seconds)
    (3/7) benchmarking "month"...
    done (took 0.146821525 seconds)
    (4/7) benchmarking "year"...
    done (took 0.149168687 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.156047451 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.141171301 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.154983248 seconds)
  done (took 1.819930341 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.904983187 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.315577768 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.603514495 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.189757503 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.270936585 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.631574896 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.272145254 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.182476646 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.168568037 seconds)
  done (took 4.380528357 seconds)
done (took 16.56887112 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.123678168 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.336995699 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.986726738 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.163440365 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.139619627 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.196565042 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.535203478 seconds)
done (took 3.261021517 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.458545196 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.258071716 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.105647074 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.119763032 seconds)
  done (took 1.714003958 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.112279455 seconds)
    (2/2) benchmarking "read"...
    done (took 0.151933167 seconds)
  done (took 1.045551212 seconds)
done (took 3.546444816 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11709268 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.132441001 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.184204797 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.134938573 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.119413273 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.134031281 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.133539859 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.134869014 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.136364636 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.136043749 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.135804997 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.136499076 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.121896776 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136634189 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.136063275 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.136994834 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136038556 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.137533245 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.137988626 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.119896478 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.137149694 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.136119437 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.135482632 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.136495204 seconds)
  done (took 4.084981614 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.223121871 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.141818492 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.147633982 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.147725728 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.149260179 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.148353012 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.148272974 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.142127394 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.148663803 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.143277376 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.149622214 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.149988243 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.141321685 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.150624182 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142251313 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.14907169 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.150719045 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143912733 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143642922 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.150049808 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.149040611 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.143930255 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.149521859 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.148716258 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.149745454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.149116659 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.143639295 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.14366131 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.14883859 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.149272179 seconds)
  done (took 5.272295894 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.147963579 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.116223818 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.135849393 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.153347562 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.134508542 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.140683954 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.135778771 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135796201 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.139641384 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.137288711 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.124165635 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.138956105 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.134424502 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.142468648 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.140033338 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.144095419 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.154875556 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.136305722 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.135732451 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.139845043 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.144746136 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.118029271 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.138544636 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.13740077 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.137043829 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.134712257 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.138878869 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.137490063 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.138944175 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.121372231 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.144175655 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.142772687 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.138651039 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.155877118 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.142769916 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.137740889 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.151501737 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.135086071 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.141553371 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.134667794 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.13386411 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.121872798 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.13394132 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.15010504 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.139185097 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.140317439 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.135666329 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.14197505 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.140633666 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.144228344 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.135101355 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.119558042 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.141918413 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.140157999 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.145168645 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.135049436 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.140983038 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.135039289 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.140518089 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.137721826 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.118821446 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.135699023 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.146909623 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.139492415 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.169528271 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.149629201 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.135035367 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.141501621 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.140566956 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.151369613 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.142267988 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.157471184 seconds)
  done (took 10.809128275 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.153103065 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.172019227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.141303712 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.125773418 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142831126 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140065793 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.150514056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140880449 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143748109 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.154124694 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140154741 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.14259604 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.143208727 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.143829526 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142222669 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.142385658 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.154412657 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.141296601 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.140488167 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.142883285 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125102606 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.168363567 seconds)
  done (took 3.982354641 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.447935858 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.153038833 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.21838055 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.168157724 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.195329696 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.167853031 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.149253018 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.153207927 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149180976 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.160641581 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159764875 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.149362708 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.180345336 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.176145919 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161397306 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.163535935 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.148848009 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.162723317 seconds)
  done (took 4.053266394 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.163475975 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.145568771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.175329984 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.145684003 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.14553538 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.145420022 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.159228212 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.195185492 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.146710036 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.149465859 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.160422707 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.145173483 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.1455956 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146042207 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.146212137 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.145056313 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.145529956 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.145254828 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.159560874 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.158614291 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.158613365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.161280194 seconds)
  done (took 4.183245398 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.162079122 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.142422776 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.189744483 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.151122771 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.143571701 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.141777826 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.156239744 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.144069784 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.156160312 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.144013085 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.145578593 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.143689216 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.158944591 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.144811531 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.155184209 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.144359081 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.143825521 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.127821689 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.143683027 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.141990085 seconds)
  done (took 3.778851484 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.299560728 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163936557 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.164187447 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181019256 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.163982836 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.163084273 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182506088 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.162584442 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.162565483 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.205627274 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163080925 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.163591466 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.181630822 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.17577527 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.163451975 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.197558623 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.180704604 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18150725 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.164488529 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164272596 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.205768966 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.281817258 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.177339598 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.162514681 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.163009574 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.164554103 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.163538163 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.17425621 seconds)
  done (took 5.875773698 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119363328 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.135813431 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.137591437 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.138524875 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.139541995 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.139695173 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.140703392 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.122420997 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.141768682 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.139880385 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.140527424 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.141090554 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.142000467 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.140416082 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.140310732 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.123816432 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140746809 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.139658849 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140149005 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.139557477 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.142465157 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.14087802 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.141424007 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123548929 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.140808932 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.140342444 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.140973255 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.140586123 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.14050935 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.139691068 seconds)
  done (took 4.935304133 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.182344426 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168227893 seconds)
  done (took 1.146981487 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.130174976 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.180163767 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.120074227 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139244314 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.157329645 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142882043 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.175997559 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.157996387 seconds)
  done (took 2.002407356 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.26445685 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.268354742 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.15040962 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.161963342 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.271371239 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.247931032 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.23309022 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.146209431 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.143218637 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.138018928 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.259852958 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.131617924 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.145315649 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14433621 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.159460536 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.176099763 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.126686223 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.154561666 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.153600518 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.144218245 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149245168 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.159555702 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.153781546 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.159132832 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.150998897 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.151774001 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.17243354 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.158790935 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143938235 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.152373163 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.156701315 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.126808391 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.149321608 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.149615134 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.144153523 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.272336036 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.161461661 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.156333973 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.147790706 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.151013294 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.176487013 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.143472718 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.153683422 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.144124486 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.152435271 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.149655562 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.151370209 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.144795606 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.137228012 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.141826865 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.143633596 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.141214253 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.142489168 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.150481208 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.151413738 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.161469836 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.144666631 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.160612905 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.142961405 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.141173583 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.14626911 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.142613454 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.155119669 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.147340516 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.152045896 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.15077035 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.147835672 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.143411623 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.145806093 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.127547267 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.147318826 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.195149532 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.152901043 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.151370454 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.151906502 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.144060617 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14517043 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.136382409 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.166992627 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.150903152 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.131697375 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15544839 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.171417639 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141380764 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.126471271 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.153477162 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.146673795 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.146395779 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.138654422 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.165271993 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.145468259 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.144477166 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.138060378 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.147815214 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.153187525 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.148188583 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.138069313 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.150162009 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.142652966 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.151028661 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.152520859 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.150532834 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.154186563 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.151976267 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152195838 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.147613865 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.233411161 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.145278173 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.140998682 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.145984225 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.151006273 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.13799213 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.148612736 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.142465766 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.146676323 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.142989419 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.151128008 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.150749254 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.14548276 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.149641444 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.154933425 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.152899678 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.14592097 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.141564355 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.153368424 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.148943325 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.157414765 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.153850201 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.145964618 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.126440178 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.145124224 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.150817545 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.149407325 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.146524584 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150591225 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14597185 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.143534885 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.145053791 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.152014237 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.15133701 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.142110304 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.149492557 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.153263084 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.149361892 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.147311245 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.152868754 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.142500481 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.13766785 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.152156763 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.143104313 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.145567234 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158094738 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.143554208 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.146444328 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.141577381 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.158293173 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.144528007 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.151389738 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.147187688 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.134513586 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.15276147 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.138184721 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.145964634 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.147340045 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.153668409 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.154577496 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.145389915 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.143216072 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.154447226 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.13959609 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.149476653 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.137342004 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.146270388 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.151600046 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.14588395 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.149687207 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.143016969 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.179849685 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.162792223 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.154591751 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.150954066 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.1496303 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.152247625 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.148592197 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.14940754 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.152934833 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.134145364 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.146275389 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.148165944 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.152578291 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.144601948 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.147224124 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.148606646 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.15117655 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.139390534 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.146399434 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.138523503 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.150336582 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.154034958 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.150249225 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.153945726 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146349549 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.149229311 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.159012228 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.156767126 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.149829299 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.138031774 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.150024863 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.153232925 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.149171144 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.132984501 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.148963028 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146880479 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.145435799 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.158707293 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145526696 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.149857441 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.146223406 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.140753936 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.140854578 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.153943959 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.149812354 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.142301424 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.143478403 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.152479166 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154419191 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.14809746 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.137858992 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.151700531 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.15726683 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.142606943 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.151224887 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.143409945 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.148193559 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.16448524 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.13933861 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.143386355 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.153537842 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.151608646 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.143132904 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.151377924 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.127778671 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.147804546 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.142882613 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.141406633 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.142133214 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150552759 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.140981948 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.138104171 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.139085809 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.142275111 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.135200299 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.142147998 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.148240358 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.1401654 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.13986798 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.15187847 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.147759579 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.147386912 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.142694852 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.146493288 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.148682113 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.147999188 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.142037011 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.148351586 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.119261881 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.134237747 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.141738639 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.134150971 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.141592198 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.140142164 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.1463064 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.142419211 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.143942312 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.144628059 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.155470764 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.142327848 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.147479946 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.174599163 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.136790168 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.13407681 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142863989 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145526562 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.139625496 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.139764585 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.142356681 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146658764 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.145621614 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.150515283 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.139425414 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.139357771 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.147430336 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.140097494 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.1504069 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.148304282 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.148027505 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.137492929 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.146486509 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.140057332 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.153118539 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.136361039 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.145362633 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144276586 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144949286 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.139906291 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.143255765 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.139401793 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.134347293 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.122934275 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.149802805 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.144543674 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.145670903 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.144102722 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.141602571 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.140229825 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.13722417 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.150368868 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.144982182 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.15021615 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.140498825 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.134503247 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.135665828 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.148708632 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.146660631 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.148607093 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.137423679 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.143117072 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.148793155 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.143858685 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.122737479 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.152809595 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.151449508 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.148856404 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.156100093 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.135268367 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.14215665 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.154687589 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.139606604 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.142653121 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.141706526 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.135291626 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.150960246 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.148366549 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.146985575 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.143321661 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.135524393 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.139860612 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.149893354 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.144494041 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.144493965 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.123950409 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.165541858 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.118896177 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.144446816 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.147710086 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.145317051 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149860902 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146195549 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.144832231 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.140519684 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.148904102 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.140543985 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.136402653 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.134110124 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.140950566 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.148804383 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.136362917 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.145269014 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.145371928 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.123369632 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.144421204 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.144692404 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.140075211 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.151391476 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147490591 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.141982601 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.155484045 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.141298005 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.142624612 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.145928022 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.146391623 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.136266401 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.144069958 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.145539169 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150267832 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.14430252 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.146639365 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.146382856 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.147638296 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.143841015 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.146608979 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.146205744 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.130707557 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.134287293 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.150031143 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.151382422 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.144251505 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.14137224 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.143138724 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.138259616 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.142758367 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.149135828 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.141656708 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1536601 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.149513564 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.142965858 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.141694725 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.148301467 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.145111012 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.152286092 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.140363923 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.151518378 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.134431939 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.150315348 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.145152562 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.150228567 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.140554531 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.13656117 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.146621039 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.146385197 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.127461838 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.16804769 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.132445373 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.135749762 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.134683662 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.143956529 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.141225278 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.155792529 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149721798 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.14312158 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.143725497 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.143053146 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.141160246 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.149611176 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.137708063 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.139909396 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.146590846 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.150307437 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.143951365 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.139072541 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.145016058 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.145213918 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.150666093 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.143533408 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.13695743 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.144339891 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.149178895 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.143359073 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.138415268 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.140822954 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1495286 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.144997794 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.123683224 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.135575485 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.157093882 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.168465844 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.149999128 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.122482043 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.146621536 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.140842702 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.142948152 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.149322306 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.142443407 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146108194 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.142850995 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.147635777 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157220537 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.133687197 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.142465676 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.156878655 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.147546358 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.148904678 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.145046414 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.143942322 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.151558576 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.150997578 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.144248295 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.136787023 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.138792118 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.144091581 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.136069173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.144871429 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155024483 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.143917493 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.142714732 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.127616365 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.14516515 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.143916711 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.144657811 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.136793208 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.151675738 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.140547669 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.152395993 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.135368779 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.136602826 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.144534919 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.147842465 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.145641761 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.147056936 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.142792834 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.143694903 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.119752407 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.14421684 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.15156651 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146694298 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.148928581 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.144948681 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.144331848 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.14506225 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.156577506 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.143573839 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.147158954 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.160123477 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.150179555 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.148906507 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.147684514 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.152445484 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.149625545 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.145198117 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.149401616 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.142988891 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.146527014 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.151128209 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.151588667 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.163127538 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.145615984 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.136646848 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.147466562 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.14485137 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.136771053 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.152530486 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.151697563 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.150881262 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.146505988 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.140547886 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.153800642 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.158438455 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146176078 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.14315706 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.142606049 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.145016699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141530665 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.144651478 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.123883006 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.150646034 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.149711114 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.147522005 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.152955143 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.137297936 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.156879713 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.151474954 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.153786603 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.142047292 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.135784519 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.136528476 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.144759306 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.151755692 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.149092805 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.143899434 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.144780195 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.127626051 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.148199405 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146557914 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.144083958 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.151372111 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.148786258 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.141843986 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.149491513 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.145649501 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.149886869 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.143189187 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.148831241 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.151638941 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.149263586 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159201782 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.151356609 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.145425086 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.142506349 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.14829775 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.144585966 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.146497193 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.145667836 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.139648414 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.136552028 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131550806 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.150559841 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145997143 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.152072189 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.155167165 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.14414685 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.147727927 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.154643109 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.148226308 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.144379893 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.14862869 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.145768122 seconds)
  done (took 88.789993179 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.225101527 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182601383 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.145179299 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.145978973 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185552738 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.147158021 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.144912519 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.148409372 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.148662428 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.166489666 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.144634495 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.145491119 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.181682996 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.213851767 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185224003 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.168657637 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.144103019 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.147825831 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.145005636 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148339067 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.177813861 seconds)
  done (took 4.300272208 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.177737351 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.170337512 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.170939158 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.175221874 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.177679136 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.166967612 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.171173831 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.169064286 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.175805235 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.180286221 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.175328231 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.168844729 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.164704319 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.162673291 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.16240201 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.163750691 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.194198986 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.161207648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.170539013 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.169869137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.16287323 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.189663998 seconds)
  done (took 4.640721465 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.202695848 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.161515812 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.123162371 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.157515679 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.147292367 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.144789795 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.14871601 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.143873339 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.183477547 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.139165742 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.135322023 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.138556201 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.141212945 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.125370495 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.139962131 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.143230124 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.157009179 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.150344194 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.150435862 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.143835962 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.136663042 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.144158917 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.147024106 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.134670867 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.140875553 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.150089524 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.172298704 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.148543901 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.134773226 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.173780544 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.145041148 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.13850535 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.134929032 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.134533004 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.135441151 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.148827991 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.129716645 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.145221106 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.144764807 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.134352418 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.145561036 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.15099185 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.135453387 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.146083457 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.143917754 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.120391434 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.148159302 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.144903693 seconds)
  done (took 7.84568906 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.198122191 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.24604919 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.15272588 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.20621535 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1776171 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.186630676 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.152119548 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.206292896 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.149265444 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.152487186 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.180682924 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.195631773 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.153827948 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.158779992 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.150085282 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.153569252 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.156266356 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.151993959 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.163195922 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.153519826 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.163013849 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.15825729 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.175227946 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.192838112 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.158487947 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.151876126 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.152864798 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.158866188 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.175402181 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.166120896 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.159418021 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.162899079 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.176555625 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.176526459 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.152085619 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.135228353 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.198078522 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.155392166 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155248496 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.148392991 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.154351894 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157967049 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.157423131 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.179422107 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.155895309 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.158500382 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.153556931 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.147761854 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.175964455 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.153848636 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.185435186 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.179445322 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.1586064 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.155128413 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.161303661 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.177505098 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.154670773 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.151050072 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.155588325 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.194516139 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.130064574 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.17611091 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.181752836 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.15276058 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.165686178 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.179361064 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.158622907 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.159491043 seconds)
  done (took 12.305610039 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.193904339 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.161484058 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178472819 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177202132 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.160248855 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.179419293 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.160176113 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.159661789 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.161078033 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.171862845 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.160680276 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.338326005 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.153731876 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.170305491 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.15984062 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.160408471 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.178001727 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.160770436 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159814047 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.162093941 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.159966936 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.17805301 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.16006244 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.176600402 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.202847496 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.152655209 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.160590421 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.160299301 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.17709324 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159997324 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.202950355 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.159720686 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.159746331 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.17989528 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.186792348 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.178594111 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.129329531 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.160102685 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.178393816 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.159420138 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.15395573 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.176979875 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.161828841 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.152886904 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.160350562 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.160644148 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.179296276 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.204241307 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.168613661 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.172390172 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.160766479 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176992412 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16051338 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.177963536 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.176663877 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.191980905 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.196871612 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.176882844 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.159252119 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.178383175 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.177413817 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.209420851 seconds)
  done (took 11.597084745 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.126360819 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144305604 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.144638448 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.144994656 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.144470207 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.144969753 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.143258901 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.124793725 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.144216365 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.143462327 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144773779 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.14409162 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.144233316 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.145170274 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.145035535 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125967041 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.144374747 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.144118077 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.144643951 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.144428796 seconds)
  done (took 3.708470933 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.140907029 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.197712015 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.150496813 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.164702528 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.150611935 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.163881099 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.150006692 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.150842468 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149672303 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15085836 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.167590664 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.169951792 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151876754 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.164786524 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.169111828 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.163356768 seconds)
  done (took 3.434115532 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.182306052 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.180922062 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.285613066 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.153307802 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.151253344 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.16217951 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.150365104 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.151904081 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.147029052 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.158557266 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.135417718 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.154237939 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.149044514 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.148663205 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.14911097 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.155777032 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.147267874 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.155420697 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.149960875 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.289291944 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.159666508 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.155674152 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.151535054 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.155591235 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.154467028 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.160189874 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.160494819 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.149687903 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.153222848 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.150856997 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.155957862 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.163645001 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.147563503 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.157181985 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.148888608 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.151090536 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.149346621 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.151562336 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.155840937 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.149604945 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.132373457 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.154027932 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.150114689 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.153509966 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.148313504 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.150697631 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.147765482 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.160884286 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.151888504 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.154916408 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.150356427 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.157925845 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.156312397 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.163515531 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.161989642 seconds)
  done (took 9.615954417 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188482393 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.15349383 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.189604954 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.145435833 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.15219522 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.152216538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.152551533 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.134981812 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.153397378 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.145658173 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.15389782 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.153879488 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.152701968 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.152685065 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.153290289 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.152907625 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.145749145 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.152873904 seconds)
  done (took 3.668721875 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.138245204 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.150639869 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.157094192 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.149360761 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.149834415 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.150087638 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.147687132 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.148014338 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148062813 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.149997857 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149606994 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.150303198 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.14762057 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.149706474 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132064979 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149372446 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.149524786 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.147410226 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.150195192 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.147233435 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.150473546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.148005564 seconds)
  done (took 4.14480927 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.169960203 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.297421589 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.161893254 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.309249931 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.151476569 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.148584699 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.161526483 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.150712786 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.173893565 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.148844342 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.148671086 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.150774346 seconds)
  done (took 3.057488899 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185026544 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203286965 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.151492725 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150896779 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170009495 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.160811047 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161570741 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160654424 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175842982 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205503111 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160785766 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176492431 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175726118 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196333304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16936222 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17012554 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161306589 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160774425 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151444522 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192825207 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.181626491 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175702818 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161757751 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161683063 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159935247 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179085603 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175373334 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.205565297 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161098856 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177409187 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168025897 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161389705 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193501378 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185889236 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151552683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176684934 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160899896 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.211487824 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169709296 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179074567 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.151570012 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170327404 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178319182 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190407647 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176683307 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.160688429 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173404519 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161565916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161030931 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.227326899 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16933796 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.179826434 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169107299 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195181772 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177424549 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207122779 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.208265127 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.180045502 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169205222 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.20547118 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177797447 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169273222 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17978875 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208423919 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16955544 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181091411 seconds)
  done (took 12.525553448 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.209068039 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.154541789 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161320277 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188815146 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198133353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161843951 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162359827 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163584071 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.161184739 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154337045 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.248474094 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.160788302 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178947472 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.180151645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161247137 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161952216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163689409 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199360951 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.153515938 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.210070717 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162764998 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178165802 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198416037 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179096189 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187610256 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188432358 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161090893 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161065737 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162036234 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.161985519 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172211077 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162208456 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.179629427 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.154353746 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197710778 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161736489 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16178414 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172349623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161969839 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169906934 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179115479 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.211190966 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162280385 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162430077 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187763774 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.160986863 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161157971 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.154648164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.161580254 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154081493 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207707445 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18727113 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.207402761 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.180021791 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161157227 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162117045 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162172641 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162961495 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161882085 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170215431 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19730835 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161334157 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208988657 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164033236 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161838731 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198691831 seconds)
  done (took 12.412920676 seconds)
done (took 232.953971221 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.251049785 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.298683088 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.265018653 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.211881751 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.138998639 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.195253479 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.177611031 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.248270721 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.139562344 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.140858226 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.139051998 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.145008476 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.247355422 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.138186004 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.139032255 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.144363093 seconds)
  done (took 3.909084534 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.284720841 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.508161938 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.161150094 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.158023762 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.148793624 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.145006361 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.15725063 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.155033679 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.147200324 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.164981987 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.144600469 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.140918116 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.164706998 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.142066717 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.148027933 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.145429576 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.164772184 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.145017826 seconds)
  done (took 4.123105773 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.194561827 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.188255454 seconds)
  done (took 1.288206341 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.191915532 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.328927473 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.477655738 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.233471637 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.176549805 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.188192647 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.234700027 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.164679025 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.294570091 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.179421121 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.178554189 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.142732116 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.189856276 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.181642348 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.170687912 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.141863923 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.194337348 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.166979495 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.164776467 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.154893372 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.185930589 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.155806102 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.162229885 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.165401153 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.285477047 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.178830752 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.155141854 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.174661486 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.155453985 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.164738228 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.155649072 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.188759284 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.178006395 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.307927849 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.153588959 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.285328435 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.159711077 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.152015853 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.165067783 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.153350017 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.159472904 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.178865517 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.171373458 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.143809709 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.154459825 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.160165255 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.155097552 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.154187056 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.157930677 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.164441249 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.158994774 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.156549744 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.301658668 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.163601929 seconds)
  done (took 11.120005061 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.478315826 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.230975523 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126639212 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.880783551 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.204131688 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170676024 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.435862456 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.180740757 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.407422889 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.610479271 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.173466692 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.160907213 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.427409083 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.419901579 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.808945021 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.582219979 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.331054332 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.167151486 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.211747124 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.229737907 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.185688973 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190186155 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.190095057 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.817849464 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.151645131 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.15152089 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.168452703 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.17964441 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.282229266 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.147325096 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.155880755 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.312373016 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.462089957 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.370668996 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.150804705 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.145859874 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.145748482 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.287079946 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.492889593 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.397087135 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.291842513 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143636595 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.145294226 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.163221718 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.183424915 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.143208477 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.281671295 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.31587968 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.296040721 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.156485608 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.161788271 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.169992828 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.159754698 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.296286517 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.142231626 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.564905388 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.594414253 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.148351209 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.169066324 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.167386655 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.475404398 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.147937415 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.413785476 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.21733492 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.3887996 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.148595603 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.264475612 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.295107973 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.14712102 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.157964683 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.164178495 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.163319817 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161112495 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.289681014 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.777450566 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166428523 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.156897841 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146630489 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.411747042 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.147062808 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126377494 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.313865275 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.15365583 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.166826213 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168781668 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165493731 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.319227141 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.398323135 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.166694778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.170001132 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.158764379 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.173793415 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.152433471 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.383044939 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.394618304 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.300724088 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.356646163 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163922705 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.306671459 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.291810018 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.157468127 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.292144717 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.164861022 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.186773817 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163261523 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.401197896 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.237693063 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.148575653 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.158890575 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.169790603 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.241553138 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.152304125 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.169529313 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.295057719 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.928997078 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.293437791 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.144875993 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.15300155 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1694299 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.308095451 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.162737067 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456375322 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.169374216 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.310057629 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164141766 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.144832878 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.166015933 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.283440481 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.160301579 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.169299394 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.181961433 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.167246299 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.420247044 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.392086511 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.185429077 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.431939579 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.278735662 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.158474332 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.324599435 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168612565 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.301776641 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.16744345 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.181288185 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15361957 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.246054063 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.176595088 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.165847653 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.158322605 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.323336291 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.147971871 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.148931368 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1452876 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.144342612 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.43488645 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.15137601 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.144522111 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.148955807 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.156100463 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.165102558 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169295669 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.158135775 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.301875024 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.414707347 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.161651229 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.184282305 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127267094 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.30541816 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.151746367 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.146674519 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.146324965 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127137517 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.186965433 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.157152173 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.149378401 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.297859991 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.278009306 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.423783408 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.99472349 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.148237244 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146947656 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.441139086 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147901821 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.533951293 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170662961 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.42430031 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.288953088 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.143982695 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596503673 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.292905641 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.321108545 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.15104595 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.294241761 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.143729034 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.17025202 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.300229882 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.146835707 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.163146524 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.279590914 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168841731 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165021187 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.821222661 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.148765349 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.400486482 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.145626731 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.315119291 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.153320384 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.158371667 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.52534302 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.148549731 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.173889025 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.300616992 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.157385152 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.147972002 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.790126854 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.147352263 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.173933453 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.157344175 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.42230256 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.296791208 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.170323353 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171406026 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.163952772 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.304751349 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.357300265 seconds)
  done (took 74.078669947 seconds)
done (took 95.414065977 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.369549902 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.259134219 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.467471557 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.220839466 seconds)
  done (took 2.367590697 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.414866789 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.225925796 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.287468049 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.142699171 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.320544866 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.142481309 seconds)
  done (took 2.470865337 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308881322 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213031318 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230349131 seconds)
  done (took 1.687644016 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.284648439 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.295793119 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.490291672 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.399959387 seconds)
  done (took 2.534034045 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.43437666 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.168173707 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.226399305 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.316759366 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.352003539 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.285995218 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.17646648 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.238776847 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.214166215 seconds)
  done (took 3.404266538 seconds)
done (took 13.404486387 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.208448639 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.413062717 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.295932169 seconds)
    (4/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.465154224 seconds)
    (5/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.559557276 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.319003594 seconds)
    (7/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.252002395 seconds)
    (8/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.159890755 seconds)
    (9/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.215561684 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.159990513 seconds)
    (11/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.457392906 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.347006878 seconds)
    (13/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.222439807 seconds)
    (14/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.177936048 seconds)
    (15/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.294630319 seconds)
    (16/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.39816649 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.317442885 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.351987356 seconds)
    (19/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.177353972 seconds)
    (20/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.238133444 seconds)
    (21/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.095478343 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.153726778 seconds)
    (23/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.184653779 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.181317952 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.173605838 seconds)
    (26/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.265936098 seconds)
    (27/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.241157218 seconds)
    (28/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.155948793 seconds)
    (29/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.401303771 seconds)
    (30/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.158295877 seconds)
    (31/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.180984046 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.170846617 seconds)
    (33/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.355858967 seconds)
    (34/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.24228212 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.328985877 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.357678939 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.506234387 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.173206772 seconds)
    (39/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.237689093 seconds)
    (40/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.273069509 seconds)
    (41/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.12751256 seconds)
    (42/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.177192248 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.151426568 seconds)
    (44/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.107695859 seconds)
    (45/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.232051352 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.163305168 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.31955072 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.12873022 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.186782475 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.151475087 seconds)
    (51/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.107393001 seconds)
    (52/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.183680506 seconds)
    (53/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.23887037 seconds)
    (54/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.180885431 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.128931742 seconds)
    (56/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.133359296 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.343465118 seconds)
    (58/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.286038366 seconds)
    (59/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.166583867 seconds)
    (60/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.178829943 seconds)
    (61/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.123904389 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.208546731 seconds)
    (63/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.106975433 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.160849679 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.152712894 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.333148385 seconds)
    (67/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.101295064 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.197959764 seconds)
    (69/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.096741585 seconds)
    (70/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.184339912 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.155776445 seconds)
    (72/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.12269773 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.173958526 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.103338422 seconds)
    (75/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.11974043 seconds)
    (76/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.15496242 seconds)
    (77/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.272818887 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.12915488 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.10793473 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.153782363 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.171570805 seconds)
    (82/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.152782683 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.148379794 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.157162839 seconds)
    (85/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.152803628 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.173864212 seconds)
    (87/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.130697648 seconds)
    (88/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.151866262 seconds)
    (89/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.303752365 seconds)
    (90/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.302447887 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.107852936 seconds)
    (92/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.123372266 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.172418025 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.148664816 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.159968559 seconds)
    (96/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.217834783 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.154396466 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.165319775 seconds)
    (99/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180940399 seconds)
    (100/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.101842329 seconds)
    (101/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.189420399 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.153203584 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.178553064 seconds)
    (104/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.128827338 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.152332092 seconds)
    (106/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.157507382 seconds)
    (107/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.108137067 seconds)
    (108/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.123134617 seconds)
    (109/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.229311071 seconds)
    (110/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.181461218 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.156893418 seconds)
    (112/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.102510525 seconds)
    (113/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.128754923 seconds)
    (114/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.120208422 seconds)
    (115/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.181966757 seconds)
    (116/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.142409742 seconds)
    (117/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.290083305 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.158890402 seconds)
    (119/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.096787894 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.1551608 seconds)
    (121/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.123748407 seconds)
    (122/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.096357509 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.154502847 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.157561977 seconds)
    (125/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.211162883 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.150984884 seconds)
    (127/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.126593872 seconds)
    (128/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.184979498 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.173145022 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.176354095 seconds)
    (131/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.10227106 seconds)
    (132/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.188070257 seconds)
    (133/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.125362945 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.164203467 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.149615623 seconds)
    (136/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.103387477 seconds)
    (137/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.129366095 seconds)
    (138/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.150192415 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.154989179 seconds)
    (140/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.183119682 seconds)
    (141/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.161365268 seconds)
    (142/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.106556229 seconds)
    (143/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.160891407 seconds)
    (144/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.12396675 seconds)
    (145/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.096331526 seconds)
    (146/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.118718627 seconds)
    (147/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.096482936 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.118744713 seconds)
    (149/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.124307132 seconds)
    (150/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.155158293 seconds)
    (151/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.159543688 seconds)
    (152/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.12582933 seconds)
    (153/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.14879423 seconds)
    (154/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.174986814 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.159969275 seconds)
    (156/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.13745716 seconds)
    (157/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.119070822 seconds)
    (158/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.158440599 seconds)
    (159/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09950602 seconds)
    (160/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.176287066 seconds)
    (161/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.168298391 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.154284661 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.119078013 seconds)
    (164/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.125653061 seconds)
    (165/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.12724266 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.15319068 seconds)
    (167/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.125423041 seconds)
    (168/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.177708275 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.153366012 seconds)
    (170/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.102867593 seconds)
    (171/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.150648115 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.153542923 seconds)
    (173/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.120343878 seconds)
    (174/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.102684264 seconds)
    (175/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.1310728 seconds)
    (176/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.123557326 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.171141498 seconds)
    (178/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.107399369 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.119625293 seconds)
    (180/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.097853343 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.154177746 seconds)
    (182/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.123874025 seconds)
    (183/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.102007363 seconds)
    (184/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.125108764 seconds)
    (185/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.129077395 seconds)
    (186/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.157973919 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13658236 seconds)
    (188/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.155480315 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.124216637 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.119955506 seconds)
    (191/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.097519996 seconds)
    (192/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.166427977 seconds)
  done (took 35.476870933 seconds)
done (took 36.418659401 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.357543663 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130695492 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.164474847 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.162313065 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.311287474 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.169111912 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.181794664 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.170946673 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.172834655 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.162137691 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.150743042 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.174112615 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.162936659 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.302020267 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.170077685 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.157069244 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.153818283 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.171659868 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.179214188 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.180604075 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.312989689 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.151425039 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.173629132 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.153581751 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.313700378 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.151767013 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.163694096 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.169843327 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.173890021 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.163096946 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.168513765 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.154195192 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.179357314 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.179714324 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149225306 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.161435321 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127081562 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.131331294 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.164268631 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.165488408 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.175265382 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.164307483 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.170307733 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.155834766 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.165185895 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.162407758 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.148814963 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.17211007 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.150734666 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.169464416 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.151479856 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.182014239 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.162853321 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.151400313 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.15087947 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.156002308 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.17291728 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.148807647 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.173686296 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14948771 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.154500116 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12641272 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.188636865 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127685247 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.163546156 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.15420614 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.164015337 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.166875868 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.161898396 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.153662365 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.150425949 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.160960689 seconds)
done (took 13.381480888 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.136664153 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.26066 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.313718917 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.311864944 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.209651723 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.185568589 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.167374149 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.184713386 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.166956375 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.17851266 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.233533717 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.195673264 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.331144153 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.176542717 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.186693063 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.163018041 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.163677436 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.161995821 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.299336816 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.190596061 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.193163458 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.176721635 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.213268182 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.172715332 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.157991377 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.211567447 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.165965608 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.162877692 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.158289466 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.170986307 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.189947873 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.157870207 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.165861717 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.174648597 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.176533903 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.167722734 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.206798081 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140248842 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.159570297 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.158617423 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.197318756 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.168906653 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.157683845 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.185795375 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.16281031 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.168901664 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.164060972 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.167141893 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.16147275 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.163474146 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.161414829 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.195835678 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.177540258 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.172919844 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.176653002 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.165310309 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.167408641 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.165578533 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.166343318 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.164921536 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.159736726 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.159003936 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.161399492 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.193959625 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.165657752 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.169058074 seconds)
  done (took 13.096535889 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.191570801 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.215433955 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.176136594 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.175998256 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.199339899 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.147091563 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.125342509 seconds)
  done (took 2.219283851 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.127779147 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.357883209 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.353825132 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.354106836 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.309779087 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.34286636 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210363573 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.126512024 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.230937225 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.171400114 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.332069622 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.536787516 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.162269756 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.181447434 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.403054184 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126353947 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.353659954 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.150353964 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.170403102 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.352380687 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.201099264 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.195655837 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.177519853 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.150379815 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.309602692 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.153388547 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.394810111 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.17929195 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.161415674 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.168182557 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.173163795 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.346002351 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.31221553 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.176130465 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.160192099 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.323178378 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.298371833 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.175267219 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.337661998 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.156535526 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.300072574 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.17213971 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.173104175 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.194830351 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.184853518 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.297986872 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.183577683 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.175180818 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.168229106 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.336501649 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.175921053 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.312932078 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.165627543 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.168391795 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.171347321 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.17345642 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188701474 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.171330148 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.337599483 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.178024271 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.335678794 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.337237685 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.302440473 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.33715482 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.19751558 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.315589276 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.276341279 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.169206065 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.190153457 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.173228408 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.34000469 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.17153484 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.432429356 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.277134613 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.203925689 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.30122279 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.324888446 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.166427426 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.172444083 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.158953844 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.167035101 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.151508796 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.302561725 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.168869974 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.167727786 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185480535 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.175469585 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.175360926 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.161056106 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.215028825 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.172519934 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.176578767 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.182505949 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.170705597 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.197369062 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.342259257 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.174341784 seconds)
  done (took 23.59875283 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.130430731 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.153744609 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.160515746 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.153887857 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.153798018 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.153587051 seconds)
  done (took 1.916658203 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.230484995 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.194100856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.184442667 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.173936704 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.481367972 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.325626257 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.326462816 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.17233514 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.196223823 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.184891244 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.323164467 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.328533181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.320713065 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.178726359 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.328830848 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.176118257 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.331487275 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.167728104 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.183661522 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.164443098 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.177210069 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.177059862 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.166011974 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.318601227 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.173238948 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.174853942 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.168469749 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.18328782 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.182559337 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.196118152 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.177715235 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.1719453 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.167117149 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.174304565 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.330022525 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.168606107 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.166063697 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.176269907 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.175112349 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.174459884 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.329850439 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.166291191 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.186471384 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.176789961 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.172236952 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.168237727 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.19988648 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.168038023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.329879839 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.176224724 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.177871311 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.17376871 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.172991146 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.176723222 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.169011308 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.172319917 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.175830463 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.331524608 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.178146382 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.168504353 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.173123338 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.173003547 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.171778592 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.19935886 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.174267028 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.174973758 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.167838957 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.174735442 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.166620462 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.173588175 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.176975271 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.174791301 seconds)
  done (took 15.857333029 seconds)
done (took 57.672958757 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.898224216 seconds)
  done (took 2.908139887 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.269778627 seconds)
  done (took 2.281201015 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.146652085 seconds)
  done (took 19.208118933 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.695914117 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.967055011 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.996282736 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.204695266 seconds)
  done (took 4.87681931 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.092647433 seconds)
  done (took 2.127073012 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.484257313 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.351745487 seconds)
  done (took 1.856029851 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.803578824 seconds)
  done (took 1.830186539 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.213688779 seconds)
  done (took 3.232417634 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.437990436 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.358979642 seconds)
  done (took 1.827872674 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.967008043 seconds)
  done (took 1.995921675 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 24.248228986 seconds)
  done (took 25.274890299 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.315174076 seconds)
  done (took 1.356796255 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.422732039 seconds)
  done (took 1.45928501 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.957959235 seconds)
  done (took 4.988890888 seconds)
done (took 76.244925046 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.142023996 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.168336042 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.167968569 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.165546032 seconds)
  done (took 1.669365188 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.193871109 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.172808335 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.177571138 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.167597352 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.180466626 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.170817783 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.170011597 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.174612496 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.168581541 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.173324696 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.171281752 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.170153712 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.17371315 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.169447962 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.165374245 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.175010792 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.175589129 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.171420658 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.17127468 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.170553778 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.172225825 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.173950427 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.176834664 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.175419121 seconds)
  done (took 5.199922093 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.13987764 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.157598352 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.160114845 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.155261443 seconds)
  done (took 1.648380321 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.181674896 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.196096338 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.19377076 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.181409205 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.197196428 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.193440894 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.168600551 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.165195415 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.169266741 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.183078823 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.204193999 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.195549234 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.218441709 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.172644049 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.186941709 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.136468298 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.171766488 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.218367909 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.180138858 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.185176766 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.171723925 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.180952837 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.17665817 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.181738035 seconds)
  done (took 5.452425169 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.274428159 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.194833427 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.230871168 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.233014483 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.221420629 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.169562657 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.231527628 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.180762399 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.184811001 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.178418111 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.179717196 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.233510312 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.174906017 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.173103132 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.174484642 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.207214664 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.195916062 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.181237664 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.26453364 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.183333675 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.179556854 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.188588591 seconds)
  done (took 5.479252819 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.182937944 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.158604977 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.154866782 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.158139016 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.183023762 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.162774802 seconds)
  done (took 2.042118775 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.182957346 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.125971897 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.158140926 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.153286197 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.154930446 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.147798553 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.148166666 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.15031326 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.149894716 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.124698428 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.152515847 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.148554138 seconds)
  done (took 2.839100115 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.517862663 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.170551841 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.159788033 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.159626669 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.167995265 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.156715191 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.176583053 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.156070067 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.380715435 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.157417004 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.154987296 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.301857651 seconds)
  done (took 3.707435181 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.387767008 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173368996 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.433632963 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.566096442 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282129664 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28708554 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.401996324 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.279129199 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.362895573 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208097573 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.313677103 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226058287 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255491316 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276612727 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231908396 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.240122804 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.317486163 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.370134868 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20808263 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38152031 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264014887 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.291626601 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.312161271 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226862325 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233436158 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255887942 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.145623085 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207429754 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269438602 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283064969 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.299089524 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228737271 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263330295 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.337882318 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.43125762 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300774403 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.395325492 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216190713 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.252600366 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.310930439 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.517230518 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235294784 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.331241439 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221613603 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186277433 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.31043765 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255435079 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.377760179 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.195574454 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207953948 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.320839653 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289241443 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.332846058 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197110472 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.428237253 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20124243 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.246413088 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278979 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.345793635 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36283036 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268298301 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.174413482 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.30205404 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.313122725 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.35369919 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.249294983 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.257405446 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208946048 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293916649 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.34512761 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.379302488 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285795669 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.380572826 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187294264 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265615873 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282789026 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229685284 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.339812769 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280145087 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.17003502 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223172412 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224435761 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178135831 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.249931957 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17230174 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.377259941 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218809208 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.502393233 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287283245 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.268971235 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243742504 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280515486 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.297876921 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224350047 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.158401534 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212381747 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.262531879 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233062779 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195314795 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268191046 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23498196 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.189692551 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226423306 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.173445488 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27854926 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.200220241 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254018661 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283434619 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.18945137 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.291945143 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224444978 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.246661094 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287095219 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.321562327 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190723002 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190018665 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.402672467 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274477879 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.20316546 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267360558 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.364715465 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.234349559 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198923611 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278964958 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.345746975 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235333166 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.338745837 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199870008 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195788402 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.21401534 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288049851 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267975168 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.227244693 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179804876 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.281057109 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315351743 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.181447464 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197024135 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307454349 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195670151 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180677826 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205816133 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226452864 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.205155293 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.225770016 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.206163372 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258769855 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247709795 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.264656891 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23357409 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225426062 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272527293 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216742917 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.248633711 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223113795 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.169004683 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.32627681 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.334042427 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184639351 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.336880429 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.265243719 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301535575 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292714173 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183528033 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.312370818 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1817871 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.171683242 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272194736 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.29634517 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.24781985 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.331252788 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298890783 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.290155641 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.253189421 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240801697 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255350243 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.304025293 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280972067 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.214314512 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29276427 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299503817 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.172797465 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.178390558 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.184029845 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20308934 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192628202 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193143086 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305316353 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277897832 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.30591737 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254926767 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203250326 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.317273822 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.184480707 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274225815 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.313466276 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197182803 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.339941253 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314921521 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302539711 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20802667 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288614364 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.170939984 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179226167 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.200076786 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.284380576 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193025535 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19548616 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218397321 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.316593924 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293319294 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223564945 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.321770513 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277326696 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.338155965 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.172920117 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.225163795 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270904143 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248356704 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.264076409 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218510057 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.245881927 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.321127163 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202871555 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.351423789 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28366176 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31500962 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.359464665 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.268363939 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186876712 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224036499 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287421823 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212831796 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264013582 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218401027 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187574018 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251573632 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.199424281 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214777812 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304279881 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204868822 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.333664741 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.254116677 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29751921 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176734315 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217692554 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286966591 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205690518 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.154621222 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285449547 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.351507189 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249421907 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233111814 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279424743 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18677162 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.466930027 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294245541 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315606398 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220837013 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206890665 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252288162 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.258784032 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243180608 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.340915082 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21901122 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.349264347 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273263443 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.211575817 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188270265 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221397399 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254589505 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.218211793 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.265810107 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.256237754 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.206680592 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305788176 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232414563 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245945541 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306935032 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.204761806 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.240286708 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204178694 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.392934735 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279214562 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301851107 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.24131422 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.277469 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31446109 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175056181 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1828013 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.193478618 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.315482494 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184225197 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298426973 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.295971655 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.304885695 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290777759 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265220827 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226181059 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.181947813 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251019224 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219499343 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.312028089 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226045907 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.202579728 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311813749 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.209801158 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188270241 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28483663 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.405726146 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212811949 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281805003 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.164253497 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.405604272 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180607895 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188701813 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234230029 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287428025 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.19512359 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.260757088 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2933524 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213107144 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.261531506 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197460059 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.309084525 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29194022 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285386038 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289186969 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.211999307 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271127295 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247528574 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283730425 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216374055 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.214464982 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257536291 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325419451 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.314967795 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.19227597 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256409426 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283317218 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288518536 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.314079355 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19522165 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.316099765 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182440278 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280388586 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211571749 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180639662 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234781052 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.296198836 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197366563 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283520164 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281417988 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186471846 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1832068 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222109185 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273545522 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202384628 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.184870508 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306016544 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.181021027 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30579502 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.342235973 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181840483 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241066255 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24293615 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190912929 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207361963 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222472769 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188342808 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.236400167 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30226399 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.193858064 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285705438 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292140475 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24558706 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26630415 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212302787 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.274110467 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.183578893 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31677012 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249953663 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.357341681 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225115782 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304519956 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25504111 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240868711 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254185224 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243417098 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.285341603 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282423596 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.267761616 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187835405 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249491827 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207570597 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.194819845 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258954496 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257008989 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200992207 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.229870255 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.259731968 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247900964 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.213180847 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202700474 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.34869583 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224920878 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311719632 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.346021607 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197575778 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276013845 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.342671252 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185581292 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.247304463 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290302841 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216212845 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250372661 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.191633472 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.199858176 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.344783411 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.176109908 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277690868 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260232125 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.282374195 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267068763 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.228964492 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273435571 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242767607 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261007476 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183251373 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.267321861 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246619163 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218741302 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.187116666 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253546082 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260485298 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.248524075 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214335398 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.241981424 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325722341 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.176345236 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223196482 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382854131 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26552772 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.343356421 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.216232445 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200135618 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234429358 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243709817 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.279593458 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251551527 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.185886093 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183898143 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.250823997 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.221599604 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.210810659 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275244595 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315348709 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239172038 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.320015546 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.202208999 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.348767641 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20190952 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278642557 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.184582959 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.192010305 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20382709 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19639077 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231060468 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.285568913 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.373244851 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.234242306 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.214069452 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184689788 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.177678652 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183690116 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.264598283 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223274283 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273451889 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224023427 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.161050426 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208898522 seconds)
  done (took 125.616812833 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186301509 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.207434737 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.247093569 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.296027519 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251120844 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.362463338 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.300779596 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.306698568 seconds)
  done (took 3.305868009 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.181017743 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.193002617 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.228733023 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.175003109 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.162080972 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.681804355 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.193413035 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.177254651 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.273642857 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.18069298 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.184182933 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.793822034 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.174293764 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.202674768 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.176969278 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.157950249 seconds)
  done (took 5.273007628 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.05642064 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.070960103 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.719608037 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.516230658 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.504444294 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.416683136 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 1.241978769 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.407673486 seconds)
  done (took 20.083034226 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.212399997 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.207276734 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.576195821 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.404869455 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.288437946 seconds)
  done (took 2.838582084 seconds)
done (took 186.189999092 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.149213084 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.174995294 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.17581992 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.180429383 seconds)
  done (took 1.813980778 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.262535284 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.137307199 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.112710203 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.137268095 seconds)
  done (took 1.795820706 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.835448689 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.13643102 seconds)
  done (took 2.138556005 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.217070686 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.195130125 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.212086374 seconds)
  done (took 1.77745576 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.198200693 seconds)
  done (took 1.350456961 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.148593207 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.179764447 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.33663113 seconds)
  done (took 1.811106119 seconds)
done (took 11.838155313 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.206375677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.636552286 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.570099346 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.211278049 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.965159598 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.540527178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.853129415 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.220602933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.295789704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.158065368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.185122094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.92352751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.796873915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.521696201 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.776181376 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.526257457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.92508122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.131241386 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.172713149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.160585956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.783450679 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.157549947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.160100406 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.158181041 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.924942451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.574033626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.157839817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.550926758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.15702406 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.167487626 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.537988446 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.15828504 seconds)
  done (took 27.405555731 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166792071 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.300376397 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.17509863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162182714 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167755416 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.159391743 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.178329777 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.185248068 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.304383408 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.158393353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.185885523 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.157265751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.166563282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.158638998 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.189473125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.130905531 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.160128956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.158935358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.174713392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.162044815 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.186721069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.156930183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.161796464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.159607402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.158877169 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.197479841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.159395537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.184318342 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.159123885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.17034429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.162874976 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.159970771 seconds)
  done (took 6.777780676 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.250425237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.29087701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.17748099 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.231594233 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.243981851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.162595754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.320458629 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.227386374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.303562001 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.160828259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.188810761 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.159599136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.219633727 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.161675379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.192705431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.161010467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.162377332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.160422463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.175246523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.165964819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.188554659 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.159229096 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.162783268 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.159628198 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.133947001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.227697628 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.159159471 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.186971565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.159219913 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.170421557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.163481565 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.133151975 seconds)
  done (took 7.27961822 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.150270656 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.179854442 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.205622369 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.220067528 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.143485625 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.177573121 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.17906629 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.171288957 seconds)
  done (took 2.592003718 seconds)
done (took 45.209808533 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.19054972 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.157784536 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.191086547 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.179239397 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.324191428 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.16698062 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.181211055 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.167794651 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.174479608 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.187894512 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.158988592 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.167399707 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158997648 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.171523404 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.324501267 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.176867442 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.334169026 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.326728851 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.168030472 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.147309654 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.170880681 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.334413453 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.175778835 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.169026845 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.313298996 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.163400013 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.290262722 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.171742759 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.172130662 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.169982419 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.327158073 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.175500989 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.168931304 seconds)
  done (took 8.00970523 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.303107453 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.175142524 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.172445379 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.169745704 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.174412578 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.166924357 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.342979743 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.169713174 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.140690645 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.169046465 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.167790464 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.330868819 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.180329019 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.165660963 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.176209097 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.120941881 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.341044222 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.176200624 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.162301755 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.110497369 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.165286017 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.168034051 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.35485087 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.164686445 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.171473997 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.169255181 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.177723463 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.177623512 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.172191301 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.14581719 seconds)
  done (took 6.947743511 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.151205057 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.189910702 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.259015742 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.254757591 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.23671122 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.199598202 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.201283435 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.198035368 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.208988938 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.16355734 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.183527215 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.244416973 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.189067506 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.176550656 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.136071225 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.190808231 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.224095698 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.134626335 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.173175164 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.187157964 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.207359243 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.217360529 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.201441959 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.173783977 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.131957353 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.20612637 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.149815146 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.181743611 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.177728761 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.177653652 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.172612167 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.170408662 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.167739179 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.248988076 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.17198943 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.183106232 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.200685561 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.17517608 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.185145404 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.198293217 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.170120377 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.174207406 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.190680517 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.224740381 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.164961678 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.184953791 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.179754472 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.176965903 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.163505773 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.190420167 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.2229208 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.162479979 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.199596625 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.162588786 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.163260843 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.179295403 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.166068715 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.167646747 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.180036188 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.169029371 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.198644844 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.173929889 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.172453528 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.137973871 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.173010001 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.162379579 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.163307461 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.172930277 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.19457052 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.177082236 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.203386588 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.16433853 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.182803077 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.1752876 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.173207541 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.180318401 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.163901346 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.172843548 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.179381613 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.173375337 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.175594847 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.167582516 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.167513498 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.187822796 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.198150789 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.182990855 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.22758299 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.184392116 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.169741355 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.166677122 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186748232 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.16554273 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.17051253 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.176565917 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.163737195 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.139495809 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.2112835 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.181636644 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.132859438 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.186714539 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.172616379 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.163627815 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.185510282 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.177727924 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.173104781 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.176730349 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.221031178 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.162653101 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.180425914 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.184553343 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.1649741 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.173017652 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.168105957 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.160683424 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.190335648 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.184379223 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.173072918 seconds)
  done (took 22.426670605 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.487686078 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.504680782 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.322403029 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.367389409 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.185439283 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.35569543 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.498374324 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.469198416 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.175231663 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.269961104 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.289632111 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.429121288 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.165530368 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.216522913 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.504453856 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.625381156 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.219065183 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.237370316 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.266004363 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.187540632 seconds)
  done (took 7.961738229 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.199429449 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.233042065 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.216067074 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.210339167 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.176265427 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.185887201 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.163492558 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.202779725 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.177408109 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.20095666 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.182234779 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.188108661 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.176398186 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.187289452 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.192478113 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.201717911 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.197319867 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.176293433 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.228266639 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.174534777 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.163478898 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.20814768 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.183527697 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.21426292 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.187346304 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.17983918 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.161764037 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.174501252 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.169443997 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.173336466 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.17389504 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.196878964 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.173747421 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.128272229 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.180726048 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.181695996 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.169983881 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.167469246 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.17684214 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.168446554 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.188569004 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.179940921 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.171711004 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.113951314 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.18844759 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.147769957 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.185846088 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.180715284 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.169622621 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.188630868 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.178332762 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.185794171 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.173766237 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.196089138 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.170471848 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.194552139 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.184908865 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.185146057 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.176206241 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.161902976 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.161382322 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.141072021 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.174065887 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.185671688 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.18082945 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.22779226 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.188754485 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.162646867 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.175218859 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.168511954 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.140022712 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.215192021 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.208284895 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.173403723 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.170199041 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.180159662 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.143417021 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.136573592 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.177989657 seconds)
  done (took 15.438129153 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.20804523 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.172964723 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.205734023 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.212894039 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.181295909 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.172875399 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.175094401 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.189371173 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.185881513 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.183641271 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.185572431 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.185904367 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.204745157 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.177651182 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.173417611 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.189038455 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.179362944 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.225912007 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205810882 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.219106429 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.189592144 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.169948001 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.181160096 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.179299635 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.213368985 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.180057933 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.242744645 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.179928017 seconds)
  done (took 6.571912991 seconds)
done (took 68.519415804 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.353034829 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.527237383 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.322428995 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.314736223 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.305848543 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.327244296 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.314406781 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.294423278 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.735235551 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.26624934 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.29799793 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.297464882 seconds)
done (took 29.553314795 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.362789455 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.839791227 seconds)
    (2/2) benchmarking "String"...
    done (took 1.985300398 seconds)
  done (took 5.012205682 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.285130065 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.287255995 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.595060408 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.307926306 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.304593824 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.287985694 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.295369065 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.300351114 seconds)
  done (took 16.564879354 seconds)
done (took 27.413904295 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.368254838 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.468370637 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.519743495 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.315276498 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.295038568 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.305968771 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.308808751 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.317173125 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.305626936 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.29939676 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.716438572 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.556846702 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.309358356 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.664504008 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.304037037 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.301097693 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.321883321 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.523370082 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.29072976 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.322669584 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.261865635 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.267720876 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.333615647 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.301584363 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.297404115 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.301413111 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.368668949 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.303562674 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.482021677 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.305048225 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.316592123 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.289866553 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.343829363 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.299792289 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.297273109 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.296094383 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.484241272 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.299832804 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.265121786 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.324853004 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.48933878 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.312537729 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.293188107 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.304313837 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.30260438 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.374319691 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.267361434 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.436129556 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.313110663 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.306424697 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.333367462 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.668414837 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.30528131 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.322141521 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.297105373 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.529282823 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.316929938 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.355112699 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.317994249 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.303215909 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.293273844 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.306597027 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.313858092 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.295069582 seconds)
  done (took 149.802283517 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.290802247 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.298281976 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.297038476 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.316410718 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.298259822 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.297277152 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.292715353 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.292592787 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.316039217 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.324780673 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.297160631 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.292733401 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.296186789 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.246991781 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.301891376 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.308356784 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.292939085 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.312736043 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.324096663 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.291625713 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.295551421 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.297625943 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.309595181 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.293265737 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.297891434 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.36593868 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.349911796 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.304431113 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.309221043 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.294268158 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.294070864 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.303179114 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.943252116 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.170851683 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.302318673 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.32614081 seconds)
  done (took 83.637953117 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.294567427 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.294232876 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.293400765 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.336375642 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.294088056 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.997967888 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.003278975 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.330092812 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.278193347 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.299550314 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.763719253 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587028989 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.293675284 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.390522458 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.307575257 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.29361221 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.294117286 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.309561854 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.337177292 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.301579739 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.294791627 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.998670031 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.312261294 seconds)
    (24/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.295031626 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.476540275 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.312290661 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337498056 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.812103046 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.603721297 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300568023 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336691341 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.064662062 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.641134343 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.351093162 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.294186661 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.295092223 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.72892993 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.415717192 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.297979717 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336380552 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.295792174 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.581519651 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.313997661 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.296768509 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.300407355 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.030989051 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.300030914 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.001465937 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.30073093 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.28205818 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.296251901 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.295369697 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.875116445 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.097613949 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.320310815 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.296836341 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.300839706 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.299038003 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.297788105 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.337957971 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.847969206 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.414018656 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.315723814 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.29980568 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338727376 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.297827458 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.385816742 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.319481457 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.687133152 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.355816453 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.792247615 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.004802128 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.302669889 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397011123 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.420075734 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.299170976 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.299245003 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.298529436 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.297682018 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.411857417 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.299324253 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.710438641 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.479343754 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.318531878 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.779476151 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.403666117 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.299307717 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.713409859 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.304081053 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.299623505 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.065172878 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.398175288 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.300325759 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.297616925 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.299684695 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.714321745 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.005619525 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.576472278 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.304078567 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 23.533318163 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.324000494 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.833397232 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.887604932 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.025826402 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.304779642 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.415476003 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.482219399 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.320320064 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.299810045 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.771898325 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.304728033 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.35988123 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.301666329 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.842470858 seconds)
  done (took 393.487190135 seconds)
done (took 628.117294693 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.273722688 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.273784698 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.274718352 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.273629722 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.273904917 seconds)
  done (took 12.568576063 seconds)
done (took 13.766851671 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.605149858 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.637884458 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.387662472 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.603716855 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.357757423 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.625836412 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.550961879 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.342852458 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.498144526 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.376736673 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.481704008 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.344702615 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.34002115 seconds)
  done (took 20.352205409 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593598214 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.317170879 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398971501 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.576621894 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.354545951 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.593626117 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.640256231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.318309108 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453688761 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.325478908 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.325873135 seconds)
  done (took 19.098445319 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.616801647 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.317742212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.40337159 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.572340127 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360070284 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.59928152 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.631314504 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.318883178 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.477523916 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.327441269 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.325513633 seconds)
  done (took 19.149949165 seconds)
done (took 59.80013578 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.341962437 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.404298495 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.33853097 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.319611748 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.340486372 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.320209366 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.320754701 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.339106401 seconds)
  done (took 11.925389651 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.322076518 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.322904045 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.319914349 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.320869126 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.320165128 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.322452241 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.32069879 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.320511614 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.320925929 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.322566557 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.32117976 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.320698522 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.321591558 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.320930605 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.320857426 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.32185619 seconds)
  done (took 22.342379308 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.322689215 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.321252237 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.319517927 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.321834133 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.321348724 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.320820335 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.321762627 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.320795109 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.321653215 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.321091205 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.320792475 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.320921015 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.320687001 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.322207697 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.321264027 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.323342437 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.322296276 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.322051303 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.32608303 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.322066747 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.322962071 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.323760393 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.322216732 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.322724743 seconds)
  done (took 32.929340045 seconds)
done (took 68.397035408 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.306807541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.314556009 seconds)
  done (took 5.823576509 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.383615121 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.381361658 seconds)
  done (took 3.969199233 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.323524425 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.324093413 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.32382449 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.323293882 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.323346227 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.322900298 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.322770135 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.322385391 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.323278931 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.322918869 seconds)
  done (took 14.434110753 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.323571767 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.32284092 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.323560419 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.323181272 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.323468282 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.324663204 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.324512916 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.324085973 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.323306179 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.323142217 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.325495791 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.32321389 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.324151742 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.325763909 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.32452783 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.324728954 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.325505678 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.325329812 seconds)
  done (took 25.039239533 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.337663711 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.344362077 seconds)
  done (took 3.887973277 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.452862314 seconds)
    (2/7) benchmarking "second"...
    done (took 1.366869965 seconds)
    (3/7) benchmarking "month"...
    done (took 1.430798085 seconds)
    (4/7) benchmarking "year"...
    done (took 1.421635577 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.367158634 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.346413601 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.366269159 seconds)
  done (took 10.95769428 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.326722857 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.563297638 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.686535283 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.362261983 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.327331686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.331943788 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.539087694 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.331964876 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.33551454 seconds)
  done (took 14.009630745 seconds)
done (took 79.325564071 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.308174188 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.373017395 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.343367377 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.347629596 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.657870883 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.346146449 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.314549057 seconds)
done (took 16.897118293 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.283656197 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.288922995 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.291881346 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.329711931 seconds)
  done (took 10.400590095 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.321001646 seconds)
    (2/2) benchmarking "read"...
    done (took 1.640964067 seconds)
  done (took 5.166801855 seconds)
done (took 16.774758594 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.326396359 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.326966615 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.325852941 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.325405033 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.326729675 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.327568875 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.327026015 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.32580005 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.329048831 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.328454671 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.327505106 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.327439968 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.326626746 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326274521 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32626639 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327991917 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328732338 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.327967592 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327747963 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.327453547 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328882879 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328934768 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.327058696 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.329120144 seconds)
  done (took 33.063408081 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.327538057 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.327755456 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.32824406 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.326875277 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.329411253 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.327120036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.328562118 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.327381148 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.32823613 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.327762384 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.329631466 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.329405749 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.329841206 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.328798774 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328539909 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.329442384 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.32828772 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32941956 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328696077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.329359693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.329314994 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329285587 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.330034808 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328040906 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.328451948 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.331250901 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.329313155 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.330990411 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330953166 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.330044749 seconds)
  done (took 41.077226238 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.332035541 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.329280159 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.329261474 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.329133357 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.331703629 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.330392005 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.329990831 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.328782571 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.329947051 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.33079488 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.330528735 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.329635489 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.32976685 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.330043031 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.331706115 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.331245111 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.329135575 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.32985188 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.33050042 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.332377261 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.329295467 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.329630974 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.329497011 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.330350068 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.329200068 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.330920096 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.330380163 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.332239278 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.331650276 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.331184177 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.331986732 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.331725468 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.330034042 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.331418736 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.330990598 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.332421785 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.333720895 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.334883789 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.332094266 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.330730594 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.333594552 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.330616953 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.330940528 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.331036263 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.331522834 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.332153227 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.334228014 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.332111881 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.331695913 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.333469726 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.333140126 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.332960951 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.333147467 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.333137238 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.332767412 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.334675895 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.331008979 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.331988465 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.332379357 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.333620644 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.333802808 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.334255866 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.333818211 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.333606904 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.334289942 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.333547027 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.333227397 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.333786346 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.332940359 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.334019382 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.335768466 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.333557822 seconds)
  done (took 97.098727955 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.335166952 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.335453114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.333809496 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.33586974 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334538037 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.334378428 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.333724327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334044889 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334905445 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.334389293 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335214915 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.335226189 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333408574 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.333928352 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335710575 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.335359034 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.334730818 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334538985 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.333637414 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.333529193 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335802854 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.334651065 seconds)
  done (took 30.575696905 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33670425 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.335371671 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.33653072 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.335997244 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.336176231 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337009037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.334796153 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.335971613 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33515587 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33717353 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335048204 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335622446 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.338923437 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3356613 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336834427 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.338004892 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337528641 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.33906452 seconds)
  done (took 25.2719751 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.33697738 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.336489839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.33699732 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.336595584 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.335933543 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.339651054 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.338797324 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.338511607 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.337755636 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.33809175 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.337939863 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336281565 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.337222329 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338279899 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338417661 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.336599489 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.338272301 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337232886 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.338758603 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.338365797 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.338944936 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.338108845 seconds)
  done (took 30.645413452 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337437725 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.340675287 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.339534984 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.337762488 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.337341735 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.338140757 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.340204211 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.337575625 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.340109464 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.339554106 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338531196 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.33835495 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.339454931 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.337296055 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.340906785 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337730539 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.339081988 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.338770931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337639011 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.339374642 seconds)
  done (took 27.991136397 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.338987715 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337346611 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.338637299 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339069697 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339929621 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.339962458 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339971229 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.339223797 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340498564 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.339437697 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.338524824 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.339499296 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340087612 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.339048822 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339335643 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340515528 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339615023 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.340541309 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.338845543 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339944108 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.340266069 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.339266289 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340265083 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339846089 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.341282082 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34147993 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340589504 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.341687088 seconds)
  done (took 38.732611917 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.34246556 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.34061333 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.341677001 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.34326649 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.343770455 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.341836912 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.342183824 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.342566095 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.341622938 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.341633118 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.341294587 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.342575482 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.341204725 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.342948997 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.34391996 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.34194568 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341614815 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.344244486 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343371858 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341492721 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.342677932 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342748824 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.342966915 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.341486076 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342686191 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.344879425 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.343422027 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.342803254 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343087705 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.342893062 seconds)
  done (took 41.495662963 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.371924295 seconds)
    (2/2) benchmarking "in"...
    done (took 1.362357176 seconds)
  done (took 3.955050313 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.343792238 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.345553441 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.342723838 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.342679754 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.34480605 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.344685679 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.343275529 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34309458 seconds)
  done (took 11.972670082 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.334605013 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.346631645 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.344842068 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.343887906 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.34237066 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.334054564 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.345480937 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.371530161 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.335062298 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.335524045 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.335236033 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.337170128 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.339255185 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.33904377 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.336627623 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339303856 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.368698198 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.344784294 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.344150879 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.344818989 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.344454913 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339967939 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362177248 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.370569211 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.336146664 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.344130658 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.366633691 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.371199933 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334318871 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.341641194 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.360700161 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.347230162 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.34688594 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.346050583 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.347343721 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.346886174 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.348049866 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364804057 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.343665202 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.372813665 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.348501893 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.347430025 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.338838425 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.340669872 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34088039 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.370179746 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.347204975 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.348374408 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.338027312 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.338378268 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.347607975 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.338363237 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.35011819 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.342224171 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.363545332 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348541245 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.374380727 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.33861814 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.338925035 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.346561106 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.372754194 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.367139007 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342650293 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.371292913 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.341654191 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.342237518 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349864647 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.376148614 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.350219276 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.348434171 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.346771632 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.373725475 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.370797388 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.350357919 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348890905 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.34883463 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.341110172 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.349697643 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.347003239 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.369987606 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.372403871 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348233314 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.34269552 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341908225 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.341323538 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.349703563 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.34916051 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.348214488 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.339775773 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.348487409 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.376064301 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.349488798 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.341591931 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.3421352 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.342818141 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.350898124 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.340466242 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.343914939 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.35368249 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.350709852 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349833531 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.342122887 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.343694994 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.354054038 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.351528613 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.349724181 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.378792213 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.342405822 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.350574802 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.377826903 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.353106835 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.342262014 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.345458779 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.352498119 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.343278084 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.345911961 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.352942969 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.344163191 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.354032786 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.353511523 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.344617552 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.348598147 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.376585738 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.352901569 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.34343753 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.353500046 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.350593538 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.348100992 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.377641406 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.352028216 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.353274503 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.34508794 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.355444425 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.343676798 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.352522839 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.34476312 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.354176705 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.354479745 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.351548681 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.34461821 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.347268159 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.346024304 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.347581524 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.34814783 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.354613014 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.345843161 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.355763744 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.370050211 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.34614839 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.348860082 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.355247602 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355190383 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.345691903 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.353946282 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.345353753 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356238403 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.344364803 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.354979973 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.355971872 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.353939564 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356448295 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.344416055 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.347088931 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.355602896 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.350803199 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.369175219 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.356386696 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.356961254 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.35593789 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.345187249 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.354037081 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.346192074 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.348314473 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.354446251 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.355647666 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.355401284 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.349586848 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357768291 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.355655439 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355633623 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.347785975 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.347090793 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.356310976 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.355881049 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.381185784 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356280395 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.357358989 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.34914227 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.348251518 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355500345 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.347914165 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.35740474 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355871011 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.380694179 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.348960613 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.358981402 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.34870961 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.356500488 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.35277983 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.382467766 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.357806279 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356188502 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350270662 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.359273222 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.350276467 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.358611464 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.349350518 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.359391382 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.358830965 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.355601966 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.359467089 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.350112572 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351496832 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.359925919 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358921864 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356638945 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.349969508 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.359459421 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.348472248 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.350184004 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.360554837 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.357756088 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.35843472 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.385774772 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.35346649 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.375180174 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.37542181 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.350709604 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.361580604 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.353075856 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.374540715 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360029609 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.378971371 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.350847982 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360933931 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.379827785 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.352450762 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.356435313 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.386252236 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.35898495 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.348837237 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.362110164 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.361616773 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.360199616 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.361782098 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.352697398 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.363543741 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.359610515 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.386079542 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.351805819 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.363506995 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.354123963 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.361502135 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.353282829 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.35442822 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.354588004 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355767014 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.386149287 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.361052212 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353242127 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.363241287 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.361150407 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.361929636 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35342307 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.361593352 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.360515386 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.379105142 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.355677935 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.35462073 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.362554735 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.352573994 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.363116784 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.353948393 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36503564 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.392249239 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.362907195 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.381273684 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.364716813 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362059562 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.3787013 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.354280121 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.355034505 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.354890095 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.354685402 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.356204945 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.364520535 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354546809 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.366233429 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355836701 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.377898208 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.364116334 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.365041225 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.353219961 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.363833754 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.363657191 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.363991352 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.35355086 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.365610279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.357497101 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359657076 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.379219343 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.355544633 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364840588 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.38310021 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.358030141 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.35613706 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.355953689 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.355820968 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.357468509 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.367567453 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.35518415 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.363695368 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.35678635 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.356783472 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.357309167 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.362264059 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.389761301 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.356783783 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.365277624 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.365712103 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.354868427 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.357203502 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.365711228 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365475702 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.392710379 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.357173978 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.364591619 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.365379176 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.365286777 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.365436983 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.365694258 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.365670968 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.366205662 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.366747742 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.384288653 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.357158545 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361971884 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.389414446 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.365215044 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.367042306 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.355734617 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362347539 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.389930926 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.357962675 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.358483506 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.356842777 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.367649585 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.365763813 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.36621139 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.366990699 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.367321399 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.366963527 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.386161692 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.366689691 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.368918733 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.365675796 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.392445245 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367324019 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.393901453 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.358005904 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.367409718 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.369615809 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.360233708 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.357208669 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.359743201 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.369616139 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.3576504 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.367310998 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.367889644 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.359219903 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.360999659 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.367446187 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.358717776 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360698366 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369564029 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.357640164 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.36737162 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.367376039 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.357327078 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.365877846 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.366889789 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.355399156 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.359144828 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.356119737 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.365492049 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.357744681 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.366300692 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.357659878 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366136918 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.365656004 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.366059828 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.365062215 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.366820025 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.355635044 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.366297784 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360605774 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.390199616 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.356808656 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.359953944 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.356721602 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.365380552 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.392059731 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.358986682 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.367424995 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.369025625 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.358094811 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.359904946 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.369095013 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358199236 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.369860364 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.357452228 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.357059999 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.356615051 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.362663872 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.382988901 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.368499738 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.358099924 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.358676226 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.367893932 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.368235703 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.367860823 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.361498363 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.368812453 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.35950017 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.358507706 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.36841716 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.359715242 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370369459 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.357700985 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.358856188 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360299873 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.369984952 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.368107239 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368087557 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.356962992 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.357414432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.36773464 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.385260698 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.361446017 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.358140065 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.36701038 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.359099942 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359043201 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.357641865 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.358657993 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.360084587 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.369885384 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.360740178 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.358378116 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.356289773 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366579514 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.36572065 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.382960476 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.358807685 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.36846937 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.389229051 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36791316 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.358454536 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.358040575 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.360102434 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.367891636 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.368630807 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.358635006 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368102849 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.386445048 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.369029578 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.36145807 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.382922831 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.358135718 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370076166 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.368938268 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.359379715 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.371190826 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.359010875 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370313448 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.369718025 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.370416313 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.358497484 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.35987018 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.360655738 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.359391967 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.370061384 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362846359 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.383722028 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.36260411 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.370249199 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.369946248 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.369649213 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.370018965 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.357710224 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.367372263 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.359236318 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.363999382 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.382964589 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.360812571 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.368758355 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.368004543 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.360917786 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.357726242 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.369354325 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.36893227 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.360833261 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.360839916 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.36410524 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392602556 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.369217269 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361167152 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.361244472 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.370667069 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.366449893 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.3705227 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.358572443 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.37152837 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.39850438 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360629651 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.36242871 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366153597 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.392601823 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.370853677 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.370436948 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.363604026 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.363198186 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.370492407 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.371276663 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368664617 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.388027523 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.36229357 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.37275336 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.360654696 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.362819879 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.364726651 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394205377 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.37064357 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.362578688 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.368171652 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39657257 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.364399381 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.37208888 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.389761827 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.365025423 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.371728995 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.360207313 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.369987483 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.364459897 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.371570917 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.371359219 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.371881562 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.370360995 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.363200227 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366690307 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.389286672 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.376304304 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.371912862 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.363001023 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.365600404 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.375866604 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.371818291 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.377397466 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.372830304 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.372626552 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.374504082 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.364686686 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373675039 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.39568472 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.37466701 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.371411131 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.372617759 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.367535396 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.387082491 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365504543 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.374011586 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.37279915 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.373801095 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.366703532 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.375736027 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.375155028 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.36523405 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.364547043 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364806119 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.37573836 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.374708563 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.402130564 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.370797662 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.390416375 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.374291697 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.373979583 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367579606 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.373983819 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375861715 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.366892358 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.366101589 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375253178 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.376799636 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.375177179 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.365919716 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.376032123 seconds)
  done (took 812.370532177 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.375959037 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375456125 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373157608 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.376778442 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375588763 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.374879846 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.37589641 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.377373473 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.3764299 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.375599151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.376176483 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376312119 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.375937208 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.375094567 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376120172 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.375181083 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376534125 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.375493247 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.376458061 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.376284221 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.375371606 seconds)
  done (took 30.142545593 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.377362205 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.376304685 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.377269621 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.3771542 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.376448097 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.376698025 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.375664416 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376859777 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.377156606 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376949515 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.377516252 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379303553 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.376525383 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.377040417 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.377963456 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.377560662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.378917803 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376736298 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.377306561 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.380897139 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.37852399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.377779425 seconds)
  done (took 31.555049209 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.37682323 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.377888791 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.36835746 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.379726803 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.37713965 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.377339872 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.376870379 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.377695537 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.377918998 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.370014949 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.36828991 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.369601136 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.368173395 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.380481132 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.369908129 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.380872477 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.377494667 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.377536355 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.378614295 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.377682642 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.376149942 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.404527611 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.378531189 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.369574959 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.378949234 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.379977839 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.379306801 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.379661777 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.367918174 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.379195687 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.38055532 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.369791858 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.374305708 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.392712966 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.368654545 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.379325436 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.377311117 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.377955317 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.379150581 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.373101528 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.38100787 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.377125264 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.376362188 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.404921966 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.38023093 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.369033775 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.380817806 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.378971981 seconds)
  done (took 67.376832566 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.37995496 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.380659438 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.379926862 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.379667194 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.380839984 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.382842764 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.380041274 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.380710647 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.380385606 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.379137716 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.379171503 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.378041418 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.381208719 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.379388944 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.378531997 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.379331902 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.379859474 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.379241908 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.378814402 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.380226813 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.380206036 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.380417093 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.37747932 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.381319074 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.380718457 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.380379756 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.380083378 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.380803465 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.379453081 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.381138923 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.381238215 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.379767678 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.381314903 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.382153609 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.380326927 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.380716276 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.379700407 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.380954993 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.380688612 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.378477686 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.380451539 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.380607978 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.380555928 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.380065863 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.379604451 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.380468701 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.380651968 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.380514772 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.380850273 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.379732587 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.381056457 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.380594323 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.379487163 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.380398601 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.38154322 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.383107447 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.382462828 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.381028692 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.380824726 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.38094782 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.382344039 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.382417144 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.3818872 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.382172699 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.379285822 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.379975942 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.381094828 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.381368464 seconds)
  done (took 95.127212952 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.380791996 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.380813841 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380278383 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380124922 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379633989 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.379311893 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.379023528 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.380091545 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.38023566 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.381866688 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.381106898 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.382061609 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.379591328 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.38182211 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.380953577 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.380015932 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.380642045 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.381859918 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.38016268 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379005357 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.379613491 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.381405488 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.380254939 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.380612584 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.38077049 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.379063295 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.380931321 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.380488463 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380168723 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.380154672 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.380319449 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.382481288 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.380129925 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.382118288 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.379645846 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.380131995 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.379420666 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.38081341 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.379828823 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.381264666 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.380071457 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.380634174 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.381207007 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.382048167 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.381369445 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.381909071 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.381088105 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.381736671 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.382642442 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.381540731 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.381538519 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.385162176 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.381578578 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.382290681 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.383175392 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.383885341 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380063144 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.381703467 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.382745195 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.381857129 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.383232165 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.38318031 seconds)
  done (took 86.879885353 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.383683325 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.382501256 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.384794909 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.383014576 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.38273682 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.38346619 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.383652848 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.38190351 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.383428081 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.383855568 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384139136 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.383488091 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.384925122 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384769336 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.383508171 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384727383 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384465861 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.385449969 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.386225619 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.385344193 seconds)
  done (took 28.936052299 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.385758628 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.383876571 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.384428958 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.385509473 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.384419881 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.386247119 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.385127858 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383594866 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386276125 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.385419926 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.385450241 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.385841351 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.385729735 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.385019313 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.385457958 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.386439075 seconds)
  done (took 23.422237502 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.385319158 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.385269515 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.384600587 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.38409423 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.385377418 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.386016481 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.384602667 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.384675316 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.386037145 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.386268661 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.384743959 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.385752953 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.385734407 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.384138584 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.383900806 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.386689632 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.384100731 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.385355926 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.383476138 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.385931169 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.387502996 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.385727688 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.386265442 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.386450798 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.385233207 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.386638312 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.385370981 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.386272179 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.385554497 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.387020002 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.385854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.387633498 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.386979101 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.387225736 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.385789636 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.3879595 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.386363059 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.386312845 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.387030513 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.387932343 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.386466702 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.386425917 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.387134711 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.386265255 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.387670363 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.387355055 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.387838998 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.387884813 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.387666448 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.388322843 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.387578967 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.388355843 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.388738739 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.389755214 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.388618977 seconds)
  done (took 77.508982811 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.389179276 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.388605185 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.388828175 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.388813402 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.389106046 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.38933861 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.389475689 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.390676442 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.389884219 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.390151328 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.38895171 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.390561372 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.388832312 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.390610158 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.389131744 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.390196271 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.390055952 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.388640283 seconds)
  done (took 26.272904881 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.389831279 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.38942934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.38973165 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.390211172 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.389066793 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.390972554 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.390292469 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.389897691 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.388416937 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.389231712 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389532315 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.391047806 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390045325 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.390457555 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.391605852 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.389947116 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.387341708 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.389969412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.389089309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.389052156 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.390383378 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.390209195 seconds)
  done (took 31.837757629 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.380467578 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.378275524 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.379618445 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.388222705 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.403864631 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.379027711 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.378864094 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.379562097 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.392555432 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.421104076 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.41735178 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.406722669 seconds)
  done (took 17.966330322 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387650004 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390712486 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.390037607 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389231782 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391056703 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392114112 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390722925 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391177084 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390487446 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391430602 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38947679 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390699837 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389986615 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392009424 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389729165 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391162548 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390817844 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390335958 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392788762 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390226624 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390423896 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391029874 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390344093 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389890478 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388828149 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391070151 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390167316 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391502779 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392309448 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389527292 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389750841 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391943695 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389943962 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390281161 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391976156 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391037779 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390026419 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390374018 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391698015 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392200533 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.390956475 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391209106 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38946669 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391244136 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39049251 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390644946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391533085 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390098912 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391409269 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392887612 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389946185 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391386506 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390538069 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392023726 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39272918 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391357069 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392288509 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391553814 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391502149 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391298281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391479447 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391515751 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391912529 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393392957 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392232756 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391259987 seconds)
  done (took 93.067775439 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391697642 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391869463 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391017414 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392392491 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393544931 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391354052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391309812 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392130412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391536697 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391420661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392677093 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394405116 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391695066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391320663 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391080668 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392512853 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39127031 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392213669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393838029 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392766264 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391973932 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391781431 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392528208 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393075702 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392750439 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392391694 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394772864 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390894398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391199306 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391841895 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394264185 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390618107 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39211605 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.395510645 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392807729 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392736417 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394413118 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392033593 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393765727 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391644614 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393650806 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392726883 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392623418 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393460523 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39455219 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392112163 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39230943 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393807406 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394693753 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393434751 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394024388 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393918647 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392934892 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394189311 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393050413 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393501404 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394162003 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394314912 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39409238 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393075618 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394231753 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395282348 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396145378 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393254368 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394294128 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393400135 seconds)
  done (took 93.199521528 seconds)
done (took 1898.7517887 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.576362915 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.537134917 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.383765095 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.383323998 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.382605515 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.389946098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.388860055 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.383069894 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.382447401 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.381395158 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.384031684 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.616091679 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.388940264 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.380924481 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.383636071 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.512231624 seconds)
  done (took 28.119190062 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.412113014 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.410185364 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.513742662 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.407052226 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.410946608 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.621559198 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.452579306 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.391660071 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.577306338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.410447145 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.408854572 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.415329888 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.389763004 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.39205243 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.412419102 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.602009768 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.670704587 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.38328062 seconds)
  done (took 30.548113316 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.839118774 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.401280463 seconds)
  done (took 5.505441474 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.406031099 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.387668132 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.389518389 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.403857429 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.378410237 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.398152085 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.386283922 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.383065195 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.401399279 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.522997268 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.409743582 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.418509513 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.406037852 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.386992244 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.415502702 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.438073047 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.6162787 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.398336322 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.398008947 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.398769876 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.405424846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.526193796 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.451961241 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.417800072 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.514901492 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.401928685 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.397030644 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.416694435 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.602846482 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.401076192 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.385378888 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.38961009 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.389960842 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.401206148 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.025051794 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.404121631 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.413085753 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.403121258 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.396298769 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.591019336 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.388628698 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.400315711 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.406501251 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.004144911 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.526761879 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.518623926 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.413861203 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.394699025 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.388014613 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.48685917 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.394381661 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.392088959 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.469888575 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.371391754 seconds)
  done (took 89.502196879 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.420462709 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.381394395 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.631034161 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.402885091 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.382603347 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.384081292 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.401908239 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.667788215 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.453922761 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.384259175 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.798209304 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.002993203 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.405818569 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.519033219 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.77401194 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.416886806 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.38226086 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.381213165 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.382518517 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.387705398 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.021830078 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404127676 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.399461151 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.5358057 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.433248317 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.979475048 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.395221269 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.414698178 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.386300274 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.381295241 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.972164281 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.397439222 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.395167387 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.38209056 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.757751176 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.80463757 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.792901109 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.400576015 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.411492033 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.390187537 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.391201285 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.967492476 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.812860735 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.404386873 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.381478412 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.967567838 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.40401432 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.38730652 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.394674968 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.710926691 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.380945223 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.381902517 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.38852955 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.404411401 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.381935185 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.425197775 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.43586433 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.978721275 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.402247297 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.38682373 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.4357808 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.384595522 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.386432734 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.3803345 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.387344052 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.785130919 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.10123281 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.383730203 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.784045391 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.968654863 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.399889315 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051282755 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.402440464 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.424160909 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.47277212 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.38245201 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.396226781 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.976359239 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.410460305 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.382284094 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.768068209 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.397975801 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.775096919 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.397910495 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.384876931 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.05850001 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.402049903 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.47642722 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.381732891 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.401698433 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.404616753 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.40136264 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.762850815 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.41936636 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.384654972 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.383547737 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.42175624 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.383756262 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.383730666 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.394046405 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029574477 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.411816795 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.383740728 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.402157265 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.402171714 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.386281584 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.387436298 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.388762166 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.726844734 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.38590099 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.409974823 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.384231636 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.384466554 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.405809874 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.542362594 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.389885147 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.697518489 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.403115208 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.384796171 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.39876254 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.385234558 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.417964957 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.39745541 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.386922167 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.383947031 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.753637059 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.409771315 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.387872294 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.385175243 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.399606915 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.386997693 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.401117753 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.525380893 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.390105287 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.188266661 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.435850736 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.42357561 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.384181645 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.394257394 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.383595632 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.408708722 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.386970627 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780286735 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.778516439 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.117465498 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.386254223 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.404337632 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.263930442 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.490446431 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.634326183 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.409871398 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.386687081 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.722808907 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.099469226 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.387628433 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.386393224 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.391443651 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.749278169 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.388295689 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.771999743 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.007493554 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.40618874 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.399636087 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.190962491 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.342321221 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.407074992 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.387272622 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.773077099 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.400156114 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.385660393 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.385629329 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.389671241 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.397783855 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.406917829 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.395293559 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.388657204 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.386792086 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.655541719 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.640932294 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.407904801 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.387116799 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.976812875 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.48890023 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.386709101 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.392303503 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.392748507 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.386581353 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.426164189 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.38503663 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.459594542 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.386091045 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.404684092 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.991638302 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.399796644 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.387899781 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.640762394 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127251522 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.40916273 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.384227256 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.386601366 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.808826636 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0044402 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.449862997 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.692977998 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.416355192 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.43524707 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.390506414 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.475929581 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002620723 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.403016441 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.40398192 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.258843283 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.405180927 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.829117238 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.385149954 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.386018706 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.041591414 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.407232446 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.395623751 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.390642321 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.405227508 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.786703048 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.388923138 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.418108269 seconds)
  done (took 518.973225426 seconds)
done (took 673.913069019 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.391107115 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.390564437 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.393637696 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.39535102 seconds)
  done (took 10.845667389 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.405072086 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.391786115 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.406966831 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.396224447 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.406205013 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.3983197 seconds)
  done (took 9.679606999 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.392873712 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.389351152 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.394500184 seconds)
  done (took 8.450173146 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.638942418 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.406604383 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.7458129 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.405358997 seconds)
  done (took 9.474232646 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.406094354 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.40713088 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.406947852 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.407582041 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.406496094 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.404847591 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.405367919 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.408175184 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.408192131 seconds)
  done (took 13.936266767 seconds)
done (took 53.660043261 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.432257086 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.281898592 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.661405535 seconds)
    (4/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.369873959 seconds)
    (5/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.37216239 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.83267975 seconds)
    (7/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.368868705 seconds)
    (8/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.436245164 seconds)
    (9/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.419391925 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.428594821 seconds)
    (11/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.364716993 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.297633984 seconds)
    (13/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.37078761 seconds)
    (14/192) benchmarking ("perf_sum", Float32, false)...
    done (took 2.26879206 seconds)
    (15/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.37147448 seconds)
    (16/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.557653993 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.422614755 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.3937636 seconds)
    (19/192) benchmarking ("perf_sum", Float64, false)...
    done (took 2.27472715 seconds)
    (20/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.978275629 seconds)
    (21/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.366453867 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.732169734 seconds)
    (23/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.837406354 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.764996362 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.232386377 seconds)
    (26/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.370104552 seconds)
    (27/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.149555007 seconds)
    (28/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.66595218 seconds)
    (29/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.997057268 seconds)
    (30/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.431414733 seconds)
    (31/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.976559937 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.829053675 seconds)
    (33/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.289082755 seconds)
    (34/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.389081607 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.372185286 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.191949781 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.563565258 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.625718687 seconds)
    (39/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.567152498 seconds)
    (40/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.37191636 seconds)
    (41/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.365688128 seconds)
    (42/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.845645681 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.273895645 seconds)
    (44/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.656645704 seconds)
    (45/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.373484698 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.762312808 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.290762118 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.373899539 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.385055483 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.29308603 seconds)
    (51/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.39153126 seconds)
    (52/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.88164614 seconds)
    (53/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.987831646 seconds)
    (54/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.89925487 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.944554429 seconds)
    (56/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.373573925 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.232378996 seconds)
    (58/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.376550185 seconds)
    (59/192) benchmarking ("perf_sum", Float64, true)...
    done (took 2.236550973 seconds)
    (60/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.593913432 seconds)
    (61/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.374065223 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.374126112 seconds)
    (63/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.379107677 seconds)
    (64/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.437063782 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.790750412 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.997602197 seconds)
    (67/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.386088608 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.408322881 seconds)
    (69/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.851072845 seconds)
    (70/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.324427992 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.712911965 seconds)
    (72/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.6124247 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.861409191 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.371505074 seconds)
    (75/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.589928406 seconds)
    (76/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.14231137 seconds)
    (77/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.160641666 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.396084599 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.375575223 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.86497753 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.911327483 seconds)
    (82/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.425623492 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.731779281 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.854145932 seconds)
    (85/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.438853696 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.62407988 seconds)
    (87/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.388243767 seconds)
    (88/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.900555135 seconds)
    (89/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.73744344 seconds)
    (90/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.923702235 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.376913869 seconds)
    (92/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.270849258 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.417914349 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.862485935 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.456488938 seconds)
    (96/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.370341827 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.443614669 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 2.261074542 seconds)
    (99/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.958078037 seconds)
    (100/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.210916086 seconds)
    (101/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.900681022 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.311013488 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 2.254855954 seconds)
    (104/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.655118282 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.292118468 seconds)
    (106/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.455031191 seconds)
    (107/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.375273174 seconds)
    (108/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.3059577 seconds)
    (109/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.3961961 seconds)
    (110/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.220582995 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.892823779 seconds)
    (112/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.549617995 seconds)
    (113/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.378128124 seconds)
    (114/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.557649787 seconds)
    (115/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.969801112 seconds)
    (116/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.734260506 seconds)
    (117/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.371039837 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.445054754 seconds)
    (119/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.374526122 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.864063754 seconds)
    (121/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.937654503 seconds)
    (122/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.379425472 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.423086398 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.892091556 seconds)
    (125/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.387518555 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.157049564 seconds)
    (127/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.833964402 seconds)
    (128/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.524562122 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.641961456 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.836181828 seconds)
    (131/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.952216142 seconds)
    (132/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.436734302 seconds)
    (133/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.166080873 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.284755974 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.716570334 seconds)
    (136/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.233565442 seconds)
    (137/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.277282398 seconds)
    (138/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.862009729 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.443976761 seconds)
    (140/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.385778187 seconds)
    (141/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.441220467 seconds)
    (142/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.376804595 seconds)
    (143/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.447905706 seconds)
    (144/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.808776891 seconds)
    (145/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.378751697 seconds)
    (146/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.381263833 seconds)
    (147/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.377323773 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.380690764 seconds)
    (149/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.263099576 seconds)
    (150/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.552775524 seconds)
    (151/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.456831959 seconds)
    (152/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.255148101 seconds)
    (153/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.657574206 seconds)
    (154/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.524938795 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.463202565 seconds)
    (156/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.44060338 seconds)
    (157/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.372043545 seconds)
    (158/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.46797534 seconds)
    (159/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.164823034 seconds)
    (160/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.176905909 seconds)
    (161/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.432799132 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.403357959 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.404932533 seconds)
    (164/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.904432043 seconds)
    (165/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.819414912 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.800200686 seconds)
    (167/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.826096416 seconds)
    (168/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.868186997 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.288378793 seconds)
    (170/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.833783482 seconds)
    (171/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.724055022 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.408348031 seconds)
    (173/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.397077936 seconds)
    (174/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.836824153 seconds)
    (175/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.406037201 seconds)
    (176/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.017412852 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.73837577 seconds)
    (178/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.37458929 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.387513022 seconds)
    (180/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.373977126 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.287397771 seconds)
    (182/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.872775463 seconds)
    (183/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.645207582 seconds)
    (184/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.182633079 seconds)
    (185/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.981260639 seconds)
    (186/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.464433123 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.439113085 seconds)
    (188/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.427867069 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.383112598 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.393951713 seconds)
    (191/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.382742338 seconds)
    (192/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.436626864 seconds)
  done (took 396.03875925 seconds)
done (took 397.315138004 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.470850588 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.3128412 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.448174057 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.446737667 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.469387422 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.402149058 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.495699457 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.433885854 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.460818759 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.459643855 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.417387689 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.434605381 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.452037573 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.463008013 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.535521416 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.431695034 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.447494733 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.457139808 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.474222296 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.483157542 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.468637968 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.471535152 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.458240559 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.447212019 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.473366243 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.472952418 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.450072402 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.403435348 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.436090687 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.472467961 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.413890933 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.452155289 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.466215089 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.46463619 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.467113412 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.458591835 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.472638126 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.31602415 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.465950554 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.462658158 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.432588226 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.466141562 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.436253884 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.437038115 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.464125676 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.461008352 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.47374214 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.538543231 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.409578652 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.413181135 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.480408946 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.483483797 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.430251355 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.407459309 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.424877553 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.543061301 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.455609322 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.473738875 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.432532729 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471863142 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.540244181 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476120263 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.484406121 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.474747371 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.432498169 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.453746928 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.456185902 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.488894993 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.432598853 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.471062677 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.471418931 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.433063641 seconds)
done (took 116.032607879 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.540626928 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.414269408 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.596502138 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.423990159 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.58478567 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.559386912 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.426417473 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.426402541 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.426259703 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.220343456 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.426603198 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.426612299 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.418663839 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.426761954 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.540482129 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.42686759 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.425072796 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.127344213 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.42729624 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.562060369 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.414284938 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.424880782 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.42722033 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.233855072 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.41703735 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.41354304 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.564020079 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.425787526 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.144984137 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.414040486 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.414613837 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.145557106 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.565639105 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.445296838 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.435523732 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.43611048 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.585684478 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.444438576 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.538425233 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.538307869 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.599768445 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.469098615 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.413771939 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.411342571 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.428843094 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.427735011 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.426971942 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.453208045 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.416164671 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.427764818 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.129728931 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.440219725 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.427397779 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.429625972 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.428454396 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.456317937 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.429509542 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.427771106 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.567740378 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.429212658 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.54460831 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.233214097 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.220903795 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.430113823 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.414099133 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.429589848 seconds)
  done (took 114.462756586 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.48762376 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.495556015 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.532953499 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.441140211 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.468930464 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.535843589 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.44095674 seconds)
  done (took 11.69228096 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.426123468 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.430586974 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.47266098 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.472916164 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.427649995 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.599732026 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427835626 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.432478847 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.428804747 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.483256264 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.427335778 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.430208097 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.439060471 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.420212328 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.472573579 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.430587326 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.544058562 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.42031536 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.426775932 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.572362274 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.428501607 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.438563561 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.480683159 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.431092572 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.428981845 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.425416545 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.206891375 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428026704 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.427691601 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.430452017 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.429809442 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.491858357 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429414515 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.411612632 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.429727582 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.546185326 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.428580257 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.430879641 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.429027105 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.419458779 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.429458857 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.430430829 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.429743954 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.429269848 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.429337993 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.444270269 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.430277157 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.42889587 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.429359461 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.430124224 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.482115808 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430448671 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.431141512 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.430289066 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.48337923 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.439594485 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.43054602 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.430048059 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.429282295 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.429627189 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.574772441 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.474077607 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.431362274 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.47355598 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429058648 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.432418639 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.43080212 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.430217586 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.515248425 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.433229102 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.473900116 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.430352492 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.608655908 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.446312341 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.431599575 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.424771394 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.425978591 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.430819489 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.419273333 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.42910331 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.430833247 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.423632881 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.428279111 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.430841916 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.432251496 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.583646696 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.551633736 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.431030962 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.43757303 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.433916031 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.432018228 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.482948395 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.430738424 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.431546606 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478143453 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.543008855 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.488844006 seconds)
  done (took 146.802089582 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.435452107 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.43596349 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.427058537 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.45199697 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.43916059 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.422679367 seconds)
  done (took 9.910650816 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.423917235 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.432954935 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.433224975 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.432467419 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.432039002 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.432124179 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.433060628 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.423675581 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.433576862 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.432883309 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.431532914 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.433552429 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.433842632 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.432538899 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.433023022 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.434306712 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.43442583 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.434472356 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.435089639 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.43502936 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.42290172 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.434346003 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.434789189 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.425993066 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.434602811 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.435171443 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.44787716 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.438017085 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.435634377 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.433132095 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.458556333 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.436158565 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.426443389 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.42821621 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.435812681 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.427517147 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.435350163 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.435668977 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.43703133 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.434146754 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.435569841 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.438659003 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.43676466 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.43524881 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.427428967 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.427846771 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.436887747 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.451735129 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.436011686 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.439552472 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.43780786 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.438138134 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.435406393 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.43560051 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.43281233 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.448569626 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.438137833 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.435351591 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.437267743 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.428880853 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.437535518 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.435625744 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.428098158 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.438340445 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.437409604 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.437536165 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.428691816 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.438400139 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.437588603 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.43787896 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.439065509 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.437825276 seconds)
  done (took 105.61586045 seconds)
done (took 389.774693572 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.921480555 seconds)
  done (took 4.225302064 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.442490912 seconds)
  done (took 3.748759664 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.515443798 seconds)
  done (took 21.821300491 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.533755965 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.487808112 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.448028205 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.427645743 seconds)
  done (took 11.201676636 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.479253056 seconds)
  done (took 3.78373379 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.435303881 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.45090552 seconds)
  done (took 6.193256323 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.672108745 seconds)
  done (took 3.977212832 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.089822411 seconds)
  done (took 4.394549369 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.467129736 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.451893841 seconds)
  done (took 6.229897962 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.397183515 seconds)
  done (took 3.702317923 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 23.623474674 seconds)
  done (took 24.930053278 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.453217766 seconds)
  done (took 3.760566444 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.476636523 seconds)
  done (took 3.782203679 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.898532631 seconds)
  done (took 6.204722833 seconds)
done (took 109.26272092 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.423718846 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.431829655 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.423649225 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.423761014 seconds)
  done (took 11.008892077 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.492802157 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.493496221 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.498884622 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.497143116 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.498755893 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.496053041 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.465829559 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.46619286 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.495354794 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.496565868 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.501119367 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.499478826 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.494503872 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.468430202 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.492933081 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.497918396 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.492595586 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.497017846 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.467963861 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.497883265 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.443647823 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.490230666 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.48359212 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.432437808 seconds)
  done (took 36.967535285 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.924778609 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.493344967 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.575929227 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.464414358 seconds)
  done (took 7.758291651 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.557921673 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.560911701 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.569043956 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.622046871 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.649067287 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.559710325 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.440923045 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.435828986 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.42169527 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.553094822 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.581972222 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.51009554 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.80475887 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.407503315 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.798014998 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.406527743 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.410069148 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.533626125 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.608359198 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.60989139 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.401237164 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.536728956 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.537333747 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.50511733 seconds)
  done (took 38.311758956 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.40219222 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.411252428 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.406063211 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.411312786 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.408098431 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.406108284 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.397212355 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.395365825 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.398300207 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.398848073 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.397486116 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.403682896 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.39426242 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386215422 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.393015126 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.386722496 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.404080353 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.392950375 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.404209834 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.395304756 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.388411973 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.395317339 seconds)
  done (took 32.044587626 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.369381837 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.368178212 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.3666787 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.850605806 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.369114097 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.368780773 seconds)
  done (took 14.950946222 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.443726806 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588897581 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.374301065 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.707706614 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.809384853 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.392853064 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.375762751 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.609453979 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.906379299 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.90425833 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434168455 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.44548732 seconds)
  done (took 20.251874256 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.383844531 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.371228375 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.37743999 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.387640036 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.425077441 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.395720309 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.379552351 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.367348905 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.428885844 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.444536898 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.39517617 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.426122043 seconds)
  done (took 22.0434557 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57961545 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376519612 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375493788 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40470312 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394740732 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380428574 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376049255 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318647027 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.403572491 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661155958 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388399422 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62550398 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378659422 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384649335 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384027132 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.343578729 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385149517 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984833535 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388096841 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379211086 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07308593 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384290952 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408217304 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.585347723 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41649412 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385698847 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.641720079 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378808621 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684802762 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624201238 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641873308 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386322622 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665869944 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250291192 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586653066 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595043531 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408812746 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382819185 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.348486938 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.406893143 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396183728 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388467465 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635941372 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38949983 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381125485 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379106468 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322585256 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.41091451 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.3801991 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381085325 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630992824 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597503544 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.38893146 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381508482 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438785532 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401685959 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 2.380744741 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505985984 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407154064 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401868758 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38840437 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.403042723 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381322316 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388560555 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39196191 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.165444312 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.387591356 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389670688 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388149974 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388073799 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457828976 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389151386 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.450412138 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383013739 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383168312 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402019787 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406662492 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033576712 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392072386 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.387627189 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382638985 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383394445 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383383037 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.381510839 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383716323 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.34896095 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468344632 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.346251884 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44089969 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326449755 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602247076 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512675118 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08436439 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382422408 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.355051792 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381826707 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.383710053 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381531611 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456812163 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295822807 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405516592 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.251963414 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373006229 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.583918573 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377965087 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.346567679 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061275008 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39030038 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.406360428 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375083854 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.587552459 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.194319106 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645419544 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373677283 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484195802 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37591908 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.380040597 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375420532 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.150665143 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373074124 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717146855 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.335472826 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390014247 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567565656 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380987443 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398213493 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375381257 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392994139 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379061398 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.625538116 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400279365 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624664601 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.379033959 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374741582 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.381526077 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376911168 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.388849112 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37707507 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376887025 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65538093 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376758827 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390438611 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37691508 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.374898843 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.389961008 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 2.373603975 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377313657 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379379416 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393565994 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643951862 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464185892 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565586029 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463732106 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.379333319 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398847323 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.383156704 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.387297254 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379468185 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37700204 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382827145 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404128663 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374764038 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251782473 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400430693 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382889132 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395706553 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.396628913 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568535148 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386662366 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579837833 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.402454947 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394350435 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.386261527 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.384857246 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37674513 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625701003 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.390042524 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664205614 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.060947517 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25690232 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435133323 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.381014074 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.380388606 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.378522138 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381605577 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381399808 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384927035 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593217433 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654725138 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378488204 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.213290792 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39934966 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392721977 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.258229916 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632018468 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.389686161 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37781051 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.381777886 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377560236 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414045698 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62952567 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750027153 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.396170646 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380755858 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.159466314 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387190761 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379705608 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379477177 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510977853 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380918124 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415974218 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381648856 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379627624 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62982246 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385591659 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.403290355 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.378921812 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3941656 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380414534 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.40452343 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483790984 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.583017688 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401071139 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378971804 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396229352 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383280798 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275715388 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405317534 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.383168039 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385459151 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314380867 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418178106 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381719197 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652845916 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334697336 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399756517 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068686961 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.40126126 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201988499 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634281949 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387420121 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388700244 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.383237668 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663528248 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384033758 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509677595 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380622063 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402591512 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.36183546 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182116914 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413734955 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669519719 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312240505 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411088503 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389039555 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.436268913 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.411984164 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989097175 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399787163 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385755495 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392252499 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386803535 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404142001 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390144877 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404585236 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390888478 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390441273 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.076488455 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407332764 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.586738225 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652465796 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.695329085 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.392266047 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.389533738 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.389997058 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634652242 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385878102 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389869708 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.271910456 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.25375299 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.403735819 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388791133 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396003333 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401135454 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701121913 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.403774929 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.388947552 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413491818 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404612449 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388507482 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.382605213 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412253755 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386461265 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961647568 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.380725441 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402732387 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387479989 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405756261 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387626853 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.403117378 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201900042 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403230302 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381815451 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491203342 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.148618674 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387141101 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.356359783 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406421206 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390921115 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422563772 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401795852 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388901808 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.35898918 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379784446 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404843499 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386045051 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390869014 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646142473 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.404359353 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.386912231 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406201881 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089407471 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387330199 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402965253 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390385858 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425269165 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599589953 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591536058 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.653810046 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639473677 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999182624 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40643913 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39140837 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407577669 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594993262 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387686042 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.407392602 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.388792309 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232591641 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405561711 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276479718 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670984035 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390859369 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395930333 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391520619 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768168271 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390114773 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672260778 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38919956 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.40138747 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474603764 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389701467 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409553425 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407884112 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666064302 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39027579 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389250767 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412691062 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.390542069 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647131644 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.281725575 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978231109 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036242704 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392659326 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397305222 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324797333 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686726325 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391547447 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394466979 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391419369 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.401912273 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.425188238 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.400082981 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393315061 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770925398 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641279021 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277005325 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.662329273 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.438315632 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.263896124 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395715085 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39339595 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391365884 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612136236 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358498365 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323678144 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393998453 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582090176 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595843927 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.411772135 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758039823 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.402168252 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392933732 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392628993 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410804613 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.39792549 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642540499 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24510386 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411116986 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 2.394522117 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.393553211 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116749563 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.600920676 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415090827 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.367306554 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394716611 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650365171 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4062371 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417486999 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356693727 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681637135 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395544341 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.400851983 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653233408 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414306275 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485665994 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.276762225 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.394991731 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05777033 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.612511229 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500559986 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394734798 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331993325 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269431925 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.424719893 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992763421 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402486584 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409396382 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685600301 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.40308476 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409944511 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681863026 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.272227702 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396418007 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600102526 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.229569842 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165108863 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.412056287 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41576771 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.404478033 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397038873 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409453448 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414525214 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400224192 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.12852536 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417545013 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396621548 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435402049 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.409943304 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404417485 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.397351311 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39594115 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.406068202 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.38751237 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.390827323 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398691651 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541183215 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220342582 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426173215 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.01870489 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.730788643 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39835527 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411550783 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.376749182 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.270989393 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397632232 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397073737 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398489567 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393031536 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06948528 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.405937281 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.6541356 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406405017 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.609341419 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396626021 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397984274 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606425108 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419254061 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473234251 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.363544937 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421948251 seconds)
  done (took 1037.180495548 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41728452 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.389545982 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.394324438 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.455212636 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.416910898 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.414187343 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.416261217 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.471797953 seconds)
  done (took 20.651992344 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.395677481 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.395519949 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.409078931 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.401980733 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.413452623 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.912112867 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.39356809 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.401612797 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.428796989 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.408429478 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.410081819 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.064806267 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.415153595 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.405404922 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.408076945 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.403641742 seconds)
  done (took 32.944964027 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.520502708 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.705880916 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.995849222 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.481946609 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.431203441 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.392411659 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.075113327 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.410845226 seconds)
  done (took 31.292151899 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.404629197 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.402437587 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.405302841 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.402512686 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.406159916 seconds)
  done (took 8.299086869 seconds)
done (took 1315.014475866 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.404806732 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407098885 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.409607578 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407387517 seconds)
  done (took 6.908218138 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.362642966 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.367263979 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.386649727 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.386751864 seconds)
  done (took 9.78277012 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.109441803 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.888071175 seconds)
  done (took 5.275966421 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.912461531 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.941971446 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.938328004 seconds)
  done (took 7.074431257 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.692490496 seconds)
  done (took 2.97879525 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.39236132 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.409830673 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.140817158 seconds)
  done (took 8.220842195 seconds)
done (took 41.518975831 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404503087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.747623366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.541720343 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.394372443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.943576837 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.5411947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.969318639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.390617644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.389548114 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416415992 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.402234069 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.926269218 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.954309599 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.750377577 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.951960625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.75202544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.982600272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392981104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393676841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.409261626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.985995676 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.390223924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393686115 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421686776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.932030409 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.67459151 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393663727 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.768048844 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.3930145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409339002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.529989228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.391497753 seconds)
  done (took 88.615021021 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.394910608 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.412968463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.395944426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.395974647 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.405070199 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.394776677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.396516305 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.420046393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398058177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390317179 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.397086255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.406833618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.393453086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.410438689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.394700299 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.409295076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.395660945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.391011429 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409464442 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395277048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39659934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.410078797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412901791 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.409370461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.410325793 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41066923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.389490019 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.410684519 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.40987885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.396650259 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.410318236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.403410867 seconds)
  done (took 78.15939827 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39639783 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.422600909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.39765605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.396651164 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.396491215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.41806115 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.400596305 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.402187093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395699176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.401386757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414658201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.397578359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.417205412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.397489404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.418294608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.39881607 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.41259239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418451349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.413285879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41534193 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.396124278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396358408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397660562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414063857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402127746 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.416468719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.397637588 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.413147799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413743797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.398921156 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.418343095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.403317402 seconds)
  done (took 78.281629921 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.642166081 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.415323063 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.417538683 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.410132884 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.418917548 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.415937043 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.408274149 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.646094047 seconds)
  done (took 15.05957495 seconds)
done (took 261.392993816 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.407278816 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.931493747 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.458862841 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.407906474 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.429726868 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.436595764 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.622096063 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.454483079 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.643822159 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.425322716 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.4253875 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.425908848 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.22131487 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.571513042 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.265286804 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.410920421 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.276759907 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.406131163 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.984174944 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.687768109 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.437970211 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.413560982 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.285840271 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.304208048 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.380649508 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.483114381 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.498895249 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.632334552 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.563821078 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.478510099 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.933738715 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.43107428 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.43530693 seconds)
  done (took 65.458900416 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.407419555 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.41672008 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.417672243 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.416941115 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.417890016 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.414373631 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.407629071 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.417927841 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.416099835 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.415359587 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.417056691 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.416410099 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.417182302 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.41813482 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.417567189 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.38852114 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.408189444 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.419806985 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.407718088 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.388104056 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.42166318 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.419295414 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.419009123 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.420188011 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.419119052 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.41930386 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.419752724 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.420715926 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.419411089 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.422108858 seconds)
  done (took 43.734667272 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.4204303 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.036103765 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.169075197 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.437495526 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429453809 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.415054271 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.705070786 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.440789722 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.413862022 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.433627586 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.945490867 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.443799757 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447684015 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.201091282 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428796451 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.440239367 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.417954611 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.412182844 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.046793012 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42756951 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.703152617 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.425455506 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.689896683 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.440912957 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.431057707 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431465027 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.416916254 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.338407783 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.414587583 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.942673834 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.182668266 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.687402147 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.237735547 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.224344128 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.182229658 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.427285269 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.421842203 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.931194853 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430527153 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412606889 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.686575004 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.434703889 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.179332868 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.235529846 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.429947128 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.423427676 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.359771604 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.931313407 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.6605094 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439103157 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.237142644 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.43275326 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.44187 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414722752 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.660708346 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.439188675 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.43170012 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.331533102 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.421496807 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.705234962 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.431540541 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.41484335 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045412848 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.420322005 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.035104782 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.420427799 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.441922615 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433187859 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.183845227 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437131824 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.266187717 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.431788806 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.42020845 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.926511615 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.056296255 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.411663244 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.417146997 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047186507 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.308106685 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.684657524 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.440295435 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.326047869 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.717649494 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.42054289 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.446364563 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.426957828 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.427047162 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.508281025 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.685026387 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.169433635 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.261129314 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.343544189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.693496884 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.428916857 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.434671067 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.338546722 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.432191219 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.426501795 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.175618659 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.264994533 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.434485283 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423472286 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.250883562 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.442625916 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.69272774 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.426112658 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.232595816 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.440028946 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.510781886 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.428524242 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423866901 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.438112153 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.714540043 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.423278206 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.448036442 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.218482895 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.957703999 seconds)
  done (took 200.584291455 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.429649542 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.41098937 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.415952714 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.408418441 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.412414544 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.419526868 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.410222497 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.413534807 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417576981 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.409707745 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.414004601 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.417099324 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.416933856 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.412485479 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.412697753 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.43041611 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.412148156 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.428319852 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.428603366 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.409455756 seconds)
  done (took 45.628204957 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.429408152 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.959675249 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.940824065 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.446214296 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.43067833 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.419878963 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.47673344 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.452601418 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.429224879 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.710313225 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.588643307 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.451807099 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.432792034 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.429878857 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.92105272 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.399623962 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.707863671 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.980758113 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.446389703 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.959614936 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.399261007 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.435325779 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.42086439 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.96223128 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.7399537 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.716591521 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.478787998 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.989576803 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.449834867 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.432170807 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.969510658 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.446852391 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42118441 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.947149185 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.455699314 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.443642609 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.435029527 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.477422072 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.494302387 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.727852083 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.993863925 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.724095621 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.46636877 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.580081046 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.433810929 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.399959318 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.978844578 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.45195769 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.400662056 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.433054401 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.439206256 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.942876732 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.445267681 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.946167888 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.451682034 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.432876529 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.968665726 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.962692097 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.952480766 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.606827804 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445694238 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.6958877 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.442201629 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.98123752 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.453393746 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.435421535 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.437111485 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.592552775 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.989314837 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.717487959 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.71985674 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.719535258 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.438578605 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.493193956 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.45881811 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.718389159 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.490805591 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.82207362 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.721130454 seconds)
  done (took 128.943031486 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.694954904 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.535327039 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.813287394 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.996963269 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.939859831 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.578746801 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.539928628 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.679406595 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.449861235 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.556847161 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.075036484 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.530067566 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.196826847 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.489103005 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.552301634 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.58365441 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.844069031 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.414439206 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.077160281 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.037281355 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.446032555 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.530325237 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.956455372 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.628841681 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.417544481 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.041154341 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.357039797 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.968084473 seconds)
  done (took 54.242404039 seconds)
done (took 539.877180258 seconds)
SAVING RESULT...
DONE!
