cset: moving following pidspec: 19154
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.314983072 seconds)
loading group "string"... done (took 0.591917643 seconds)
loading group "linalg"... done (took 7.228425311 seconds)
loading group "parallel"... done (took 0.155376213 seconds)
loading group "find"... done (took 1.110357762 seconds)
loading group "tuple"... done (took 1.750534692 seconds)
loading group "dates"... done (took 1.177030539 seconds)
loading group "micro"... done (took 0.293084141 seconds)
loading group "io"... done (took 0.903915499 seconds)
loading group "scalar"... done (took 36.557511246 seconds)
loading group "sparse"... done (took 10.859236784 seconds)
loading group "broadcast"... done (took 0.907326529 seconds)
loading group "union"... done (took 11.77199287 seconds)
loading group "simd"... done (took 4.122093144 seconds)
loading group "random"... done (took 8.492418168 seconds)
loading group "problem"... done (took 1.856767109 seconds)
loading group "array"... done (took 19.492336648 seconds)
loading group "misc"... done (took 1.628347122 seconds)
loading group "sort"... done (took 3.007303231 seconds)
loading group "collection"... done (took 16.842861714 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482488961 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122415979 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114199675 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118338293 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14232217 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11440965 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122191786 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08393867 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.835272437 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144135792 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118740822 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412227475 seconds)
done (took 5.032992385 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.1706382 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081923769 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082391298 seconds)
  done (took 1.346099678 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066854271 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120925415 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066303333 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066756855 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068325136 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067241577 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067183121 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067326162 seconds)
  done (took 1.706276778 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073091867 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068633433 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069739298 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069242264 seconds)
  done (took 1.463112796 seconds)
done (took 5.946374621 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.76812659 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201937196 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182671986 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396422776 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129785929 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157244001 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648296639 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.303449374 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182351083 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080600814 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102739508 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316106305 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107138395 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.62472702 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079414585 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08964377 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138891445 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437325207 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06658203 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082328824 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088318348 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127567831 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086641134 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074295587 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14335938 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067624656 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129407695 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07951964 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065785809 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206583356 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.1732877 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668848383 seconds)
  done (took 10.226678861 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095470984 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095665904 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068458694 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136245882 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095303787 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069336145 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070044803 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067021266 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086053691 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127152426 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088218486 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100823377 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064764994 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068327765 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08372357 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203532427 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082230271 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081966835 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070582961 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074636962 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116758539 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077616914 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077609857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076672177 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127767705 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181771511 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098768897 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099066768 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068903356 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081855544 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116553197 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1249827 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065266096 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065645152 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123031907 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09387366 seconds)
  done (took 4.641895567 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.940367504 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139649751 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089718187 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166170561 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066981338 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106555874 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065004831 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083606566 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198875914 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.363742935 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.570683971 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110436763 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100149661 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067224266 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067922161 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066130668 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.346462051 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1219011 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112688029 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085079598 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075100387 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071080025 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.346382745 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069417563 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067647375 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069705188 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059472097 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115450032 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069763481 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92147654 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123788006 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06590717 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100327973 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161533547 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088658363 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.275415594 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06511861 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066343992 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149753257 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073833894 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065173863 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083038516 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103627836 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111960988 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069349929 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066461343 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159952357 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065699893 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083415828 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.972687042 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152131842 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094624736 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067567302 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247094379 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084757721 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066605334 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063862712 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17491556 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134867967 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067174555 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066521822 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065426519 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068292177 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.355461653 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068595782 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.72588033 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070075826 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080100973 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071075934 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066004971 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072619368 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071583146 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.089814665 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084430999 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065958268 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074642443 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065346193 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065168704 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067527542 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083244014 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356568749 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06571385 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068172008 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066038073 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086999309 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097635448 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070708451 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066417235 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101575254 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071876779 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066372071 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.166748077 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105330406 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066563501 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064064982 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083788841 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068623704 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11306439 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06638827 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090488564 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064547527 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063504115 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096145147 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069047956 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099453207 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080179152 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067037778 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397847368 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064753226 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064371584 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06809469 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067747947 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067341245 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068090638 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078538321 seconds)
  done (took 20.990767945 seconds)
done (took 37.982010351 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274709452 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077434452 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074635687 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074673937 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074481515 seconds)
  done (took 1.847804615 seconds)
done (took 3.103106168 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119311371 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098477543 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063939698 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094916681 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063942949 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099563668 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098222993 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080004274 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098495737 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064195658 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095653038 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063337171 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063671427 seconds)
  done (took 2.376158658 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082403722 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083686071 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071518898 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084464136 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064881429 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083481425 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081933078 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090828756 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081822944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073404679 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06580887 seconds)
  done (took 2.11134878 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080654887 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084537412 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071172421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083123358 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064931535 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082814803 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082015769 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087069999 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082752207 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074578286 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064884901 seconds)
  done (took 2.102853357 seconds)
done (took 7.833308302 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076745729 seconds)
  done (took 1.312677876 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582106685 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.041868318 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080459799 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112284897 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184082996 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121351072 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277987864 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086198407 seconds)
  done (took 8.90180344 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102707597 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072093779 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073771858 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072775512 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073234596 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070027363 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069803476 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07311399 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071056559 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06978576 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072188016 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072303812 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070357218 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069259168 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071063389 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071044167 seconds)
  done (took 2.47899297 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090775879 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090046333 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075291596 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076421684 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07347171 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073539953 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07557046 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074610607 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072092281 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073520343 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07620465 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075113398 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072773553 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066429263 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075437326 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077302414 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072096156 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075824078 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076161337 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076360739 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076005339 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066032861 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072297071 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074495389 seconds)
  done (took 3.151863876 seconds)
done (took 17.090387688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111792492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071073542 seconds)
  done (took 1.427264128 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080577607 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082406933 seconds)
  done (took 1.41527664 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081184328 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06497284 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088356646 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077054797 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066275736 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065171318 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086319509 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065892986 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065110944 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065313459 seconds)
  done (took 1.978762942 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068143913 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077136353 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069911551 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079767905 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072871477 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063575801 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071716619 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066911723 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076829857 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06240006 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070144296 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081062382 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072468271 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084022365 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074117719 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069414618 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071576939 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068102141 seconds)
  done (took 2.553879804 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065451052 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066449555 seconds)
  done (took 1.38925633 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06645589 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062401975 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065871354 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065698401 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062781756 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062039614 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062541642 seconds)
  done (took 1.700902076 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381274328 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110059007 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300875643 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071655505 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083821192 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253809141 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066072743 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071294394 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071416594 seconds)
  done (took 2.710846191 seconds)
done (took 14.435551006 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077877349 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083617195 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093921007 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.341851617 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09088157 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066925698 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114869451 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192259016 seconds)
done (took 2.331590204 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209598505 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.605220236 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.381129299 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192981388 seconds)
  done (took 2.439006024 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321496999 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086526524 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059720593 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067959839 seconds)
  done (took 1.802139638 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065676695 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06826935 seconds)
  done (took 1.396250381 seconds)
done (took 7.112268532 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083157237 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067157996 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.072221928 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067212363 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067295836 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.064451308 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068253755 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.064708044 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064816764 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066914172 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069776597 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067040906 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067166451 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066651676 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064536563 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064557739 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070503164 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064785844 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064652345 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064867867 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064530086 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066683813 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064344254 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064636101 seconds)
  done (took 2.906845552 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082690368 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065319114 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070601242 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070451619 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071714365 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072158565 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072017347 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067316879 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072143397 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069160461 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070832313 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07147916 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069032591 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071009549 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069273506 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071105745 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072279977 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069007644 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06944719 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071076205 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072317932 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067200094 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07100617 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072085695 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070662557 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070558621 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069333584 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06775834 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071855973 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070653031 seconds)
  done (took 3.392676118 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06928859 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063259949 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063424592 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070052693 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06257866 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064578228 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062774999 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063429079 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063766289 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062690154 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064171702 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062735218 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0629504 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063639742 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063706168 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06653976 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078040828 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064395946 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062462287 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063269155 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065865508 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063143783 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063154097 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064486166 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064339083 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06433864 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064994388 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064583334 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065475926 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064529755 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067404189 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067870122 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062712462 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069667502 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066652088 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062717906 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067025783 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06245738 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063546079 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062465058 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062609492 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062400675 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06264974 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069395473 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062994814 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064440745 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062597299 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063998659 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063107658 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.177195586 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062434577 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062577508 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064143254 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064074711 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066620338 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062187577 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063131104 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061994473 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063283114 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062462324 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062150226 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061860573 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065115347 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062936085 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076651092 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069170514 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062287697 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064304839 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06362967 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064886458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064361958 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075669138 seconds)
  done (took 6.047086009 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089815492 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086216532 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0664648 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066423962 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06298393 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065315401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068676131 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065000363 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066341745 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070781391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06517463 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066215205 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066173948 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078095703 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065686029 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066278152 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070849529 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062794217 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065112494 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068478859 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065179467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068237593 seconds)
  done (took 2.803764177 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153631209 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06915599 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104515988 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072193536 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067095325 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07182293 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068692021 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068965231 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069132158 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067605812 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067222681 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069179115 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066964639 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06741448 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067462161 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067258766 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069112244 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067425851 seconds)
  done (took 2.633477483 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076534343 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06471365 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085647773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065692943 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065612522 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067461346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069710093 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073297212 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067152128 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064961979 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073304056 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067570305 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067297134 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065380823 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067661273 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064915259 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067357876 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065110431 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073075084 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071088541 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071486273 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075035132 seconds)
  done (took 2.809733275 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078683376 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067511248 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081631929 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067810668 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061097639 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063527476 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068917201 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065113515 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069156776 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067250556 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0652277 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063545277 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068784405 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065160707 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069471703 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067146973 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068401805 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066658985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068543134 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062954701 seconds)
  done (took 2.638461267 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085530282 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067015793 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066916416 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075138312 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06665989 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066695832 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075155559 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067610633 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068012469 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088506982 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068367589 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068010661 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076185266 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072869683 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068469944 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076852682 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076184843 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076258245 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068872617 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068383258 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089013224 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06881118 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076099392 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068209018 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068346092 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068877645 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068331961 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073056578 seconds)
  done (took 3.310909544 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066011971 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064630089 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062405227 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063034021 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06361132 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063751899 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064554716 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064874438 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067333729 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064231263 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064957827 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065109243 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065108769 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064857775 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065241786 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065305594 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065398765 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062751267 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062991249 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062594594 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066641356 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066374539 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0675556 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064412599 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064686684 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066791088 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064417089 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064471903 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067047988 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064572782 seconds)
  done (took 3.233555194 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075384108 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072433943 seconds)
  done (took 1.43500964 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063276368 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079449765 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063037081 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069493941 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069308094 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065726636 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072431113 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068793516 seconds)
  done (took 1.834770395 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081075001 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077521821 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066945177 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078503107 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075759517 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082370403 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130707091 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066785963 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072030817 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063666721 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079138765 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065113272 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071598937 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065738983 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071460383 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071742037 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063199086 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071778716 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067987886 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063889307 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066939496 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073978373 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068315904 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060813242 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066456711 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087128182 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076399901 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065219877 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068463071 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072798952 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070768184 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059600063 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065101257 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065982069 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063241572 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074871188 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079788363 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068036636 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073863661 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066197484 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075774632 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06090183 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069834319 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071938957 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075207783 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065697689 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065844931 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060591465 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063110461 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067898768 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060718973 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065785856 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060369163 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074484445 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068784833 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075873806 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064635026 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066973493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067927948 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068814329 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071826691 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067326287 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068021687 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06482173 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071866947 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069845199 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074420586 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060656305 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059821122 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063374638 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074966116 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087272578 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071685906 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066063983 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066067526 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063521534 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068843954 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066581463 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071336224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072324799 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065890174 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070794271 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073132469 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065620382 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068162362 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073158487 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063601128 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06828615 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063435638 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08143227 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064035708 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063307877 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063502536 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075837396 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068658449 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065241631 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063335222 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072316943 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059696378 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066159186 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066361557 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066010866 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075686281 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070369251 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070775016 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073946317 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072308785 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065587677 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067901452 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062123577 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065434626 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063776244 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071551362 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058723219 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066941419 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06508661 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06487777 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198662391 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063889839 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065954825 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073326337 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071132808 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065055261 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062270694 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069131667 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065974381 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069035697 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073775615 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064964406 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061314829 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061161831 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069688557 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066010787 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069353376 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070348719 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069162511 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060680307 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063580336 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07151761 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074634918 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066586696 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067107997 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072225243 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067596111 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065608845 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072795515 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068521207 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065413081 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072086404 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066616598 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061756111 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069292793 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069443142 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065378433 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069989842 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068789862 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068570681 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066536859 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064369558 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073527601 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068114514 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065019882 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066145217 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064608616 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076133991 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068592353 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061553684 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062557151 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074786495 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064399067 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065696036 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064939989 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068126347 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066486774 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064056163 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065806647 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0673572 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076452447 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069444254 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067069599 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070530941 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077706637 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065817027 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068280323 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065553791 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066326842 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067129231 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074286026 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071601824 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070340962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068106656 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062715269 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071394655 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073187168 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065389957 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063567657 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064837096 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070022844 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071326966 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069596919 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066246454 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063679413 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066125611 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068368269 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068471932 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064972472 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064653482 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071872167 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063504326 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072381145 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066112638 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07493652 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068595763 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061170293 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068137177 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063793847 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071477267 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060885844 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063607656 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064747083 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066535373 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064849157 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067801684 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05966293 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072548375 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073150526 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0661055 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065405727 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065039937 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072454837 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066781756 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068692918 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068297946 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07057166 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074549513 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063943319 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067564251 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074141539 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063959727 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188386461 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071591267 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065030786 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064951286 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06538926 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064168348 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069656787 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074870287 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072936402 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060269866 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068652349 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064882575 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065211903 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061523913 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071586094 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06934561 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067432739 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073055143 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067572806 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066886456 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070532938 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066656896 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066300839 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067693 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069814155 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067695445 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067637006 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065997145 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069494336 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065541918 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063791307 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068024472 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065451158 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066213888 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07130143 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065438992 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065702805 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068733334 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066564025 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066664791 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066733303 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065571394 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069152277 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06767247 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066190151 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068624081 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061349978 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073719493 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066399372 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0737421 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066954423 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062623511 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07411843 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068960221 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070857414 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066290802 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066644531 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067667395 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065737829 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068968243 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072724206 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064663668 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076312421 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073427148 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066837756 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068624585 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06626732 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067482039 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065374886 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067132079 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066943837 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066651245 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065908655 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070509659 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068372875 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065833076 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067056859 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066229645 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065774924 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066420574 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0603527 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064733849 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065184533 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065366606 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074791071 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065924685 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065001897 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06459467 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06632224 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064498828 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062641822 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073506127 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075152414 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066121328 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07278841 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065477189 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067234673 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076234111 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060336031 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063877619 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063289118 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063504121 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073009085 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066099055 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074946421 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065680123 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065332784 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062783078 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06610824 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064346452 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060344042 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063754277 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068796965 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064369761 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064519358 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065515175 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067532169 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065805142 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073810797 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063697174 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065555112 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06446645 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061447435 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063845011 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063768227 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.20040518 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06713021 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063924741 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063526498 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065606211 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067471103 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067373832 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065429348 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068023111 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075564286 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066091958 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069335067 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070055878 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061199673 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068981438 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065973976 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065702933 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065780559 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069734486 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069815128 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067158818 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074980958 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066606436 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067237182 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066244998 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064123507 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065929611 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066116118 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065987418 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065356972 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067580359 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074005283 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064046123 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068903046 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065746685 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066268558 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072776134 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067143238 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068751077 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072361416 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065955285 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067760117 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074604999 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070407765 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069273404 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067806651 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068494737 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072603807 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065358956 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072567264 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066543216 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067092967 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067558663 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064298844 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06607447 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066632366 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065704066 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072382546 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066649594 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066098376 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065514771 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064118687 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067604912 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071051654 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07515938 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070385007 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070656475 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062117355 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06347694 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066864768 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064017278 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067593049 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06919367 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071246707 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068955345 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065874329 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064666875 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074507602 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071338478 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069394009 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063854533 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069545536 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066401244 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067507152 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066579716 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066025512 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066606311 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069447945 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06703559 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065127784 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072430767 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068895534 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06635391 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067279138 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066558433 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065978749 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061121305 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066261983 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068082134 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071160126 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067976099 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065845116 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076104692 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063739623 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066141503 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068909132 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065239061 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070342359 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060901949 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067167101 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066723271 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066470061 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060774728 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064511669 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063192295 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067333464 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065166684 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060639411 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075004651 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073437588 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067381767 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063212361 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062823327 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059836787 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.05941477 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.19595181 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067370482 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068487483 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075888821 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065394636 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064832277 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061566995 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066576553 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068910355 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06962556 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063365914 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061379982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065507871 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069186897 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071697851 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065245696 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065833551 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069861433 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068910253 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064529182 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069405597 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062751312 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069755144 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078738398 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067068879 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067359883 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072065951 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073894158 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066555856 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061341225 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066795833 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069248149 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066992777 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066612862 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067648762 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081054648 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069321709 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065672582 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065125441 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068718066 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065486374 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074322386 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066996725 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067064875 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0709164 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067864526 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075907852 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068839546 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07412113 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069423285 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069944834 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06524658 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066292106 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064421501 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065027204 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067119945 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067068464 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07199007 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073967246 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065222606 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076175283 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075443809 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068234971 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062468607 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065325317 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065707315 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061336108 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066816136 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064698862 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064641991 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064252962 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064927862 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066768195 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070610838 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066368933 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066116748 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065532418 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059799157 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068103657 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067765892 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066526766 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062380976 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065381419 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066046677 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069754127 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068706589 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063403157 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067216517 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067634006 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066310594 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060917767 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072403361 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064393211 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06743666 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064666034 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065799332 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066304333 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069066232 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070372502 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066898508 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06777209 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069643291 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068040998 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063758647 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063210994 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070866197 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063985828 seconds)
  done (took 42.243698317 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098959598 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062295855 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061237509 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061436434 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073113698 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062189656 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061488453 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062183977 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062684573 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064847641 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061277646 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06136626 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069834912 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076993883 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072975329 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065658116 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061367004 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062181272 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061335179 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061968312 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071989884 seconds)
  done (took 2.774012427 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072866898 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.068894221 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072137534 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074889404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066758278 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07033245 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073651932 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071243029 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075281664 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066265191 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076833361 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07029831 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.0671677 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06883223 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076893626 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072340649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077439257 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068839941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071741193 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074381501 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07163339 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073004379 seconds)
  done (took 2.937582633 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066762043 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06576927 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0670416 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061265113 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065861763 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060590794 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068588604 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063105178 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068765197 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064679732 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064447012 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06438455 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066652611 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061019393 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065030055 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063085854 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107218772 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068353039 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065491216 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065504488 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060495913 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066704076 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061049408 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061118839 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064228669 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068632633 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065849696 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06338008 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064790331 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06453855 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065192026 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063303845 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066859685 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065537971 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064309711 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064035256 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065136785 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064703892 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060806474 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063370616 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065575418 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06089524 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065228726 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066710566 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063304137 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06301571 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066898686 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064439659 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060186074 seconds)
  done (took 4.561561975 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079310739 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107710712 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066822273 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087222759 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079146513 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07468278 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068521255 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088800516 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064193628 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065423839 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083351762 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080911428 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067411107 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071196922 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070299329 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06686309 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067775493 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065738759 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070666141 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066278787 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070694549 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073491723 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080927084 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079834039 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07032338 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065908345 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065057001 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069046516 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077404574 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070339473 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069490178 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069900083 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079302639 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070197464 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063983166 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068893441 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082494304 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066883513 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069718732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064292086 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068513119 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070604902 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073212831 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082800059 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066793904 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071771381 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066419563 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063684921 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07937442 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06872503 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074183318 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080952017 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070450569 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066524993 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070847274 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081433415 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065643366 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063213371 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068218729 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076998459 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062819769 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068208487 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077935507 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066634145 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071727862 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07858194 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06988794 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068487504 seconds)
  done (took 6.407177864 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074573414 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071866658 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080735516 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079051538 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07178759 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071629281 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071214935 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071275571 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071147401 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076087158 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071322311 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091933581 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067146478 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073766156 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072007165 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071607305 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071666145 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071290121 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071690032 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071402611 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07151717 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079605964 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072518041 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080225003 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098916819 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068957232 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073317455 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073356982 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081564545 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073951823 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080570589 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073352378 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073430867 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081404902 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080408423 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073093731 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066072488 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071804111 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071581485 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073223676 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069078548 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080131267 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071636799 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066858954 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071595381 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071425095 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079035576 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.0783239 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074528193 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075899885 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071564792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079379336 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071440119 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071681481 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079477216 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103631734 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079059336 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079215005 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07193883 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079279564 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079527243 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08733781 seconds)
  done (took 6.063994509 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083187018 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07493788 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076478957 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060918564 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063661495 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069367679 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064244664 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063337254 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07378663 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073761057 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076043689 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069043378 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072009943 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075887395 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069222982 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071752166 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070443597 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071038982 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076035095 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071533068 seconds)
  done (took 2.808093516 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073484514 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081938621 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065912526 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071608438 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069066234 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071360918 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067663161 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068159068 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066549924 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068384178 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075532281 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075310634 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066323659 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071304828 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075610843 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070927583 seconds)
  done (took 2.512056413 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073947159 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072290538 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078825149 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066172887 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063693629 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062236189 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06513953 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060956288 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062086027 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077256405 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065183744 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067789083 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065170461 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064498832 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062304877 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068403779 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062313947 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06275477 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065311167 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077910803 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078073707 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065924345 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067754503 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06699576 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067432714 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072155334 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06636276 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064987465 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06454985 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067651187 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067994795 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070883519 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064510597 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065326038 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065601394 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064960106 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067266694 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0681382 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070139209 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067049926 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065295111 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066983307 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067597551 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067956641 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063756462 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067344445 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063511287 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069367184 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065018431 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067226024 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066833672 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069238759 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06718429 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072803709 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069205765 seconds)
  done (took 5.080285444 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078888494 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069247143 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061759468 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064767611 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068723661 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067305484 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068956611 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067113886 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067197509 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063516441 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067270123 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068107941 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067520193 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069317259 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067191528 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069126066 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061792351 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067397025 seconds)
  done (took 2.599797084 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070431962 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0666316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072264369 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065298736 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065208843 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068105732 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06189504 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064743281 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064343082 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065758363 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065751878 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068093559 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064262367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067915509 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065384274 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066205081 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069563156 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066169439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067334624 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063533918 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069876074 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065075354 seconds)
  done (took 2.84120841 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072614477 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091852761 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137606307 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084271698 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081102834 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078155005 seconds)
  done (took 1.925016202 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090199687 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079243403 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066732505 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087916256 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073546223 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066989113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066646663 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067249158 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075994283 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07538032 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066820593 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075413391 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075484398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074785649 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072552149 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072217446 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066884145 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066781356 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065744813 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083415579 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066738706 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07500186 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06681867 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066434356 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066869598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07413556 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074829 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07483375 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066841046 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074896153 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072339307 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066882485 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07504854 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075137374 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068773833 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075247837 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066512765 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083022544 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071947148 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074203199 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068569397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073365068 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075513583 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071987671 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07532639 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067108026 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071305061 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066777781 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067113286 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085243043 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072899254 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074283855 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072758402 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075841378 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075205788 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084855618 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075220674 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074853188 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072491896 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077899732 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074851306 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072155162 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074848687 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07562032 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072452818 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074426356 seconds)
  done (took 6.212440915 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082047488 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085239458 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067148161 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075407837 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075118396 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066768011 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066751783 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067256787 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066676676 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066862711 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106279574 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067147981 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07477731 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074803588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067234313 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066982778 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066882576 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074718961 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066827322 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084947945 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06682835 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074921119 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07464561 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074299747 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075552423 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072287222 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067188338 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066851772 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067108477 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066784143 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071805686 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067449601 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07467535 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066422529 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074331936 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067178045 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066851277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071393859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066763715 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072878033 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074537271 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083541166 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067008479 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066962292 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075700428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067070194 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06689075 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066831413 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067583639 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066906203 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075750984 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076110799 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075529799 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074911875 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067410392 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067257308 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067109286 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067167946 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067193806 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073373385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074897129 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067144402 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085636221 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066938758 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067015158 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074779833 seconds)
  done (took 6.125803513 seconds)
done (took 129.40032073 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188319668 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169657056 seconds)
  done (took 1.735615988 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067679354 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095906731 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076336392 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12737937 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066891279 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099115049 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098479684 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077005169 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065673911 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06582488 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065613814 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067550166 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131605943 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065901607 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065999593 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06763628 seconds)
  done (took 2.694195775 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097040476 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156634731 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099272531 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065168369 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096548781 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072927614 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064369931 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074559539 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070579056 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06446642 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072666246 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070282539 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064430257 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.06999914 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070515172 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072463418 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065008646 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072640996 seconds)
  done (took 2.812519992 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100071915 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090814952 seconds)
  done (took 1.58630377 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154092935 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10452988 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148603514 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34448817 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166712825 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228966658 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12674989 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127537451 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11573751 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123105159 seconds)
  done (took 3.03244913 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097593895 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15045523 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254579465 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114773072 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071988684 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094035773 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115705771 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077217759 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080407216 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080053149 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079949976 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075449482 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.0982313 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073299529 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073434567 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075472114 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101607177 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072358502 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07327919 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076597413 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098603786 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065163834 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072608219 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072161792 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077124612 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076705373 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065747319 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065365456 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076441 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073342329 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076175844 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09231434 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076751126 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105727188 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069332559 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106965253 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075486957 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073760904 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073076744 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073420962 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07841599 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078470213 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071347742 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075269629 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064715403 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075309347 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065226373 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064882004 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077820197 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066702518 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077518084 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076564837 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106091958 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066416791 seconds)
  done (took 5.967727667 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101149049 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104413266 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073034223 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108295623 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097006682 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071359672 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100437838 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090678579 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101395942 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092604442 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088013314 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070560703 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081218505 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082866459 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108569318 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101243439 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095008365 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070626224 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101116226 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101875065 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068193497 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09406512 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090763348 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100743829 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067281018 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070191258 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067544409 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070305239 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076079714 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07721867 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069688326 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101104337 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083872811 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077259389 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066810636 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067728007 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06818276 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078420286 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095988484 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077842815 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07662288 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066955807 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067972399 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06925725 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089801772 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066979997 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078135608 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079204841 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077873917 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069075004 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069885009 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067821604 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06921515 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079095677 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07711474 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080351899 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079441756 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068280514 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06816628 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071486663 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07986162 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078433393 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07826814 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091892 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07856816 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067905619 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079159761 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083837856 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06788899 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069303899 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067912648 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069267744 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069670491 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077428558 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077542952 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070314313 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069427702 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06846549 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079099421 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077105562 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067835302 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075914712 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066666836 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067602222 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069609958 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069525093 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077037617 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078983123 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069811453 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067830712 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069923788 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068444267 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066814034 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076119901 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079294791 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077326774 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077519854 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068893718 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076648152 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075894193 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068380964 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076519187 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066993731 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200272226 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07032032 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077638473 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077575744 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079569257 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070799331 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06799178 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077760835 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080487114 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068775753 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078305225 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080320645 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078920642 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068680313 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080848069 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068410387 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079324806 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071168676 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080001267 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068783342 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078547374 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068602913 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067950882 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068758967 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079039687 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070715883 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068928149 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070412739 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069540546 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079245986 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082023224 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070756172 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080845034 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077950441 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070611503 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07828144 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069236309 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078686759 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070124716 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069916077 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06716305 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082059396 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068366649 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069112559 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070259968 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08035865 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068649339 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078906624 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079076187 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067747052 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081944904 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080741103 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077253204 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079268683 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070691938 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068083522 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068329778 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070706737 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077651061 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079193103 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070610456 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068708367 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077250391 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078690002 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067288011 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077087755 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077452777 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077402366 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068280675 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069640001 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079760038 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080418753 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077914106 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077196567 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077732529 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068380964 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076740842 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077274526 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067628977 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083232734 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067796932 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081223469 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078452685 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07540107 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077478156 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07955241 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079446856 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078770876 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081957999 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067391934 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067510784 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078780564 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068106059 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069337432 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077506169 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069670441 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069884971 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082776418 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068116153 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077890764 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066185106 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076615665 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06560955 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068721463 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080284675 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066439101 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.20190353 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079472911 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070826375 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07741481 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080545447 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078284643 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068251277 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070385278 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079960881 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078575673 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068357105 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067809281 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070922966 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077911753 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077802172 seconds)
  done (took 18.712753994 seconds)
done (took 37.943617008 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210867035 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150243149 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.203236698 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117745756 seconds)
  done (took 2.176736782 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120481662 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100518358 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094078851 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.0642662 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100838584 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064516596 seconds)
  done (took 1.978047875 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310532578 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210774371 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181476133 seconds)
  done (took 2.130032561 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197906618 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186104003 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392099748 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251266898 seconds)
  done (took 2.562728433 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142970449 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088343351 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066949032 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082218534 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132814382 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159331042 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10079144 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124620922 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077376983 seconds)
  done (took 2.455710702 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143850097 seconds)
done (took 12.879105113 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.119161578 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14481804 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090967494 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148845354 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100774864 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.165506491 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087033385 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.214446324 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.228904593 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.207698722 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079364383 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.1715084 seconds)
    (13/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107436982 seconds)
    (14/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076363213 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.0709674 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113221483 seconds)
    (17/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.154210409 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.221494723 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076609169 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.207691717 seconds)
    (21/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072805453 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120663128 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07250104 seconds)
    (24/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078691023 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19515193 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070907789 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094843356 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133601421 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089322893 seconds)
    (30/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.125002903 seconds)
    (31/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.159225419 seconds)
    (32/309) benchmarking ("sort", Float32, false)...
    done (took 0.12782297 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159142124 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.185963993 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.220129979 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120505435 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.172505777 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070839343 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164638594 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071154957 seconds)
    (41/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087606229 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159623841 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074183861 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.097611264 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.180426838 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086532072 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09424378 seconds)
    (48/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070715888 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070635616 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09849988 seconds)
    (51/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.148531277 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185144743 seconds)
    (53/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.15712931 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071690257 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090516583 seconds)
    (56/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066877938 seconds)
    (57/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.14989351 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050812988 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051241423 seconds)
    (60/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150054203 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067882074 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071335129 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066451783 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050897631 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111777305 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.074941958 seconds)
    (67/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074704258 seconds)
    (68/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073753794 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093304573 seconds)
    (70/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074785018 seconds)
    (71/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074701979 seconds)
    (72/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072733356 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088833357 seconds)
    (74/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.150886374 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072113125 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150322389 seconds)
    (77/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061834978 seconds)
    (78/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073988381 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097193889 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066093114 seconds)
    (81/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.154457543 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.323817008 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.066586066 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075618159 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169833767 seconds)
    (86/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109509871 seconds)
    (87/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076654461 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102456349 seconds)
    (89/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079606726 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113236002 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065726787 seconds)
    (92/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169423685 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065154613 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065398411 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076039764 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.150861907 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.148870584 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088276141 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090273786 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.153384492 seconds)
    (101/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065896138 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068539953 seconds)
    (103/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074891817 seconds)
    (104/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051642507 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073400172 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091154806 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051160061 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081523199 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.166838667 seconds)
    (110/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.166950573 seconds)
    (111/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080820849 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136387351 seconds)
    (113/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186697022 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.284439548 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062559264 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095626285 seconds)
    (117/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066175504 seconds)
    (118/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051400244 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051438007 seconds)
    (120/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107840626 seconds)
    (121/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109295392 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132285252 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.132990996 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073676267 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051682003 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138964179 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071786077 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050840542 seconds)
    (129/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073184276 seconds)
    (130/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053456872 seconds)
    (131/309) benchmarking ("sort", Int8, false)...
    done (took 0.139652743 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071887082 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07165296 seconds)
    (134/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097944899 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.179934697 seconds)
    (136/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052284863 seconds)
    (137/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064506386 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159333744 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071804221 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072323826 seconds)
    (141/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108965288 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065957429 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127860858 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062136458 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114438608 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066652694 seconds)
    (147/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079209613 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08922307 seconds)
    (149/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151263852 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15234839 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150155568 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064659363 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051312419 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072232899 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088297152 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088643485 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097123506 seconds)
    (158/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167364952 seconds)
    (159/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096543822 seconds)
    (160/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051365325 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073211472 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.154850276 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060323291 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072577943 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080442805 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070326469 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052294987 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050926728 seconds)
    (169/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.184832808 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071257383 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094861775 seconds)
    (172/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068720158 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069877875 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067142474 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095290805 seconds)
    (176/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074812673 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053276099 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07529493 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096914404 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050904864 seconds)
    (181/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061296762 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052132901 seconds)
    (183/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071795628 seconds)
    (184/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097477573 seconds)
    (185/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071809171 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065626073 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051228599 seconds)
    (188/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071988657 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.224108691 seconds)
    (190/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053263032 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066223765 seconds)
    (192/309) benchmarking ("sort", Float64, false)...
    done (took 0.12692288 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127110534 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05201856 seconds)
    (195/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052024263 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074115356 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089029946 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080250833 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06888864 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076869598 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188012569 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06556424 seconds)
    (203/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052613085 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092376496 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052714204 seconds)
    (206/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052304895 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051242609 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100511989 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06458415 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065743504 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065266885 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051732261 seconds)
    (213/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062255435 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069902084 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079104563 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051546094 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067683955 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054153767 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072206917 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074561146 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072700978 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175541348 seconds)
    (223/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072740763 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065301153 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052377126 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072196719 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067239298 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071232908 seconds)
    (229/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088566015 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066732856 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063996643 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068088765 seconds)
    (233/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151728824 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.0531174 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080415352 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072683739 seconds)
    (237/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05130239 seconds)
    (238/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052794624 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133078719 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051606139 seconds)
    (241/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060577459 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171065323 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086306934 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132605513 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086207951 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053990578 seconds)
    (247/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053153085 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117033777 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132219822 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051624608 seconds)
    (251/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064621059 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09158557 seconds)
    (253/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117684204 seconds)
    (254/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051519483 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137630865 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064429936 seconds)
    (257/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08690579 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065476251 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052470995 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066219653 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067635829 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.0703437 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071022858 seconds)
    (264/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052187689 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07240652 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050969173 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050959947 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051914796 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072286159 seconds)
    (270/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065938608 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063554536 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052043722 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051015128 seconds)
    (274/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052150601 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067299277 seconds)
    (276/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.0655197 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063752516 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052261854 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053557476 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06621485 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072001449 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063670445 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066375971 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065728204 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065261594 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063713141 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068450506 seconds)
    (288/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060212575 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066618008 seconds)
    (290/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06149359 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072733968 seconds)
    (292/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050802099 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088677334 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072581851 seconds)
    (295/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182965198 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051202802 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065288556 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070185821 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052410213 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065401976 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071339357 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064429339 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093551007 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064967657 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051404572 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.0644907 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070143378 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050877752 seconds)
    (309/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07119637 seconds)
  done (took 30.446272532 seconds)
done (took 31.886995781 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082661461 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091333234 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073937957 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092000486 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08019355 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075666907 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071607562 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077196501 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078750622 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080550243 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077544894 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054467306 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07322609 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073214895 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073591323 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090476895 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077075642 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072085499 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072042863 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064149227 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072414967 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066507878 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068801013 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055734331 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078937644 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070760411 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071800043 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073438061 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065129149 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065061156 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068220419 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072591841 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064950171 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077051728 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071819029 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072215271 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073574105 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075189265 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066663081 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065235184 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074057703 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065363533 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073433792 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072891888 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071443039 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070404075 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072513076 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077044274 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090711635 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067756895 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07386102 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075262904 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075331236 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071540245 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068493105 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071945876 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070218017 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090214492 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072864914 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067162235 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073532465 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072757483 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.06998276 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072284927 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072113329 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074274502 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074626955 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070317322 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074172184 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070398814 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065509087 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07235185 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068036635 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065104382 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074646098 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076315842 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063742014 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070526124 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071812045 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070797576 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064348744 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067045833 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066601335 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07062622 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066761135 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054271926 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068121179 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071206671 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063772548 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072514342 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070616377 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071648708 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06644893 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074281048 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064021382 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069845243 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064968898 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065344182 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066561287 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068107655 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064482134 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068063272 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073814626 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067165107 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071765714 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078846573 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065449519 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07220397 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065205317 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066054719 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081050762 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076423487 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067159218 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068535042 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064244191 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072451147 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064091142 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064387239 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06453608 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064534819 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069557516 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064178766 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066154084 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071316334 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076272225 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063935884 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066853028 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066055802 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063811959 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068537467 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063825889 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063419595 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200511317 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061568024 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068014936 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065471395 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072352696 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06765817 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072615204 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066817631 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073551682 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069428781 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070841122 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070348413 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064646263 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058617138 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067376387 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067272648 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067074847 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065065237 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066977676 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065376921 seconds)
done (took 12.393410952 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066395036 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141921994 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098335991 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094504155 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085156123 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066039244 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075497691 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100635151 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066991924 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101670721 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086519816 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084274771 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111030074 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064133831 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065298787 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069442518 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066626234 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080643597 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100730763 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085842266 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10866886 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064564004 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094070652 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089375882 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086314546 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090967793 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066078118 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069055298 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068838717 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099854496 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085630872 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069496343 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066003799 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099304878 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091277395 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08214718 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065676274 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081256225 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06595149 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065387031 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080562326 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097738795 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081428639 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082918425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071238301 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070991262 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068998335 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08572439 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090220496 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080666833 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088869315 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105139201 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070635193 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067201671 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065627723 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084638449 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064844011 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068016985 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065980566 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067456483 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065223955 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068756143 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080394153 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086108482 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069306394 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079642884 seconds)
  done (took 6.827428433 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083113581 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090039114 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082892702 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083345317 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065578882 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065931049 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06606735 seconds)
  done (took 2.069740112 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066327478 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087599519 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088982233 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088353385 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084159516 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086447248 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074914549 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065816425 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079566893 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066653294 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086401847 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100352978 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066339036 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072248937 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09008545 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065913903 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089761431 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066289896 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068965285 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089541698 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067677622 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081208865 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069489564 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065978805 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080448843 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066393627 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112061104 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070219666 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067386099 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068928786 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063918376 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105491252 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079236404 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075087464 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065915454 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080077522 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08003324 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06435308 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081466476 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071216474 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080724191 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067791156 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068576792 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065689509 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071868893 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078066403 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069206206 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068394131 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070854377 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088128548 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068790338 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082292037 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073458199 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071155242 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069414649 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070849989 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076531737 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067445083 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085390279 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067212398 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082082972 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081351695 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079244955 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082230104 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068926355 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079957025 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080114775 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068368689 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068170616 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069053241 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081607853 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064253885 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067186837 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076969293 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067459271 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088750054 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088824735 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067255196 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074904304 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06605782 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065996533 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066867854 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088519084 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068432001 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06595843 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07004366 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068749529 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064666406 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065175396 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069507653 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06448087 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06786552 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068981742 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069691862 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068736777 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082701817 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068392979 seconds)
  done (took 8.774219924 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068553399 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067230222 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069219928 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067978833 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067839625 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0680827 seconds)
  done (took 1.962624672 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092686975 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068945134 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080015517 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071966567 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103737319 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086358125 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086496483 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077983637 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082879008 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078464565 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08606905 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087827374 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092099941 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072374131 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085461236 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071293902 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086391488 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075275596 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078136819 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072596224 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086025791 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072537439 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072536071 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081137008 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074968916 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07179912 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066909062 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077985899 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077503221 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078196374 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071781999 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075362731 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070278041 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.0785207 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086200802 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070211293 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071278648 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076625948 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072025909 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075022061 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087562092 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072861261 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074202557 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076566176 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077826987 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.06979227 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076829178 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075247574 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085230646 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076676741 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076293804 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070579525 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074753277 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076084931 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069691331 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077655565 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076549875 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085941458 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071670725 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069516265 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068497273 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07482884 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077228584 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074437601 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078017733 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076501864 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069541288 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071686941 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072038767 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070988435 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07638036 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068252426 seconds)
  done (took 7.079194584 seconds)
done (took 28.23266604 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543134132 seconds)
  done (took 2.06727063 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612940153 seconds)
  done (took 2.161382843 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.676409481 seconds)
  done (took 8.217098371 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400066438 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.481651754 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.716085846 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130236554 seconds)
  done (took 3.310639944 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.666834495 seconds)
  done (took 2.22155605 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210270227 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196667138 seconds)
  done (took 1.971278003 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379481126 seconds)
  done (took 1.9254842 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.108976018 seconds)
  done (took 2.655326083 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262092663 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162780579 seconds)
  done (took 1.973868994 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461102407 seconds)
  done (took 2.006868721 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.818313166 seconds)
  done (took 6.367126315 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204797733 seconds)
  done (took 1.802849342 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242198976 seconds)
  done (took 1.792861733 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.737561319 seconds)
  done (took 3.288943567 seconds)
done (took 43.316174931 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078888003 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080606524 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080836399 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077386518 seconds)
  done (took 1.860551396 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076751498 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071820208 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076024231 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072072971 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076154504 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072157263 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073504805 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076227564 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071828882 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071973281 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071738234 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071847241 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074101302 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073249484 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070215164 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074341217 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075164627 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071809257 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07476802 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071966106 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070536536 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073808204 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073986864 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071293523 seconds)
  done (took 3.31489351 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077569898 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071861767 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074795341 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071695617 seconds)
  done (took 1.860829373 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07687466 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092262985 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088610525 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077330574 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091221112 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085305753 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068395393 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068249478 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072978997 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076186601 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067125898 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095007271 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08664457 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076425216 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078320592 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065323498 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067608873 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085831162 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076412159 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077056385 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069632978 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076059009 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066929079 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087456955 seconds)
  done (took 3.434592897 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076870001 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102112569 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076636271 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.0881254 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088909 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064538315 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074061456 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088006411 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121619864 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064451938 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069168336 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065014431 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071378397 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.0647206 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075253464 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104055303 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107633328 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067993167 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094913692 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065214824 seconds)
  done (took 3.200664041 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071956261 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069617258 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066702613 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068231969 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077071164 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072941155 seconds)
  done (took 1.991048152 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068086647 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06656379 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067487318 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065964491 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071500053 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066348878 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065228888 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066265852 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066567413 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066242456 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066159133 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065705144 seconds)
  done (took 2.363071646 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.412053488 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068110332 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068854312 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065132602 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069928822 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065926682 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07900078 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067119448 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089571846 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066018694 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066147639 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067640832 seconds)
  done (took 2.747478152 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205195644 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075884562 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235016601 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135946534 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110865917 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11431121 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103227935 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11240745 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141988735 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100932699 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165928486 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163822194 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106081857 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13574512 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088213326 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097289351 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153850457 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160460051 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102439063 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164355936 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1421907 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123349068 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145184971 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100587221 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104410656 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120662979 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069835212 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078882979 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168255898 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129523236 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14454835 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109573978 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092769494 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174248524 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168127974 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141048814 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133035392 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082881336 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100861238 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132008824 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196255361 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087613491 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160676806 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245515676 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08072544 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133252491 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11928172 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119533626 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106237398 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089514884 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144525248 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181561655 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137751509 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085787399 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111083943 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114212018 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115795102 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102484567 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180254845 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158697458 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127918366 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071261072 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098474339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151872046 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130499577 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108910918 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126071922 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093946013 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132722254 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153086886 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118200002 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141259222 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127400892 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087371161 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11791234 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138853071 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126818597 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167844699 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123117938 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071685749 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123302742 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10213898 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080565858 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140856639 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074334 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173719434 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097097677 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105417492 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111347752 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107305115 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107396829 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158953965 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141295291 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100299093 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.063812786 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099918091 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.116009582 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13991561 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084155651 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104980715 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110471552 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075129055 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131787613 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.0721455 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117178547 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.073225552 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11927902 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126502941 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.072803192 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116253383 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096839815 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.096238938 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126361808 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152391672 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085426585 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078744543 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160322506 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116175041 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099196751 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138048898 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148037289 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.093706626 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095366325 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136790249 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164946999 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084743454 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151212432 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099963273 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079272524 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.083277414 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115947215 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105676574 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.114647352 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07700673 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.110583552 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155697608 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.071840269 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08922989 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12462542 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0753587 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076572039 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095737263 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09390906 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.090021096 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.094932979 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.096988193 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128023995 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116018404 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09939858 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372604161 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099772467 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171071089 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088998689 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101238083 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104803339 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069860981 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138067654 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158081059 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080155103 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164698722 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12396176 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105436868 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119645576 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082588792 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139672126 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07853782 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070195587 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142736236 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109817888 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109454587 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149965058 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104396951 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125960087 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118502057 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132734545 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130602899 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128540308 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104657924 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087417736 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111590924 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125267143 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072485968 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090639959 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080039792 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103332456 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095091636 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082847355 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141242849 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124021399 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099643817 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110681574 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096140296 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14585268 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075783119 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127712235 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11858779 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093814018 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150855949 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14990013 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13036219 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098163235 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143120019 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069306726 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072912279 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088298835 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.272085177 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082610742 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083361704 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117726667 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146961158 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128275267 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135509497 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110437314 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119752542 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153329678 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068982744 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114412569 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146005795 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119160283 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103260402 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089270946 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098314056 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141059061 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10760471 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179877198 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113360389 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125426755 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152072446 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104162892 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079168918 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103432015 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134601457 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103974914 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143159623 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09859017 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087020798 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108801833 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073248226 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099177022 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126321982 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118982529 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134189137 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113842633 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131063931 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07619081 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115530627 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118775504 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121739725 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06342886 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11911312 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159349215 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091902368 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116601806 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150536755 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078450944 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122316804 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.324079866 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144076988 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084209417 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110546202 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118610454 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126593414 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118893506 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138456801 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106545616 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133777403 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107698119 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084429664 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086050014 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096295571 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104152679 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093567655 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106781796 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112796514 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093510309 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130561845 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101615964 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108098137 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115988196 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09548031 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088067667 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095155919 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171903553 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118008718 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169597214 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097700404 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143631802 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163035469 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073957101 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07812059 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077486999 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138291925 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082871627 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12954959 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09666102 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104220061 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123601497 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140558347 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094011507 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067682925 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107070664 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132780536 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11071528 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096986725 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103295562 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161456162 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099757444 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077858047 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111629826 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10274172 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101535618 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169949047 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060980256 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241661499 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074920721 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080185749 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1277381 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152795897 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082757349 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102602213 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118281941 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10909874 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126472263 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100150333 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098283609 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11310779 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147518332 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127938015 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088640721 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111017459 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128250894 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154505322 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104644336 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094639917 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169382874 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167447458 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158613518 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087480059 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113566202 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11283073 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107046389 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137783784 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082628569 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162092169 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08097075 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135325427 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102651764 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089242429 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127995409 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097619947 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086885256 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146365652 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11597332 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081556419 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077178166 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116541018 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118997813 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105755601 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075189584 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138359656 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071449379 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129749442 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166336063 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079923301 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102535623 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094939261 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225534765 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107944412 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103278323 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089378984 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097803088 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172451881 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087242666 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148237225 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139754385 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111912973 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135696497 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098565097 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635091974 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077487791 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150120838 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115006276 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170136831 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096392356 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116600717 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108245131 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121950075 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142266695 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106632758 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178919648 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130235491 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115182707 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079258701 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101449948 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101110203 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08795996 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104248342 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112400801 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114788342 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09299689 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114508702 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121864412 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081010097 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094525548 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154327811 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115497441 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142758454 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13848291 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084218103 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117088706 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137527708 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079246485 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119666115 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149015228 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104491877 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096181192 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079446504 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100069686 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314749828 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073140462 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160292781 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119532809 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109128079 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112230053 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112510293 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129156372 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105920965 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11967925 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091957207 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108846038 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111141735 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080960399 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076008831 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10293153 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110486451 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095953761 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097063955 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096949392 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150027742 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07078819 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094337341 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102416937 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143184519 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172503175 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087634753 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081912627 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117702387 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111572513 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112187728 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119015264 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078234669 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081646901 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081001139 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076253228 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107243238 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111293433 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103082816 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110681456 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161882117 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081599564 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224523882 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09409506 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103790349 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068956266 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077730753 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094781673 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095807537 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107284226 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100069714 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168886616 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094200632 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089257505 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090960692 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072233312 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08189227 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125846597 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25608676 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118322661 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097401654 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06178352 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107922738 seconds)
  done (took 58.082618344 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107437363 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081981384 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095382897 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14875224 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12171113 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210972832 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156607765 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19918174 seconds)
  done (took 2.824860483 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067225169 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093705081 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099159425 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082721982 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065734612 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068311058 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22451084 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080142235 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065944268 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087361122 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078801583 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068534793 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420448531 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066053389 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068900566 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062501746 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066496698 seconds)
  done (took 3.462329763 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.374221409 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.360784364 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371237175 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072924915 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.87986866 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088263946 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.075483243 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095680098 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070138917 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.278987285 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700332033 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094838075 seconds)
  done (took 14.167780108 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074224071 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068433512 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083355413 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082495068 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071231044 seconds)
  done (took 2.081194992 seconds)
done (took 102.991371497 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07962191 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389299781 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05349762 seconds)
  done (took 2.172129707 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082154717 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083420693 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083547928 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08151237 seconds)
  done (took 2.04052109 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073522899 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075681817 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083523274 seconds)
  done (took 1.935834786 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221647675 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137918227 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086257439 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081408085 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076829159 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077664356 seconds)
  done (took 1.950932129 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070691211 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073973608 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072028502 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075357254 seconds)
  done (took 2.002946147 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07527187 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051885575 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054495309 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056129337 seconds)
  done (took 1.949847086 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084887667 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077973856 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07856173 seconds)
  done (took 1.95463167 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105575132 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083774697 seconds)
  done (took 1.902111346 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080493524 seconds)
  done (took 1.794596131 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097709452 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112363184 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12725495 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108404648 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135965226 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107407906 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085084586 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085951018 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076137707 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08601019 seconds)
  done (took 2.735178613 seconds)
done (took 22.665647805 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078520116 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376215825 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360328976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089794965 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666984665 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35560348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.97903847 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091290976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112633158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066674219 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082929134 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648853377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.968096347 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323287702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9536177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318152768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649494663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067895536 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06715206 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06706024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964406063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067099542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06733224 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067737154 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649543953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370765698 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067757936 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323078522 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067228816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069227161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354102499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067538284 seconds)
  done (took 16.160413456 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070341221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11700163 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073038809 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082954819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069604952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069191262 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070936222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068500833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11841997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067207867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083851863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066931862 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.0714057 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068133239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086363633 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067633997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06883276 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067622102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068121598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06773641 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085372473 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066894281 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06770653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067820667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067322114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079265338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067569951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066994576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067361155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06949419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070229937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068199013 seconds)
  done (took 4.09263084 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114494697 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124662321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073882108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102645285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111004569 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069990342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142433884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09202386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126545432 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067415954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083851503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06766058 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100174918 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068678876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086967799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068014716 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068772842 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06817512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067507158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068534635 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086584265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068197469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068059639 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068449882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068238791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080707639 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067911205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068150244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06829285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069559263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071315466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068218506 seconds)
  done (took 4.35265682 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072421156 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074210857 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082070053 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083047958 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068941342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070783799 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072194279 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069135132 seconds)
  done (took 2.320342456 seconds)
done (took 28.645974679 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078037369 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068774812 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072180785 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08036082 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073012943 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077669559 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066480235 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073839531 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071293887 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073089083 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074240517 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067004634 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070366125 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066650338 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073066795 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067191121 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078719971 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070953584 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078301452 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078515945 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069110774 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07252495 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073627976 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07795226 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07926002 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078313225 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076659588 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072095945 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068398959 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069831437 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076020591 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082907258 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06819821 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078627885 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067962674 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067445138 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071176036 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067876464 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08108397 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076610793 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069127522 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075575874 seconds)
  done (took 4.788101067 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086731056 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090206363 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083682847 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061304091 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066931387 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064719844 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087845865 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059492782 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059262519 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087274229 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055945473 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059206024 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061848265 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053843571 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058997708 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056203829 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061107078 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055444013 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058916175 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058818089 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057735387 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054116908 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.05960809 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064785126 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056729063 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061444495 seconds)
  done (took 3.420922464 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07368366 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083594673 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087012272 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125576173 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103478431 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076153856 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077381828 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09143114 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084605951 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066811126 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070467537 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093002734 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087073385 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073545471 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067068442 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083629712 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081283795 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068387281 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073420557 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090012932 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08359129 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082798006 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091932823 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079921896 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066546739 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069289766 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070524411 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08032305 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071720584 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075630082 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070798108 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070569672 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068976963 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078138643 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070832092 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068948272 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089676504 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076247982 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077298866 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067288169 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070369835 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068143902 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088708746 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121483283 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066141034 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073397303 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074694478 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075758099 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067616661 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08541911 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078164596 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066794527 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069941389 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066222305 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067102316 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080048879 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068826054 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069450107 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075325944 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069954011 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084503839 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070671979 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081909046 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066506677 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074460963 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066261064 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067849003 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065763869 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092073133 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068163965 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107383747 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067917653 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067661085 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075866959 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074187568 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072580829 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067685024 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081692692 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076558514 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07013066 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075213182 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070257559 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070310859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087229801 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069191035 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068209774 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068089274 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073266075 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069800558 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068376565 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079525217 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06695005 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070214307 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083383174 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06663562 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068217844 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073131843 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07164716 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066298161 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078283428 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071526455 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067720012 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076388884 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067093845 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070466744 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077385486 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072963267 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066080148 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072152002 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072842763 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067936813 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06847954 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070092744 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069307628 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075106497 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073328583 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071635324 seconds)
  done (took 10.569455594 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15905518 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.164736689 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070055719 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14429456 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075891979 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078500675 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146410977 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093555513 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067222005 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067714143 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067950673 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114493513 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105247957 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121302803 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077754313 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067314075 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082882104 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116053618 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148302214 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141595458 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082982307 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076279998 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069324677 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068580615 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073776799 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081788883 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089684233 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076225088 seconds)
  done (took 4.501351155 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080031925 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100029889 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073824823 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088302942 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089953878 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067284365 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069566262 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069259465 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079624217 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077963884 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067140724 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072661039 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073846968 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073498881 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068061922 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073847111 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074035089 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069288172 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070826445 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072162527 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076848336 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079925172 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071037761 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066637372 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07348332 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066601753 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063680232 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083583548 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06788306 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088990685 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065076894 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074510234 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080889137 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068536338 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067153443 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067093449 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067059715 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06707148 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068972703 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065937582 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065780634 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057182086 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066535492 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078878162 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073541744 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056173142 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071906782 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072244572 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072029589 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065051288 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070086495 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069384496 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070280735 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07413712 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07213897 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071989478 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068524741 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065547556 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07481069 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068049409 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064828995 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065858454 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071749713 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065785125 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075227616 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071645385 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065852953 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067065188 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069218739 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073632283 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066949059 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070333875 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064638173 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068999915 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071789415 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069118767 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068647805 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066490885 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067072138 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067683213 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055629707 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067367182 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053880611 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070146503 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065875346 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065720059 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06703695 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072095748 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079793868 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06861244 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072916975 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068082146 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066316858 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070368016 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060146139 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069929079 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082264364 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08184927 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067228044 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065195052 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081960902 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071701454 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066229015 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056000332 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074316433 seconds)
  done (took 9.184809934 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093420382 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087775131 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069559759 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082449154 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090626028 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08572949 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074091368 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076009372 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068836976 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081448487 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072741905 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075932044 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067716207 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076534137 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092445629 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076020604 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069226091 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075970144 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071495462 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099185663 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082576342 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08096387 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073847005 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067225116 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075136365 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078938896 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088165209 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079406677 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077684235 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.0753577 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078850894 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088668975 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073589409 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071201415 seconds)
  done (took 4.457902141 seconds)
done (took 38.644858784 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.826207413 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.983976864 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.812036467 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.18241369 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.065128627 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.911022543 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.883702803 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.809880459 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.061258639 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.847979589 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.059300363 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.88947123 seconds)
done (took 66.084562147 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.8342348 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.954008382 seconds)
    (2/2) benchmarking "String"...
    done (took 2.116715038 seconds)
  done (took 5.833732063 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.15692821 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.347503645 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.057566139 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.81091748 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.817275346 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.119906773 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.609112647 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.331705366 seconds)
  done (took 30.855863488 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.018981232 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.012758987 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.469505648 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.504175865 seconds)
  done (took 15.815147917 seconds)
done (took 64.329499795 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.818684936 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.833254247 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.814520221 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.798424404 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.870705378 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.828612869 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.135877325 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.033317413 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.809587249 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.799832993 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.811934412 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.248984266 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.816338855 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.097013607 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.806125299 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.81295717 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.801729679 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.345352472 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.953940795 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.805171677 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.796247279 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.801684159 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.79917421 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.923039465 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.805057736 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.793792089 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.258138952 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.803960857 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.418372045 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.795566062 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.827013041 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.266710403 seconds)
  done (took 206.294275492 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.794407967 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.680255503 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.753036685 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.841324497 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.072453556 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.993108048 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.932451522 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.290800642 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.796557568 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.813434551 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.977550286 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.794249275 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.023347704 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.746108082 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.802381011 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.898035055 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.980296442 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.020675023 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.798935469 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.071969348 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.803119404 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.862105527 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.806889432 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.944354415 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.795714514 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.872733759 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.78805697 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.807132667 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.979583993 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.921841612 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.794337388 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.794274388 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.989188509 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.656426979 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.802825701 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.789333028 seconds)
  done (took 170.23275514 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.176705969 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.784415959 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.784212807 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.783738847 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.79033241 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.782706164 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.907460016 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.910647239 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.242203429 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.359641929 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.834698267 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.624495581 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.782373707 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.849396651 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.794628617 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.782143025 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.796947394 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.809625497 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.782811407 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.782509139 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910108369 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.79421266 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.871818867 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.788581191 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.778606279 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784776522 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.150078392 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.780001041 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784527908 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.022782389 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.779257751 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.778453074 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.68220209 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.45364813 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.868340212 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.780132922 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785121787 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.780349414 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.997061551 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.778978569 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.778379512 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.780416191 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.965259691 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.776602585 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.9057482 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.778655719 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.276089061 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.777158275 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.778538316 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.833362504 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.458947582 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.778509284 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.774856615 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.777516969 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.775483922 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.775688778 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.782744241 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.684867799 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.848880159 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.77679275 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.778937286 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780620887 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.77488167 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.877791106 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.776886874 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.253606779 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.835022042 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.001432614 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.900860549 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.779389531 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.84225855 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.870436792 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.775057399 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.775844481 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.775558756 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.774863115 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.775022567 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.855704124 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.775421273 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.892964909 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.783256784 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.77715064 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.825228014 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.845485248 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.776831895 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.665458922 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.77964091 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.775419107 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.085176327 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.843819008 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.77647967 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.777034747 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.776042288 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.777429643 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.777149617 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.895970938 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.901646896 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.557864539 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.78010461 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.879417695 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.780214504 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.776316533 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.909349583 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.777631648 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.9665888 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.782111956 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.858806713 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.782347555 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.778407055 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.77760822 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.808643275 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.777890159 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.835075087 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.77711315 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.147442189 seconds)
  done (took 401.825609941 seconds)
done (took 782.339541087 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.461767564 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.418296399 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.525919599 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.438024381 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.416043022 seconds)
  done (took 13.985683081 seconds)
done (took 15.707414779 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.862377222 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.869155882 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801691361 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.866135886 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.799454353 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.867355244 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.848579381 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.803276193 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.83401295 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.803483626 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.836884045 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.803738416 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.790270921 seconds)
  done (took 25.512425647 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.016867719 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.011570289 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848485987 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.010359259 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.824824537 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.038819501 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.941510484 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.927837099 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.934004537 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.793684067 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.792383237 seconds)
  done (took 22.868536112 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.018223791 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.010890964 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.851006604 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.019715601 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.825437094 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.014674607 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940735076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.932483057 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.928588209 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.794321331 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.793609322 seconds)
  done (took 22.857072205 seconds)
done (took 72.959934919 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.787797134 seconds)
  done (took 3.515784943 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.808864911 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.946812481 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.793649637 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.790846848 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.787141412 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.788428971 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.791011415 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.78752194 seconds)
  done (took 16.223793581 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.787798024 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.787375521 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.787831331 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.7867708 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.788234377 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.784683537 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.785206331 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.788141948 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.785379312 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.785388158 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.788086942 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.788340372 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.785327442 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.785041728 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.786035663 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.785684157 seconds)
  done (took 30.31403695 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.787893586 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.785967471 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.785800066 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.78696214 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.785529856 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.787264388 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.788534523 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.785890111 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.785393715 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.78524636 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.786574456 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.786383892 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.787252298 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.786197763 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.786460975 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.787578817 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.786145009 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.787050765 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.790883616 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.786588461 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.78701834 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.786824532 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.787837549 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.787165701 seconds)
  done (took 44.616385268 seconds)
done (took 96.395169731 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.449020724 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.464033489 seconds)
  done (took 8.643609486 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.791625891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.790451901 seconds)
  done (took 5.356005527 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.791580973 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.790516035 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.791448577 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.79167317 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.790587862 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.790590416 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.79085247 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.790650191 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.790954635 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.791312198 seconds)
  done (took 19.641782234 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.791496625 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.790614621 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.789187228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.791158479 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.790782613 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.787993509 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.791583349 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.790938642 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.791685722 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.789166471 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.792707913 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.790082537 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.791159945 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.790791879 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.793321158 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.790521496 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.790313407 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.788788418 seconds)
  done (took 33.965211857 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.790846452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.791812137 seconds)
  done (took 5.314728274 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.788870668 seconds)
    (2/7) benchmarking "second"...
    done (took 1.788359876 seconds)
    (3/7) benchmarking "month"...
    done (took 1.7882504 seconds)
    (4/7) benchmarking "year"...
    done (took 1.788203596 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.788268519 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.788842839 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.788265155 seconds)
  done (took 14.250513947 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.791639535 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.970466316 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.035740162 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.492036005 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.791732899 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.795251181 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.694647365 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.79577487 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.795833435 seconds)
  done (took 19.894666784 seconds)
done (took 108.792474166 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.641214485 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.787367848 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.152413903 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.848992093 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.833730788 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.083638462 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.820482163 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.008049567 seconds)
done (took 42.903455415 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.816355428 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.273697572 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.274657077 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.443459354 seconds)
  done (took 11.723837565 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.770212444 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.30188434 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.821522316 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.388974733 seconds)
  done (took 20.021456717 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.15286425 seconds)
    (2/2) benchmarking "read"...
    done (took 2.142471659 seconds)
  done (took 6.029556489 seconds)
done (took 46.319916561 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.785774539 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788753713 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.788772306 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.788863777 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.789223824 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.786519453 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.789596706 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.786787691 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.788633605 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.788699693 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.788879056 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.789797802 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.789239403 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789296865 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787133291 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785902276 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788583559 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.78727713 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786558528 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.787504337 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786374528 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788926817 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.786584624 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.787523635 seconds)
  done (took 44.642010422 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.790170437 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.788601136 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.789470441 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.790457724 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.787212851 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.78909289 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.791564241 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.787044747 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.789164535 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.789283778 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786631563 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.787683205 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.789488203 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.786749361 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788386877 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.787239011 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.7892956 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787229986 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788562482 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.785967406 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.789101273 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786252491 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.787963988 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788995466 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.786905447 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786575896 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.789786935 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.787061236 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789959465 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.786533081 seconds)
  done (took 55.379390613 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.793195499 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.795382604 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.789656174 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.790260923 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.789236818 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.78871971 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.789572475 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.788489425 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.790656194 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.78963211 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.789600997 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.789275036 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.790143769 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.79043186 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.790904922 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.789931324 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.791682364 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.790479141 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.790000968 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.791105276 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.789827087 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.789848637 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.789727787 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.790489308 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.789978007 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.79065912 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.79050947 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.790627976 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.790162861 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.78939456 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.791440915 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.789857412 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.791239218 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.791510941 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.790827871 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.790275112 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.795509413 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.79634133 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.791009751 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.790756273 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.791186228 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.789825495 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.793056816 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.791484782 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.791167316 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.790477351 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.791428759 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.792273975 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.791027484 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.790934679 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.791059199 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.790819578 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.791994272 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.792692258 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.790905266 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.790654734 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.792208757 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.791976754 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.793025089 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.79180738 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.792155944 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.791284994 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.791899831 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.791730785 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.792925031 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.792477794 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.791195564 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.792904209 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.791894943 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.792739416 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.793335459 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.792800662 seconds)
  done (took 130.698562132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.792523948 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.789577724 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.790859388 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.789685679 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790375429 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.793416618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.790481179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792278368 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790803874 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.794135444 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792457447 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791774001 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793312821 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.79759377 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793125333 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.78976619 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.792161806 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790972703 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.793921895 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793901695 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.792753595 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.790491767 seconds)
  done (took 41.15982768 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79313474 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.793411766 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.791083249 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.792832358 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791169928 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.793612455 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.794214707 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794684209 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79338571 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791234708 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791411773 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794272038 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.791281965 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792141025 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791453611 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.791407462 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794765115 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.791304801 seconds)
  done (took 34.001839975 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.791469246 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.791711714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.793550498 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.792017981 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.792111062 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.795615044 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791869058 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.793904434 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.794779559 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.792658104 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.796342289 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795296415 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.795196178 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792076019 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79528588 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.792470254 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.795681397 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793128575 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795996498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793619703 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.79313221 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79576355 seconds)
  done (took 41.199303577 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794495909 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.795339318 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.793187605 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.79237324 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.793321911 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.795047018 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.796020745 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.79331546 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.796372065 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.796415347 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794395565 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.795784142 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.793550077 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.794797646 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.795025749 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79505881 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.797006513 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.794044745 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796270946 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.794006955 seconds)
  done (took 37.634038581 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797987452 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797444227 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79744722 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797322112 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797187038 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.797234296 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798187754 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.797716389 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798435915 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.798157366 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.797423978 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.798072502 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797517363 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.798639754 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798364871 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798118311 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799051754 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798067421 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.7985785 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797843762 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.798833761 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798466701 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798431005 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.798275884 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798353327 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797998039 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79920749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.798740787 seconds)
  done (took 52.086411978 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797957718 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.797090702 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.795285742 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.795541311 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.797415521 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.795743661 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.795266813 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.796924862 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.798283959 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796074724 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.799078777 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.797690389 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799070029 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.798467622 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.79944417 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.79971982 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798661301 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.797183905 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796674545 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797338465 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.799666367 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801100045 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.798686446 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.796420021 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796048159 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.799116592 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795976811 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.79828266 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799741845 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796614868 seconds)
  done (took 55.671431545 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.81727433 seconds)
    (2/2) benchmarking "in"...
    done (took 1.81874817 seconds)
  done (took 5.376217261 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.796567898 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799155776 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.799301704 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.797092111 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.797768276 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.799771286 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.799271853 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797085726 seconds)
  done (took 16.125766502 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.800899829 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.80023412 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.799846172 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.799736961 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.800431966 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.80153003 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809279093 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.799057775 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.802526638 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.801289449 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.805434352 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.809036494 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.805146293 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801190479 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.800799613 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803441161 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.801202313 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.802039504 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.801248966 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.8010658 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801683899 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.804274432 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802965062 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.799277775 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.803197143 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.813680899 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.80843967 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.800797609 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802680296 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.806613907 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.802244016 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.799215087 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.801691196 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.801687857 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.802097392 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.801802191 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.811826637 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803089642 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.81035994 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803249022 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.801175846 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.798893672 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.805469827 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.80523095 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803940197 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.803276485 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.802406296 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.79953478 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.801556874 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.805494648 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.805500971 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802676751 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.799048188 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.809717448 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.805165729 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811442698 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.804740146 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.805697151 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.810012739 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.813274406 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.817592019 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.809603348 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80537759 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.803133359 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812110811 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.822890248 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81146612 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.801795273 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.80005411 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.802493555 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.813003397 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818379005 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.812360488 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.803627745 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803847562 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.80413312 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806106825 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803852274 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813486512 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.807979025 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.805564434 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804549394 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812965988 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.824165321 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.804282738 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.804421805 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.804408555 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.805114631 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.805127262 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.815819357 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.805495007 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.804266134 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.804990599 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.805588582 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.808900883 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.804795568 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.805085412 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.806962341 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.802158632 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.805258679 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.806500252 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809205368 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.813448855 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80557753 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.806050053 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.814242429 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.806507845 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805294109 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.816207969 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.805018806 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.805112025 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.807787569 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.81340685 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.803403422 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.808253029 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.813777106 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.805695767 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.809398276 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.805844723 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.805218958 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.814340662 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.829681228 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.807083382 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.806431468 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.810290733 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.8157854 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.806249628 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.810728258 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.808410702 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.80394649 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.803987652 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.80926845 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.806343448 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.810542435 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807708543 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.810025784 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.804296331 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.807507738 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.808054958 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.810338906 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.811374559 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.80966389 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.810155364 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.811832894 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.809163239 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.81024903 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.815480334 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.808438207 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.810165796 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.810176488 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.806333692 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80707656 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.811612536 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.807638257 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.809956112 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808873191 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.808374694 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.808038141 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808119147 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.808242631 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.807787964 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.810190559 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811850494 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.808809686 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.81397729 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.808654515 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.806939906 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.807702983 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.809034484 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.810300611 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.808335712 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.808077894 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.812718521 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.815020868 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.808528313 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.809399452 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.81412728 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811849767 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808906335 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809701941 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.811671258 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.816667082 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.809854846 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.81866879 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.809048041 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810011879 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.809046778 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.810707696 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.811217923 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810092652 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.812468807 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.815099121 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823896452 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818634752 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.811939608 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.812718082 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.810975 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.814650232 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.817445178 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.810916921 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.810727198 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811527438 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.810446128 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810444179 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.813571678 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.810723982 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.810535392 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.80978445 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.810118567 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.811198839 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.810864156 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.813875768 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.813045784 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.807638703 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.811583509 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811912611 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.812418997 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.80782245 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.811093038 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.81209286 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.81176538 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.812713247 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.824372048 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.808335149 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813399535 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812704284 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.811806203 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.811181669 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.81149972 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.814791184 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.813148823 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82013017 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.813078098 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.814786194 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81953299 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.812691354 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.812078303 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.81555324 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.812334716 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.810296213 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.815047871 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.818843617 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.812959862 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.813102245 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.813067333 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813327052 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812462681 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.820938883 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.80998122 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.812453959 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.8132224 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.817264978 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.809951104 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.816492002 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.815605191 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.815825955 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.81657232 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.81352493 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.812574398 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.815922558 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.813905452 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.812769075 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.813781506 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815894421 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.820258934 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.820081232 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.815163716 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.81809145 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.815268241 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.817469888 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.814684185 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.814294609 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.813260478 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.828175015 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.820494656 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823926786 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.818461908 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.814388935 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821030843 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.816076342 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.819066044 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.814280617 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.816794868 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.81580862 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.814997879 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.812138946 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817450531 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.815264949 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817245372 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.815740794 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.817840993 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.814379854 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.814190021 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.816926937 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.81658574 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.815288186 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.816111003 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.815887849 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.820468999 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81837889 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.816687507 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.816689737 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825236376 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.816090229 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.817899638 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.815966567 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.816528627 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.815149403 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.817988727 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.816557787 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.818099317 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.821699938 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.818223839 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.825398355 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.816847666 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.827722767 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.816286237 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.819194868 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.822766421 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.814945066 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.815714625 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.818853448 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.818376001 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825821911 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.816841894 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.817284047 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.820464262 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816754255 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.816971274 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.816044475 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.817791095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.81725981 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.81754687 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827051721 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.818274332 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.8217298 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.81954936 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.814379588 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.81700881 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.817349917 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.817167058 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82489795 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.817723395 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.819700675 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.81804308 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.819285405 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.818561595 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.817742267 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.81846695 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.8153664 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.818018425 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825788503 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.820211881 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821674481 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.818571361 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.831459678 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.819148796 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.826787992 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.818764285 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.82014276 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.819881826 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.81794979 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.823716988 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.819212259 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.822029222 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.81893726 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.820889228 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.822159433 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.820140053 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.823055012 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.820853403 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.819622172 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.81998658 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827966255 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838142325 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.819919653 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.82165963 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.816331234 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.820540841 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.823748743 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.820523034 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.818303679 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.822346699 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828558374 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.826410626 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.821286277 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.820422108 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821763513 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821686445 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.819003777 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.820772206 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.82034601 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.81980681 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.823172284 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.82027846 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.827938141 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.820228448 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.822138275 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823430301 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.820950204 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.831410502 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.821132953 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.822557785 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.820997163 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.820892472 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.822710762 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.822820713 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.821478552 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82314788 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.821098208 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.823180418 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.826550782 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.827055748 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.82488229 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.821756499 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.822309589 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.824023159 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.823169047 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822765673 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.82201668 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82188806 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.82323957 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.822208668 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.824368342 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.821013424 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.821241458 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.823046798 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.821482456 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824737767 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.828021347 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.823685037 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.819446456 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.822471693 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82215342 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.822248058 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.824464576 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.834301425 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82503669 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.83160566 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.829380894 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.82605861 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.824111836 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.826024942 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.831216284 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.822340238 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.825212588 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.823113946 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.826922888 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.824238289 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.826792573 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823951741 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.832390182 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.82424854 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.824419298 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.833953125 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.824523319 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.823831614 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.824744138 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.827389681 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.82509204 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.820048534 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.823426335 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.823926005 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833573835 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.828089284 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824571689 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82676277 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.82410424 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.825956693 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.827467156 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.824251734 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.826296752 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.822836626 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.82594766 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824984901 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82469708 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.822281629 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.825694673 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.825843843 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.827592954 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.831434421 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.822882554 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.828115012 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.826562284 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.826536515 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825427122 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.82465027 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.822107365 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.822539631 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.826290486 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.826015434 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.826628034 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.829416252 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.825977309 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.827709969 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.825624529 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826007768 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.829159265 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.8342296 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.831533531 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.823350506 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.826673574 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.827515802 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.830317796 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.826641423 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.825830214 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828247584 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.829215267 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.82575439 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.826748436 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.826054819 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.829219607 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.841616804 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.827001399 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827560336 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.827655984 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833543049 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.827137416 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.824276601 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.82754604 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.831676481 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.830263582 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.834382657 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.828027996 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835290579 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828385889 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.82915524 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.830338701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.830947819 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.835369133 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.83160632 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828133639 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.828432791 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.832547665 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.843893777 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826769647 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.837326947 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.854427467 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.828637272 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.830563053 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.828846546 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828256104 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.828580618 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.83207896 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.8284937 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.827912932 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.829526635 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.829513878 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.828934344 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.834949157 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.830124166 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.828555354 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.82838387 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.829213848 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.832757877 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.82637534 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.829320475 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.829086123 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.829865457 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.828783465 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.8302848 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.830892961 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.843775147 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.840149922 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.829354347 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.829149387 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.826108414 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.835616118 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.833514226 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.837746126 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.835829859 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.831038587 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.83271549 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.833765665 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.830590489 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.826314045 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.832147398 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.83017704 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829465866 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.826602287 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.845057549 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837067499 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.837179264 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.831913334 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830739218 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.830375382 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.832448768 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.830840381 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.831576204 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.834621949 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.831320192 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834609625 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.831076224 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.830386599 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.833864393 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.836368652 seconds)
  done (took 1085.117407843 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.828310164 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827853129 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827902807 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.828202686 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827745153 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829152556 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827938713 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.828174753 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.829246984 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.828788377 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.828433873 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828583534 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8285995 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.830055322 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828471354 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.829283034 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829379508 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.830018112 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.82967823 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82913627 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.828662824 seconds)
  done (took 40.175487481 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.831718395 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.829657984 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.829206927 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.831517312 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829093563 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.83260188 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.829374193 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832480926 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.832437086 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830651662 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.833005717 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83188514 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.830482093 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.830170209 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830540799 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832258871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.833209126 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829649262 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.833725388 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.830251758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833218597 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.830871949 seconds)
  done (took 42.060899258 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.834357385 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.834186472 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.83394169 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.83068533 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.834859049 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.830344282 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.83339427 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.833351997 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.833752883 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.836776576 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.832509009 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.835690634 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.839672041 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.836763835 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.837656007 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.83317318 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.978486332 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.833954132 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.83491828 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.834042811 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.831983865 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.841455206 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.831987777 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.83194609 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.833355754 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.835994601 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.834179123 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.834200725 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.836065308 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.835940886 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.837405821 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.834183606 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.835763607 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.837461185 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.835997713 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.836321431 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.838357112 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.836380538 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.832846691 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.835736642 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.845440221 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.852074889 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.835940999 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.844232265 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.836335708 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.835736922 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.839225086 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.84249466 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.832990245 seconds)
  done (took 91.880022881 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.835716201 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.835881426 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.833707737 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.835547943 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.836453844 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.835032459 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.83618732 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.835444247 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.83370776 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.833171428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.836613891 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.834109583 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.833776227 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.836722758 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.836068536 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.833769082 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.833476933 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.834936838 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.833610487 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.832980178 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.834134018 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.836853344 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.836911958 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.834411218 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.837428235 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.83432812 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.833819012 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.836198053 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.835402965 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.834853375 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.837022227 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.837670972 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.838663335 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.835527604 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.83444677 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.837439206 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.837080864 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.83549297 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.837243463 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.834606567 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.838329827 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.837199613 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.838215855 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.838511507 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.834734572 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.835572203 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.835260347 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.835530469 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.835693157 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.837996092 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.839711744 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.835861973 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.83771661 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.835302833 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.837993013 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.837684516 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.835956396 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.836448472 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.838853305 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.836341948 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.837418155 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.839389505 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.836469326 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.839323874 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.838577942 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.836538005 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.836101528 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.838811527 seconds)
  done (took 126.636436725 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839560454 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.839707651 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839815834 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83995098 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840519901 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.840042367 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840204239 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.8403272 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.839361132 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.840193584 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840109113 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.839083318 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.840632325 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.838392455 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839977756 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840146253 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.839407606 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839840242 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.839773791 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839833027 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.840375861 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.839409198 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.840338721 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.840680726 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.84181576 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.840512578 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840749885 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84053829 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841151441 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.841470757 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.842393536 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.841217109 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841580232 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.841224291 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.842519156 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.840885264 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.841742612 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841295961 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.841468678 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.841776388 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.842196383 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841995289 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.842101177 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.840650827 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842453587 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841648929 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.842067574 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.84318724 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.841583126 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.842183054 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.841895255 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841213642 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842031744 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842251346 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841299437 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.841959933 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842515992 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.841525019 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842918547 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.841839494 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.841900635 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.84139523 seconds)
  done (took 115.92581266 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841938949 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.84143698 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.839389477 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.839403457 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.842043458 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.839618673 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.842645395 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.842597838 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841798175 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.841872339 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841887908 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84011765 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839564439 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842522043 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.840879864 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840447436 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840101648 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839745014 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842463356 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.840861014 seconds)
  done (took 38.603748844 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.840463847 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.843931658 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.84094013 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841184802 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.844175752 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.841041638 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.844971056 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843611026 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840408239 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844164181 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.843464872 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.844589509 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841313606 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.842147533 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.844476984 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.841013605 seconds)
  done (took 31.266258019 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.841128317 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.84425943 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.845275568 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.844073073 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.841800202 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.841759968 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.843813887 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.841697402 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.842330794 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.845361458 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.844324844 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.844711825 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.844969037 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.845048981 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.842367358 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.845380346 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.842492233 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.842002911 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.84639018 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.845465976 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.843582533 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.842428155 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.846295416 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.845422304 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.842882891 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.844069948 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.842659182 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.842281153 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.843384647 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.845390166 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.842768019 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.843948263 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.843768258 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.84271983 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.846866138 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.84331431 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.846172764 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.846692023 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.846331693 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.845947757 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.846517258 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.844414449 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.846455979 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.846495509 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.844632753 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.845884454 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.843920987 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.845143358 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.844350122 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.844507242 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.846941172 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.847289744 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.847166259 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.848180744 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.846541781 seconds)
  done (took 103.236355448 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.847099318 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.84754833 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.844463481 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.847034614 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.848070421 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.844457353 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.847283127 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.844985059 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845255149 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.847459424 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.846350143 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.84740883 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844992088 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.847547699 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.846678867 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847602301 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.845440534 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.844644193 seconds)
  done (took 35.02185766 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.845051063 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84550833 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.847676585 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.845248449 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.847329765 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847796309 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846005779 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.84756876 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848837596 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.846088677 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845196846 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.848623635 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848701759 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.848992993 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846477074 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846191529 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.849066204 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849484743 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.846231086 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847850981 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.849247929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849314858 seconds)
  done (took 42.430486809 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.849956966 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.849589219 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.866248038 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.889637307 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.876799635 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.849750007 seconds)
  done (took 12.97109043 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848443785 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849267535 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.846987637 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850039856 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849852186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847413951 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847131314 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847337541 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849210207 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847793878 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846783533 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850040488 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849365976 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847813497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849454541 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849908129 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847477312 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846838976 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848584236 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849950956 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848610891 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84997809 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847991672 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848895724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848783406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848036411 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850725435 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848882208 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847646701 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85117337 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85096162 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848370274 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850724413 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848577736 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85157227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850663544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848703043 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851176742 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851273465 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849266961 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851636662 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851497806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851452799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848565693 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851993012 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849487252 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849145996 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849375371 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849735905 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852361002 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852050837 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850379574 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852598653 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852679414 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852124275 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853180721 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849844607 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849913431 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852717881 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850635045 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849729699 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85203819 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85033432 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849915064 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852049235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850002969 seconds)
  done (took 123.878800874 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850969005 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.850028475 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85120016 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851646888 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850807025 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850386679 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850629584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850633902 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850226277 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851018244 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853432605 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850534094 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851128058 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850624508 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850582939 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851511566 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85079608 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85104556 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851970799 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854312237 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850839523 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851607856 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851422543 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850723167 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851251329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854094993 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850832762 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851318061 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852019026 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851954206 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851338697 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852059746 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851982919 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851466064 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852054067 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852278186 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852892263 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852096051 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851860802 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854739707 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853138958 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855666395 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853793832 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852799406 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85314113 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852833689 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852975048 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852862648 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852396959 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852780898 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852915443 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852644263 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852749918 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852747784 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852339372 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852288971 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852811646 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85211857 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852318692 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854705293 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852916008 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852724655 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855285342 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852861495 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853782274 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852601908 seconds)
  done (took 124.037800386 seconds)
done (took 2528.94315338 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.879200791 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.869057398 seconds)
  done (took 15.543992281 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.018097834 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.970997973 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.854851257 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.88574543 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.855830528 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.850434719 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.873257131 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.855313896 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.856364227 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.855344515 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.854739255 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.042969558 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.877178506 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.855219389 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.85583627 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.949487652 seconds)
  done (took 52.112811191 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.858960639 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.861584887 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.869889199 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.861797979 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.860158174 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.871018221 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.891381633 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.864208969 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.893371705 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.881761302 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.929027423 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.868732095 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.86023707 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.908974861 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.87198851 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.874969813 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.96305588 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.932202754 seconds)
  done (took 35.721417845 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.936537695 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.865504511 seconds)
  done (took 10.605681293 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.873772829 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.86886525 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.89365369 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.854058749 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.869664689 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.859613482 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.865171515 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863689582 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.859648372 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.867962814 seconds)
  done (took 70.477064515 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.865430105 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.863026137 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.860730185 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.859059903 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.853395729 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.857654785 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.861835879 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.853139302 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.549873502 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.895045153 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.865541621 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.865796727 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.861228842 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.86279018 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.862203337 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.882977887 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.97971386 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.858223269 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.858511634 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.866127883 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.861908903 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.951467736 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.873596288 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.860871717 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.89093784 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.542569661 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.869206495 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.867076491 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.997491107 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.861966517 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.86035391 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.861903135 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.864447136 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.248899586 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.198892148 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.860112757 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.871901015 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.871384559 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.857935963 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.029440817 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.862955662 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.867320766 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.856890093 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.184495551 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94579446 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.904961715 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.186105239 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.865123401 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.863834496 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.892711252 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.864086917 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.864226421 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.876197318 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.383228484 seconds)
  done (took 132.406539522 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.858073312 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.432400144 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022549538 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.858942417 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138663115 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099052384 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.857956397 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907041278 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.858268082 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.106586814 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.033282024 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.977038025 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858473635 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.856331312 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.861668795 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.85664363 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.011393671 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.927570203 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.858878298 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.856596674 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894372419 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.123208151 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.986049719 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860903819 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.881263517 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086259585 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.983815548 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.975928076 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.357037458 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.857519246 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.927365296 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.859783493 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.857148932 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859067487 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.024554314 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966017222 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95632381 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.86046609 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856934833 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.857225402 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.521925373 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081861845 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.968910664 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.996927799 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.106232273 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086906555 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.506073755 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.85839517 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.494451496 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.056148326 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.068672339 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.111672108 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.988219638 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.860980343 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.105999772 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.859924283 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859483578 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.12193686 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085950142 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.972883655 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86204934 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.860478722 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858470459 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.176033885 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.861894362 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.970059141 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862966587 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.861302564 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.971962071 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.975717248 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.089953366 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104770977 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.889822644 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.765520031 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.370506911 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.143059567 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.931418913 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123005826 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.861675896 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.859954419 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955642034 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.610111699 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.035280884 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.179989798 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.125837951 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90339122 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.462940393 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.86080767 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.108211983 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.110370556 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.091886996 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105609114 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.026134716 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.189855477 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.863454116 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.860391256 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.054102011 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.992719749 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.863588263 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.222226527 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.11071945 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.591531068 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.892627219 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.16634173 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99894696 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.857843889 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.487288961 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.862294667 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.062497779 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.905429228 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.862947618 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.862502792 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.108064153 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.730387938 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862879968 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.639845252 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.928235226 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.863819885 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.12734549 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.864406305 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103031154 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865243503 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.172470616 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.370034104 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.906212588 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.053780699 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.10485399 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.660664007 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.129157371 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.17767933 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987412734 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121073614 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.690553454 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.863286784 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146364317 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.864151929 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.862669853 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.032961981 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.863516985 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018195536 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.866912248 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122084569 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889311046 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032518456 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865556719 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.137408235 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.908900241 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.91601957 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.865111614 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.981576592 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865188653 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.910120724 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.048821697 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.866184395 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.864379054 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.453775303 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.864430887 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.013749932 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.162910133 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88972099 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.93549272 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.392049994 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.864009373 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961334566 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89139101 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.462268882 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.863443887 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.034668155 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.866185842 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.826338608 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.86499612 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.174636865 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.099045476 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.868855333 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.865073605 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.660614624 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.576417513 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864581126 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.042404274 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.094886045 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.523702561 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085141946 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866513099 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99810848 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.869603195 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.94055846 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.213231785 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.86626829 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.864659922 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.865351773 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.865470889 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.866787386 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09115581 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893822259 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.551720488 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.004236263 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108919433 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.176664304 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.12820645 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.916857936 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.867921653 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134040983 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.868059032 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.932737942 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.868868085 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890978197 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114327115 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86945796 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.096098726 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.152551464 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.921168087 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917778886 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.868559468 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867456167 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.865889906 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.009082763 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967686573 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.867973647 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.866265168 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.983576602 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.992390734 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.05579019 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.469406508 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.041742238 seconds)
  done (took 902.518879062 seconds)
done (took 1221.177561503 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.866681949 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.870555557 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.859776539 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.870718393 seconds)
  done (took 29.279433642 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.875698791 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.872520852 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.874672552 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.875207806 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.875803963 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.872720287 seconds)
  done (took 13.058126818 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.936143759 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.870899272 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.872907983 seconds)
  done (took 21.492236153 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.94327506 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.27830975 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.976768801 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.313401308 seconds)
  done (took 10.323777748 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.877953942 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.875137412 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.87496393 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.875485358 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.877431129 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.87753885 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.878176809 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.876405709 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.877206397 seconds)
  done (took 18.703411077 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.097422282 seconds)
done (took 98.762113126 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.755901418 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.859051732 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.669541584 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.897233372 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.083268856 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.196191727 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.98110054 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.285568339 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.941376196 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.216560374 seconds)
    (11/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.019319825 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.776108088 seconds)
    (13/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.884614972 seconds)
    (14/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.592729039 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.138164158 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.945109605 seconds)
    (17/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.897549108 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.155842413 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.910083511 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.266510868 seconds)
    (21/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.979791271 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.116542404 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.983941065 seconds)
    (24/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.998842405 seconds)
    (25/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.869382314 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.88668387 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.24056739 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.872501544 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.852369341 seconds)
    (30/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.044665613 seconds)
    (31/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.095730393 seconds)
    (32/309) benchmarking ("sort", Float32, false)...
    done (took 5.625740436 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.054247828 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.744603266 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.85677512 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.95930641 seconds)
    (37/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.16824672 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.004440469 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.871452792 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.013902459 seconds)
    (41/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.956023434 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.061388774 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.933682834 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.774521876 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.242109071 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.854730132 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.14904393 seconds)
    (48/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.954490019 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.22040968 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.872016624 seconds)
    (51/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.304155209 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.464020899 seconds)
    (53/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.284608785 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.983890802 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.131913817 seconds)
    (56/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.993014113 seconds)
    (57/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.002916705 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.035260273 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.229769931 seconds)
    (60/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.963290895 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.874183649 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 4.815224296 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.930897719 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.16692254 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.95049886 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.108764684 seconds)
    (67/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.960625679 seconds)
    (68/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.349490372 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.249533028 seconds)
    (70/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.878203825 seconds)
    (71/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.898406072 seconds)
    (72/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.897161197 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.873245858 seconds)
    (74/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.23088662 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.983819643 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.36996925 seconds)
    (77/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.404284073 seconds)
    (78/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.882636046 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.534300711 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.201177298 seconds)
    (81/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.073366412 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.975368349 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.591988945 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.992606722 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.81935029 seconds)
    (86/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.08427901 seconds)
    (87/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.887086417 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.515949868 seconds)
    (89/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.877747285 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.032928025 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.248472383 seconds)
    (92/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.876959555 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.030999706 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.214289534 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.984476042 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.858666936 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 8.21787583 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.781409032 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.120066764 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.078947369 seconds)
    (101/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.862655957 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.094798154 seconds)
    (103/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.957707637 seconds)
    (104/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.811348808 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.08888854 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.673010696 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.505303255 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.435086223 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.776642037 seconds)
    (110/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.461664368 seconds)
    (111/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.80635166 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.875997167 seconds)
    (113/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.480864639 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.096964593 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.005337661 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.883208006 seconds)
    (117/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.878326276 seconds)
    (118/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.812379911 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.044674165 seconds)
    (120/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.064449674 seconds)
    (121/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.162116529 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.005218893 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.32190566 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.899199045 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.951722818 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.876666891 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.137175866 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.942679289 seconds)
    (129/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.906200356 seconds)
    (130/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.861462666 seconds)
    (131/309) benchmarking ("sort", Int8, false)...
    done (took 6.277659309 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.092955281 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.158003249 seconds)
    (134/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.015557131 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.250865591 seconds)
    (136/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.131755569 seconds)
    (137/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.224208059 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.073481612 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.983358926 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.981983894 seconds)
    (141/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.293038874 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.998494888 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.970599236 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.218231627 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.863529658 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.998566879 seconds)
    (147/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.388866972 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.566323768 seconds)
    (149/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.147814558 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.974209905 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.972419428 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.101074308 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.168583696 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.910984247 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.132526402 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.029388116 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.011693502 seconds)
    (158/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.878485282 seconds)
    (159/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.007983294 seconds)
    (160/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058409692 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.00346739 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.471727342 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.060739741 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.906046647 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.70403724 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.023262623 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.865773656 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.177716004 seconds)
    (169/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.401088892 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.056327806 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.927810953 seconds)
    (172/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.961705673 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.903282126 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.166400695 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.588163243 seconds)
    (176/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.965584169 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.888880928 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.067494776 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.534596273 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.026555668 seconds)
    (181/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.162045357 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.246232681 seconds)
    (183/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.911764489 seconds)
    (184/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.209864727 seconds)
    (185/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.908207357 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.962956425 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.307634319 seconds)
    (188/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.887863353 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.904235991 seconds)
    (190/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.020994689 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.174091695 seconds)
    (192/309) benchmarking ("sort", Float64, false)...
    done (took 5.703462763 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.9907605 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.887914195 seconds)
    (195/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.025256955 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.924217008 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.922801527 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.582045644 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.951782828 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.881302859 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.884646017 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.328709519 seconds)
    (203/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.239195676 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.534148108 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.870807288 seconds)
    (206/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.092077409 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.16102281 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.881083099 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.941399057 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.262968479 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.205614691 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.253735184 seconds)
    (213/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.191816465 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.475073899 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.388644599 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.234612828 seconds)
    (217/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.007685029 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.865105681 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.915738075 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.591617983 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.082876113 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.880824037 seconds)
    (223/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.909633759 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.148347068 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.868410913 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.316697246 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.494313614 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.990466969 seconds)
    (229/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.642477166 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.966622166 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.457702195 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.943624154 seconds)
    (233/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.937786043 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.39537044 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.723764717 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.288793951 seconds)
    (237/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.079946985 seconds)
    (238/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.255025465 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.814542899 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.992630004 seconds)
    (241/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.387089618 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.884759455 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.769069718 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.88950935 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.903928575 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.870567395 seconds)
    (247/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.168178027 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.580241595 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.884091821 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.87800303 seconds)
    (251/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.334253647 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.934586217 seconds)
    (253/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.886091958 seconds)
    (254/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.019486323 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.88754626 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.98521109 seconds)
    (257/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.918169884 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.545898296 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.131981938 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.887092326 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.889562296 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.216783144 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.910871391 seconds)
    (264/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.278543773 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.280185366 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.187589461 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.072601723 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.767007884 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.968392678 seconds)
    (270/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.9852346 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.982542921 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.400519478 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.086942565 seconds)
    (274/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.471703135 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.950978432 seconds)
    (276/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.122043705 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.110436216 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.871146453 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.988072213 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.889986424 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.972640277 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.968113411 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.501685704 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.972348345 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.487049234 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.997278336 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.904847314 seconds)
    (288/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.053719173 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.975688616 seconds)
    (290/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.133131824 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.079431451 seconds)
    (292/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.244203057 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.2568544 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.910465027 seconds)
    (295/309) benchmarking ("sort", BigInt, false)...
    done (took 6.885304712 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.192621593 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.887175291 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.941120128 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.492021003 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.88762333 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.92304969 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.98045882 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.874500013 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.194340029 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.185192974 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.133536119 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.911691396 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.117134174 seconds)
    (309/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.921755257 seconds)
  done (took 1026.293070317 seconds)
done (took 1028.118391792 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.917857594 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914575096 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.89605877 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.919436927 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.008420391 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.929471946 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.907641848 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.899350197 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.944795474 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.946523732 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.896012028 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.92827008 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.898567246 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.898140328 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.897243292 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911790291 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.199718772 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.920529737 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.913751447 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.906937125 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.914050014 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.897314458 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.946760984 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.928871976 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.901246927 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.900642142 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.900821808 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.917767195 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.009771267 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.901183985 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.901655976 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.910092096 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.198905276 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.91848177 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.893483166 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.917829049 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.909854802 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.90879746 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.901849864 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.930482876 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.329932626 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.903372095 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.900023502 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.899397334 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.899038467 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.903297401 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.899677861 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.906059337 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911558757 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911715577 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.326913145 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.919503609 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.902990241 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.900069092 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.910594378 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.899926768 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.902817947 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916452641 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.919085906 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915451842 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.191026293 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.926670202 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.901766292 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.916870064 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.906906422 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.365934419 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.899761258 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.905299577 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.329465331 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.909908356 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.367304065 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.914209056 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.900815402 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.914845873 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.932209995 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.201763547 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.917332028 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.900039441 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.907960153 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.898731409 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.910483876 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.918813727 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.905602364 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.901814905 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914653446 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.933537625 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.911537811 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.90191867 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.911202356 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.920933328 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.909310069 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.913256885 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.904566956 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.897068298 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.911509803 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.904851306 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.905192056 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.904533516 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.906711851 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.912523 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.327949619 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923838433 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.899028261 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.898607506 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.90246341 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.915818899 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.330503751 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.907557529 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.924185111 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.950513569 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.903842785 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.193663221 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.927193153 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920147055 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.911999032 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.906248463 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.898085403 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.194064239 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.353700748 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.92364699 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.904202815 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.901829331 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919752597 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.90509697 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.900660284 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.205016437 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.926219665 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917496488 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.024782232 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.914289024 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.936039997 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.902979392 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.907373281 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.933037595 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.920116514 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.93581504 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.906831267 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.92005736 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.920060774 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.901939707 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.915877428 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.914630467 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.906320052 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.909372876 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.898595409 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.933044487 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916362468 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.9170678 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.924941136 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.0266926 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.902110177 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.196308978 seconds)
done (took 298.563760504 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.970497734 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.902452558 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.004594261 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.900241749 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.984245268 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.986189677 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.898027499 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.898631574 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.898040141 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.281759746 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.898021166 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.899536389 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.896601547 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.898049331 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.983257084 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.901336634 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.898683474 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.244659995 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.90290485 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.97376684 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.894315186 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.899352138 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.901572981 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.285844173 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.901277429 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.902562381 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.97308168 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.901961713 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.249549018 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.901825664 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.903442907 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.250109295 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.993547561 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.920210934 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.912021703 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.909178842 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.98641322 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.905497133 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.985846812 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.98500605 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.0080298 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.94367546 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.900012669 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.895992395 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.903959763 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.903548768 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.900011523 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.930172456 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.900518173 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.900839397 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.245668524 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.912625664 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.910142935 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.900486222 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.900210106 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.924590757 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.90129001 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.904283727 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.993941066 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.904434155 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.966126908 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.289224528 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.283754968 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.903675582 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.898921689 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.901390679 seconds)
  done (took 186.551610618 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.970063017 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.979908737 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.972307545 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.906844107 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.954909731 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.975683003 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.906963881 seconds)
  done (took 15.507769194 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.91042657 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.903731984 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.959086477 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.959429014 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.904020901 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.055083451 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.903731854 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.915990726 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.901845357 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.971010496 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.905740854 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.905593836 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.911883458 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.902164765 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.958895713 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.916436954 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.020865204 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.906106997 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.905845119 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.062224393 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903252941 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.912018137 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.959857725 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.917691706 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.906103804 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.912441606 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.492884294 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.906498577 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.902497399 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.905431509 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.903868073 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.946061617 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.906092643 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.904871304 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.903644002 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.021408345 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.906301065 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.903519172 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.905660985 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.900706749 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.90569631 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.905121119 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.906472493 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.903054696 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.905441864 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.930627431 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.906501455 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.906492731 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.906468006 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.906527511 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.96924473 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906666439 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.905058008 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.904007733 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.979728876 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913517517 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.907774035 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.904473036 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.90805772 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.905268125 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.064608465 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.962166114 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.906192587 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.961605954 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.906855022 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.906709111 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.905184377 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.906663713 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.96905508 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.905997075 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.961900858 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.904634241 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.090114987 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.93259906 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.909131391 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.911042676 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.911747051 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.910102619 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.906246065 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.915040703 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.905064633 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.90925422 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.914232407 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.905394023 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.905180008 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.016010298 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.017575076 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.905881076 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.922067301 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.915822477 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.905605687 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.973038085 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.908116565 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.906279978 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.973200569 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.024815682 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.966775852 seconds)
  done (took 209.554180869 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.914058869 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.916947255 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.909950182 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.337797693 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.910589022 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.909934084 seconds)
  done (took 13.744945454 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.911367902 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.911112994 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.91056777 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.909068787 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.909749139 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.91033074 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.910405244 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.911114253 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.912146368 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.910169042 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.910794735 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.911044551 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.910738353 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.910054484 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.911375666 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.910003251 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.910684122 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.907770667 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.909651717 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910198483 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.054038671 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.910507179 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910337023 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.911219693 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.914080438 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.909920511 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.919000308 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.910971125 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.908964938 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.919514877 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.915083506 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.911931821 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.911495955 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.916252594 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.915125671 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.912307694 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913908025 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.911932142 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.908115527 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.912748802 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.912567933 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912220546 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.911537999 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.913131404 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.913501407 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.916488782 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.916197764 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.920343674 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.913064869 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.913649029 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.91359367 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.911509006 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.913159183 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.91400308 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.915990074 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.916997787 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.916607778 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.91311483 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.912187575 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.913778444 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.9123352 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.913388389 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.91407793 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.916303676 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.919698416 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.913337861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.914114445 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.916635436 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913428957 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.911902303 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.91364306 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.909967485 seconds)
  done (took 140.707250437 seconds)
done (took 567.911434224 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.165922768 seconds)
  done (took 9.015587603 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.011842909 seconds)
  done (took 8.95134168 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.372812589 seconds)
  done (took 10.22295572 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.916997569 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.909627909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.92067119 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.911993446 seconds)
  done (took 29.517283194 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.254592287 seconds)
  done (took 9.104788005 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.917798243 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.90694933 seconds)
  done (took 15.739894439 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.956925416 seconds)
  done (took 8.807807944 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.98813557 seconds)
  done (took 8.846040359 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.919106033 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.915219818 seconds)
  done (took 15.697283985 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.893641667 seconds)
  done (took 8.744108453 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.51329 seconds)
  done (took 11.370715171 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.917238118 seconds)
  done (took 8.779002357 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.957168082 seconds)
  done (took 8.808305118 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.927656331 seconds)
  done (took 9.778762651 seconds)
done (took 165.229356809 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.910313096 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.908851283 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.906730454 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.911948497 seconds)
  done (took 29.489202406 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.946827642 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.947920017 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.949374394 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.958430294 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.950644067 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.94705599 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.939380745 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.940397918 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.958709187 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.951136032 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.95044319 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.951630057 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.946983628 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.940578972 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.950123342 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.951572485 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.958645045 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.949978239 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.940878773 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.95181025 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.916347959 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.959590005 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.951703152 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.91666862 seconds)
  done (took 48.578811183 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.11638515 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.987850361 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.070166359 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.968936102 seconds)
  done (took 9.995884477 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.968137357 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.968784222 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.98022069 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.01947395 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.045468642 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.978234679 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.943973211 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.938221337 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.92356126 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.970234874 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.04443137 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.985397581 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.053654559 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.916440028 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.109209139 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.915925872 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.916446455 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.968614715 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.019012504 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.051785014 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.916393121 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.967485695 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.972053111 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.985725462 seconds)
  done (took 49.412577817 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.914804275 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.924381585 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.9219654 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.916127533 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.916307631 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.916616319 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.921966804 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.917048147 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.937921046 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.917717667 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.914859582 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.916526489 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.915373353 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.9168533 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.916556024 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.928725735 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.930146605 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.917838405 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.919582629 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.922737299 seconds)
  done (took 40.258450304 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.911078561 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.765215748 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.263606991 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.167039651 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.911630237 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.911241233 seconds)
  done (took 31.784609201 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.929481405 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.979019412 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.923410728 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.971204881 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.058768284 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.925781204 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.918645811 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.984826229 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.024643632 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.984600583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.93690753 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.944237209 seconds)
  done (took 25.436383282 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.912746404 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.914832294 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.915943989 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.93121749 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.929234294 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.925289672 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.925480095 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.911950106 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.931365708 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.937388637 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.926337984 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.930273262 seconds)
  done (took 44.95017169 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001450104 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.959089653 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.976359834 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593499895 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290801317 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125403281 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.518786374 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.243723865 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.917757291 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186365197 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.930489564 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01548873 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.170161662 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305552596 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.942624145 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.364354464 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204592202 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118739882 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941240145 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564064954 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976179954 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.011453352 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.67200684 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969965487 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126526098 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.04277139 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.175417584 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.914981124 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050802838 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95297445 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925438771 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91547976 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188914504 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292400549 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019325263 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925248295 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.534482648 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.626922341 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.900985769 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.652131686 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.604176689 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.029364537 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926580937 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916486658 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849805145 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.069310706 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29720581 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.921629787 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.626899013 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915723845 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926799625 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011809661 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.919784824 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.732088952 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835886361 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.918784861 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.913886226 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922852513 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.489854449 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.002007932 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.995521037 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.884430974 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.008636822 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643559369 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294750083 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.061176983 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.921284781 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921291734 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850736864 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.573082511 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970542433 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246570297 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.938632683 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.567383783 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22218169 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.001948998 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858686459 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17989274 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.345299012 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.88542358 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145409165 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917823164 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854546112 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.872155612 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.851888518 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172545002 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953326245 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.657543561 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95693063 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.245607528 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928733616 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937475369 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942502459 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142073023 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.80258953 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917829999 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.695071602 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06161314 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94112788 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250526657 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852881152 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.923230888 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175617254 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.130253565 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.900165376 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.398620129 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070438638 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381590699 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.96643234 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.975654532 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.961908827 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.183264029 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973894003 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.014203711 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971627029 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.919014206 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209335165 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406679855 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.05109635 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.947985566 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045026757 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.226384721 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946988567 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003823409 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928172392 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919994156 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.639258828 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.47019189 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.920483767 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.923003651 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.895064273 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963629626 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.922546373 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869495039 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.543656333 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.94713178 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.934195323 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144726439 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394265755 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227570399 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85574741 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249446543 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.976666145 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.144424477 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.564873421 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.99346108 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182089212 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900303572 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.925932668 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964660079 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940262397 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019492485 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94309917 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.975964824 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.211130924 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.925062017 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.926073662 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.671333073 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.957934192 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932393573 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.927267201 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672630792 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187949636 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943606297 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929446915 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.811295705 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.938495061 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988044095 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928736926 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933637325 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.461019371 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.634869322 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.929854091 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.506565337 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147784729 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934027222 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.629873741 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035890872 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.005290533 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188067112 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980853411 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.858128068 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.633999145 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.61735597 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923498009 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858840985 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92452262 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932915249 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934781622 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.12020171 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19211814 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966219394 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.577464206 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.964745415 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935039749 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.93016809 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924286666 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.435097301 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.009736731 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.003116593 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.968534322 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069895209 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.939962278 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.859102894 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.929052078 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929713214 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925708512 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925567839 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958294002 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.586047792 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305406724 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18611292 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.533750529 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938036508 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.601805157 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.981125071 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.926114796 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.58791655 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.106982474 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.962674063 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944298127 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.936828994 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.583401369 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.619323024 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.497316801 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242360007 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219862008 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351259664 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.044104833 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954742222 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266640013 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860809887 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.484263473 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983823059 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265897282 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871128141 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010804238 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.569862721 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264753472 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940544069 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15379268 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305017836 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.662614506 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058459223 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138819161 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961331124 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.983920486 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.885302493 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.213177776 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070157775 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.580776944 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121652938 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260231354 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.583441038 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.042224143 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.926851077 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.612053595 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008793719 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.637074444 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098368121 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.021633561 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.873412125 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386505422 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.934162806 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.15378097 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269096935 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.999710571 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.042776938 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865120731 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938993382 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938968221 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.929717622 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.924513315 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.811947293 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.18276177 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939877513 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863001552 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.952964919 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205777252 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.82673351 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.934092637 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929245587 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21448366 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377844649 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093350362 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.931173995 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.443274733 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936756559 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863984784 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863927925 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.622751232 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.935294687 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905546634 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130707808 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.028886171 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842767865 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909724971 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176080413 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.186350781 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.943885229 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.194918795 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201014052 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.629448732 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954749688 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.029567924 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.579794473 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.029061367 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931080342 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166494136 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683502017 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158173569 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.981534574 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.879280369 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.932517738 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14524934 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932189488 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.824636665 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149661374 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.653104372 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.933471666 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247560311 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001735924 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.789634212 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965148051 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.022559894 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941258521 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010699244 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942052483 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.941929805 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.943027094 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978185284 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.791863632 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.045563308 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.946834556 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026424185 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025564375 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.452397992 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.93735421 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197805988 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290778281 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245188599 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987989335 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932696479 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934037399 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866993579 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081906523 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.158715716 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207697918 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.062589971 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.046626589 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957955319 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.60050927 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.031946653 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171209977 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208151449 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.827271113 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345775931 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970457565 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.933690346 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944560763 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.144188351 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137085571 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224146151 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.081411348 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.920775163 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.297576255 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208871287 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.933853575 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935151152 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.523233031 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.957494503 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.626136848 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.974803956 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.845506584 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199154114 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94499386 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323786106 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95691198 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.093639516 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.708056321 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.590129096 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.222488968 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.916240477 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994563443 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199292716 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305137789 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245385062 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002117843 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945534578 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.049147233 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083524991 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.81491658 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.936509262 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936116285 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9851664 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.6467069 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945351848 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206217652 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242074592 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.935074909 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.818948645 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959373284 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.946657222 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159455341 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191367554 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187384657 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94657105 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.943432534 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.752405552 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201911384 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990668094 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870601509 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.939972098 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033901837 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184144339 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9572286 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.390121196 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.647861544 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200121691 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.935588549 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959516087 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00232931 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.289882947 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248410885 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.465854715 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137799963 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.522177659 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.415377596 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237260941 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.942928051 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.99636248 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239720853 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.941383704 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.920795119 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974734159 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.197535501 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246451854 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.058324591 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593390367 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.907120412 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.280344685 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494363459 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876703811 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948750561 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.999135051 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93883906 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.068219503 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950200522 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.825753549 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.988306374 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.707250117 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216699596 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.943552021 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.933357432 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.654415029 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.113474136 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971520124 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08246486 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939435856 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.613889373 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.290601411 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195692256 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.919444555 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.946460099 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.943164775 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939496465 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.926982591 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.135847914 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.136251119 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20569732 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.946450523 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.974595154 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943794534 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.155961548 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151439089 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.807504434 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066802914 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.919241447 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980123908 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.845794666 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.447882965 seconds)
  done (took 1696.564696146 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.964808953 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.973130405 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.983672305 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.962386295 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963263017 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.033896172 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.969606812 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974277746 seconds)
  done (took 57.709046636 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.941037625 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.164364218 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.950540609 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.943090804 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.950910204 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.94117103 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.108129828 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.949253805 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.950944007 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.951796369 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.942105841 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.941213003 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.255622713 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.965048737 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.943756863 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.944520637 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.950535734 seconds)
  done (took 75.697330473 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.943118766 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.951600774 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.96394264 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.954716573 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.960211935 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.949626804 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.7531415 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.963961921 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.944241174 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.064044308 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.573794104 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.960761858 seconds)
  done (took 87.869352517 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.951041415 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.948993797 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.949750948 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.949213045 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.950405593 seconds)
  done (took 11.636518086 seconds)
done (took 2211.25304828 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.196034829 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.151490751 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.171975808 seconds)
  done (took 6.208716921 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.098643726 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.146422363 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.265797522 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.285968577 seconds)
  done (took 10.689883364 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.233308732 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.336154958 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.150185404 seconds)
  done (took 8.610072463 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.346218251 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.963574821 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.056047742 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.946983024 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.949802613 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.94992033 seconds)
  done (took 22.73899972 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.953492029 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.955733268 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.95303636 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.955494221 seconds)
  done (took 9.70866142 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.93503865 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.69643713 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.938220997 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.952163303 seconds)
  done (took 21.413262127 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.702263835 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.711798092 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.697804921 seconds)
  done (took 10.004646905 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.535251432 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.867000686 seconds)
  done (took 9.294708105 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.210077276 seconds)
  done (took 4.103427028 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.085287076 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.219061698 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.413179395 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.435732286 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.495944923 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.7883862 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.252486086 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.188653754 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.339811076 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.371212288 seconds)
  done (took 25.48234984 seconds)
done (took 143.697637371 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.330788936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.192121409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.149513615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.287805072 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.173200596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.149811293 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.173037562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.270788864 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.799562211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.79679842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.289228753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.175293134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.118092165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.193266151 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.118211567 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.195073633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.173626002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.348338787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.986062953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.184602133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.171549406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.927152864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.13198626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.941678215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.180609486 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.104334997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.504605876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.192271195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.140483894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.517831709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.106555629 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.336969251 seconds)
  done (took 175.255545287 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.871367754 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.953925104 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.95367558 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.953375584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.453184447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.954720123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.954631116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.955040301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.195314679 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.179554555 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.954778002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.443322259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.958157563 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.953616126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.957830969 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.960910032 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.340584869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.956394482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.971567045 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.974130818 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.976505482 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.385003809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.973003501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.41927926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.354590502 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.974989977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.954336692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.976309784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.961492274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.964839032 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.96747179 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.955333544 seconds)
  done (took 211.655418636 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.95435351 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.955436328 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.954647398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.954847144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.955317507 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.957931086 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.957050102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.95569433 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.509998724 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.494670553 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.960292955 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.962716424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.962603168 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.956297672 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.963252862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.956591643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.963819985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.959520392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.962400496 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.96501666 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.969410382 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.849647533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.957153815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.871936731 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.966931624 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.962444349 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.957353742 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.9686175 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.974316616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.973549542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.973128653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.957286669 seconds)
  done (took 223.553962016 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.157928891 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.962644538 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.963213169 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.921741977 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.962825186 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.96227867 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.95657568 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.158926698 seconds)
  done (took 19.968453016 seconds)
done (took 632.332505033 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.419928215 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.259410297 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.136990468 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.9844176 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.204745483 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.021048118 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.98239003 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.043586808 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.215958888 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.056453241 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.613796096 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.998376495 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.70893571 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.000869799 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.108757812 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.035912906 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.538334801 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.631270006 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.154304442 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.05007935 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.153895574 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.913791922 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.054177027 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.246970431 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.733892049 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.954307285 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.175595969 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.541891188 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.99222786 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.146399671 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.745477891 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.394755894 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.991935439 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.979361196 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.033164729 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.015043137 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.347587571 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.990760517 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.102744343 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.723737426 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.031154715 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.102447324 seconds)
  done (took 108.437416531 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.955421908 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.954224837 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.952754181 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.954613637 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.954343617 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.95362457 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.95349282 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.953614583 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.953759574 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.953252252 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.953315721 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.955162612 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.953548307 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.95548669 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.954008354 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.954678496 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.954811568 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.956961606 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.95362344 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.953201431 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.955282597 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.953428162 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.954860224 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.953369935 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.955226114 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.954974404 seconds)
  done (took 52.730854659 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.9671089 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.107889771 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.184208254 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.982572937 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.965952806 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.970142474 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.984891517 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.971019419 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.969428512 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.969340164 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.062522722 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.971084456 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.986878393 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.186514033 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.979077353 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.967494417 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.967675474 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.968044199 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.11730122 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.982993022 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.986975221 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.970571121 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.986326409 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.980670367 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.969621606 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96789408 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.971720743 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.430855374 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.975133772 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.06189027 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.012393006 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.990375106 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.401697571 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.195109288 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.018752711 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.97548803 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.968504507 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.069209376 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.9728288 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.968728068 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.986041646 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.972671199 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.188805581 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.464990621 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.980031077 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.968854596 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.441611564 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.074188307 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.008243416 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.980859041 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.191931386 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.982645358 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.97014615 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.96894942 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.00501953 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.979728433 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.969343866 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.327059646 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.979606581 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.987567814 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.973867973 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.970681987 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124944118 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.97664541 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.112929334 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.977135273 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.97760741 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.971236988 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.18900849 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.983312096 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.472688438 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.980934393 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.970819209 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.065367427 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.116953641 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.466199653 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.982114603 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.12910782 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.421048952 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.992415519 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.977003305 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.422778191 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.997020813 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.978484756 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.973172955 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.972976968 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.971907693 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.015875938 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.987204228 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.409390294 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.473494569 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.338893833 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.996564708 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.986635347 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.971411778 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.328938792 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.978179385 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.971840076 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.183614944 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.484210318 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.982412696 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.979227682 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.45772206 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.98381863 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.990988938 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.979831522 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.194130604 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.98382794 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.016236172 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.97191199 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.979029627 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.975452728 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.990891871 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.978778215 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.9718616 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.446395137 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.082141837 seconds)
  done (took 243.711277161 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.967927222 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.978961641 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.9682311 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.967334343 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.967266367 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.972285642 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.967568421 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.966236179 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.972067999 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.966979122 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.966964609 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.97210161 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.966934742 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.973167231 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.489257458 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.979490544 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.582830092 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.974307752 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.972473724 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.972456228 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.649345873 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.978358969 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.971324363 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.973742601 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.975567897 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.975054329 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.983919633 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.999712922 seconds)
  done (took 170.962994414 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.979583351 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.159234925 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.995794474 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.015440377 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.986922444 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.976972227 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.004200423 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.002508115 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.983994826 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.976966747 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.97754033 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.039620037 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.992315996 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.108126091 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.01245343 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.011174437 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.08775519 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.988687499 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.977782789 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.977633085 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.008005929 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.979125438 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.040840398 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.108790134 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.000265641 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.096944531 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.986102924 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.98063079 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.98103256 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.097684379 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.997308324 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.040695939 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.008604505 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.999404955 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.100863441 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.099285899 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.088421943 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.013731227 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.986757225 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.978831408 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.978703515 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.968338884 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.097734144 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.002543244 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.982637227 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.088053073 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.000719617 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.982000481 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.990338903 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.978915857 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.994720905 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.998958299 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.047995285 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.112689295 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.016660391 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.006140539 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.006988985 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.267993925 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.991741812 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.082915936 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.978023078 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.099370479 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.003003016 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.97078134 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.98051964 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.986431484 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.009994047 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.013892072 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.092232442 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.991675162 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.084664599 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.019330434 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.987970628 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.980302211 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.984749266 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.0993319 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.109080946 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.018866199 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.021477332 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.013854296 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.978340603 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.983059169 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.972071365 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.000536737 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.986048659 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.09799448 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.105457036 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.992925702 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.983913061 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.984269652 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.985000665 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.008922973 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.108969332 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.022637905 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.082223002 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.053512335 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.057662609 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.997239855 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.995553896 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.986317729 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.047521099 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.997908078 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.994077753 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.312775848 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.05527815 seconds)
  done (took 214.598516246 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.07888629 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.468980937 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.040440274 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.039203497 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.264443803 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.405609404 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.783092918 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.031389092 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.032089757 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.057722865 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.194005034 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.095497782 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.045944668 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.021033824 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.440486633 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.0229009 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.032123488 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.053330165 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.037781666 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.604497446 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.355842461 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.154860575 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.032376519 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.149102638 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.015981708 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.337517022 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.535544191 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.420975917 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.066982766 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.379658371 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.365277646 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.717364018 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.242953264 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.276560127 seconds)
  done (took 78.727012895 seconds)
done (took 871.061838554 seconds)
SAVING RESULT...
DONE!
