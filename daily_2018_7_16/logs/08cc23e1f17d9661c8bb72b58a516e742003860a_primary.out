cset: moving following pidspec: 2051
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.424860247 seconds)
loading group "string"... done (took 0.518452109 seconds)
loading group "linalg"... done (took 8.648939267 seconds)
loading group "parallel"... done (took 0.178909383 seconds)
loading group "find"... done (took 1.413309069 seconds)
loading group "tuple"... done (took 2.004391024 seconds)
loading group "dates"... done (took 1.35659007 seconds)
loading group "micro"... done (took 0.207593587 seconds)
loading group "io"... done (took 0.599942471 seconds)
loading group "scalar"... done (took 42.629728825 seconds)
loading group "sparse"... done (took 13.642367473 seconds)
loading group "broadcast"... done (took 1.10800752 seconds)
loading group "union"... done (took 15.073882755 seconds)
loading group "simd"... done (took 5.306581455 seconds)
loading group "random"... done (took 10.612498482 seconds)
loading group "problem"... done (took 2.173259429 seconds)
loading group "array"... done (took 25.770095584 seconds)
loading group "misc"... done (took 1.094686599 seconds)
loading group "sort"... done (took 3.815339168 seconds)
loading group "collection"... done (took 21.825895399 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.597335812 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135960665 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148719809 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.177413545 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207316134 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139476152 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158413861 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.465867789 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.049033979 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.23480847 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128918284 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.538710526 seconds)
done (took 5.739308863 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228772454 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.075132741 seconds)
    (2/2) benchmarking "String"...
    done (took 0.131314512 seconds)
  done (took 0.903881112 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077737705 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.174461642 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094443848 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112150403 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112375512 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114211225 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096532833 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112239385 seconds)
  done (took 1.516021202 seconds)
done (took 3.4316255 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.772639654 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.841905518 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.553393959 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.130085955 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.161110731 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.134014344 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.318213925 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.164521322 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.116486982 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.126051678 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178890878 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.412553235 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.43524907 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.028728558 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096468324 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130744436 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.08269338 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.755423043 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081381105 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133498139 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506005412 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.113781263 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120849874 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127604002 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.210593724 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131287955 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.183037718 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10369418 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.684223732 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103317112 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187985637 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098922207 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166050874 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.228352865 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.078535445 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108649079 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685303253 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.196021825 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114989173 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09604992 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.691113449 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079732987 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.201166522 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109907329 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113338519 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.202542637 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119645161 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077206926 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.099903866 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086835708 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172439361 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.477878173 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107415264 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.149472975 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110576386 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.740689859 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096863351 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.161934486 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125580352 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.1140505 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100269666 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.119475064 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16510507 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.122708921 seconds)
  done (took 20.181737713 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116200003 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139476184 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093891063 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13871642 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139497042 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096639028 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083520798 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093515341 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109274831 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182029343 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135825345 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144080139 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091943636 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081335274 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12165272 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252453653 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105729192 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.1228721 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083548873 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108176006 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140611038 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095640255 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108917081 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093822648 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17193525 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221872886 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111320361 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126823006 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096694011 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101916606 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145237509 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163561817 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07543744 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09602044 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182635038 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120885452 seconds)
  done (took 5.205752175 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198474736 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125320885 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187947019 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175852122 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148219443 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165143437 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117607783 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263543062 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.174681051 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164756133 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13192078 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119074279 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079981781 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098383588 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079228817 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.78680542 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188328329 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149211253 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124608869 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104380552 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08400735 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.165174804 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103943579 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08229553 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105317536 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.115819627 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.691098624 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173662708 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104818666 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.245287173 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099912994 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110612886 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133153455 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199539334 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12893296 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120557716 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105269727 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081862636 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221369574 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091510027 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095983317 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106714057 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135956774 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137633515 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099909527 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092011064 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.247066408 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081944418 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117460762 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.082476731 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200430629 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096586056 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099218623 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.344679045 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117935478 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086424536 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100064122 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.303380597 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134646713 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081157393 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078025016 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104893222 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079805647 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.408413043 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08961761 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.957999388 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095152159 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159237476 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100638277 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088450805 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103830765 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102569634 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102864221 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097432694 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081535207 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079861619 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098521458 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084313579 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118966971 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102046188 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080005824 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162810305 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119970764 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082756566 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117851766 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126744266 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085257955 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097115448 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113743793 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098393644 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084516824 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.143864769 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105063458 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116835097 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084572636 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143913075 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098578744 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.197654366 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093575102 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081246631 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125910338 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099476729 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085125877 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130066923 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.12109794 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097933803 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085439742 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098465014 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080395111 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147749613 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095013986 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08102223 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101040986 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094667667 seconds)
  done (took 24.162979592 seconds)
done (took 50.249229854 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.438014367 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113028314 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113584378 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112662726 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111135168 seconds)
  done (took 1.67306998 seconds)
done (took 2.430416869 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323416504 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196837722 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086012145 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193860566 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086589187 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201295381 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167666854 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101392371 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214191399 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083566763 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192056295 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084824731 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105578764 seconds)
  done (took 2.824794593 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092951178 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118735137 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081717569 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109244846 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075173932 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091343467 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108748983 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.136304572 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090067253 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085061602 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093701787 seconds)
  done (took 1.83606511 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092324382 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116533154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08098278 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090608002 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092954958 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091198506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108924867 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102201553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109657383 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086636883 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093374809 seconds)
  done (took 1.820001885 seconds)
done (took 7.22997731 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.147679928 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.741732825 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.102326052 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.195309118 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.332968156 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.223100988 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.649432348 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.115491133 seconds)
  done (took 16.441981935 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.128174991 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100735534 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081825645 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098439788 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080496167 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097666152 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082484655 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097589955 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082755731 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097019401 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079365952 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096054859 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.079532626 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098050325 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08139326 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098674909 seconds)
  done (took 2.301301107 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116328494 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116018378 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103991757 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.089224125 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.102918592 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101152107 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086813231 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101144453 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083294204 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099834721 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090492768 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104749721 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08787551 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.099013068 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101982348 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090943843 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098961183 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08725862 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102814769 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.087063521 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106158917 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10017953 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088157623 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10483242 seconds)
  done (took 3.213905949 seconds)
done (took 22.71487375 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168164642 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08522392 seconds)
  done (took 1.013145004 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102236202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.119986961 seconds)
  done (took 0.986912778 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107854737 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09854633 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137245398 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116145975 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082894316 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080466272 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132345509 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099973856 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081790483 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098216011 seconds)
  done (took 1.803555034 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085748432 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101682439 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090260899 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119533012 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110306757 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083540975 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102576608 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085837999 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103264864 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080896522 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107463182 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102446218 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.105856947 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119370418 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086244851 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103862412 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108369635 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085569475 seconds)
  done (took 2.549462569 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081630807 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082838624 seconds)
  done (took 0.933412729 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083910778 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096467263 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083891769 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100622492 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080393365 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095873674 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079742795 seconds)
  done (took 1.388824037 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.480731697 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.187372765 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332057938 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.114838829 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.133857403 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.366344097 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135339665 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.094777275 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114101201 seconds)
  done (took 2.767927535 seconds)
done (took 12.206754232 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091525952 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.135240901 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.6094422 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116870658 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078405479 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158677563 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.262251535 seconds)
done (took 2.221764114 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348611874 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124252615 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08769441 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079136783 seconds)
  done (took 1.407563184 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079721022 seconds)
    (2/2) benchmarking "read"...
    done (took 0.085005591 seconds)
  done (took 0.940424442 seconds)
done (took 3.122013327 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079651272 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077870618 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.112130761 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096962308 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077115528 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077244314 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.09374122 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076640906 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097000291 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.075726389 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094819833 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.077931541 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.077464036 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094582755 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075942903 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093333694 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078298069 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092114612 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076280131 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075754806 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092847896 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07900599 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092661115 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076124379 seconds)
  done (took 2.869621662 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105354661 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097642845 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08406037 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101442852 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082630489 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102942551 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102131507 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079793873 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102115812 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081156476 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099906504 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083252044 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098730728 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083197291 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098620032 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083228412 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.101997328 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079382131 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098883742 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082218323 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102216706 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079750232 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101088246 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102396003 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08298192 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100415023 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081595877 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097098914 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084760613 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100742004 seconds)
  done (took 3.559371595 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086804073 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07543416 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093923869 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089088444 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093948045 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080923684 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094022064 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080356085 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098460063 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076753903 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081450618 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094314779 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078818344 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098449357 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081287558 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10069865 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095140001 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097355376 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079408104 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098687503 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082375994 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097600729 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079280573 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.075927336 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094190374 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076016893 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094497851 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076098096 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094213389 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076660996 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.081846955 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.102111506 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.075704556 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107489351 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083396458 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093860384 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084836232 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094109164 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081035726 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093754062 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07665791 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076105794 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.097780288 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087373013 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096703317 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077316639 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097204187 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081509601 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097737086 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084464881 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093149156 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080234644 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081911976 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100455193 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082487744 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093938547 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078107969 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093525002 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080873682 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093627364 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076587391 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075555184 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100629639 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077302458 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118293539 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087683302 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097318016 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082160354 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097884306 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083963815 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.0997435 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095690448 seconds)
  done (took 7.1436421 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082139763 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105253166 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078905661 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095735936 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075241482 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076978913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101756797 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077480353 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096195456 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09609053 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096477071 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078778291 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096518885 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081120831 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095784442 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079105602 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105198082 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075834757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.095198693 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081415593 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095307555 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083936422 seconds)
  done (took 2.735341158 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223267183 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104217474 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141641499 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096073043 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115516426 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113463374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083900077 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103898426 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101427213 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088131862 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105153342 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084406397 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114924659 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104545109 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087732742 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106986031 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083965633 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107172114 seconds)
  done (took 2.751977331 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09345747 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098240186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104444258 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098878702 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08061404 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101191141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086839031 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114771508 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083378286 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098936044 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108932461 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083563593 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100413135 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081221947 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099938394 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080653144 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099899211 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080846999 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108001623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086593393 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104968648 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091532684 seconds)
  done (took 2.872719867 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097733464 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099923733 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102061707 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102322076 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079256605 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100091883 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088019651 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097889058 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089648672 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101121601 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080241276 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098866052 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08804032 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098461145 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107344767 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081199443 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100080838 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080280961 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081783541 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09695674 seconds)
  done (took 2.659754884 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121578496 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113577625 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094695642 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124187114 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115876996 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095511176 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124352173 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094885346 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113351982 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126311346 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095213738 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112715432 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10671284 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120949594 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112907911 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107185441 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124861999 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124325322 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094834033 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112902104 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126776065 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095261247 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125060452 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095005529 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113269849 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095486292 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113537546 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121462403 seconds)
  done (took 3.913048174 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079847824 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078735883 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095472963 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077405152 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095906535 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076766497 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077298979 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09621904 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079664083 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095171521 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079463094 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097406615 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079421424 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079467649 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098109363 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078748436 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098086563 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078114759 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095345385 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077200816 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078914393 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098613398 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080225801 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09564817 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076942839 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098008728 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077606296 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076977457 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097479454 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077305242 seconds)
  done (took 3.364283806 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088434572 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108522802 seconds)
  done (took 0.990083926 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077075156 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114971458 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076812439 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101657984 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087036165 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099150839 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090284673 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104801777 seconds)
  done (took 1.542897529 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105198118 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119933866 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087028363 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110977041 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099644273 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117918586 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163375263 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08686307 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107142026 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081579066 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119418495 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081520395 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107763744 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086310401 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108268046 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096631229 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100873643 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091673428 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108346095 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083927719 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106128196 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116053177 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092019401 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107119657 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08354671 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112221535 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0953965 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111360346 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086479722 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111961458 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087895261 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092746691 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086206529 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.105912758 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081911152 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.118574487 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118089942 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086283286 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109782049 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088146596 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110160854 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079213224 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.110426223 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088443391 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112289506 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086988435 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106363145 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079654958 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100615348 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085322961 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098552825 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085243025 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.075570333 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109087692 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109037687 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100022481 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103102459 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086163357 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104029587 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085088849 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107663843 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085343972 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110736274 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084979292 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110184394 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090231892 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108824045 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079650913 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093169683 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08210489 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110008556 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106422073 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112002035 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106049559 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08894589 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08170287 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105927001 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106346258 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090917455 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110993871 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08659093 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107791481 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091581715 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103895613 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085374914 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.1075211 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083222873 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102743799 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081531296 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121009222 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084236312 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100595205 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082300735 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111494324 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085481233 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104265629 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08161452 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110522874 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074855598 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106145634 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087976837 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107086463 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094547181 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106164198 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087924378 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110256105 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092994022 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105510641 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085576117 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096337744 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08810479 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102513819 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089751426 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094183983 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08649699 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105477113 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087766278 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111050918 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083109767 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105274962 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093469023 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11271822 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084009947 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097397308 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087955627 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105617789 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091747544 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11253016 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.084429797 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099910217 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080070185 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109932701 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087111481 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106784611 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087796908 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10670457 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075948466 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101775676 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086479855 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111992414 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085142803 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107326296 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110036246 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089088517 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103706995 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092182924 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104058423 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082532437 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.1110299 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086741256 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098391427 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092376871 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104187171 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0849831 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105524757 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091772484 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105430657 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088571307 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103731757 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087333213 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107033493 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081932259 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105565013 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085130539 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113887017 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085857333 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098915367 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078269535 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088314226 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101153642 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086558713 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100245775 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08702811 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106712969 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083408393 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104525311 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085801223 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117653044 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096323708 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108604091 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108213338 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094002461 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105111602 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088962176 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105008422 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088972672 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.108085453 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092086114 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108529296 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088016549 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105347937 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078888654 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108007335 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092750057 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101672964 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0828631 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081723172 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107030882 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11279072 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087208427 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088618516 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103404462 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089023534 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111504426 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105373409 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087168645 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081771197 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106434906 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.091254587 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107731294 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089350271 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113397619 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107031082 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081581177 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112070706 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084186815 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109927111 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081019949 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083000671 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101969263 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089605516 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104522457 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085614517 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09575897 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092169933 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112426131 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087910152 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102599478 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087354129 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11555662 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086325121 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112029126 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087228398 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109120639 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120410945 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082828857 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.114387066 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095564146 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10703284 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075955775 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109640498 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085317784 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100995024 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085775849 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08473421 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107435111 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08976288 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10832429 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076426097 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105825172 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08531229 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102187695 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081132797 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.11220005 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087602301 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105947657 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115903424 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090101417 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10867244 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08961197 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106625013 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.089659075 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.109073938 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089514955 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108424294 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085770111 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101452684 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087900899 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082432372 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103494503 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08610929 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10708611 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087975985 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108683018 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086990663 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11152806 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107584702 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089151392 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125649481 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084448434 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102758214 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088680557 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109758832 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086665 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106608795 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081605073 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112115876 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088008533 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113747665 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087031383 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098988362 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087951929 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107160228 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089309774 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108344485 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08936322 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105376953 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087438819 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106684182 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096800095 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10335687 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09466756 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109378966 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089452656 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107944691 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088465382 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105413639 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083204178 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10637869 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08955506 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.107397699 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086288064 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108894309 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08755886 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106702968 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085322284 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108500881 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088471151 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108933532 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077285507 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102544011 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082955898 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10711922 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0917555 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108827938 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085341406 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105367661 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089692651 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.105968444 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079142807 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110959829 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089818944 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108424409 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097314845 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102469191 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088038508 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117278378 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076342503 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104831004 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083729244 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103029811 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093366452 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109226212 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093151333 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107535623 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083218135 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099240322 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08974085 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105207819 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077092286 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10328618 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09042771 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104674239 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08590279 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088830856 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109874888 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108693252 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091337071 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10640605 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087578929 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10780838 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079425797 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083560932 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102907092 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086948492 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109276313 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08430718 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09944846 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08706044 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107161768 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088382876 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106776617 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085797467 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112720538 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087463702 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107398775 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093675537 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096727958 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08828254 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106466155 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088107833 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103156331 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089161804 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109592941 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090161825 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112207541 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.0884507 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11042534 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088232397 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104183477 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088002044 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107800453 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088485236 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103551478 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.090875447 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114407186 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084482752 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107517351 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088707513 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105062459 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089633409 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109450017 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087778415 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111431939 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088143835 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.1074926 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091633093 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108133351 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089065161 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109227508 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087026519 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112486371 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08311918 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11424574 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088972384 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109474012 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086312951 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104037423 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087746495 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106695577 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08645961 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113782958 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.090373104 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103277894 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083122483 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104837267 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088073765 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113191201 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094545045 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107458911 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089063496 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101406535 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080339931 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110492756 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08512258 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106719779 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090640244 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112560275 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088660705 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105461663 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086853978 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113040752 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093057784 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110048558 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084536876 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11032214 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090280189 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10795208 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085648689 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10720475 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090468099 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109834727 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087335865 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103286102 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098014788 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112563308 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090096186 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106524723 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090132419 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107419763 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081771576 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.109067892 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088022142 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111838814 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087474401 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107659008 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11807094 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083789332 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106205692 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093808809 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107185973 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093301503 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102022659 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089413087 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109814466 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09047795 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102329406 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083620831 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103629752 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088322119 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083815422 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102394946 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118416042 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093121904 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108424166 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086707874 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106094915 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083386423 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081748764 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103637898 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089791972 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10672017 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116275598 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083739405 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083743351 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101973827 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088422813 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109221065 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090180277 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100477316 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082045616 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104425588 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088444568 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116250636 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086716072 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108961149 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089346974 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108893567 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085403657 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114246364 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080392846 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.1094943 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099737261 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109411278 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090450865 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111970379 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11466809 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090167564 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10252058 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.09057651 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107812125 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08907564 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.110262193 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090726579 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124063509 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089873095 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104506308 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087385967 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108269728 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084650277 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11565303 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090971499 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110307637 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090933975 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107232808 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090798231 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115674502 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091165534 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111391493 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088504261 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10719202 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08749111 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106937228 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086714049 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.111308176 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090311413 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107852729 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092249281 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105023929 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099827173 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115588 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090604952 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100075836 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084599623 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104902217 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083309693 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110735255 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082767122 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106899604 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085765271 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106886333 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090527544 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111295413 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088443923 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110517699 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088085746 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07754219 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.112021178 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109300657 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091248243 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.0799504 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109761513 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090000365 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113788461 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114790577 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086330871 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108562146 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087555174 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111484968 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08268834 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112276077 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087567423 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086952126 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104735534 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08964932 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110927756 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089735135 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110407915 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090724895 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109645678 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09249331 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112538917 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08083225 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101117602 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091729181 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105044083 seconds)
  done (took 59.092673458 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151124961 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089067013 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079082428 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101522415 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12764429 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083664861 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099334342 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084174364 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103673454 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094095187 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099668847 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07975497 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12214131 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12959937 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12645987 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094708428 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099645186 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084069032 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099905794 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084063518 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121486783 seconds)
  done (took 2.997844054 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105557448 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118981325 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117643773 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10195357 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111641671 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118430608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096923601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118427482 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121837198 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091992236 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123829844 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118041457 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092069306 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113318348 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111562711 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095686714 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123371485 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110541391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09932587 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.116828227 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115249235 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097782356 seconds)
  done (took 3.261911044 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092985855 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087465561 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112697917 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081765121 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108199377 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081629244 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.113763987 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084531566 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.114609396 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088014329 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105686459 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.088196115 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113345011 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081535016 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.106088981 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084603217 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114445381 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088071294 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110163277 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081619079 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129618327 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.082161388 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.103986799 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085878129 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117891146 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08999815 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108604527 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088711963 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105506898 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088829747 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.105239188 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090357849 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112770203 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086181314 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105809101 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089078197 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088385363 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.103048498 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085393054 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.112605464 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.084771767 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109956831 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.095446775 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.10468241 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.084964755 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.110518909 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088293703 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102447206 seconds)
  done (took 5.543897535 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120094186 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157938285 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086337847 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149217798 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12433883 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097751285 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.110615396 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148033652 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.081479325 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.108791023 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126740129 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10268504 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110493345 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.115047129 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088322179 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108638854 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090733762 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103466154 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.094232001 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107837269 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093771325 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113066907 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124111735 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12053211 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093969199 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107094217 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084209999 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114839103 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120644614 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.095087591 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115490274 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09590447 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124833926 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110421024 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087567159 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111450777 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126612132 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089517111 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111618756 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.082888203 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.112334492 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094760927 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112656326 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127875587 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090176942 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111716577 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08862456 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102238207 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120626638 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091970498 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119744285 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123857213 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093183092 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109849649 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094824065 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124834551 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109353147 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086495267 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113713896 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099150617 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102853807 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09309694 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123017798 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111092529 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.098227858 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122434544 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110898728 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092471602 seconds)
  done (took 8.338089753 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116572762 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11480484 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126925279 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105831512 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115210593 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.094003807 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114804211 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113841468 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094092521 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121667318 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093104 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.16367848 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.111197337 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121679215 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094128327 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114116992 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093880263 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114183814 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093391968 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115257056 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114173065 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.105930014 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115330027 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126528225 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128227675 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091742853 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114737626 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093963813 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127485415 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114196416 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107964815 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114059285 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114842422 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107853101 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127391373 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.115030428 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087798287 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114921253 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09367305 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11472386 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090781766 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127559379 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114607675 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.092184683 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115485839 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093818946 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126765271 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127652194 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121968157 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102001819 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114436872 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126737773 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095246934 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11451811 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126343946 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136349904 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105795706 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126916153 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115064899 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126099729 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106062043 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135874866 seconds)
  done (took 7.861950307 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084837708 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084573233 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103660934 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082234425 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106124122 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082701928 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084750867 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.106832954 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084584593 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105469983 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085066942 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103151496 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083142724 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084755444 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.104063036 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083222768 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103185455 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08274931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106193622 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08276633 seconds)
  done (took 2.700882141 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094226761 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128240145 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086004959 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114394887 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088192245 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114901058 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088062102 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109864363 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088804648 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109481691 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12104991 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100094443 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107799494 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093128147 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12017091 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114319077 seconds)
  done (took 2.539441815 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.107229831 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128309137 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.133847596 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090810431 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105559765 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.094131069 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111249089 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082066468 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081263246 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.11595484 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113732645 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091891264 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.11043038 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084543741 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.086676202 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.114222329 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.081544104 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.111284101 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088035441 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132920519 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.112405265 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089061599 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111965749 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087949212 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110350889 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091328781 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.114798344 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.084017635 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.105347975 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089565134 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.110821764 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.094444993 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103699069 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.09042877 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105775615 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083176352 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110199848 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089049132 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114168851 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08843242 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105030122 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089012561 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.110901309 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.091390782 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103206757 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.090135689 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10298516 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092684359 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109592337 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089408739 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110949036 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.095063274 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.114550509 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097994303 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.118416598 seconds)
  done (took 6.433870747 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101291622 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111609274 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091523624 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104943212 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089359869 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.116956828 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091270943 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.1103577 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088540513 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104356955 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089688426 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111238869 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088696973 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111721664 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088824739 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11165514 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081005734 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109053296 seconds)
  done (took 2.664893016 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091872736 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08575642 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.115665955 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086835639 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.107787638 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088066283 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103446856 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084801489 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105851956 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086594344 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107736818 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088359926 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10647498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08894568 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107526734 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086140299 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109013506 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084052744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086039607 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102623442 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088968656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105549438 seconds)
  done (took 2.983587404 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103556266 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139433452 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.100312953 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150047394 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112779193 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089824109 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121769133 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.0908979 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131195007 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.089746169 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.110808694 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090034734 seconds)
  done (took 2.197331918 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110251495 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142202529 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08596729 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107821303 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120589533 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088897648 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109691811 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091926298 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127433408 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126509938 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091831912 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127139032 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126977861 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125059543 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101022268 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122703058 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113720144 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092568672 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1095477 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115691757 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114243264 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127063964 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092026968 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113897377 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112865195 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105110667 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127113889 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127004947 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092863247 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127183958 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122004124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092160027 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127957701 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127400694 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089111968 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127554497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113408388 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136928118 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101558731 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125876138 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110780752 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101352651 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127763599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1213087 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105254529 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114057185 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121106857 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092206439 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113420141 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144263973 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12196634 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104317659 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122807784 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127486943 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105095338 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143144338 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127847782 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124977231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122639841 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126099912 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104611491 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122929685 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126781177 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128223633 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101044384 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125152019 seconds)
  done (took 8.500653227 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127189139 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111503236 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092004422 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128681332 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125710226 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114236236 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092238496 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113671895 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091753183 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110607837 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161843622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092637672 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125809848 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125068072 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092110609 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114338325 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114060546 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103978149 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11040547 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144121298 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09169968 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126047985 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12614863 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126929211 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127656515 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10133154 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114146518 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092353484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113244715 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114466188 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100768844 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114004474 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126130819 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088717122 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125987569 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092767781 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115034794 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122313877 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093064569 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122146729 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126885386 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137925907 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093214333 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.352182477 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102332768 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111552906 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114046493 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088756156 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113374269 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089187574 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128560138 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128678046 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128507492 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103800944 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113600707 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114635268 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092773305 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113791809 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092002664 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122670801 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125488539 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0926084 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143303014 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113766682 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092250459 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126075435 seconds)
  done (took 8.563394419 seconds)
done (took 158.859067587 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.105221411 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144852506 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101442212 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172029636 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083249753 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140018486 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115996186 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.120192248 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.086281009 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108468641 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086811842 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111967738 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153286618 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103423147 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.082919697 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110395013 seconds)
  done (took 2.698262118 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.185129628 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.297159458 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107455632 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.115235466 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093586561 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11160222 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091973516 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116418898 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08844707 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119772146 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110744016 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089561089 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120686422 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089361416 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110170919 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089051092 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.120730942 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089283515 seconds)
  done (took 3.02323857 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118068343 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154771388 seconds)
  done (took 1.155399717 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12424721 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191828296 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305907617 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165087236 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117206767 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132559979 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166288569 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129171243 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.208614158 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134725865 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111759215 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116092526 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142332848 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099960965 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119642528 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093657925 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143600505 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118228194 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09599112 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117474602 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120335514 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.119333678 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09882205 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.118340922 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.190562792 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13294485 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094810952 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.116896245 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117054625 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095610276 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122217383 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108432892 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.131765939 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.197456278 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100157696 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.19253268 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102020147 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114802328 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095290437 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115823716 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098085947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120555338 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131293477 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093707639 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11692721 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10226965 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.116779364 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.094313962 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12446106 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125965134 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10196013 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.122205064 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170387623 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126885288 seconds)
  done (took 7.840189395 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.808821008 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152887273 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090389148 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.910435529 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142389205 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103000725 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.812500818 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135802398 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238905818 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.828308984 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10400677 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12584887 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232353033 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.252489908 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.142260472 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316427069 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.702289325 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101866076 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.138769185 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151154843 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094733253 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139498222 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129754795 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455286479 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11171143 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088525113 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121170112 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102528515 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182254537 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088741499 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112778438 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181475104 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.265895915 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205354439 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091522062 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109913293 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09192248 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173259927 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270475992 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218432401 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175957713 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088601808 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11152417 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104320441 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132172492 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108302223 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166614094 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.182186521 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181382289 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119004955 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126220953 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098413384 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121539697 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163454178 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107242662 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316569983 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343765386 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109291331 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09729843 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129239062 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267756532 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088933836 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22966417 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14286431 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19993464 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.116323469 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793442349 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173985812 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092621937 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125347576 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100048843 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121977362 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12740017 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176042323 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397460519 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108940047 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119406463 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092149485 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23640556 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092873507 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114401183 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171693953 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093839926 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124560273 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132981252 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106980152 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.202178882 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257902639 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13151753 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102404793 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121477139 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105434258 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11765371 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216899248 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229804564 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16560911 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.217036972 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123441978 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165307035 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187750834 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104218148 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.197964811 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10093585 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134801533 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129410742 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.202218665 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147404896 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.115840202 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099000607 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123887084 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150879182 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096686892 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123350742 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176788067 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.491064151 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.190374068 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087274305 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113749867 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098052142 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162758526 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118150147 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262252433 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098072528 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166801286 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118086463 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.106612458 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097852074 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164908641 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124777089 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119379061 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100987162 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119851784 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.252177775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224691532 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126416186 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220536885 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180189368 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120720065 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175011872 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11911333 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170607329 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098477682 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122264359 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111632838 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753649699 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123332018 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118864693 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09388403 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194509159 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110210536 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088964119 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.110140261 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085371485 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784914084 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091251967 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107256144 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.0898863 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120130462 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09757581 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123429043 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098541093 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192250386 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244352672 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10618663 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119754898 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090874054 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160493967 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.111830476 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.087976679 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110114135 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088336189 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119807033 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114766491 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089661008 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172645338 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.159603779 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222001234 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580415503 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089098829 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.110044779 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231972012 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088642938 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30734136 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095877735 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227766484 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166477111 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.107187681 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.340785283 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170410681 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197996893 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.091866242 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19281759 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085260892 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117059369 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161268397 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088050067 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1180107 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.158573723 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128469944 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105926274 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.151902219 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110889648 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22957505 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.084238768 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191819701 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091046301 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12237796 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.309304938 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088056941 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131109722 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161975173 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114948933 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088760766 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.699718753 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111120354 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121467323 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098384212 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225376908 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166076888 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118627294 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118131252 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101241221 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162038872 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232028318 seconds)
  done (took 44.436155033 seconds)
done (took 60.030055942 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320119449 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265392715 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.295333586 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.195316874 seconds)
  done (took 2.05520046 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18685111 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159714644 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.129929452 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113820831 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.161491012 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089875982 seconds)
  done (took 1.747471197 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.487229278 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.388545414 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.359848095 seconds)
  done (took 2.147334604 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262296126 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.291641394 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333380063 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.447975981 seconds)
  done (took 2.356745722 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214527728 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132888929 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102853065 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.145609245 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.180308141 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.185345264 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149538508 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160025831 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134829522 seconds)
  done (took 2.360208645 seconds)
done (took 11.577259318 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.322714902 seconds)
    (2/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.216998947 seconds)
    (3/286) benchmarking ("sort", Float32, false)...
    done (took 0.214595962 seconds)
    (4/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110798633 seconds)
    (5/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.166618747 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.286879472 seconds)
    (7/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.281861039 seconds)
    (8/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.130826911 seconds)
    (9/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113940688 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.135684698 seconds)
    (11/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.108289449 seconds)
    (12/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.132894513 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.200298788 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.132278125 seconds)
    (15/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.230559641 seconds)
    (16/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098497739 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123028288 seconds)
    (18/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08521573 seconds)
    (19/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.21826461 seconds)
    (20/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.281265082 seconds)
    (21/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.18715821 seconds)
    (22/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.127665606 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098410997 seconds)
    (24/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.234476694 seconds)
    (25/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.237019095 seconds)
    (26/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127427435 seconds)
    (27/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.103409064 seconds)
    (28/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121242281 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.151083169 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.22957213 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.102983468 seconds)
    (32/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.247437077 seconds)
    (33/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.094662051 seconds)
    (34/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.135601064 seconds)
    (35/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.18125036 seconds)
    (36/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.290187927 seconds)
    (37/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180547681 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.14777075 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.14882365 seconds)
    (40/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.141575374 seconds)
    (41/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.187532653 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122559947 seconds)
    (43/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.187435876 seconds)
    (44/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.107358887 seconds)
    (45/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.108850886 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099026814 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.146077197 seconds)
    (48/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.207575807 seconds)
    (49/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098874312 seconds)
    (50/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.212260104 seconds)
    (51/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.123698284 seconds)
    (52/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099475198 seconds)
    (53/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.210265026 seconds)
    (54/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.156356285 seconds)
    (55/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.189096482 seconds)
    (56/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.177712218 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119156253 seconds)
    (58/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.143080587 seconds)
    (59/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.101580292 seconds)
    (60/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.195190971 seconds)
    (61/286) benchmarking ("sort", Float64, true)...
    done (took 0.23866101 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097760999 seconds)
    (63/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.107621299 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097105591 seconds)
    (65/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.238982949 seconds)
    (66/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.15709664 seconds)
    (67/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.188869912 seconds)
    (68/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.124254654 seconds)
    (69/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.233825848 seconds)
    (70/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165691984 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.121382494 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099683111 seconds)
    (73/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121386215 seconds)
    (74/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07919904 seconds)
    (75/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119756568 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107518389 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.107372821 seconds)
    (78/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.130999581 seconds)
    (79/286) benchmarking ("sort", BigInt, false)...
    done (took 0.261224916 seconds)
    (80/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.220574265 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.090418955 seconds)
    (82/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119039955 seconds)
    (83/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119340829 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.186627543 seconds)
    (85/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.206641666 seconds)
    (86/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.191609362 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.155908229 seconds)
    (88/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.167877934 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.150712243 seconds)
    (90/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.107946132 seconds)
    (91/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.108202239 seconds)
    (92/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193477739 seconds)
    (93/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.200007374 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.149729215 seconds)
    (95/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103885176 seconds)
    (96/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.119866602 seconds)
    (97/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.087605381 seconds)
    (98/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096751027 seconds)
    (99/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.167158625 seconds)
    (100/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.138877909 seconds)
    (101/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079565887 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17662305 seconds)
    (103/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.25505431 seconds)
    (104/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079809238 seconds)
    (105/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.129903468 seconds)
    (106/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139977911 seconds)
    (107/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098735151 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128717655 seconds)
    (109/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.165087483 seconds)
    (110/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.103032361 seconds)
    (111/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094613574 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119982443 seconds)
    (113/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.14683054 seconds)
    (114/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.169167174 seconds)
    (115/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.131056879 seconds)
    (116/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099697124 seconds)
    (117/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.13235717 seconds)
    (118/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080124986 seconds)
    (119/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.16629114 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.122290398 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.191596006 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.103411518 seconds)
    (123/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.131383533 seconds)
    (124/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.131304042 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127629825 seconds)
    (126/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099972602 seconds)
    (127/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.165334125 seconds)
    (128/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.12086566 seconds)
    (129/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.11803513 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121741686 seconds)
    (131/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083149725 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.128849099 seconds)
    (133/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.07960695 seconds)
    (134/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.095441135 seconds)
    (135/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.106564533 seconds)
    (136/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.156311716 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.103326599 seconds)
    (138/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103110114 seconds)
    (139/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.131878147 seconds)
    (140/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.172816926 seconds)
    (141/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082749691 seconds)
    (142/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.10929084 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.106830584 seconds)
    (144/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.105042979 seconds)
    (145/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100350009 seconds)
    (146/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.130562828 seconds)
    (147/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080137477 seconds)
    (148/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.138050205 seconds)
    (149/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128366717 seconds)
    (150/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104624979 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114548095 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099737686 seconds)
    (153/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.1193562 seconds)
    (154/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08125219 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.199784046 seconds)
    (156/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.094128041 seconds)
    (157/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120528248 seconds)
    (158/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.106718928 seconds)
    (159/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.142521955 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128671354 seconds)
    (161/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091260767 seconds)
    (162/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.143862346 seconds)
    (163/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08143652 seconds)
    (164/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139560181 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.08040744 seconds)
    (166/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.107174891 seconds)
    (167/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081170578 seconds)
    (168/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.119332188 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.154994658 seconds)
    (170/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.145406545 seconds)
    (171/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.13018183 seconds)
    (172/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09774707 seconds)
    (173/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121480273 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.098600149 seconds)
    (175/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.128012898 seconds)
    (176/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.197944081 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099226043 seconds)
    (178/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.128602773 seconds)
    (179/286) benchmarking ("sort", BigInt, true)...
    done (took 0.257648251 seconds)
    (180/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118939776 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.132908058 seconds)
    (182/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08056642 seconds)
    (183/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.107829261 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.098733074 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.126251918 seconds)
    (186/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.086578436 seconds)
    (187/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.104260851 seconds)
    (188/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.122788386 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.228287049 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.120509735 seconds)
    (191/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080501502 seconds)
    (192/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.157757324 seconds)
    (193/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08144614 seconds)
    (194/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.10463766 seconds)
    (195/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089588793 seconds)
    (196/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.108507764 seconds)
    (197/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.176172487 seconds)
    (198/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113705509 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.108444231 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126151228 seconds)
    (201/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.107225307 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097071837 seconds)
    (203/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.100186245 seconds)
    (204/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090732912 seconds)
    (205/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134218086 seconds)
    (206/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.073379245 seconds)
    (207/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086029805 seconds)
    (208/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105316939 seconds)
    (209/286) benchmarking ("sort", Float64, false)...
    done (took 0.173473277 seconds)
    (210/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.081379234 seconds)
    (211/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186531238 seconds)
    (212/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087013584 seconds)
    (213/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125012973 seconds)
    (214/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075367933 seconds)
    (215/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123712412 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09200811 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113371613 seconds)
    (218/286) benchmarking ("sort", Int8, true)...
    done (took 0.220233736 seconds)
    (219/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084329294 seconds)
    (220/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.126819568 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088295385 seconds)
    (222/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.104058584 seconds)
    (223/286) benchmarking ("sort", Float32, true)...
    done (took 0.232597386 seconds)
    (224/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118144386 seconds)
    (225/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095479687 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120448258 seconds)
    (227/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.075717057 seconds)
    (228/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.150070702 seconds)
    (229/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.077389488 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179866579 seconds)
    (231/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114385154 seconds)
    (232/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.076006148 seconds)
    (233/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.073642302 seconds)
    (234/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.099579258 seconds)
    (235/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094153684 seconds)
    (236/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.115597525 seconds)
    (237/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.092368672 seconds)
    (238/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118286753 seconds)
    (239/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.077635794 seconds)
    (240/286) benchmarking ("sort", Int8, false)...
    done (took 0.200557268 seconds)
    (241/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116372983 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096749206 seconds)
    (243/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108701857 seconds)
    (244/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.086412841 seconds)
    (245/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.105618737 seconds)
    (246/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098180206 seconds)
    (247/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.124766713 seconds)
    (248/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091442189 seconds)
    (249/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.136240148 seconds)
    (250/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.195139668 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099712261 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130856892 seconds)
    (253/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097156489 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116610967 seconds)
    (255/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.087184685 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.123306993 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.153491887 seconds)
    (258/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.099334883 seconds)
    (259/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080611533 seconds)
    (260/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119353736 seconds)
    (261/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078765291 seconds)
    (262/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.249047932 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.123064401 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.096535447 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.122130909 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.092251738 seconds)
    (267/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.102206603 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.094121279 seconds)
    (269/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.100937325 seconds)
    (270/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.079209647 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131258722 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118499085 seconds)
    (273/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112013787 seconds)
    (274/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091652799 seconds)
    (275/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118407543 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.090116971 seconds)
    (277/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115599023 seconds)
    (278/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076309326 seconds)
    (279/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.107475423 seconds)
    (280/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094750171 seconds)
    (281/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.081507375 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.117094902 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.088616356 seconds)
    (284/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.109013253 seconds)
    (285/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095209962 seconds)
    (286/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107461419 seconds)
  done (took 39.02128171 seconds)
done (took 39.934829957 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106510592 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160910419 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102550129 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.148751485 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132118227 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.108744687 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.127475467 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105397118 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.13344109 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108193574 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.130381029 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.086870905 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125981454 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100111363 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.123533398 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139984707 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100945568 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.117598262 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.091945514 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.117758936 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.094719164 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.120510901 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.097332854 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.112696236 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103030445 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.126918395 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098427007 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.128555024 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.09601659 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.120550394 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094420959 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.124725699 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093839512 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.131386533 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097716236 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120085679 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104323526 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.126583241 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.097157678 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.120695806 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.100163535 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.120547167 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.099222734 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.125550418 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096268276 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.118917417 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095361466 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131697522 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120487635 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120551197 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094439044 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121248102 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097418861 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117251571 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.088373419 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.113677157 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091848635 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139773633 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.113288708 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090371413 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117780513 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093628304 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.113785712 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094807363 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.116742748 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100446499 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122678415 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.092491474 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122712454 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.092007384 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.108693929 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089852216 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.112001647 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087478123 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095880935 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120796757 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084786435 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.114976334 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093292925 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116052623 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089561676 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111428548 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.092280421 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114893587 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087756946 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.105100965 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089400426 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.121877932 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.095008618 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119633984 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098135799 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.123324656 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.09840483 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128702515 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094167207 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115377833 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089796584 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.114446963 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092300057 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112854676 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.085615173 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111875339 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.093876222 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111066331 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.090595698 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124574743 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087873524 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116201243 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089546732 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.114100702 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103113292 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120733953 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089981226 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115045 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086865529 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117175749 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087883709 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111371563 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.105678748 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113996381 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091184179 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.114063211 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088229934 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117433058 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100460311 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.109656893 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.088643041 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112303822 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090305294 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.11785227 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090862166 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.113703289 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093537007 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.110758775 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091462341 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111902792 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097677296 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113895444 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.089544578 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115574856 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096027218 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.121513889 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096919851 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.123334113 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094490855 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.114174738 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098119567 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094910939 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.122650559 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09642613 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.119072887 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085695373 seconds)
done (took 17.324932034 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101603967 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188478341 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.148724886 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150955197 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146290018 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.107316361 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126855887 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.146016985 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.099077247 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143343209 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.146317369 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.11081746 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150135093 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.123595948 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.131972369 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099005335 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.120368041 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107249432 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.156365161 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143992339 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147602246 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09830656 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144019223 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142537237 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097148713 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.151247438 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.124206988 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.096698286 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.123703446 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105480065 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.137183588 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12446916 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.098919619 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134434692 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103744331 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121268616 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.132339737 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.092743302 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.121949501 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.097302261 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133860746 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134318366 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09639364 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12906299 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121588983 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.10103331 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121104677 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.095781572 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121747625 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093143424 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12693051 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.142314422 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.096010963 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124875514 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.100674736 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123966728 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124891325 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.103434278 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.123449413 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.100365763 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12158964 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.124321679 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.103162773 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139955069 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.120552 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100815728 seconds)
  done (took 9.030615186 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.11721452 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157472342 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135092431 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108091552 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127644636 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088887556 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116079738 seconds)
  done (took 1.829664595 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093781561 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.150655294 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126696534 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.15232911 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.144668614 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.130008397 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137890058 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093613394 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.143707144 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.121986355 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115769571 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.168838577 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120793123 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099758374 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.149857529 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092637308 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.153702865 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.120595824 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100769413 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.148428095 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099952112 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142478428 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13135811 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.088824432 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.134820133 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.089398625 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18054156 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128580505 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087358451 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092904196 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117431338 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.183543014 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136240827 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.103823729 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115279824 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115947027 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134955643 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123572341 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.114680207 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121053823 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.109127577 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.12240631 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095220098 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119567855 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095325787 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.127476735 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124272335 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.096375411 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117797502 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116164174 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.123746283 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110022635 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114459293 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.091876122 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121907185 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093463256 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127812408 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11780508 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.116275775 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120535587 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113878163 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140043786 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135225054 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115995454 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130529057 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135128223 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109456238 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11764038 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095064781 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120791967 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.114505853 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117832567 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.097858033 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.12965451 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125589309 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115463031 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140412909 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095315259 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126073353 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091978315 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116753094 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088245712 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.129669554 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09442565 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116333713 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105337195 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125434785 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092649448 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.116689689 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.13605192 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092718522 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.124718154 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09889335 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117379424 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128422792 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.116041797 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.126227432 seconds)
  done (took 12.543437637 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096715387 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094451197 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.119937038 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.09010843 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.114888824 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090385911 seconds)
  done (took 1.591929721 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125410454 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118080999 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104353946 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120612196 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158472703 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.112691764 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.14153179 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102225558 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.134337449 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128381342 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.113579573 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.140897842 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148842524 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096256889 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.138201467 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0956062 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.138782271 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093208494 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12875928 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092727417 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1315701 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121002991 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.092929366 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.136656118 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.096588737 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.124331097 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095967167 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129000583 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102817321 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124017303 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121631656 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097604874 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123363382 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.102161392 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.139281722 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.121445885 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09269265 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124101916 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097671308 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123468262 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.115209643 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118080487 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10273379 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.126094176 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.09917036 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12167957 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123657629 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095422223 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.139509796 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.105067324 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.131797736 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097921698 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122549616 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.099138118 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124853254 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128727557 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.103749221 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139656507 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100299323 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124480506 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095062996 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.125066224 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103062342 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126571656 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122749561 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.099162512 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123265838 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097044032 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119549724 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096178039 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12544821 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092808593 seconds)
  done (took 9.367922728 seconds)
done (took 35.336440489 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.681851467 seconds)
  done (took 1.663451264 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.850348997 seconds)
  done (took 1.83570775 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.565844592 seconds)
  done (took 18.579455262 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.511989511 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.609096012 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.998536531 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164223493 seconds)
  done (took 3.269589073 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.97815229 seconds)
  done (took 1.984926488 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.31257078 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26796653 seconds)
  done (took 1.571315461 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.823763167 seconds)
  done (took 1.821456306 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.53360051 seconds)
  done (took 2.528780745 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.365159525 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.207656671 seconds)
  done (took 1.581445306 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.594689773 seconds)
  done (took 1.596903268 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.812706887 seconds)
  done (took 15.820240676 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2531254 seconds)
  done (took 1.269843482 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302002202 seconds)
  done (took 1.306664436 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.648923434 seconds)
  done (took 4.653474699 seconds)
done (took 60.481470808 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105446307 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127389791 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102017765 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12476309 seconds)
  done (took 1.459718885 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110550509 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129534087 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107053332 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127760859 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110106952 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.129172902 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099893597 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.169463101 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126621435 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09819521 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123354667 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09663032 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125229144 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099802487 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.120460568 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.098295559 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126685251 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09857384 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124160195 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.123379902 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.09417866 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.122972054 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.098906431 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121207195 seconds)
  done (took 3.78618415 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105880378 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097583922 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.122087711 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.092292656 seconds)
  done (took 1.428739945 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109468758 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140049856 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108541712 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129234914 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.110039854 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134702208 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118477491 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092196019 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120935409 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101799956 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.119350908 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.113080121 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136897833 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08768777 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129563171 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089572105 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114533292 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110312119 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128081787 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128841868 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092127351 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.1270682 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.100349814 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.132277015 seconds)
  done (took 3.792842868 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178697108 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129959283 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.142239788 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.098030711 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168344511 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.144599375 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091061457 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.144230302 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.091192113 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129451632 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096362638 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.170218966 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127603917 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.094324264 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118650466 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.124244368 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.101090732 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126815231 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093268495 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131856554 seconds)
  done (took 3.517008011 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103602279 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117704285 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088992043 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.089526654 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124803545 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.094872223 seconds)
  done (took 1.635099651 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094463364 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.088008466 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.113683298 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.086508059 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117961949 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.087477786 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.11185787 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.087836485 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086947363 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113424996 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086538571 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112153675 seconds)
  done (took 2.204043344 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.388695165 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117095954 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.116076501 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092438617 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123960351 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090713798 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129622046 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.090586033 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146739744 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090876721 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117294114 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093385487 seconds)
  done (took 2.610268035 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21951345 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102562683 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270514602 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38404449 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135804885 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166874551 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280729578 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163717823 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.211703808 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113487876 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226648675 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136676787 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157833146 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183816722 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143528282 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.17932832 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179533171 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205004758 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156673301 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21670437 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174569104 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178304426 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190598256 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161782826 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144854342 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169252321 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099096747 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12977416 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178772513 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176656651 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179630478 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155028103 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145738737 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205734082 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217262505 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217802457 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.321814538 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135981079 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.188469218 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.186534056 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230213947 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143440531 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202673972 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16550131 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137650147 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193720231 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168961353 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.193028183 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140914923 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122217458 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190948456 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184588667 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.217184905 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118591573 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.342406208 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125094342 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147931854 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183744134 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189312462 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220108589 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172302434 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102215497 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194442171 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184692955 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212108504 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.124991601 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.176499621 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133263216 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187414025 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207191314 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187716775 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177220078 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226259344 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142874279 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169157816 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147556549 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163964044 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180429283 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165495927 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129001797 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161475266 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117847051 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133326599 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193927529 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102456789 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207436852 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13780089 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.195598563 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211448947 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163907477 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166219269 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174985363 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177804982 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157925137 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.097847766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150871352 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.167155418 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165937745 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138257031 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130650191 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147945372 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132777086 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157875945 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096983041 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163183013 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136821496 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175640982 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168833747 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101628781 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16899028 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154634276 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165826495 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181597236 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195520553 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135691789 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105490457 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197557161 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163881041 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144238639 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181072572 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191157493 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.169320567 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139758028 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171874167 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195890472 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143006373 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189465033 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114740632 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134909726 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.153340039 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163382843 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159182303 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15860801 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10319621 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157958339 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201051405 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134788809 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114970208 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1781676 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132462972 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130999388 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11948819 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138882615 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143797371 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.121680235 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140301777 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161208049 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168642918 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159092899 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167159965 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150918244 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202101024 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141016049 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.141569744 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152992488 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122584781 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.185839292 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194662511 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103670249 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233250397 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175101572 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203360738 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166196218 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134585105 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18395929 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106307344 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124798585 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177535149 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172522916 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174202369 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193423646 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20664285 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.173353408 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15796912 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156703937 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175329323 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185606196 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166323385 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153895809 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172747421 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180664009 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101914468 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.132352096 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105677096 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147426 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13788403 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110456499 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217400915 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173757421 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191225571 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164877496 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120244566 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211679125 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.099876809 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168747121 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.181620533 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14636 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188465755 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185896685 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174367289 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147267994 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183417261 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096862366 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125742442 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.107876053 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166491931 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134230173 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138540702 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116039103 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183430709 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207210956 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128874236 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233212522 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172534526 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197993632 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.125917489 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.137176999 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174895689 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166029489 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.19421837 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113656369 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162598158 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187155587 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146174547 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194383218 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170867787 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179506494 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240095996 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165194257 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107285574 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152726251 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171782612 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14419049 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138040883 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147346845 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138087453 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158102106 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107605735 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128359472 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189126318 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153624549 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188417694 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.167046057 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18217538 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12903194 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14592768 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163061496 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120471073 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.118273627 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177923124 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197313685 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155172565 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170808764 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186958929 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104564932 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312451694 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219833205 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191730761 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138599775 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116174816 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165160621 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16472973 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172418552 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182692884 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145640328 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181357206 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161024423 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115579666 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136929994 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14947099 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154576235 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125010743 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.134717145 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158303155 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.150987971 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195765027 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146285853 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160404048 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166550565 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.120596175 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151593534 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145621238 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205009426 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163048592 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182688869 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16097284 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.138511167 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232119154 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096390826 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13117413 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.100164891 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180257868 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136952551 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166334251 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190279235 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228610412 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136004058 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170397593 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141266275 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120014094 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132599915 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153849274 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233907964 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116087551 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13688306 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196774512 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157516024 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134516454 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13753846 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317049617 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118579251 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176596426 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.120676533 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280063735 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12523293 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109031733 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162940034 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18169058 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.146921856 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.163525997 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166944447 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150948229 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166663405 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14259738 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191627809 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207933554 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17532713 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183300027 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147441935 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164689864 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171167355 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184720849 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150721383 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.150040217 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135355116 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187583683 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221103334 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.110267144 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168724929 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173443296 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165728967 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179793514 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141072804 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20637617 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134909747 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170103687 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113932123 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128116482 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1659866 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190823748 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136759575 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183378142 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162016862 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107805748 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129508704 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155336346 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165856546 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116114309 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132075549 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18655535 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128901902 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166648175 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153739349 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134853607 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162747889 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152685437 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112623264 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148074943 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150265923 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110154018 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174720173 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188984367 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133879199 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183835043 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182248295 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170519069 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16447568 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149180637 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644179375 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132046866 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194533429 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156789532 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194283127 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15413057 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170099761 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135384253 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155582286 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174754007 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156568249 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22887964 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172812748 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16530881 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105023505 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14878174 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151272153 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.135588146 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123223116 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16736599 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146443652 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.141777787 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15776192 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120008563 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.149504359 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144361948 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187045354 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12332761 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219050235 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189738653 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115141125 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172267341 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181511698 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138172377 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16407757 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181705646 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149518128 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159076298 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.108653999 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137968834 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188597526 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098967746 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166157914 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1684875 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168921391 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170572627 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136965523 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133079755 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147202787 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166763413 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131858274 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.155260179 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130573057 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134849441 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133373554 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127996636 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164263562 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165481848 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131569355 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.146850505 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186361022 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.128529963 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107376687 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314248178 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132817061 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225050326 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.127500793 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138380833 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148358988 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161146187 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.128332162 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163562944 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132418392 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138999418 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.102725336 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.184266554 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.159220478 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160854194 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18628918 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164112064 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211848392 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136301202 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.238393475 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143054657 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159409462 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.10534795 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131220861 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14672305 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107709435 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147209904 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19287802 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181633212 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.153156138 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145489613 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098551951 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130145206 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13593739 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13289028 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156218633 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16412122 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147370064 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.089171599 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148211903 seconds)
  done (took 79.052401488 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151047206 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131045439 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150851621 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.194955727 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166336804 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242579888 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.206196138 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226208337 seconds)
  done (took 2.572150447 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105925605 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15835612 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139284727 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126229971 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.090526327 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.337640111 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14156187 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124387499 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.149538311 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.133256859 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.092397024 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.573470603 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.10181162 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129578147 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.117576158 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.089679874 seconds)
  done (took 3.70636238 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.279225007 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53791934 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.124716756 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.230382349 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.225223615 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.17224132 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.752857506 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.163964059 seconds)
  done (took 12.591262166 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.130341267 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.141039313 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.141634525 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.173195486 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.127538239 seconds)
  done (took 1.823489539 seconds)
done (took 121.180125831 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100351886 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12614945 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096350485 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128732875 seconds)
  done (took 1.54458916 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.110915637 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.083606709 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.113359333 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.079439673 seconds)
  done (took 1.488426469 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.443060637 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.111754045 seconds)
  done (took 1.699678859 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.122285944 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136073043 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.110240663 seconds)
  done (took 1.473108081 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109046834 seconds)
  done (took 1.219342255 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104605357 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.101589769 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.140182118 seconds)
  done (took 1.458989352 seconds)
done (took 9.995440939 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120115971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.539742546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391754087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137440359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727819791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379461344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049362014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160934222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141292758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120817991 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.108785778 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.700221911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.035987161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.439055308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018334884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345539806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673569414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121532624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096925157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122060993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027194377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092252715 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.091590823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122422193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.670914931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425074158 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091010907 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.386479384 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117348515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096963575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.407470353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.091327291 seconds)
  done (took 17.149941959 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101463622 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184184555 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104501179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122830868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095699925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121723448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103270439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.134973536 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184357087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095596533 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139896509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095123293 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126187844 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.091955128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142436428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096147775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124012983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095140434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.127016803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093039503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142014077 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097551977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125630329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095113031 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121018915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.104796558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121715787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.105798278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120252852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09544079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126331882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093725414 seconds)
  done (took 4.843954703 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147237297 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192540641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134685182 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127439907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173290209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121833523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.178753403 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159209087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187925827 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126670949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110424798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12102433 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128378126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122895016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113689575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120598608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094531201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124101118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099925118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124339212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11251615 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120744756 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092446663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124371043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093312346 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136013261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092419946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.135441597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120925506 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099143755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124545053 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093154483 seconds)
  done (took 5.173441868 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102301525 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129460387 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110023308 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138563622 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099152764 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129729216 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.102840629 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12352543 seconds)
  done (took 2.055579399 seconds)
done (took 30.334309434 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113300947 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.097780505 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.134882625 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.104081321 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.132020107 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.104453678 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119514273 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103796146 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135138626 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105159969 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140899444 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093364833 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121958324 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094174997 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13332024 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100315261 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136190909 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102355841 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140720444 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.108669234 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.121023602 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.104864093 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100621147 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.142855637 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.143661073 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.116662774 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.140786735 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103814688 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126626594 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094519559 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.135482344 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.120953014 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131004481 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.114736132 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.13302383 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.101104145 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122128743 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098361057 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13492652 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101431937 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126587019 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102112327 seconds)
  done (took 6.045768936 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.123394736 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.169732931 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.09931212 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.126459203 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098026303 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.163694474 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.164315973 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.099818592 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.124125174 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.118609909 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.149798094 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.099575554 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.125329985 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.097366857 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.091889452 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.124020495 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.146146666 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.122027079 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.159920691 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.130427183 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.176097772 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.161565142 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.132643034 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.150189438 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.16494364 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.165668993 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.120756864 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.165416953 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.127000295 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.128812019 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.161120218 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.130731917 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.129256912 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098699127 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.165778095 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.135276376 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158829312 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168401264 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.161215703 seconds)
  done (took 6.46513972 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105649674 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13579617 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113548037 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190322084 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133024906 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.136480873 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.101132554 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141918708 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107926462 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120130472 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.092744571 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.155155197 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14093651 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.099354053 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092005952 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137099693 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.142115775 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094254879 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125420486 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110591309 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139125365 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104372733 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134021519 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.102139408 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.120034987 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100707588 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124204953 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.105920239 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.126214548 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.098830976 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125426237 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096348164 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12346246 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.102948997 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12490646 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098885725 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.145680432 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102510189 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133744133 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.128418957 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.135476811 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.097791376 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145084468 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167386117 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09322604 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128239878 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.097671898 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099636884 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121837799 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109810551 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132300715 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095805018 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.139643318 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12198747 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090368302 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106253721 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122093409 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094789967 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129037821 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097750429 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.143112908 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099042205 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138200645 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097248441 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128967864 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.094515818 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.121000211 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096842815 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143699576 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097990718 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162139354 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097462531 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.128423741 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.099418258 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128785788 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10072775 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.122433943 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10848306 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132629911 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102073876 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133607356 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097596958 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125591091 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111871387 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.138767318 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.104103711 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.128723835 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100698006 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124950472 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.091883536 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137294315 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100605711 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126720227 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110713778 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12266956 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094670826 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128494478 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.096747786 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.120000904 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113163043 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128014672 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09471222 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131612297 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092015581 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126076896 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102399057 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125819924 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092499827 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126994727 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098932475 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120910252 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095086355 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125814473 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094164743 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135675402 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100144464 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124385552 seconds)
  done (took 14.840088304 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.245427418 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.223103958 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.196212836 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309716903 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.144544064 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119520377 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.222412663 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.167952295 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.091760172 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16206744 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.180232475 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.189690257 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.179558032 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.194614287 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.180773644 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12298531 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110402373 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.176280139 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.221086537 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.302854814 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.110773075 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.13734856 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164896886 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163580469 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.110485132 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.138454307 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.144923927 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.113239165 seconds)
  done (took 5.958148899 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114941792 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159387655 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.101022606 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.150671141 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150820585 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.095577826 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128222631 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095705323 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135733153 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.107492695 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.123364295 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.098955643 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.129505955 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104182733 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122232647 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101481841 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132957928 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.104057345 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125828252 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096315583 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.138110741 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.113399975 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128773671 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094677859 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.142987037 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124800219 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.09531639 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145976018 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129393756 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118319939 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120325472 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100758766 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137126709 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.091315795 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094569418 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.126375117 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.09408227 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.125818068 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.096593867 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121276036 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093612261 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.11296632 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.093809437 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140695112 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098455349 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.120112981 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.098755137 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12813352 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098979803 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119058307 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.093266382 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093693117 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127365064 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103106975 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126697503 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.098745585 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.127268733 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093518607 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.132292197 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.095074098 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.121215467 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094372917 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129869625 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096136388 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132373964 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.098486115 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124912579 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.094380617 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.128620816 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10174308 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.125864777 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101070439 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120533429 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095459726 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13458808 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.102224331 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095625292 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125434048 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095224901 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.121624678 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.081499364 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122848467 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.081330778 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126500373 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092323681 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09367695 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126286214 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.09818898 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140852208 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133085487 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100309774 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121090566 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094370525 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.127335792 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.090146244 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095789028 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141827922 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14478222 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.091265031 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121852103 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110096628 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125746247 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093608816 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084455604 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131858634 seconds)
  done (took 13.07790591 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139714451 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.175500755 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125251351 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111308639 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.160084996 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.171677068 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101464089 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.622284282 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.093187369 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111458065 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126343147 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.101069987 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126356223 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.10729174 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164730944 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.135173362 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099491112 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.138478044 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.100312828 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.177760595 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.144094239 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.134392819 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.164277537 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126460096 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097678153 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.162234535 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.168463939 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.105830786 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135175735 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.13580365 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.136181282 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.168215718 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.135832411 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128235705 seconds)
  done (took 6.190534 seconds)
done (took 53.689945349 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.256286785 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.440587218 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.209275652 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.213368478 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.255927846 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.259763413 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.207479289 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.410117645 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.981051727 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.199123399 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.214247683 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.214519286 seconds)
done (took 28.002750826 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.301862932 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.374206545 seconds)
    (2/2) benchmarking "String"...
    done (took 1.513232681 seconds)
  done (took 4.028960934 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.213394557 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.215027287 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458281474 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.221200413 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.20756263 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.226722619 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.223036726 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.216890258 seconds)
  done (took 15.909011791 seconds)
done (took 25.593167727 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.284118075 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.416645046 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.472612631 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.227523964 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.216903075 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.225306311 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.212530438 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.262475861 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.223921669 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.215178508 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.216003712 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.480131215 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.230877552 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.607635248 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.212535591 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.219149109 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.227813453 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.442449783 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.213484045 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.224113941 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.215677461 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.204459946 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.238050265 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.248512181 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.220746957 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.212171975 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.248729004 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.212763797 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.422651604 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.225362802 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.256971706 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.214736284 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.253056837 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.22681801 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.321501758 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.245659626 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.414333983 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.223590062 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.203857831 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.229192282 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.416747252 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.622736056 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.211692545 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.215878754 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.221618308 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.27697766 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.210816833 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.942429387 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.22337238 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.214883772 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.231741434 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.597332861 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.223053132 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.219934443 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.229049114 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.475299485 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.222066424 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.261025834 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.25215748 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.220304432 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.214352151 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.211363014 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.272561961 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.216924177 seconds)
  done (took 144.414844493 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.220788778 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.213896482 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.213498623 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.219802798 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.213848639 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.215016228 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.217510911 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.21990182 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.213223336 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.239285697 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.213354571 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.215476012 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.220047209 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177587965 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.223683602 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.242265589 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.2222649 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.230520865 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.215740154 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.219747717 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.242560912 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.215828543 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.232657718 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.21357977 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.219429849 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.304073473 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.2670538 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.220505435 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.219929679 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.220283812 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.262492089 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.239326767 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.844711444 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.07634569 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.231604774 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.244042036 seconds)
  done (took 80.766561169 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.220845426 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.222475539 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.222686329 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.255547407 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.222721342 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.820084746 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817513331 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.94953201 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.413277362 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.642699664 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.501413653 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.214433177 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320040941 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.23230397 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.216663703 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.238396999 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.251108427 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21711812 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223272933 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817439542 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.237341587 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.217812115 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.400231689 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.232036456 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25775524 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.623500549 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.390555305 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22358091 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256905145 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.559924707 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.265659837 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219307941 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.610922605 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.553397551 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339370412 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.219774049 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257030473 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.222767602 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.510145051 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.218977375 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.225784262 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.226026075 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.948063478 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.223576321 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.819618621 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.226876758 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.186962995 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.217633606 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223732574 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.333298823 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.968683054 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.241973953 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.223881373 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.226114138 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.224573543 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225309516 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.258405645 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.322185862 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.336555394 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226175956 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.230407976 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258581348 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.227448364 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.368392335 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.24349354 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.219161079 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282594013 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.327959988 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820378824 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22566921 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325245439 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340313397 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.221141666 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.224371416 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.225354501 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.224259672 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.337167731 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.220686705 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.657760943 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.399911122 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.236030858 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.651860356 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.325670359 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.221707333 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.227418357 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.634783079 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222038883 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.226337099 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979990391 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317944266 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.221070665 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.22789246 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226600933 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.660217254 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800262274 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.498395061 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.228378732 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.642674303 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.22797082 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.228073122 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.67625241 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.221980794 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.795182643 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.943444571 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.228687924 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341062207 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.399636111 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.236403156 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.228560405 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.656748029 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.229578553 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.288393008 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.222742939 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.629351341 seconds)
  done (took 368.358006919 seconds)
done (took 594.674297052 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.950161548 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.899838856 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.036090092 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.924590763 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.89293335 seconds)
  done (took 10.855832559 seconds)
done (took 12.008360832 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.426490686 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.424745961 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290438191 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.430108927 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261634705 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.445128541 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406073962 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.246610832 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.33585976 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.313170535 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335756588 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282882037 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265215115 seconds)
  done (took 18.616135857 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580883499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.233134245 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.312820969 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.562975353 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272400722 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.580428995 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.449965986 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.24925309 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.449645736 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247722782 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245229976 seconds)
  done (took 18.338748833 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.574969807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.235495131 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.317873855 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.580674746 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272320503 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.579378399 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.457171986 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.252282903 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441276398 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245372158 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243330281 seconds)
  done (took 18.35452171 seconds)
done (took 56.461946578 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.272646736 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.405587021 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.257976253 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.246447193 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.240996787 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.242888288 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.248329729 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.2415336 seconds)
  done (took 11.30926478 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.239530467 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.241028241 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.239573957 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.239381771 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.237192092 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.237575998 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.240344475 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.241690938 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.241555575 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.237348644 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.239120588 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.238928214 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.241109987 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.242051095 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.240154385 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.240671177 seconds)
  done (took 20.992295846 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.24161015 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.238805727 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.23774121 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.238390442 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.239360699 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.240106592 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.238808057 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.237992449 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.238200481 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.239450902 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.23894474 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.24119617 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.240236341 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.238476001 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.238630495 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.239846538 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.241137763 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.240974551 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.241801993 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.239752677 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.241615955 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.239413127 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.240623756 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.239886431 seconds)
  done (took 30.910355258 seconds)
done (took 64.366167462 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.243039174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.227706463 seconds)
  done (took 5.626057543 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.300454099 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.304699897 seconds)
  done (took 3.764924594 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.243198939 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.244480187 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.246334376 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.243335783 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.244361897 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.244809031 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.243711631 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.243405915 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.245482216 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.243142259 seconds)
  done (took 13.600402409 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.244481189 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.244094546 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.241854408 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.244830613 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.244690795 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.242635011 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.24283413 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.244909738 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.24345342 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.240200755 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.245346957 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.240497743 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.244283901 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.241319705 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.244749866 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.242279311 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.243243009 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.241755125 seconds)
  done (took 23.53587353 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.255768129 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.266483573 seconds)
  done (took 3.680219586 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.370746645 seconds)
    (2/7) benchmarking "second"...
    done (took 1.285194411 seconds)
    (3/7) benchmarking "month"...
    done (took 1.351991138 seconds)
    (4/7) benchmarking "year"...
    done (took 1.339946944 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.283899101 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.262457204 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.283278832 seconds)
  done (took 10.33549365 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.246889792 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.448473051 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.559809094 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.851351413 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.244565909 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.250881266 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.117200513 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.249767415 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.249591454 seconds)
  done (took 14.376189349 seconds)
done (took 76.077348112 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.236517656 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.267153293 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.25413601 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.251544549 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.537626686 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.264796057 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.238454443 seconds)
done (took 16.211017102 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.232346894 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.223667659 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.235925464 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.246573329 seconds)
  done (took 10.097586945 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.245911684 seconds)
    (2/2) benchmarking "read"...
    done (took 1.625487594 seconds)
  done (took 5.030687818 seconds)
done (took 16.288719794 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248017187 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.247104173 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.24666693 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.245785227 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.24597505 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.249322337 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.245052173 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.246060316 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.247123642 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.243429195 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.247728549 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.246624884 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.248383943 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247396867 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244562384 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246017661 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246145426 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.245373889 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24419204 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243846063 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.245437209 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247477326 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.24614422 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.247733283 seconds)
  done (took 31.070952554 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.248094806 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.245251636 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.249657587 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.247074725 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.247261397 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.248808283 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.247277607 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.243396337 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.249059164 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.247889418 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246020875 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.246655812 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.248815405 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.24673232 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250317914 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.247385642 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.249106956 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245547701 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252827138 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.246144483 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.248601799 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24519564 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.246686857 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251295952 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.246766516 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.248025839 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.251196016 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.248785934 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249858464 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.249121287 seconds)
  done (took 38.601222534 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.254142294 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.259475862 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.250459576 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.250980854 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.249195667 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.249360828 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.250323082 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.252176797 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.249851556 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.250649092 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.25208923 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.249311535 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.253861909 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.252152963 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.250407515 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.253911811 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.255204546 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.25453461 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.25372483 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.252380602 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.2534101 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.251664154 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.253364835 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.253436309 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.252642345 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.251133258 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.250884573 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.252497021 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.251120536 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.252418646 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.252919898 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.250850712 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.252299225 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.253439157 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.25224374 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.253683116 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.256427213 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.260621931 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.252514234 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.251501 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.250388805 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.253114609 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.251497925 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.253624648 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.252135459 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.252457593 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.252020402 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.252877345 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.253150723 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.253901809 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.252019797 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.253199108 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.252724294 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.25522998 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.254025945 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.253574201 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.254192559 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.253186685 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.252794757 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.253926661 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.25369644 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.252676376 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.252683087 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.253612127 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.256182924 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.255601945 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.254307568 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.252622807 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.252720419 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.255028974 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.255705523 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.25496758 seconds)
  done (took 91.377089306 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.255196367 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252742503 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.253989742 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.251775789 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25171005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25489682 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252539256 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254436464 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249980685 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.254474277 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255098845 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.252269088 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252158073 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255054236 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25521978 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.253412757 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.258115273 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251209347 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.256676791 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.255836974 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254672676 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254386147 seconds)
  done (took 28.752787158 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25581266 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256871831 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.255504047 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25804722 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255061448 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.258673752 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.256936089 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257724095 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257334219 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256024723 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253269241 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255357854 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256920295 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253225585 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255821644 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257607765 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256823378 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256632839 seconds)
  done (took 23.780743365 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.255750827 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.257104927 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.256048767 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.254558818 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.252930119 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256788442 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256849468 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25968143 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.256809473 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.254265135 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.258405185 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257489432 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.260115455 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254060387 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259594936 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.256177001 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.259587148 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255296072 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258478175 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257026677 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254678858 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259414766 seconds)
  done (took 28.823030178 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25962477 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260526799 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.257141234 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257908354 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.258082572 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.259887297 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.260491482 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.256739105 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.262942019 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.260254309 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256412577 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.257747901 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.259102512 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255986069 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.254904059 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258975812 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.260091205 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.255870074 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261463857 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.258489019 seconds)
  done (took 26.345094628 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260466906 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261588068 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261363735 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260722999 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260471202 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260953228 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260404021 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262293784 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261504046 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260581826 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260480821 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2608508 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260333077 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262390129 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260110016 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263162335 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260840055 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262386544 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263221211 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260943852 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261392776 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262534942 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262591734 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262986357 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.263525552 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262511728 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262046436 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263859424 seconds)
  done (took 36.498420545 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262514895 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263078403 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.263199072 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.262177222 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.260288292 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.261598102 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.260019117 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.260007024 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262175903 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.260818512 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.263957809 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.262045037 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264761964 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.262138935 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262555314 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.262668211 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263283674 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.261880915 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261765959 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261521968 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.264498074 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264097466 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.261780181 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261292449 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261643239 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.262606893 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26212317 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.262925221 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263568923 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263148071 seconds)
  done (took 39.04518696 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.307845894 seconds)
    (2/2) benchmarking "in"...
    done (took 1.308342897 seconds)
  done (took 3.792998988 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.261554691 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263515333 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.264746587 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.260778771 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.262595058 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.264443289 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.263899116 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261516948 seconds)
  done (took 11.280078789 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.262466558 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.2642469 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.26477715 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.26584597 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.264448994 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.263739099 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271340661 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.284728565 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.267298095 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.265953159 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.272295044 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.273191929 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.266737652 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26340399 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.26539721 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267650273 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.265555489 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.26749982 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.266183851 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.265028657 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265374939 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266587226 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267477289 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.266010782 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.265286771 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.277254824 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.270200336 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.268368504 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264698386 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.26878257 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.266978373 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.264564997 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.266992502 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.269309881 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.266426892 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.268222186 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272972267 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291019083 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.273325771 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269398089 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270496779 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.266059717 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.267828197 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.267863834 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267835352 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.268890877 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.264435341 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.266829546 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.265773422 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.273432424 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.273278531 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266332937 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.264986176 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269809658 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.267475615 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273343565 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.287627525 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.273348554 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.2773973 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.279018929 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.2811295 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.292568189 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270955619 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.269257524 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278888464 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.293031444 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274312656 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.287308552 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.266538097 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.270287683 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.271920254 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283010812 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.291665091 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.269565165 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27111955 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.269852191 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269412844 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270053013 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275612773 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.29151082 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.270014482 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270502171 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279401831 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294183333 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.267952911 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.270560625 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.269568004 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.270470579 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.270768841 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279869752 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.292843832 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.270498098 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.270169877 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.268343417 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.271385476 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.270778993 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.270343847 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268621001 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.268592017 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.272441406 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.270900243 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273456114 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.280437884 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270264949 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272043613 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.277559906 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272246047 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272029838 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.276794095 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.272561373 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271695757 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.273963039 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.27622743 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.268702715 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273393511 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.282721589 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.272761143 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.273761467 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.275021043 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.273749599 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282487613 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.300408965 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.271718763 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.273731678 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.278481085 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.286842942 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.272382 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.274488786 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.273696912 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.271037825 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.267693327 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.276489423 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.272575772 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.274317333 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27375678 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.27316918 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.270646838 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.274156979 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.27365927 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.273975069 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.273659596 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.272054243 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.276339771 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.275935218 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.27537679 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.275106678 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.277629413 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273415842 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.273309413 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.27461668 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.271074129 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276936782 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.273998782 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.274804994 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.273647661 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275791117 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.272776996 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.276584402 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277178945 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.275849074 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275026615 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.27414421 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279963619 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.273327732 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.277418988 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.274565648 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.274758465 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.274399108 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.278022885 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.27544448 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.274364546 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.273706624 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.278404981 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.282877152 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.276457883 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.276438249 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.277297011 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274871412 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277705429 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276154679 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.279878977 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.285608187 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.276894372 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.281424264 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277120951 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275606108 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.275731021 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.278214298 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.276958525 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275254017 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.281874223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.285816802 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288039069 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30499921 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.277792727 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.281926855 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.279347199 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.283997606 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.281055037 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.27756324 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.279370945 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278421149 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276874803 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276722547 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.277499644 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.278162538 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.275266791 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.278589056 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.278425478 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.278406042 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278935101 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.2786887 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278809616 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.277078906 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276879607 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276830576 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.277500747 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.27539041 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.277496187 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.278155001 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.278506142 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.279876265 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.284084789 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.276928553 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279941801 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280276019 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.278682729 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.277771349 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.28052224 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28163273 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.280262109 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283835157 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.299235273 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.27779255 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284112842 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.301902227 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.278131976 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.283006603 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.280178827 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.277522312 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.282565679 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.290851909 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.280616931 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.280355364 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.279935917 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28034027 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282174628 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.286473724 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278401843 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.279745318 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.281678037 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.283115987 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.280938943 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.280968891 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.282385403 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.280939614 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280541478 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283094689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.280157505 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283152323 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.280770597 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.281886694 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.281576576 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286236956 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.290037099 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.286964639 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.281038403 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.282287777 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.282964677 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.289273301 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.281117478 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.282804724 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.281315152 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294806923 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.31075004 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288295207 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.301802681 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.28454634 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.286811558 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.303405351 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.28695476 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.281460705 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283644366 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.281089244 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.28111494 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.281415942 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28217349 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.285438517 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284944683 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.284558543 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.288357628 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.28337226 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.284275241 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.284380181 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.282469845 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.286306441 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.282485363 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.285361763 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.283743305 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284351103 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.284289092 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.283505126 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28925442 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304913723 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.283946217 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.282368277 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.282997868 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.282697369 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.285841552 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.285045154 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.289617605 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.293186345 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.288395779 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.294859565 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.28600986 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292715146 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.28583468 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.288068424 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.295111901 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.28214664 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.285013273 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.286692438 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.283342509 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292820741 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.307494404 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.28801341 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.293620024 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288025522 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.284310247 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.286540902 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.286671393 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288252249 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.285481011 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.292750567 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.310084784 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.290952567 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2883256 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.284618786 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.287074666 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.287495607 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.285125695 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287151076 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.286720155 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.287090665 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.286380538 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.286746387 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.285588899 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.2881209 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.288533498 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.284619263 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.2870519 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295306929 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.310954254 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291743437 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.28863546 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.295322513 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287812377 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294387549 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.309372705 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.28865891 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.286967184 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.291044223 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.289578861 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.288378374 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.288086557 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.288529352 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.291384381 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.293896601 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.289500716 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.288532326 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.288665425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.289627815 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.286795708 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29988447 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.314180677 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.29285021 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29432677 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.286703056 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.29197632 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.297390407 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.288523631 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.289132289 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.291109857 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301536214 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.296161448 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.289883134 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.289858517 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288740977 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289646053 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.290257854 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.290630023 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.288168513 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.290738994 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.291074611 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.291868299 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291938813 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.291778171 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.292202713 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.293177338 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.294326152 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.300383415 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.292470338 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.291900658 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291064133 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.293378556 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.290162839 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.289886459 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.291513663 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291748811 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28902879 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.292597449 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299829437 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.299947297 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.29340453 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.291196317 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.292945493 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.29044877 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.291234677 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293965642 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.293002299 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2941882 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.292130162 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.289828522 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.292270224 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.288214781 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.294538501 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.291616882 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292353266 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29394608 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.300580162 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.291899523 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.291121192 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.293122059 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293483653 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.292271133 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.292549708 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.297515138 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295142389 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.305875398 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.302383939 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.298666905 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.292919705 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294838428 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.301996761 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.293422042 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.292593528 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.294751811 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.294701876 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.292954945 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.297192187 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294787498 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.299401454 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.291293269 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.294258059 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299582665 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.318647419 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293317387 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.294627955 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.298812583 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.29423729 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.294638343 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.296067596 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.296734281 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.301782032 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.316939465 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.296652249 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296488417 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.293346283 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.296520977 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299780732 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29508693 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.295539899 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.294538369 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.296685613 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297540609 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.295546588 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.294163506 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.293560852 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.294440168 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.298694228 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.303702637 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.294682265 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296560233 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.294451648 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.294455516 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296882338 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.296296158 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.294542368 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.294919823 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.29302826 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295007577 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.295388482 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.298267302 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.294818355 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.298202466 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.297879889 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298723209 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.299932969 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.308401919 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.30612399 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.295574924 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.296852023 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.298228712 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.299314775 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.29571681 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.295951066 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296697736 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.300941667 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.301276932 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297580413 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.301125921 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.299281226 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312244492 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.320632091 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298177353 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.298332973 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302984733 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.299539983 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.297302401 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.298531272 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.301203233 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.301896068 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.305729618 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.298596164 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303681378 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.318686952 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.30005024 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.30458977 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.301835235 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.305785131 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.300287784 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299974573 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.300303166 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.302492136 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.315459744 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29906773 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309011734 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.329283583 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.320812641 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.300048005 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.300163663 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299733264 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.300970226 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.30268259 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.30085089 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.302078238 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.300134457 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.299848291 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.299889356 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304323149 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.299014668 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.301409383 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.302277958 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.299516276 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.302151248 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.297338312 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.299196028 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.299789152 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.302707541 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.302870562 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.304665791 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.299751842 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.312426654 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.329227883 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.302930217 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.302233459 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.29849706 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.303194912 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.303627295 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.31183221 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.309011901 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.302263164 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.302007913 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.302674566 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.303476247 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.302845946 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.302123677 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.298992786 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.303312092 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.300635978 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.314187917 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.329831709 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.307842888 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.301587363 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.303554732 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.301000665 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302342165 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304864188 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.301563254 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.303633826 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.304372173 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306937505 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.305586886 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.302705653 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.305492352 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.313089414 seconds)
  done (took 768.0430367 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.301574356 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299899833 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300939442 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.302038792 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300433514 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302455825 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302999683 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.30301021 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302771493 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300760631 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302068278 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303714813 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304588898 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302550042 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302582166 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.303200196 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299854017 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302595521 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301738133 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302295738 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302332278 seconds)
  done (took 28.557935656 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.306359468 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.300255297 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303381169 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304559626 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30165432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.30491598 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.305000275 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306937781 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306519333 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303150351 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305295619 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303336994 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.302146839 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.302722597 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302749423 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304765286 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.306839224 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301128413 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.307759828 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303793372 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305921583 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.304677512 seconds)
  done (took 29.906711574 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.305062069 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.306203264 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.304676857 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.304105446 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.307511561 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.30515034 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.306371823 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.306986396 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.30732616 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.307876011 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.305284127 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.309183319 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.31353656 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.312990383 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.310230766 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.306491069 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.305851676 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.306396979 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.308761453 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.30539437 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.313355543 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.324271342 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.305565893 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.305354659 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.309187347 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.30960604 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.306646464 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.308675895 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.309944014 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.311044021 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.308084439 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.307596382 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.311562047 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.310293809 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.30957494 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.314834795 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.310124699 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.307500387 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.308293976 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.318175526 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.32912729 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.30888072 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.315546776 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.330411026 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.311546818 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.313555074 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.318649739 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.307484417 seconds)
  done (took 64.105837535 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.308127269 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.30922539 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.306821875 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.309664931 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.309740337 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.310299442 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.310483038 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.310799098 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.308079349 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.309027322 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.311396041 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.310070985 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.308482395 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.313542566 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.311807689 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.308322652 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.309665957 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.30796794 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.306112784 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.308357848 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.306953299 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.310502506 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.311330261 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.306792726 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.313367584 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.310576827 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.30666085 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.311213614 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.308273788 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.308519152 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.31247196 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.310385188 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.309349886 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.309330128 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.309061567 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.311935545 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.314353739 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.30995479 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.312160941 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.311964915 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.311904203 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.310237376 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.31270076 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.31277612 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.309914794 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.311068971 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.311546483 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.310287139 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.311349701 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.312422282 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.31190563 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.31058882 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.31377833 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.313351344 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.312389022 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.313573507 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.309361427 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.311062473 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.314689064 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.31114572 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.311004798 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.31182374 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.309784273 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.312847693 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.314243213 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.311059814 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.310679763 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.314903607 seconds)
  done (took 90.34431604 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312604515 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.313651415 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313647032 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314239613 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.312828326 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.316784725 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316265441 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.313501063 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.314980248 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315518968 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315699128 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.316528657 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.316068779 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.312938891 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.314817588 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.316112904 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.314986917 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315578487 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.314812898 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316708964 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.317545345 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.315832855 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316488383 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.314946498 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316052459 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.317738132 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316913631 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.317917222 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316325715 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.316651059 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.316996949 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.317183045 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.318084145 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.316805453 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.316894309 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.31601361 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314171543 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317214812 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.316513563 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.315739356 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.313882222 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315122047 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.31690089 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.315358531 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316982809 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.316332007 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.314799642 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.316159827 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.317709042 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.319226882 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.315727543 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316098584 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.317589744 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.316807533 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.31834836 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.318867897 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320364921 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319076983 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316159115 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.318506085 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31951258 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.319285559 seconds)
  done (took 82.83236154 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318485848 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.320552063 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.315066566 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.31789974 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317821653 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.316101138 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.319774924 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.318245859 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.321019716 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.318865096 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320177314 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316296492 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316981755 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321796577 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315971318 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317764205 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316555432 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.319451758 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321791226 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.318772039 seconds)
  done (took 27.59645152 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.316037022 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.319433868 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.31747434 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317444896 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.320836441 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.317193737 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.320102634 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319594993 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318152132 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322381648 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319442373 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.322844868 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317460333 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.317437124 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.323606177 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.318241707 seconds)
  done (took 22.332602771 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.318545899 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.321029578 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.322659103 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.319527655 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.31944953 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.319135909 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.319448846 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.319353525 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.318440452 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.319283252 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.322560308 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.321271058 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.321677748 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.321520432 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.318235885 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.323363276 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.321131301 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.318150775 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.323600761 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.323455626 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.321216383 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.319934367 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.323967968 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.324689306 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.319778479 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.321163969 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.319349935 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.320792217 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.319198785 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.324782977 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.320178063 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.321254822 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.321168457 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.321013709 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.324586893 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.319768183 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.32193767 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.323873429 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.322761778 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.322932971 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.323463311 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.322405609 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.323620948 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.323330752 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.319664528 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.323559631 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.319419345 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.32244872 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.321951878 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.321834386 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.324173792 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.325176571 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.324684739 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.323350544 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.3249501 seconds)
  done (took 73.91759515 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324349963 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.326479125 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.323262732 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.323852457 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.325085485 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.322780377 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.325250879 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.323027496 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321228442 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.32591739 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.320755441 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.324444983 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320236005 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.322506324 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.320023541 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.323611034 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.317994924 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.323581251 seconds)
  done (took 25.044769465 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.319796271 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.319426349 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.323435765 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.321135815 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.320434748 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.323877946 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322797123 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.321491458 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323293662 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.319225709 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321345257 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.324197534 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322932657 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.324000402 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.319919887 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320759003 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.323667344 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323779837 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.322480563 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322162987 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.324147897 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324788873 seconds)
  done (took 30.316953134 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.323633979 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.321224659 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.321989233 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.338394861 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.340247801 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.3225509 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.322132903 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.322408764 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.346534072 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.377667668 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.373324306 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.342908163 seconds)
  done (took 17.284865589 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323502916 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322955248 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320590241 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325872049 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325004891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318998157 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322151549 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320899688 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325155268 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320596842 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323800098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322512914 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321822024 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319767099 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322452493 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326860874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321600132 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319486341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322176047 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325543444 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320299157 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322430134 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3225504 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325414912 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322094352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320688747 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324037677 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322112593 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319722445 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324495403 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323912972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320786647 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323670711 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321946922 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324395295 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325272309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322184696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32330172 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324577476 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322291557 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.324395131 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322654388 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322463837 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321241713 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322501749 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322082838 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320605069 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32093278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318795735 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324637364 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323017397 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319411005 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320772416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322836449 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321948932 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321353134 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32093518 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320258199 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325116856 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32318748 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32343466 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323711607 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322031029 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322583642 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325616717 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322223627 seconds)
  done (took 88.519248789 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323708836 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324349217 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323132804 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324621184 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323838819 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324051303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324764969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32547335 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32272551 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324602375 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325778486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32282667 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323065174 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32354687 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32238272 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323133457 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322826389 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321767278 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322307029 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325025192 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320244337 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321962185 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32429596 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324395709 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325153636 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327027548 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324887259 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325728148 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324467134 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325071969 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324933608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323060574 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325532927 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322569902 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32398098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322728633 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323349884 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322452311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324655071 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323299588 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322764478 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325192929 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323347684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325674837 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32402587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323298553 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324767945 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324417812 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32461017 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327101678 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325602022 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327400633 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327147446 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326778208 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324052169 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325942503 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323974489 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322459289 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325988977 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327383268 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323325992 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323758369 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329777117 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327391333 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326585225 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325361666 seconds)
  done (took 88.643671254 seconds)
done (took 1797.973707479 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.489413955 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.444299359 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.325795173 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.329721405 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321634513 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.320285981 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.335706681 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322123323 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.326117279 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.327191793 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.326529886 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.515159888 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.320684219 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.322819171 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.326355042 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.423085122 seconds)
  done (took 27.01070606 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.358571051 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.337165943 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.455376797 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.35050467 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.355326732 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.53230926 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.388811492 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.334915724 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.519978396 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.376872025 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.335061623 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.351925861 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.331283046 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.32963714 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.344895233 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.529643902 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.601293805 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.33817894 seconds)
  done (took 29.405402628 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.81857211 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.347332731 seconds)
  done (took 5.404079465 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.352850138 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.336189543 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.333960759 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.331890058 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.331948502 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.318658186 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.336521227 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.325500886 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.331645875 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.467954274 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.33441583 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.34479243 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.355757938 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.334164521 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.329544526 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.372560111 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.483453196 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.334654554 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.331954752 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.339411376 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.334670325 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.432901435 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.3771238 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.332837472 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.470731083 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.325380962 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.335201567 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.340904619 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.472773599 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.333870637 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.332137213 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.331736915 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.338438116 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.276907458 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.84658617 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.326659893 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.351534806 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.344107404 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.3296976 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.482513023 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.336270816 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.339527998 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.330260094 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.821577318 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.467931558 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.459126649 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.346424111 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.336665029 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.337405212 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.399125036 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.336368327 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.337017347 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.379742424 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.158974831 seconds)
  done (took 85.371548011 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.32941885 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.327690846 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509219608 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.35374874 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.321045124 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.327736152 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.341564007 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.638765975 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.334819358 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.325950903 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.623600012 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908442102 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.351533461 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.364103705 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.160537233 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.374961061 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328299749 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.325818886 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.328416961 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.319129863 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887378371 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331396104 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.327599941 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.590163788 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.365068142 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.859401179 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.333083007 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.345337471 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.331662986 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.321404023 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.86238387 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.345208348 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.379285884 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.321274972 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.602119978 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.739730941 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.702643033 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.331942413 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35384803 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.317662992 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.337606432 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.851016289 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.718271138 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.327219092 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.344297639 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.85787008 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.329449009 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.339948955 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.332706312 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.575244577 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.32703786 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.345105198 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.32514382 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.344364279 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.326953676 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.438428541 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.397721935 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.851301566 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325398428 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.327358206 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.363762396 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.326872514 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328992049 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326832 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.328076568 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.705490915 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.481840683 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.324620462 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.712633734 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.851076649 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.344874291 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924766724 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.344926729 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.334955596 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.339728472 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325964228 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.338224694 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.852297266 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.332482738 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321238816 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701805666 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.33340976 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.625832896 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.348196953 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.330170821 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897957128 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.33632161 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.410632833 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.329335532 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.330827093 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.330229466 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334232829 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.608848403 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.356988071 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.330758223 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.329716156 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.378088716 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323095206 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.328550441 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.33180503 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916056805 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.349929386 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.329863405 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334798902 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33094583 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.332704872 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.333503949 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.331119119 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.595002587 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.331801211 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.334310715 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329408666 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.321447894 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.332819114 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.597007135 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.338031686 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.662669436 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.332116176 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325199608 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.336125031 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.329704951 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.382923385 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324023975 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.332711258 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243855299 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.588651481 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.349368049 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.332267636 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.329946081 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330613962 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330921257 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.353390265 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.360993132 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.332398066 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091689033 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.370768937 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.360658095 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.329225387 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.338641895 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328780957 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.356020129 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333385887 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630032942 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.612954513 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.48319292 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.323016041 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333644287 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.083324775 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.365669568 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505147011 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.354032135 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324488195 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.577564573 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.540152598 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.334651067 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.325035643 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.330216139 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.591126367 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.333545841 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.645404667 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886921501 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.35208104 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335495989 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.102250296 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.050592757 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.336166208 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.341326527 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.617501267 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.350998482 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.335762371 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.334242878 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.33474912 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.352799745 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.353177391 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.328741534 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.334673257 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.334706462 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.457472529 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.52631676 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.352782828 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335299987 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.862018532 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.370655929 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329841907 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.339672324 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.334405773 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.334657907 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.385534182 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.334633837 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.340150882 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.337015797 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.343285303 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881524724 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.337112577 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.337851418 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.526612231 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02548881 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.34997048 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.336605297 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.352386012 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.224791498 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871749588 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.356691667 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.668940062 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.340262877 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.373181991 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.33701611 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390373691 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871432783 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.339416126 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334926942 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.998683215 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.351530189 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.861918986 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.329949709 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.344094427 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928267899 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.352862873 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.339163489 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.34111112 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.337782074 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.630294254 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.336415394 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.35629786 seconds)
  done (took 498.369302447 seconds)
done (took 646.79453835 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.333207544 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.327440616 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.323756834 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.335018159 seconds)
  done (took 10.565922972 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.346788413 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.34146551 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.34171197 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341597038 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.346168015 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.342122344 seconds)
  done (took 9.307409525 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.335501891 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.329920565 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.340732889 seconds)
  done (took 8.251263114 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.55187071 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.365918533 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.667975139 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365295592 seconds)
  done (took 9.199038999 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.344718092 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.344929363 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.343453785 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.345425379 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.345615392 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.348502745 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.344413124 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.347288199 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.350693596 seconds)
  done (took 13.359686876 seconds)
done (took 51.92889769 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.333944879 seconds)
    (2/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.455515364 seconds)
    (3/286) benchmarking ("sort", Float32, false)...
    done (took 2.33539896 seconds)
    (4/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.339081947 seconds)
    (5/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.178288936 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.34514277 seconds)
    (7/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.342211218 seconds)
    (8/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.349269884 seconds)
    (9/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.601241376 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.642756818 seconds)
    (11/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.358177363 seconds)
    (12/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.462188111 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.347964082 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.375442353 seconds)
    (15/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.32501397 seconds)
    (16/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.367687608 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.370059374 seconds)
    (18/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.317589275 seconds)
    (19/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.370650677 seconds)
    (20/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.324957694 seconds)
    (21/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.182784247 seconds)
    (22/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.447724837 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364718203 seconds)
    (24/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.325152938 seconds)
    (25/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.327478636 seconds)
    (26/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.33653298 seconds)
    (27/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.386141079 seconds)
    (28/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.342824983 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.352334358 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 2.328988768 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.438325316 seconds)
    (32/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.378131551 seconds)
    (33/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.337323334 seconds)
    (34/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.339329494 seconds)
    (35/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.110600728 seconds)
    (36/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.323509337 seconds)
    (37/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.259213585 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.695676414 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.261482358 seconds)
    (40/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.345634699 seconds)
    (41/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.328740887 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.726812668 seconds)
    (43/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.345017748 seconds)
    (44/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.348282678 seconds)
    (45/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.333139013 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.443575853 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.593891853 seconds)
    (48/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.325921949 seconds)
    (49/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.380216974 seconds)
    (50/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.32744316 seconds)
    (51/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.453158805 seconds)
    (52/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.36366995 seconds)
    (53/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.332839434 seconds)
    (54/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.313710337 seconds)
    (55/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.317263818 seconds)
    (56/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.327640043 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.396748817 seconds)
    (58/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.36658227 seconds)
    (59/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.425344653 seconds)
    (60/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.323525955 seconds)
    (61/286) benchmarking ("sort", Float64, true)...
    done (took 2.385866783 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.349958067 seconds)
    (63/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.325499604 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.250170497 seconds)
    (65/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.317172236 seconds)
    (66/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.941319922 seconds)
    (67/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.352697614 seconds)
    (68/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364078168 seconds)
    (69/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.326688441 seconds)
    (70/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.344762246 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.358675919 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.155003257 seconds)
    (73/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.369321582 seconds)
    (74/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.854367766 seconds)
    (75/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.44789361 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.338182348 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.326837007 seconds)
    (78/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.168503117 seconds)
    (79/286) benchmarking ("sort", BigInt, false)...
    done (took 2.359670968 seconds)
    (80/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.342455896 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 2.33392648 seconds)
    (82/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.426779422 seconds)
    (83/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.400550556 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.326850074 seconds)
    (85/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.720877613 seconds)
    (86/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.339673213 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.344392653 seconds)
    (88/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.4641351 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.919411096 seconds)
    (90/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.328739554 seconds)
    (91/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.366924162 seconds)
    (92/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.326428558 seconds)
    (93/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.850184171 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.218725141 seconds)
    (95/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.094573618 seconds)
    (96/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.423481933 seconds)
    (97/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.33305303 seconds)
    (98/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.35999933 seconds)
    (99/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.33421558 seconds)
    (100/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.35151047 seconds)
    (101/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.345398653 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.320327194 seconds)
    (103/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.833328324 seconds)
    (104/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.329746407 seconds)
    (105/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.469214519 seconds)
    (106/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.344164706 seconds)
    (107/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.238482453 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.538708634 seconds)
    (109/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.328591198 seconds)
    (110/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.845239448 seconds)
    (111/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.371542688 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.128900708 seconds)
    (113/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.334213234 seconds)
    (114/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.328353719 seconds)
    (115/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.351035485 seconds)
    (116/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.345428358 seconds)
    (117/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.442802548 seconds)
    (118/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.327745142 seconds)
    (119/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.489156019 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.182828124 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.849730945 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.361996051 seconds)
    (123/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.451855551 seconds)
    (124/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.935904309 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.621303892 seconds)
    (126/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.366556941 seconds)
    (127/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.325504475 seconds)
    (128/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.40451412 seconds)
    (129/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.337542345 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.109193055 seconds)
    (131/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.327687961 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.590297389 seconds)
    (133/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.858215646 seconds)
    (134/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.327965327 seconds)
    (135/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.330170809 seconds)
    (136/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.517909308 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.452162137 seconds)
    (138/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.327672186 seconds)
    (139/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.671155315 seconds)
    (140/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.374313015 seconds)
    (141/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.32878216 seconds)
    (142/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.327587171 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.733240996 seconds)
    (144/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.205295008 seconds)
    (145/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.351851214 seconds)
    (146/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.428802514 seconds)
    (147/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.308951164 seconds)
    (148/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.349003585 seconds)
    (149/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.440026866 seconds)
    (150/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.347753379 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.144292011 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.36885196 seconds)
    (153/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.818489073 seconds)
    (154/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.319675433 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.321336393 seconds)
    (156/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.456064102 seconds)
    (157/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.426537538 seconds)
    (158/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.090704555 seconds)
    (159/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.365738465 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.364563501 seconds)
    (161/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.556920965 seconds)
    (162/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.360507085 seconds)
    (163/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.331049744 seconds)
    (164/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.361728491 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.327084196 seconds)
    (166/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.330479994 seconds)
    (167/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.345329552 seconds)
    (168/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.339191933 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.330326658 seconds)
    (170/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.344159227 seconds)
    (171/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.344508337 seconds)
    (172/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.350591376 seconds)
    (173/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.342511992 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.744412171 seconds)
    (175/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.447232867 seconds)
    (176/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.32835385 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.369401451 seconds)
    (178/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.342306123 seconds)
    (179/286) benchmarking ("sort", BigInt, true)...
    done (took 2.360522806 seconds)
    (180/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.360312084 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.380106011 seconds)
    (182/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.104522785 seconds)
    (183/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.330976912 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.50276261 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.345848677 seconds)
    (186/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.086295557 seconds)
    (187/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.327392392 seconds)
    (188/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.377305542 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 2.341745741 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.400014908 seconds)
    (191/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.586835478 seconds)
    (192/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.957373371 seconds)
    (193/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.330696101 seconds)
    (194/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.323961696 seconds)
    (195/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.338631643 seconds)
    (196/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.332992965 seconds)
    (197/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.249687265 seconds)
    (198/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.261640047 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.332317684 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.543663153 seconds)
    (201/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.33468057 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.348048301 seconds)
    (203/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.327828215 seconds)
    (204/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.410557688 seconds)
    (205/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.343995286 seconds)
    (206/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.225299266 seconds)
    (207/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.10868989 seconds)
    (208/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.331242934 seconds)
    (209/286) benchmarking ("sort", Float64, false)...
    done (took 2.362925521 seconds)
    (210/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.702658728 seconds)
    (211/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.338728335 seconds)
    (212/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.1847566 seconds)
    (213/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.428123887 seconds)
    (214/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.332220595 seconds)
    (215/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.345940623 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.274576964 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.364549119 seconds)
    (218/286) benchmarking ("sort", Int8, true)...
    done (took 2.344341616 seconds)
    (219/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.332981187 seconds)
    (220/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.507128209 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.386031263 seconds)
    (222/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.334226626 seconds)
    (223/286) benchmarking ("sort", Float32, true)...
    done (took 2.33915491 seconds)
    (224/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.342006233 seconds)
    (225/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.39952576 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.746654417 seconds)
    (227/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.350813557 seconds)
    (228/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.497656535 seconds)
    (229/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.349372314 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.452382382 seconds)
    (231/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.343041727 seconds)
    (232/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.332028038 seconds)
    (233/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.68648536 seconds)
    (234/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.334339897 seconds)
    (235/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.385064222 seconds)
    (236/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.5464844 seconds)
    (237/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.355892684 seconds)
    (238/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.34675918 seconds)
    (239/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.339825521 seconds)
    (240/286) benchmarking ("sort", Int8, false)...
    done (took 2.340393077 seconds)
    (241/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.431653795 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.966591043 seconds)
    (243/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.328519517 seconds)
    (244/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.690839159 seconds)
    (245/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.336151942 seconds)
    (246/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.427742384 seconds)
    (247/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.420614944 seconds)
    (248/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.55963744 seconds)
    (249/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.37793019 seconds)
    (250/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.487071397 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.376140291 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.730526733 seconds)
    (253/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.372934459 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.806157583 seconds)
    (255/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.342430283 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.682882179 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.393901725 seconds)
    (258/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.11946841 seconds)
    (259/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.338037659 seconds)
    (260/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.516128788 seconds)
    (261/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.595339795 seconds)
    (262/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.350111963 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.350833634 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.250191337 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.434557133 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.432126576 seconds)
    (267/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.49927687 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.466015807 seconds)
    (269/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.335726798 seconds)
    (270/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.958307212 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.347578224 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.342204555 seconds)
    (273/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.357227017 seconds)
    (274/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.429815296 seconds)
    (275/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374269458 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.387831781 seconds)
    (277/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.3468912 seconds)
    (278/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.336165881 seconds)
    (279/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.341703111 seconds)
    (280/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.412314057 seconds)
    (281/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.343900726 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.979655288 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.364084843 seconds)
    (284/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.69407262 seconds)
    (285/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.475895119 seconds)
    (286/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.346138007 seconds)
  done (took 568.840897301 seconds)
done (took 570.088379383 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383715708 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393129783 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.359068475 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.383396664 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.471548196 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.535796032 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.37325428 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.36446272 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.409664161 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.412798649 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.35869634 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.534711982 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361907691 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.360730038 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.361757873 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391311323 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.357857174 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.35399516 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.377866583 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.3693745 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.376557553 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.358269773 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.409849932 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.535362199 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.367822367 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.364349242 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.36554562 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.379888226 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.472567389 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.364300748 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.366977167 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.371431596 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.359824996 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.35705235 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.358242738 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.381572815 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374068287 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.372646098 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.368233754 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.39342232 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.358504881 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.364740452 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.365139698 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.367372081 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.365833852 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369377143 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364487786 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.370508404 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39272205 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393167886 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.35957237 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.379080456 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.367246912 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.365409111 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.375062836 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.361701485 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.367220419 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397371269 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.384198792 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396350631 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.351146941 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.369559923 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.368555747 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.381726399 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369243065 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.365766986 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.363098421 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.36867518 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.357536512 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.370135611 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.365275081 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371810444 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.365808354 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.378296422 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.39519935 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.364401879 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.364572336 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.368308993 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.373922611 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.362535185 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375283635 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394242518 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.372197094 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.367575775 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394931717 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.541633842 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.379320366 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.367222351 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.372907382 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.386014498 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.372788971 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.375126164 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.368609054 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.364291062 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.379199953 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372249685 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.369064434 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.369214342 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.372386619 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.379307485 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.363870012 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404083208 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.364609723 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.36653819 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.366027966 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.378579033 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.359579368 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.367902403 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.391622818 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.416360729 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.371108823 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.356176619 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.367530704 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397774883 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.376083982 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.370035351 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.362173192 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.358500889 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.364078089 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.380927219 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.371844834 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.364093403 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400175372 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.370119804 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.366338276 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.35490611 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.39068425 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396636494 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.488665367 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.378911446 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.399085003 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.365494322 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.374017341 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.399404207 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399101685 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.400737172 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373941284 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402303503 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.385804822 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.365270984 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.381513416 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.381606042 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.370041017 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.375837998 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.367084133 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.402435131 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402409744 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399828726 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.394194132 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.490660352 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.366453855 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.363043454 seconds)
done (took 227.319797675 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.430748677 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.364847401 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.467975627 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.367634387 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.466413198 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.466726239 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.365156896 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.366856498 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.367526533 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.744069476 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.367587615 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.365389691 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.365430866 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.367001247 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.451546502 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.369874591 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.368019033 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.708673463 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369152867 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.438144096 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.36756377 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.369154155 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.36843081 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.745835003 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.366076038 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.364242247 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.441254523 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.368489451 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.715245653 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.36241296 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.366887327 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.711706685 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.457398187 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386295231 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.378928907 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376361826 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470688833 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.387519072 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.449528237 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.451151043 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.471149788 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.406755889 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.361777663 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.366465969 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.37393557 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370949414 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.368153836 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.397926687 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.370655406 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.370074605 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.710376247 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.382921691 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.378027516 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.369200262 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.368425098 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.393546349 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.370395383 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.370493525 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.462439921 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.37189585 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.434507199 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.752450725 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746836344 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.372543581 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.367996165 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.370842932 seconds)
  done (took 106.832561035 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.43607212 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.4483213 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.486393216 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.388615996 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.425187148 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.489880091 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.388331488 seconds)
  done (took 11.334901294 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.375880082 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.371721841 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422086939 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.420191076 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372440758 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.593941656 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372345611 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.384116203 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.370951583 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.449474412 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.375593268 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372220217 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.382015596 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.366167418 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420028066 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.381231227 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48617789 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.373955322 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.373027947 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.524388173 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369699028 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.381698596 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.452959578 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384276543 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.373554562 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.381183067 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.349754418 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373061847 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370720245 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.375879561 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372047389 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.484428527 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373875686 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.372649364 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37073716 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.536261077 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.374617365 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371755666 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.373420581 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.37314161 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.375110617 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.376362434 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.377363947 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371384614 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.37771691 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.398268646 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374478391 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375428375 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.376506339 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376330315 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.454400264 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376598107 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373576577 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.372681326 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.452211829 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382260933 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376742041 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.372368015 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374747851 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372019553 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.527463483 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.424710493 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.373582424 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.423352002 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374391429 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.379639215 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.375887574 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376143342 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.465839072 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.373655189 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423832843 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.376097064 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.609002301 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.400419811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37945423 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.380646689 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.379742999 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376415283 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.374052436 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.381251499 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.373402575 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.37767471 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382299012 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374298582 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37604756 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.55885799 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.532601295 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.374218546 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.395716442 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.383207011 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.378449789 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.458002311 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.379274492 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.378920173 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429554084 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48996936 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.454046749 seconds)
  done (took 142.236950717 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.382386439 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.380534047 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.378662158 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.398289427 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.379689188 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.377627373 seconds)
  done (took 9.575940335 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379213744 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.381428447 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.37979426 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378081623 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.378792692 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382496825 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.375361752 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377903032 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384123899 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.38084928 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.380329301 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.381655196 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381531042 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.38127148 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.379340027 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.378424083 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381623929 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37863643 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.382910904 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382766996 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.380900425 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.383138461 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38569298 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.383149543 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.386169111 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380560164 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.390173137 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.381333946 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.378973911 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.391083238 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.400288888 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.384968292 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.383096596 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.388668295 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385549151 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.383082361 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386533942 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.382979616 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378224319 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.382742979 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.383948626 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382422527 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.384229487 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.382755633 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.381952567 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386340479 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.388764113 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387427498 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.384670644 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386189674 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.381977285 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380684035 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.386076129 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386415463 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.379260267 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403281258 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.392031471 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.379845664 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.384332037 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.385006608 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.382079339 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.384400256 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.386247192 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.387200115 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.38429712 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.385597279 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.380912712 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387552009 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38462824 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384483142 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.386611198 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.376692683 seconds)
  done (took 101.90390485 seconds)
done (took 373.152046487 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.836530015 seconds)
  done (took 4.120867683 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.471182463 seconds)
  done (took 3.756059479 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.226896313 seconds)
  done (took 23.512654236 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.380527054 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.428157785 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.376041152 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.373952721 seconds)
  done (took 10.838341105 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.642514582 seconds)
  done (took 3.921375206 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.369233568 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.377110418 seconds)
  done (took 6.02927222 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.693431125 seconds)
  done (took 3.972744818 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.786201052 seconds)
  done (took 4.071662716 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.402852257 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.383205558 seconds)
  done (took 6.077488358 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.353382218 seconds)
  done (took 3.633782613 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.887462441 seconds)
  done (took 17.168102795 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.374477358 seconds)
  done (took 3.659532295 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.412780373 seconds)
  done (took 3.697537379 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.068040455 seconds)
  done (took 6.346930631 seconds)
done (took 102.090644589 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.366898276 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.367403232 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.376149375 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.377881898 seconds)
  done (took 10.762856838 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.411508347 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.412363633 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.41157272 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.42312837 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.413557526 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.407485128 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.402580866 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402045704 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.421323392 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.413322805 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.416074353 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.410146295 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.409507406 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.403118449 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.413806687 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.411579968 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.422276483 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.413696435 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.406714529 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413797256 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.376992424 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.420645129 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.418013823 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.375625368 seconds)
  done (took 35.116893004 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.90125416 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449524737 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.531451168 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.427573208 seconds)
  done (took 7.594728026 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432996525 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.431831005 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445957206 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.486027158 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.509225275 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.443276065 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.406972279 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.403376926 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.385280643 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.430999353 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.506433613 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.448487505 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.514051906 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.378170095 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.569134386 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.383793102 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.37795322 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.43105837 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.484269705 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.499731637 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.380822268 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.431044165 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.436576218 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.449856575 seconds)
  done (took 35.950591209 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.38228889 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.400701362 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.379952663 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.378881603 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.390632864 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.380717569 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.377626305 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.383662941 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.383221191 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.382857069 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.38003007 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.389960838 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.377919848 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.378164485 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.38416519 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.377155359 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.386826511 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.378158812 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.376191241 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.384697578 seconds)
  done (took 28.942165756 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.374014012 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.377710074 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.728725797 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628412762 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.374033813 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.37920621 seconds)
  done (took 14.143583389 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.449888586 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.62078687 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.388310833 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.747604573 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.833738692 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.381848141 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.381483584 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.637214544 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.970543116 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.949661149 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.443764202 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.457921206 seconds)
  done (took 20.547810242 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.387613789 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.384604199 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.392127218 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.396395104 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.434288869 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.411690057 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.386240017 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.377000401 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.4471587 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.459477327 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.412556634 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.438076112 seconds)
  done (took 22.217083384 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46546164 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379132846 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374739241 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419799885 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381152241 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591845742 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418996046 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14151571 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.403746014 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656616993 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385856366 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478831941 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644224752 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383147294 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388437355 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.372562596 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615566922 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903006408 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391552463 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384653434 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413732567 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386651828 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387314593 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614615948 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389406713 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382904454 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648539847 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388059588 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684082226 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40280219 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397240303 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388663598 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664549753 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072237238 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502090973 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609682753 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38943339 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397294293 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.404146836 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.381566304 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39247512 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395183801 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400731324 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389034839 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390426694 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389256611 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184658299 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.40925672 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.389498016 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390703163 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655043604 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488011992 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.395757385 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390293064 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391431393 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383736794 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.395271902 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490902575 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958260929 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391647484 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392167831 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.408366159 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394140076 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382992871 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043956546 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.387120474 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.395614939 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395983093 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38664583 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382810526 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407703636 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390419086 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.413766596 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390439607 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111886055 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399035392 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392532427 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979936595 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388313779 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.395351518 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621593235 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390364953 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395110314 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.3862303 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392567276 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129910997 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396544623 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.37935935 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423530098 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175318304 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628895565 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412455904 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415291087 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616587875 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.376925901 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39217834 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.393000456 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397669406 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408488815 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162173568 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409209936 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389552819 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648755228 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.601588133 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394530282 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.382519216 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908631517 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412174691 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.411599166 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392187728 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62011865 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.998012263 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409163493 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395177405 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411525409 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390774735 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1694389 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394262381 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.499006779 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401877849 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669658984 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.21314912 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386361976 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462248118 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396976377 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394078974 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396033499 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397147455 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392021707 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.611646357 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421908733 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.407123699 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.394298392 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392738465 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.385329537 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410565927 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.397606958 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619831644 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398128241 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672082521 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395221517 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394073047 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387124721 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.612285183 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.396192593 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.733766587 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655937705 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398703014 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402739366 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40956857 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407725992 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495371638 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419455796 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.395946725 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652942232 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.396462199 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.402348842 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399666292 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399064511 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395999224 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.402902773 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415684871 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006913816 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376660578 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392297885 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287281755 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.408467851 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466871191 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398739829 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619967587 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.39780494 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407550601 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.394806732 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.394032935 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640678145 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403201074 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.395289953 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477685404 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.907914244 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026325439 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413193505 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.399275378 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.390939034 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.394708124 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400548283 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399712437 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399981075 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624638188 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414222763 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396832511 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.999363699 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400279978 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398342768 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.406442208 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411543518 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.403521505 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400485237 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.395985803 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407905285 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403001377 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410970257 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54052029 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.412183932 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400118094 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912582411 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401000272 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398202791 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398152137 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434666382 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406569222 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232263233 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653126485 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415151618 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661866111 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408012668 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.419427908 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.398150448 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404277938 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405553943 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.422899792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409465322 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.408344776 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403948797 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405030377 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964238042 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166188644 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966050593 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402204331 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.422041719 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403559305 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177733393 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415106373 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397698455 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648829615 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186685758 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414285556 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913905314 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.420318621 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194896802 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673525543 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632092012 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404588246 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.40316154 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675623121 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618548915 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433020246 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400631892 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40243427 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.382313858 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980827132 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419187534 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486809708 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175246369 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426367906 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406184535 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.447486683 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395124159 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83548984 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422520092 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401092911 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39899908 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419349637 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237151602 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399212065 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405727379 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063455839 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420068309 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.92043765 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416703398 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.627202155 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.414811414 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.40828663 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.406871719 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.414539795 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.66274185 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668881356 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408362971 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405079534 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988953021 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.26206878 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408476943 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407126073 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178285969 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408968914 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704663807 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.418226355 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406339069 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409141495 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404778698 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400204596 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.402824509 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408550298 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383229931 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92222532 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.414145287 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417631015 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410898411 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248418324 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655683519 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.416674954 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.011599801 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633430231 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402275568 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422583674 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.404997603 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401715693 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.413139925 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407574527 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640792857 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466787851 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624476783 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420924311 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.389951359 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481631705 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609919897 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402621168 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405153589 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684367976 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.404409454 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.411135891 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158878656 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433709537 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408106031 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428164374 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412080609 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421892138 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472762901 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63487085 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.422664901 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.41814218 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835316608 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428039775 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427582183 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.42179488 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497785054 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415892589 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410864925 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.183436033 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021198279 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17610799 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.028342838 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682123296 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410655691 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410725717 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407736414 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552209457 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408046773 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685782063 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408301541 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.40388134 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426049361 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403153475 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440817209 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622873378 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677317269 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402142161 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413122417 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412022754 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.406613917 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415905572 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.615987512 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93301368 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00462345 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410625593 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417280546 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15516491 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697730869 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409782562 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409342043 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409743773 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.411933285 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.410537443 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418940616 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405306575 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557137879 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677591965 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104391952 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.432768522 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.437467815 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.185920826 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421250085 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669676563 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405518885 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.643400182 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030300353 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151545024 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677064325 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47766369 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634785274 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.41539744 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556902351 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.411718964 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414486828 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406910853 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291544097 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.40519289 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.42017195 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027524935 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680453959 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.412626679 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.412143977 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438117977 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.419073126 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631708513 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176111669 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639388135 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418383024 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411695071 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413916919 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035140927 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687820027 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41839895 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409474768 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665721217 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415639263 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435699942 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.864696231 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.407985658 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011856522 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.388740893 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432762651 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418905609 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157497736 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039715682 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.422651057 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945103046 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418560974 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430421209 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691817403 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.41843458 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419333 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695636961 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.416030826 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424869495 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650524971 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.035157039 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220719232 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.428444636 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419442472 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.436462726 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413102966 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495097949 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409978612 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416062091 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.865103638 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435634549 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416637528 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419257778 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.412436888 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424849743 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.416134579 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41707533 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.417117704 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.440169369 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.39602296 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426546985 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51966023 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992939119 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430413203 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.077369363 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.742177508 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667620258 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410932419 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.404930064 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.417864244 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412533698 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412439492 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409889136 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41584329 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01075346 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.415835905 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.43299803 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418655042 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.631512532 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625894401 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414360837 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65453708 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420320968 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436352534 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.399575056 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41654534 seconds)
  done (took 989.122417133 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.444036753 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.458023511 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.452697163 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.435079287 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.455498986 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.461028869 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.492080814 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.443309741 seconds)
  done (took 20.962925468 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.41763296 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.428301437 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.425860555 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.427329733 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.418782086 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.918996247 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.443516551 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.428313741 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.423570378 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.431011229 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.436008119 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.134450899 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.448614666 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.423744586 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.409293458 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.43064705 seconds)
  done (took 33.374728479 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.504968423 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.586284682 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.575287538 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.495922743 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.441792414 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.411797277 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.689532801 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.439241485 seconds)
  done (took 27.47204412 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.426536919 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.429085014 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.428875413 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.426221205 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.424530845 seconds)
  done (took 8.458044052 seconds)
done (took 1255.943676057 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.422927471 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.42429186 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.42090126 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.423425346 seconds)
  done (took 7.015361677 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.408885341 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.405598656 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.41193053 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.417155253 seconds)
  done (took 9.968645025 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.162138696 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.077383839 seconds)
  done (took 5.567111797 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.422765777 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.184701038 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.154889477 seconds)
  done (took 8.087075649 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.730553084 seconds)
  done (took 3.056086164 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.833966143 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.786203814 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.616422121 seconds)
  done (took 6.563266439 seconds)
done (took 41.582433358 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.430764702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.761150295 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.578520579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42145147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.578511615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.580949374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.152968384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.438432663 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.422510317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.43268926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.42396745 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.577164151 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.134225522 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.769847815 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.134086399 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.676066759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.590451666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.435483357 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422879256 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417639522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.147118261 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.432335529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41380796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.441643345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.587806962 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.574053206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.429863288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.667837938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423721786 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419032562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.588249149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.432896781 seconds)
  done (took 84.264170831 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.423291344 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.430845446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.417411983 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.453054753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.417985891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.444310762 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.436708908 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.427696398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41571523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423377907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417767738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.435984583 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.418210467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.418435797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.418973707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.416896405 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.428719901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429011001 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417980338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41736636 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.418131982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.429140086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415157973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418391521 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.440324391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.419273868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.437571218 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.417586515 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417562785 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421030869 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.424692212 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.450208901 seconds)
  done (took 78.948818636 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.435068731 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.433116817 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.42543927 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.425761382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.421386725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431851807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.420621622 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.422325696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.419231388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.429583145 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427363885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.435835335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.41844535 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.420050256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.420390455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.426688841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.420928346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430753815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.421713428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.419867521 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420824718 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426866414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417018517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421078667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428168856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.437762066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418838897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.440785349 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.420796818 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424259457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.435333234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.437288961 seconds)
  done (took 78.967050196 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.632876358 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430026553 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.432817192 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.36376964 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.430685009 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.430507204 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.417904071 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.627877025 seconds)
  done (took 15.100127369 seconds)
done (took 258.606124478 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.427022583 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.422983647 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.65364985 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.457544921 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.425243029 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.467855269 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.457706425 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.662733094 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.442754626 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.675726322 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.453112037 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445999298 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.440885539 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.450178228 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.718728859 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.583093058 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.341356948 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.437700196 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.782465172 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.448167671 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.702873735 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.429652622 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.71426402 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.420655216 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.441832996 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.432118332 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.431577998 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.337169524 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.470973836 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.788447051 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.436983811 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.426126378 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.52286301 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.538529323 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.6519508 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.596425682 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.440504647 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.521010044 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.658611036 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.449440203 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.440370191 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.22988793 seconds)
  done (took 85.609173077 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.438804713 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.558155158 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.440981993 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.433884274 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.437979383 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.553131349 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.537691215 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.435545455 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.438068638 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.432186335 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.43367484 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.436012731 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.43417214 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.437954013 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.435464589 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.436573009 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.438836089 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.436963779 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.438668883 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.485642914 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.562777512 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.464823079 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.432597598 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.440863168 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.545940467 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.578259448 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.440693702 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.434499212 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.482526309 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.443789785 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.438637109 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.48901556 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.439897874 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.43945638 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.556780753 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.541611422 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.46298212 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.43546269 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.559653862 seconds)
  done (took 58.646499522 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.44221187 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.697328969 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.880384722 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.443122057 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.442351969 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.44580465 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.522280472 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.445897583 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.443491366 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.443335457 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.603425383 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.448851695 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47791968 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.90274851 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.444030594 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.445740031 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.442283638 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.442104436 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.708140788 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.454310673 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.54176135 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.447057076 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.524220387 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.454797134 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.464830196 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441998423 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.447412928 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.037141972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.442613999 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.598571322 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.271242112 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.524943651 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.976128537 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.886215297 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.273390815 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.447163151 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442059218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.610478968 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438163463 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.44417697 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.5270009 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.445466601 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.886920458 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.134683763 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.464122148 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445024946 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.055136592 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.598556289 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.696183038 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455567523 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.911572694 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.449644123 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.447987644 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.447735426 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.704503881 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.454917572 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.445788162 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.069063807 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.467165791 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.527048955 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.449071499 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.441358862 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.719039834 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.442007038 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.700928462 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.439854282 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.454024362 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.468119058 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.888603289 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.447125503 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.162745864 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.458360784 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.44558703 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.602064469 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.692749538 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.081724723 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442954297 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.711172057 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.981890283 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.519888 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.444360937 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.026911864 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.522477783 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.444022137 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445674658 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.450998715 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.44485714 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.498452987 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.523720369 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.081761092 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.13712623 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.087698002 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.540098784 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.456162961 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.447517076 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.074630501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.464546215 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.444648926 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.882267221 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.160346473 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.469742974 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.459796695 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.161930094 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469690139 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.533332607 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.454195657 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.898513314 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.45133084 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.503495707 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.447943655 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.452235406 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.46412614 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.530744328 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.455168993 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.450412745 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.124476515 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.642429619 seconds)
  done (took 190.361025424 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.444804759 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.435526546 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.443204369 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.435472164 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.442664557 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.452423559 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.444239186 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.441924028 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.449967111 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.442802648 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.441772138 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.442182596 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.442638122 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.469366034 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.446781822 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.443612401 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.438378064 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.441973632 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.442343578 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.436013665 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.444875649 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.458656377 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.441213641 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.438082001 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.442083913 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.441523796 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.466977894 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.43985277 seconds)
  done (took 65.797958212 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452942105 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.046576237 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.447288901 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.584087723 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.471972545 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.446343349 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.582743156 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.509545692 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.444993831 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.445409586 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443543752 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.769732657 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.451616719 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.000979614 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.654251434 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.592047864 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.003059666 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.471137763 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447057809 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.44352771 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.586538538 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.462877548 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.774395032 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.055545491 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.454371576 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.05245515 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.44391916 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.454554955 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.445563393 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.057595749 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.451960034 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.771171607 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.535914719 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.507704515 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.051362114 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.005587603 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.017961644 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.610206866 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.447543255 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.445822209 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.447106371 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.44047559 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.057767321 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458049531 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44925474 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.055077157 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.470450983 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.450105686 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.456584802 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.451341187 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.511072771 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.510862501 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.77583397 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.065550246 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.535410752 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.465215315 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.58768098 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.830548283 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.453272927 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.003810328 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.45774804 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.063031362 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.472095108 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.443774656 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.455145621 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.456679224 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.612203176 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.584616465 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.001546502 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.473416427 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.005653713 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.627393041 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.446633953 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.453094222 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.453219518 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057359017 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.010148602 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.629084918 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.588336379 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.650532795 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.449794082 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.447713416 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.442895951 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.53617438 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.448481466 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.060512654 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.027200168 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.47520153 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.461879116 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.459586501 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.455984117 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.637505772 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.084271398 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.538791346 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.000325337 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.80667185 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.787892285 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.459252773 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.513622053 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.466886858 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.785833495 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.46207449 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.511042058 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.916378319 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.781855931 seconds)
  done (took 173.12697359 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.704636432 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.475565295 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.544687294 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.608906127 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.076007016 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.062094062 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.4452169 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.584287348 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.57559384 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.725579002 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.468832406 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.548691296 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.678224632 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.530885519 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.204814866 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.526008705 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.560062832 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.619021085 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.602342368 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.463436817 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.122546625 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.77002889 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.649780715 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.470520576 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.567881526 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.300545899 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.04972532 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.009661721 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.647300397 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.455488203 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.993819858 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.456588333 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.444643373 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.166850419 seconds)
  done (took 67.462308486 seconds)
done (took 642.337108798 seconds)
SAVING RESULT...
DONE!
