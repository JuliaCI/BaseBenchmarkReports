cset: moving following pidspec: 19975
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.224505218 seconds)
loading group "string"... done (took 0.456640586 seconds)
loading group "linalg"... done (took 7.458875417 seconds)
loading group "parallel"... done (took 0.168192685 seconds)
loading group "find"... done (took 1.155794575 seconds)
loading group "tuple"... done (took 2.064569165 seconds)
loading group "dates"... done (took 1.308259932 seconds)
loading group "micro"... done (took 0.242264123 seconds)
loading group "io"... done (took 0.722615751 seconds)
loading group "scalar"... done (took 40.247744849 seconds)
loading group "sparse"... done (took 12.338918661 seconds)
loading group "broadcast"... done (took 1.097882546 seconds)
loading group "union"... done (took 13.423474559 seconds)
loading group "simd"... done (took 4.744429391 seconds)
loading group "random"... done (took 9.586204003 seconds)
loading group "problem"... done (took 1.970571794 seconds)
loading group "array"... done (took 22.272698826 seconds)
loading group "misc"... done (took 1.408242337 seconds)
loading group "sort"... done (took 3.55086806 seconds)
loading group "collection"... done (took 19.276315684 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534640112 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139930308 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131055289 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146390445 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202559716 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141658398 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156286134 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112741735 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.951984177 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184909115 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15640513 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.508672404 seconds)
done (took 5.088393465 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.293013378 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094090654 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102612556 seconds)
  done (took 0.862598398 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076553679 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143043523 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093053319 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0771476 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094456819 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077276841 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094155564 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077530128 seconds)
  done (took 1.32865102 seconds)
done (took 3.238709397 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727659047 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.285950576 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201463384 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.457930957 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193728884 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211788663 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.74837903 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.367238527 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250455002 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099229694 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141711948 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384910898 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134922354 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.742967728 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091038984 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123631484 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181670187 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.475254141 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081046123 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109657072 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115154639 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144493485 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12973185 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091923 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183543717 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080193758 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191269083 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107795767 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079851348 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286264438 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200620396 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.756419879 seconds)
  done (took 11.086692469 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110358882 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132144621 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097053499 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137479572 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132477297 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09845385 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085089343 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095977734 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120197519 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174425002 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113169472 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13536509 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094095152 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081663216 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114066623 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242757847 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118085384 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102008433 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09909544 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102997217 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119586759 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111105616 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107274979 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092302719 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165577011 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219998561 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112276539 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125593306 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095001916 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110544236 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14213165 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140612299 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093426501 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079088963 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17202127 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124313154 seconds)
  done (took 5.082414501 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185426572 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119740804 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165775831 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161741443 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138623672 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157777246 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111749206 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252019586 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.189221667 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161028583 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140195085 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115297204 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079614521 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098282649 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.152194927 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09546805 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.668248986 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160428524 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115100257 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114656117 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102506834 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083148477 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363531887 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101803237 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079144261 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097795072 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.0644225 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157358052 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098541281 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.134707843 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120043447 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081719213 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138449382 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094981785 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194394483 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123585789 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134265543 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078354658 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095700512 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173264657 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086321711 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097197886 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119506248 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132980042 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116610212 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098100292 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094792089 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204429612 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097224837 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096771685 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.942277508 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180756265 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089309852 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094710332 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.318595669 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096998657 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097124676 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077378634 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.265024706 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.181160303 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09687955 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078519768 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096491928 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080209437 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396421976 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079473656 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.722420211 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083711652 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.112544958 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081033401 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095856135 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103119162 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086758111 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113327003 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078641738 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098747546 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07756336 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096894331 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07975852 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108502262 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100655821 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078834975 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163376616 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079364238 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113325812 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126011606 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082253386 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094799412 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.075249445 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130764178 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097837046 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07967155 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132718203 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098128371 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106698292 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082857388 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143297877 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096611346 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.172501782 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080019344 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123744349 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100187244 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112596794 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111544606 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098804725 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083813876 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095525391 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076729097 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16403172 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077446925 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094038371 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08038632 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098807317 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109999769 seconds)
  done (took 22.529043709 seconds)
done (took 39.370569378 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324505293 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100897333 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101399481 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101835591 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098739899 seconds)
  done (took 1.468348725 seconds)
done (took 2.183538132 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283953993 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.209867456 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076581575 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165719541 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093400333 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170454318 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157834997 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110480932 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216398271 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.075928602 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.178548598 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076470586 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092932609 seconds)
  done (took 2.650578801 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094229573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114036092 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081277084 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110094937 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074998042 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111014134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092601538 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116239047 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108943288 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085024114 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092863022 seconds)
  done (took 1.793016285 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093956284 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112547788 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081577245 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109966039 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076774337 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10993973 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09231888 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115661812 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109021173 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084730369 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093418114 seconds)
  done (took 1.794440659 seconds)
done (took 6.944527806 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090834275 seconds)
  done (took 0.801916834 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.915673158 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.85733301 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113359905 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151940122 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313568333 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172154214 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.468665359 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124037748 seconds)
  done (took 11.032983214 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.143759044 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084107897 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103295981 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084371193 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10344879 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083715456 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098080497 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099300763 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084706351 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099273689 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081640575 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097805521 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100411082 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085281743 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098265039 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08239824 seconds)
  done (took 2.305915155 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118112737 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117335391 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105944625 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107739822 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086976225 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103483605 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104858766 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088661289 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100360708 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102076831 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09047222 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104568876 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102736551 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07940344 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105018066 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105772008 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085210807 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104676137 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105843538 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089827462 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104179043 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094437425 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085710635 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104262643 seconds)
  done (took 3.218932215 seconds)
done (took 18.075703565 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15775232 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107095279 seconds)
  done (took 0.985942005 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094005456 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111632347 seconds)
  done (took 0.931239109 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096211715 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094474193 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119168989 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108688295 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079080135 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094584852 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117533097 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079378306 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094954063 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080570109 seconds)
  done (took 1.69506907 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080929029 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107816453 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100293578 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.092786561 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10374943 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093644157 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087085289 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097914035 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108722983 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07625946 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101780504 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112475906 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084242982 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114621939 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103620601 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081381013 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101285346 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097792196 seconds)
  done (took 2.476068128 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07761927 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095987806 seconds)
  done (took 0.901956361 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080066028 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092774783 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079828645 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095955377 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093131657 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075941066 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093078951 seconds)
  done (took 1.33877408 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.505814059 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134855628 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.250906809 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083431154 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118912771 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.297568493 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097196854 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083849298 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101785272 seconds)
  done (took 2.459273036 seconds)
done (took 11.515224011 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091493033 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.1163669 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110875612 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460329343 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104896528 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09651576 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161011064 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247367033 seconds)
done (took 2.119702853 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148379398 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322439957 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112750776 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06669139 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094737113 seconds)
  done (took 1.330235119 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07892878 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099557535 seconds)
  done (took 0.912518225 seconds)
done (took 3.125674844 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079235985 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128069976 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079597293 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097527659 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076900942 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098264435 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076351558 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095067849 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079218791 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095577207 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095830495 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079072584 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096174018 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07967453 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093422417 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076772484 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093540213 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078729009 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092925071 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07618828 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093182994 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078479707 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093773976 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076076521 seconds)
  done (took 2.87855644 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098222796 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096718184 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101369579 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084675115 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100832008 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085141617 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101263482 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095605216 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084783924 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098761447 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099116776 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083727093 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098660324 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083080811 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098375287 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100236742 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084781634 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096616674 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081775564 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100165542 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101751721 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080337959 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102536634 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101044946 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082579863 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099468271 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08247112 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097393898 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102058672 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082919977 seconds)
  done (took 3.546190489 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083973391 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09349648 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077190765 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100418769 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076606073 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096346058 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07669424 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095753113 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078222937 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09420391 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078646136 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094387654 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078287018 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095156668 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078334624 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097401105 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106553922 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077663067 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094190714 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077513136 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097860955 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077503106 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094744474 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076263017 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094092255 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077129988 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09466028 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077356952 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094528537 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077735311 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097075464 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080953433 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094386694 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083227288 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097814211 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077027113 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098027554 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077731402 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094125459 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093986057 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076864323 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094235073 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07725927 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100803314 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076650981 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096999534 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078105748 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095723885 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078108787 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098083873 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076916688 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093851164 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07936071 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09483426 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097833093 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076750698 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095597135 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076946883 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095157244 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07695099 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094266981 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076754355 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096369227 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077778076 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109807128 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083914947 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094055066 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07890975 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09460849 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080108026 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096796923 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107935025 seconds)
  done (took 7.078841503 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08211929 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104902998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07868692 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095868186 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075620594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095618199 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098014457 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077668448 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097282969 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084455517 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095116086 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079031451 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096332898 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106670471 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078617401 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097098973 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084745294 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092778466 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078546444 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09868381 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077941968 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097290842 seconds)
  done (took 2.718382876 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206862864 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10354482 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140234202 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106288354 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081050067 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105418735 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101091748 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086211154 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101580172 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082769931 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099667692 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101453787 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082387943 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099788444 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099674419 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084014577 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100466865 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083833842 seconds)
  done (took 2.615735122 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092110809 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09775983 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101720649 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097517272 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097650617 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082559971 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103112545 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106196697 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081749187 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097606652 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089203358 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099590007 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099977788 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080033664 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099870734 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080190441 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100057899 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079811118 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10648621 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104021025 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103352224 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089829542 seconds)
  done (took 2.842006368 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095635824 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100218941 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116362762 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083685075 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094164859 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078364121 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10432491 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080196157 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105475259 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099451689 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080242879 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096549971 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08621092 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096735298 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102517522 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08046561 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099373012 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080551057 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099888782 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076313253 seconds)
  done (took 2.60947519 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102044419 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099037196 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098687763 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091215629 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099556378 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081834807 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108036715 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099768192 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082101352 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124159828 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099651491 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082259184 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107999779 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105400647 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098009663 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091092028 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107877374 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108028095 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081791461 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098835481 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124302126 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082489852 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10725954 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099287829 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.192028629 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098979221 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099661716 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087999649 seconds)
  done (took 3.615203825 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079885144 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098374847 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077598952 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095523808 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077255924 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095454695 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078252919 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095909054 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081225768 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095547821 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079940271 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098300296 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081348852 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100722666 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080371538 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097721205 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080038784 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095534739 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077601421 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095387755 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081406278 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098269334 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081088088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095427504 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078280507 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098633475 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07841409 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095566176 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08075626 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095136292 seconds)
  done (took 3.403383688 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089968188 seconds)
    (2/2) benchmarking "in"...
    done (took 0.1053676 seconds)
  done (took 0.953115431 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0786584 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114195902 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077765662 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101824867 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102809254 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.080871482 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107032193 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085413684 seconds)
  done (took 1.50472754 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094535458 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109047088 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082355768 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112222894 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109058977 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094418517 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16339784 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099828397 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086591411 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096612636 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111209973 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080933842 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10409715 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080487502 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104444826 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08666921 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096670937 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086484169 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103010468 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097552663 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082373161 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109355363 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082933632 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095808508 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082257123 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109568058 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10755045 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082089147 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101227309 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107629065 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086311946 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092428633 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080717855 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099729233 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079164489 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107683054 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110477379 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083125395 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107202423 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081915562 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110204126 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094013078 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085714503 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104693163 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091282941 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099080647 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08169759 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094521941 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096655373 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083405073 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094805805 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081078621 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09412039 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088690891 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103408695 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111870335 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079705848 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099928347 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084308114 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102367659 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08707029 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.1011784 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083467926 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098911937 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105866406 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084755693 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10612861 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076611165 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093003329 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079624202 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107178786 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121639314 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089199231 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100517259 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081979647 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09660777 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101826949 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082717425 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105916418 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088860143 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099323 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104994478 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089186376 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099316427 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083900788 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106187573 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096980875 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083410206 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097268344 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095507427 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098204741 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078702064 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097514862 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107290382 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085214138 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099310025 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079277958 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106685809 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075871617 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103430101 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082855126 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099645019 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108469565 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087200359 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105633101 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106535484 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088608012 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099684377 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084596167 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096359593 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083488664 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102290358 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106352087 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07574133 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102400208 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08329266 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099978654 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090182929 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097937832 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081825488 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106586951 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106116037 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080090838 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09605965 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085238055 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100551605 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085743696 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107306542 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098774105 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076863833 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095115969 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085841256 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100764182 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086253438 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105565784 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102311463 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076785051 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097367633 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085917383 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106607062 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100184293 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08238917 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104745013 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083062582 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09910205 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087522472 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102145342 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081190102 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103523814 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101796075 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077855472 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104352466 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084519899 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098732225 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085303104 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103957798 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102229244 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083382269 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099022199 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087423333 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100976032 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080966503 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100074382 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080187982 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.1094343 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102730498 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077587181 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096979912 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090477407 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097680165 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080734154 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098602538 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10247309 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083465953 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098073063 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082148934 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101031215 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093990076 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105012448 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101854949 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087360604 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111155114 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081628015 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10160505 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099328808 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084210954 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101583842 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088868843 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104683037 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105433152 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083713217 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096814675 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088317561 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107771061 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081211743 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09843212 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080987187 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103221466 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106534772 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085778933 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100924243 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080501019 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100069362 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10406931 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084634212 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099859615 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08085791 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104826914 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081224283 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106887928 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10090629 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090548974 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104140935 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077231792 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103307801 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098139189 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087534643 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096295763 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07922917 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099893028 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083530737 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09883005 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084904436 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094444099 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091218237 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109608028 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100573726 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081357379 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10066024 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090736579 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102053657 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08521813 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10364158 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105334089 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096373529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100048632 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084989982 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109270493 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10132102 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075999483 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105429162 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080673475 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100039936 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080824014 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097810005 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084584288 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108675473 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104964383 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075853563 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102251904 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081156921 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099630351 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077682264 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106831137 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103254052 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08375703 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110077236 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08323109 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101336253 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085765203 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100348946 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101040902 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.082011872 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102952687 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082591644 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103149027 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080867006 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102232037 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080686247 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09853559 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104314384 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082866722 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100440497 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087363004 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099378846 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082064535 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103390464 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100685447 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082749924 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101233953 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081434345 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104086844 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082590811 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100329801 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084883084 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095816801 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090330273 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100070153 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108417233 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082323984 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097006536 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087108706 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102980172 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107956917 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08346443 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101789433 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083824437 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100038985 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084729891 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10896385 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097938447 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090402794 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106903095 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082513518 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104551672 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082389494 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102559667 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081188266 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102138855 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101536079 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082413202 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100491696 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08728388 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103644366 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081783677 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101984478 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101860089 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082367764 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102180389 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07702677 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099565789 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081660274 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100833683 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089302328 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102117496 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103322192 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080934935 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102485971 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081426991 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09803018 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091417051 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109732211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101525785 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090274727 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099751401 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08427283 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110781053 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094692233 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080282742 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099409984 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080054426 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108925594 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083581769 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108971569 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.081989882 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09993342 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079742484 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102736347 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099552846 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076738468 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098209317 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08536942 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102875225 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080969688 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101697255 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085280751 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102361266 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108486316 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082059322 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102727604 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082747574 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098358789 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080968373 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100794218 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085671892 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101516662 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098558826 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079784494 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100453046 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083571434 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101136892 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082746186 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.110961078 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089254504 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101389465 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103842463 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085590068 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095873934 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085090704 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100470237 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082422583 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099779679 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085580692 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104156417 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102131911 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089685174 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10158382 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083359516 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101460848 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080451505 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101987372 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101185565 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083420349 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100551554 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083181274 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110072814 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082056776 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103781195 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081475637 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102688479 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105780155 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083550643 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103413976 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090676467 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104265269 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082971803 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108199775 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105407205 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085715746 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102899244 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08329267 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108201461 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099718029 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091155277 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101690328 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083979061 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102113593 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080022521 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10052182 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081368904 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100793628 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105434894 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084110277 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10068846 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081375229 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098958668 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083788362 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104871757 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108600064 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085239043 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10402099 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077762934 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098001361 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08400389 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098440317 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084550334 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105531099 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106673897 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084456674 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102056816 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081512293 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109099431 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088187676 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106011201 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080434118 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105557877 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101351317 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084807428 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102112825 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083077312 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103107508 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087784298 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103521279 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100438655 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090979203 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105782219 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083806255 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103312047 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083259432 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10186684 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097169282 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08414336 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10347938 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089379006 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104538967 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082220641 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110925456 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101102062 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082476888 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104845959 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082533027 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108701422 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078012915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103021965 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102572461 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084402111 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097062497 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082637606 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09974492 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08495436 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101245162 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077469707 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110386305 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108941033 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085180792 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100575878 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081577214 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096958121 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078108919 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100413383 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084062339 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103124277 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110990545 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082221399 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100636526 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078012468 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101570615 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085902481 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104901261 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080902756 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097644626 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080886197 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104007614 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108440141 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081918477 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101386364 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08675396 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103743347 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080738621 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106637571 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079461969 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105616552 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111867144 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083885469 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102443185 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088240824 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109568294 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102578858 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07812515 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102491109 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084420967 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101945255 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084941363 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103180969 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115065771 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085855611 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101289677 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081812007 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104627016 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08272226 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108802513 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103361302 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084610977 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106733565 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085065035 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110877006 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104078616 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088956247 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103607914 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085154938 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100017457 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083912934 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100398166 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081168973 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103705891 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102762455 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087530929 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110206706 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081341644 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111848624 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110101583 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088344577 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098555232 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082316211 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101476856 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078567422 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102753368 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081322014 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100309798 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080785292 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101597594 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102247115 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089301965 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104314922 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084256809 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102317724 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077817636 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103833313 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087164091 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103014138 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098800774 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083056651 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103433215 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089011429 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10637437 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0833011 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103993697 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084216527 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102830438 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097179117 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090292575 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101245893 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08714985 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101795969 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083644996 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103531895 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086449164 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10945152 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103534473 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086316492 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11502999 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085544804 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099823364 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098964424 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089160501 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099923328 seconds)
  done (took 57.22377673 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144502427 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080263329 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097312355 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078347491 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111479617 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098840968 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078789275 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099017385 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07926545 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100414473 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078557227 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098256361 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107292551 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123455734 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092234664 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10330566 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097532171 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079621006 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097849914 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079649613 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107742793 seconds)
  done (took 2.839821289 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104048341 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116287162 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113428034 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117815047 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088996569 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113867831 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113348944 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11367038 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098586308 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110213567 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117807652 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113971853 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090100264 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109550895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109227891 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092527055 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116927114 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107693816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114876761 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093596084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112180416 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112408489 seconds)
  done (took 3.18758661 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083632768 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101619499 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.083866391 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096846186 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082743468 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096947897 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087466229 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100541272 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08586857 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100920858 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081686729 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10116201 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10393086 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078713197 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101426645 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080883301 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150089553 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106528844 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082999935 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104213003 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09748149 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084452447 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097696203 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078690505 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100961607 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087079363 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103053147 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080594181 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102835943 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081684664 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102652385 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079969061 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105292657 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101808919 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082124541 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100364428 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082118121 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101535179 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07892304 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100601544 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083642833 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098227471 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.0834545 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103258901 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080231366 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101148349 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083014039 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102492916 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096769544 seconds)
  done (took 5.403940479 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102784182 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159094475 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085450004 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142424227 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118790394 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111765423 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086543435 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140534781 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10158509 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081622449 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121034038 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118246615 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103491257 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088614786 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106289816 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102298638 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085465751 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101675825 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087443136 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102911992 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107441855 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090336402 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118928029 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116641302 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107538771 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082747692 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102218561 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107771212 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096447942 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108599309 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108073359 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091072887 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119808836 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107307635 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082492054 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105678303 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121223902 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10299954 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086499466 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100214166 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085223799 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10896424 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108962207 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10136917 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103829638 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108170014 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084157401 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100729733 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116089941 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086050352 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112574994 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118972503 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107862665 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083484519 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108222654 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11936333 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083565757 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100815691 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086220469 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115914444 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100983197 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088364531 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116726768 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104429359 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111452462 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098440361 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107728407 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107172243 seconds)
  done (took 8.03475352 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091730572 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110629864 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120003641 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119256653 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090193916 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110087585 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109825294 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088691248 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109087835 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115381174 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109260415 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131836178 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084679329 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11362405 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109603948 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089898595 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110070083 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109914706 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089516841 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110504408 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11033969 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118453777 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090310303 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118913975 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140259572 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104112634 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089924961 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111624252 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119342859 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109749993 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122173922 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090916766 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1102985 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119675185 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122213258 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089078007 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103096889 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108864734 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090208175 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109545311 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104052239 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098807739 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10978159 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105317679 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090159335 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110349788 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119767111 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122658395 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113605042 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095154654 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10969254 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119777362 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109117451 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089386136 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119732379 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144756459 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118504292 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119287024 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109124819 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098501252 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12035993 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127470952 seconds)
  done (took 7.575082789 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105634346 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114940782 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116553797 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099001454 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082771423 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107964865 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082077251 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101205187 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112903311 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093078006 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115132159 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107254032 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090583978 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116589161 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107687297 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110800491 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08826851 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108530171 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113617356 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107443529 seconds)
  done (took 2.902246466 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092860717 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123028775 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084192907 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111744161 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107802116 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091123753 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106403178 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106890101 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08488643 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10705366 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094898822 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115050812 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105516332 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090796842 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115897542 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110786996 seconds)
  done (took 2.468519279 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094897915 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117013747 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119826579 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083864409 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103628692 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079468955 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105253491 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099986509 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080356192 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119150049 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083874076 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10901942 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10712099 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082176686 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101444733 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086506894 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101401587 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081732554 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104243693 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118336218 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094732665 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103500577 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104713473 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086435772 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104102095 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089573375 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105457258 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102562017 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082418714 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105071176 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084392943 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112412528 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100412319 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083227738 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10269072 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082521797 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104656366 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084217723 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107617684 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104185357 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082749617 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104874831 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084671245 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105991861 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079923417 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105763463 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100295275 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090480114 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102568514 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08428824 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105627703 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10669562 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085745131 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116202663 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087449637 seconds)
  done (took 6.190949998 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098608741 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109078746 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079749874 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102308906 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08703141 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107285796 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107840547 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087104491 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105791925 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082331701 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106355316 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088981069 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107263362 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108803144 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086688978 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108134125 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080405369 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106648095 seconds)
  done (took 2.589764065 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089953017 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104986186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091703977 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105148614 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083982673 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107212247 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080234691 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103784012 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1023385 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084917643 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103667648 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086738877 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102055859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085994385 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104458933 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084276602 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107315913 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103137201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085599652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10001174 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087606421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103122935 seconds)
  done (took 2.936465058 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117578978 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.1239381 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091484426 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227983389 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102757589 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131850653 seconds)
  done (took 1.624758422 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108205901 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120451627 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105096187 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106701083 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114269933 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105771356 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087145353 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106492849 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117430761 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100692736 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107603866 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116351045 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11770673 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095277939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113803027 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113591291 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106385866 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086908658 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105780733 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126954541 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087048443 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117736706 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106889194 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087069379 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107066693 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116885152 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116788404 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121687109 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08658162 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11778229 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112643495 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087465597 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117536159 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120896458 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108201337 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096465315 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107407466 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127129488 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113775131 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095252138 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109314211 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112689912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096730161 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113595631 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118722597 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107201375 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092597394 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107219889 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10669895 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134066064 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094124937 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116959904 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114224135 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117789973 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117313823 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134024205 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100726424 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116234424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115163045 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122043929 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11600022 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093302371 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116271645 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121939252 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114656568 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116399147 seconds)
  done (took 8.074796993 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100942308 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125055312 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107865998 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121403573 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096324818 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108092395 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106522471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086972238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107829288 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106143843 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150962258 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08826427 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116813753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116819071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107158673 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087865931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107019906 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116496793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086499568 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133587786 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108200255 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116998986 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11683958 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096816728 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121704627 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11478034 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107395898 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087110052 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107390745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107354492 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092726991 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108021945 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11639443 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085590192 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117479204 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10846318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086942305 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113933855 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108265963 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113414409 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096175375 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127436328 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107568196 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10801173 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101473832 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107978406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107557316 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085969338 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109175523 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106849869 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100750759 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122831361 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12182735 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1167455 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108394903 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088122179 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108270306 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107248024 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087423625 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113470594 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117053852 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107701899 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134458239 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087439086 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107440881 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116825985 seconds)
  done (took 7.955815399 seconds)
done (took 153.507387598 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097688853 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135671647 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095052861 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167347974 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10553295 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118520427 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137313399 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096629549 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105135961 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08568053 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106087313 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086081252 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171170405 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0846925 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106346508 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106529472 seconds)
  done (took 2.644581873 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198953218 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252219089 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101483754 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105068424 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087930673 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109617516 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104082568 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089837787 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109692719 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084712158 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108462314 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085532658 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104777517 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085164237 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109851349 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087138138 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105442341 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08716021 seconds)
  done (took 2.858489892 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112582413 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155275293 seconds)
  done (took 1.111199787 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116875764 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179340621 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31858233 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154820641 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106251653 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125824593 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155390261 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129655351 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195657443 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122040194 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121674134 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096682986 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139314684 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115712746 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094212121 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117324578 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140784754 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092019673 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115000822 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114820319 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116180751 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106053405 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114727453 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092354925 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180313707 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119713127 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083790183 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105862684 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114691482 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093996467 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112718574 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123465609 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097167763 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.172842479 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10173621 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175474063 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098958648 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111535411 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113359585 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090205278 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117776665 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118235987 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103048826 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118074545 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084032552 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118589816 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104782485 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08521526 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114240651 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096577464 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114161397 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113222712 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153636303 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117982057 seconds)
  done (took 7.47557456 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792222441 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155249429 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088985052 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881365541 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137848748 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102807785 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.781954889 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134496675 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236681899 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758443573 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132765862 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122343525 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22680613 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237049452 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.924832293 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308042637 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671752064 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101782341 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150768916 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151902252 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118451779 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137894673 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129446846 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43055605 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095074414 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11152967 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11675755 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.09916295 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158124198 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125035052 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113669765 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17783796 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244706379 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204347512 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115974243 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088560612 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111028121 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168044849 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266263162 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21383485 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179309933 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087152941 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110579828 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121620416 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110104906 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108837804 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161772761 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172095037 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193121115 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091501934 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120273447 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119484653 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120403315 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164570531 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119927727 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287077759 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322087305 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111604899 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120304732 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104183864 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263408225 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122622207 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223814575 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115920337 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213311431 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110388863 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780029552 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189600282 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089432479 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117244127 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118674323 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094124915 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121150241 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167660307 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406683459 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123292478 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092159578 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111326253 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204796227 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123584936 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110352478 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162041232 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114562185 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098496568 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125871253 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122348345 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170735152 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229212233 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123883421 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11951023 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092739085 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124580774 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115368222 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212948885 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217761534 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161903443 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210956602 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122553383 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162248443 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188641313 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097499035 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192950145 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096932892 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125737497 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122652451 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21596946 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145455941 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1011551 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115812522 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118478315 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14762226 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1258343 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097474738 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16777686 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481305388 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166272329 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108053704 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126445671 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097980952 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159207281 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118304144 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262697639 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121202984 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169108046 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118453371 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087172292 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120384991 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164609368 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122239305 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098484462 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122455798 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117995438 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234495024 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213957226 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122258534 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219795256 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183731007 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118092575 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172256906 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120495346 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167139821 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120022419 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121057873 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094061951 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795058904 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123210329 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09805558 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116270504 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187083489 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110654978 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102147544 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124196829 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108183545 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781269502 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12754398 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120195585 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101475594 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117841239 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119619218 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095059528 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116152371 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161309585 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229797525 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120745985 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119327454 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102138131 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179952675 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095754128 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12494385 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124040707 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123388778 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100253096 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11528273 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123482299 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169457125 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161151641 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219999924 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.593258066 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089552881 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124147937 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229453033 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089078208 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287879579 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119199004 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224168225 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162656826 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119900664 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318278077 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167102513 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186701293 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125759746 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173524785 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085776291 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117547715 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16277293 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111821149 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116728869 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161814164 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125429331 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102207695 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968159141 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112157294 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230896414 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086139578 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191488174 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094509089 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12091442 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286940042 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11029092 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10637858 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184829756 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093740357 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124412915 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.849806736 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125334775 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121006011 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117700693 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.199057887 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185685737 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097066179 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118775419 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120846031 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162190594 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210592396 seconds)
  done (took 44.030449131 seconds)
done (took 58.961819606 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27601936 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212396613 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.256324338 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167617518 seconds)
  done (took 1.853196683 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169821098 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1469716 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119554293 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10750971 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148032954 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083799301 seconds)
  done (took 1.643044664 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.350819556 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267674933 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237063232 seconds)
  done (took 1.727340247 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28563078 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248261388 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354386348 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.416543537 seconds)
  done (took 2.294686137 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206885006 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131054382 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110749396 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10354053 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195096036 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246943078 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139866618 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200084622 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121410921 seconds)
  done (took 2.37324675 seconds)
done (took 10.763545527 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.127289336 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.244461709 seconds)
    (3/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.239421134 seconds)
    (4/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.233587617 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.258668285 seconds)
    (6/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.2315732 seconds)
    (7/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.214379867 seconds)
    (8/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.210915066 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.093856136 seconds)
    (10/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115322123 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110759512 seconds)
    (12/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.236749788 seconds)
    (13/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.190531689 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121978212 seconds)
    (15/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.126048009 seconds)
    (16/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.148964396 seconds)
    (17/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121210354 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092975475 seconds)
    (19/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.172401917 seconds)
    (20/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11543762 seconds)
    (21/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.167130198 seconds)
    (22/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099061266 seconds)
    (23/286) benchmarking ("sort", Float32, true)...
    done (took 0.228449357 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.123564399 seconds)
    (25/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.188001155 seconds)
    (26/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.10873131 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.146545879 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.217991301 seconds)
    (29/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112870338 seconds)
    (30/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165094137 seconds)
    (31/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097652258 seconds)
    (32/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.128016316 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130527283 seconds)
    (34/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.23346716 seconds)
    (35/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.115433038 seconds)
    (36/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115457058 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.221035524 seconds)
    (38/286) benchmarking ("sort", Float64, true)...
    done (took 0.227293882 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.13397692 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.116104564 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116677164 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.215363574 seconds)
    (43/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.169110228 seconds)
    (44/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092997574 seconds)
    (45/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118052186 seconds)
    (46/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096427879 seconds)
    (47/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169089762 seconds)
    (48/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.153312837 seconds)
    (49/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094413623 seconds)
    (50/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.200673067 seconds)
    (51/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.192664219 seconds)
    (52/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096850434 seconds)
    (53/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109601582 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.13516538 seconds)
    (55/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094427407 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.11473086 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100011502 seconds)
    (58/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119533007 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093901175 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16521875 seconds)
    (61/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187952662 seconds)
    (62/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090355754 seconds)
    (63/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.159499041 seconds)
    (64/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125222229 seconds)
    (65/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.088583118 seconds)
    (66/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.199805459 seconds)
    (67/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065707317 seconds)
    (68/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.105390954 seconds)
    (69/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099115895 seconds)
    (70/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110074461 seconds)
    (71/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.186274545 seconds)
    (72/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.159626492 seconds)
    (73/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135055105 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085147267 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13250968 seconds)
    (76/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118493256 seconds)
    (77/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089935016 seconds)
    (78/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181488345 seconds)
    (79/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094194201 seconds)
    (80/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.114769463 seconds)
    (81/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.119459282 seconds)
    (82/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.15791809 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108675466 seconds)
    (84/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.084544225 seconds)
    (85/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111155739 seconds)
    (86/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066754648 seconds)
    (87/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.098664282 seconds)
    (88/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.127222153 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.089509099 seconds)
    (90/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.15725387 seconds)
    (91/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091370516 seconds)
    (92/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.150015309 seconds)
    (93/286) benchmarking ("sort", Int64, false)...
    done (took 0.112096016 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085042892 seconds)
    (95/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110039491 seconds)
    (96/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.1073464 seconds)
    (97/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08713117 seconds)
    (98/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114072667 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085194121 seconds)
    (100/286) benchmarking ("sort", Int8, false)...
    done (took 0.186768239 seconds)
    (101/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.180216192 seconds)
    (102/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065720855 seconds)
    (103/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115419867 seconds)
    (104/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093875891 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109812115 seconds)
    (106/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066876711 seconds)
    (107/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.172108919 seconds)
    (108/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066345017 seconds)
    (109/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.088486567 seconds)
    (110/286) benchmarking ("sort", BigInt, false)...
    done (took 0.21775729 seconds)
    (111/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170288245 seconds)
    (112/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.165302757 seconds)
    (113/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118394489 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093654888 seconds)
    (115/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120317282 seconds)
    (116/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117118471 seconds)
    (117/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086134964 seconds)
    (118/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.222154453 seconds)
    (119/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.150325491 seconds)
    (120/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066951818 seconds)
    (121/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067007313 seconds)
    (122/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.104927973 seconds)
    (123/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092167719 seconds)
    (124/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.182656815 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 0.179787502 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117355486 seconds)
    (127/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.148504525 seconds)
    (128/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115380965 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09398561 seconds)
    (130/286) benchmarking ("sort", Int8, true)...
    done (took 0.217192776 seconds)
    (131/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133597684 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114615402 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0938615 seconds)
    (134/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193052065 seconds)
    (135/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.077237665 seconds)
    (136/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116027429 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113069234 seconds)
    (138/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.089589308 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.189909409 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094019592 seconds)
    (141/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229437923 seconds)
    (142/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.229075656 seconds)
    (143/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.154839472 seconds)
    (144/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067548265 seconds)
    (145/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119522498 seconds)
    (146/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.161237301 seconds)
    (147/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.09288204 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085543576 seconds)
    (149/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090432217 seconds)
    (150/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085986189 seconds)
    (151/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116336695 seconds)
    (152/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08507508 seconds)
    (153/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115964909 seconds)
    (154/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.134585794 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117430209 seconds)
    (156/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066783278 seconds)
    (157/286) benchmarking ("sort", Float32, false)...
    done (took 0.172640238 seconds)
    (158/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110511227 seconds)
    (159/286) benchmarking ("sort", Float64, false)...
    done (took 0.148275796 seconds)
    (160/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184640002 seconds)
    (161/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109859811 seconds)
    (162/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093280855 seconds)
    (163/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113365528 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.137143429 seconds)
    (165/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066856123 seconds)
    (166/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066093934 seconds)
    (167/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140915601 seconds)
    (168/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067121426 seconds)
    (169/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.141004149 seconds)
    (170/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076646821 seconds)
    (171/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114972241 seconds)
    (172/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06643509 seconds)
    (173/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.129522246 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115641957 seconds)
    (175/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138920139 seconds)
    (176/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.129339578 seconds)
    (177/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109316799 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095636432 seconds)
    (179/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135013753 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093241959 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116481667 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108798586 seconds)
    (183/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.074938367 seconds)
    (184/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.125711758 seconds)
    (185/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09023035 seconds)
    (186/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066005852 seconds)
    (187/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067108677 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 0.219070178 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108257733 seconds)
    (190/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136533054 seconds)
    (191/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066605778 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108900633 seconds)
    (193/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.125700108 seconds)
    (194/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119845814 seconds)
    (195/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112547052 seconds)
    (196/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118636745 seconds)
    (197/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092751524 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110907222 seconds)
    (199/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119689728 seconds)
    (200/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067128735 seconds)
    (201/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122537302 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087345794 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119578511 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094265861 seconds)
    (205/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114230578 seconds)
    (206/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087177931 seconds)
    (207/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.089666691 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086267182 seconds)
    (209/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109811798 seconds)
    (210/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091942001 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113894656 seconds)
    (212/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088216372 seconds)
    (213/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088997174 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084702408 seconds)
    (215/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066661567 seconds)
    (216/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113455309 seconds)
    (217/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.353701043 seconds)
    (218/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067187768 seconds)
    (219/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066495428 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110902603 seconds)
    (221/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124907442 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086303847 seconds)
    (223/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067030462 seconds)
    (224/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.089715465 seconds)
    (225/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066509199 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109467876 seconds)
    (227/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147070026 seconds)
    (228/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.123877508 seconds)
    (229/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.07809303 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136595 seconds)
    (231/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067714486 seconds)
    (232/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.098728826 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066583614 seconds)
    (234/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068269341 seconds)
    (235/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089459249 seconds)
    (236/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067577058 seconds)
    (237/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.14102144 seconds)
    (238/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088384753 seconds)
    (239/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162238614 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086202069 seconds)
    (241/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11247953 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.108461488 seconds)
    (243/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101005578 seconds)
    (244/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06660394 seconds)
    (245/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091670049 seconds)
    (246/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.086617527 seconds)
    (247/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065771614 seconds)
    (248/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.100013669 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09300605 seconds)
    (250/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089870218 seconds)
    (251/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067823218 seconds)
    (252/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066591662 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108808229 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094384794 seconds)
    (255/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112827992 seconds)
    (256/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.185918099 seconds)
    (257/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088181615 seconds)
    (258/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.154921065 seconds)
    (259/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085145141 seconds)
    (260/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116021474 seconds)
    (261/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.074909438 seconds)
    (262/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13451355 seconds)
    (263/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066020078 seconds)
    (264/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108567944 seconds)
    (265/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067265081 seconds)
    (266/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.089551656 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094175861 seconds)
    (268/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136186845 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108407782 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109289663 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084249036 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13488604 seconds)
    (273/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.091057773 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094621709 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109402695 seconds)
    (276/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086052451 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110243026 seconds)
    (278/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.0670058 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091059548 seconds)
    (280/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.161674091 seconds)
    (281/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123104021 seconds)
    (282/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065942618 seconds)
    (283/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066528797 seconds)
    (284/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.091510062 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091256964 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113052611 seconds)
  done (took 35.747572212 seconds)
done (took 36.623583203 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098969567 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146566402 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095086829 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134910334 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122956041 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090325341 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117393092 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097609106 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122222964 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123884794 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097334589 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092401225 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095771729 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119524175 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095896458 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137769415 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122823993 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093774117 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118145844 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085744671 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119824222 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085302488 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110920973 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069388077 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12034805 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092649722 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114966412 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118895809 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085645578 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109536349 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.088994724 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116644617 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086062625 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122848559 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09214936 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117949212 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096359504 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119139129 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111417256 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085911052 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117079193 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085439691 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116739889 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093714605 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114466123 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.0916649 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117509843 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097880159 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138065613 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114923548 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093591905 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120654984 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095810183 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118041396 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091586693 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118478319 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091898662 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138348127 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118703007 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091443698 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117713065 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094142346 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115370621 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094459211 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118205714 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121128507 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097132682 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114951074 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095958606 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115884511 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086349111 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118508005 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089499053 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109670291 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094428355 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120825395 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084873901 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115566212 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116070951 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090872528 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108497622 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087979666 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111144203 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092298049 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11153812 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068757897 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113099785 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092493351 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108725804 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094694239 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115871945 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092972874 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111487976 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09792391 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10984707 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.0916403 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110120281 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086301355 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11265068 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090871363 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10977388 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08904452 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119563957 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087795988 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116706897 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122725691 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086786763 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117546504 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085179764 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109812397 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101576576 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121124744 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085786467 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116080984 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08543252 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118005323 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085902432 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110109488 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086322612 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109525983 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092094412 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110247232 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088813673 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117955971 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123761905 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085890274 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114733226 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089340193 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109221971 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091864068 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110273712 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08616482 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111833009 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076868476 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113811251 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086823913 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117829786 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089629204 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119292163 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088610283 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119571322 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091063755 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116543791 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091783059 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109766476 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074525143 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116282961 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088781469 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112173219 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086515591 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112542016 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086901021 seconds)
done (took 16.782552469 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086319917 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181953914 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149988563 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141336876 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106638571 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110787411 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122227963 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116727276 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11288921 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141701533 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109573564 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131704871 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147025087 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085650242 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11083233 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091088649 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112511088 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101619743 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14433675 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132101735 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16229006 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085707588 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146203618 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134406465 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120498473 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104495385 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111290224 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090532783 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114873563 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111275713 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131317657 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114320854 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087045362 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132681037 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104671292 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118724808 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086644387 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11809357 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086411491 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111643366 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139114784 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133166483 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092115502 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11750657 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090266431 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113420304 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089144522 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120530238 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097361723 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115667581 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12542324 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154793736 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089963336 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120792146 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085692521 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121702136 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120307415 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089461629 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111502226 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089907517 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110279513 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090732592 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125509639 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140752956 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091426568 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120020251 seconds)
  done (took 8.529750786 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103538201 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139513081 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104079847 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129470484 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111325669 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087176092 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111990769 seconds)
  done (took 1.721414406 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087572074 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134059533 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110309863 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13473359 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130975974 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110997023 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122641694 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087982559 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130366556 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08878412 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133515856 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149632333 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088987557 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119715454 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137142414 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087901538 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136160942 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087966207 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115725848 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11163159 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114980648 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134670429 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090516451 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112747031 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102119907 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113667804 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160533462 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094827426 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114463073 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09147295 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111798956 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150307089 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102696551 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12411451 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088762372 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129175793 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127761988 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086222353 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125338647 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093479923 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126840766 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088787886 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11435873 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086636868 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118104342 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098933324 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116509712 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089619658 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115320185 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132187762 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089239051 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144049885 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088563051 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117043446 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090383063 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119352772 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.096986483 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113793957 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132888098 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089864926 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130069464 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104167036 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126397043 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129607446 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091580281 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127302243 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101991644 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115994965 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090604563 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11651259 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105409723 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111121734 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089008958 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.123545266 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115412686 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112172013 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135901826 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089554008 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124066991 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087526642 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11445576 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112734668 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111162642 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117245695 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089074971 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117486976 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091686307 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111406828 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08732482 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117515642 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086705762 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117582303 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091728667 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113834406 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091538037 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129996496 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113815051 seconds)
  done (took 11.727409652 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089911509 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114060398 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090073085 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113821819 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089593681 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114123527 seconds)
  done (took 1.559493253 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114230398 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116237986 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103486253 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119727867 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155269637 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102667274 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128900716 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122515522 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106672244 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126598781 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128947479 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103779101 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134359343 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121039094 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103320693 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119662486 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104048573 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124252221 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126617118 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096002606 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136449923 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120182354 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096162926 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131018082 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117734925 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094490357 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125386608 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10230263 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126502788 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123219596 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095621367 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119390431 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095100773 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122713688 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129023969 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095563955 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119714368 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118228077 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099281232 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116651577 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104383497 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121396794 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126432844 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.092735033 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122580684 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12077184 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.092647536 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12467247 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10268279 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117438455 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117962013 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094852566 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117312321 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093007929 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120701638 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123880799 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094149936 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129990138 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122472402 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095420104 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120048926 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092575364 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122913495 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117076689 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103617558 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118092339 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12004002 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095798527 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121396231 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095403015 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118341968 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09228706 seconds)
  done (took 9.147917871 seconds)
done (took 33.619487632 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684697947 seconds)
  done (took 1.633154274 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.823351528 seconds)
  done (took 1.773956163 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.739276378 seconds)
  done (took 17.718904353 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.489029973 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.300507885 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.983980867 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178261868 seconds)
  done (took 5.902416989 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945550858 seconds)
  done (took 1.915688124 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280559522 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233286661 seconds)
  done (took 1.468964061 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.768039224 seconds)
  done (took 1.733957403 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.358503848 seconds)
  done (took 2.313355327 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325229567 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182678946 seconds)
  done (took 1.470389338 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545722561 seconds)
  done (took 1.507594261 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.342611625 seconds)
  done (took 11.309634743 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265702121 seconds)
  done (took 1.24290956 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299326352 seconds)
  done (took 1.266307635 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.468341478 seconds)
  done (took 4.433314648 seconds)
done (took 56.651117889 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097609544 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126333522 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100661218 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123836784 seconds)
  done (took 1.408602798 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099911421 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120143448 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099734423 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11985987 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125358037 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.094571264 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121996509 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100536232 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120215214 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095607257 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120394416 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119570949 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097851053 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122751399 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092394432 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123044227 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098030425 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120462544 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122746786 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095685176 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.1182043 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096982847 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124126565 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093681282 seconds)
  done (took 3.612328993 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09937195 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118972562 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096270419 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117345472 seconds)
  done (took 1.407962601 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099135548 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13074235 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104425661 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.1253972 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130056132 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104371497 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11644379 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092449057 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118350275 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098521817 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115450496 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.137736029 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105892806 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123158471 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100803757 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113588059 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.08995029 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129733819 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123916801 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099934982 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117592359 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098525326 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114543145 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.107907497 seconds)
  done (took 3.670999275 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169742275 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126489113 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137080185 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094522212 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158699253 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139406656 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087073085 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140258612 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08789205 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129948021 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117513177 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.131960117 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128743602 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088817767 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113401321 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086759265 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127342836 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127861801 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090246002 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12692814 seconds)
  done (took 3.38986569 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096847315 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116553867 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087310705 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116677476 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098840209 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119620696 seconds)
  done (took 1.616697105 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090899153 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113817011 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089986167 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113510016 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093592097 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113938805 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087496251 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114363141 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089344341 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114233909 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088479839 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112698704 seconds)
  done (took 2.203588101 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.498250782 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119120708 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119450918 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.09043048 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121475373 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089173559 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128766537 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09125449 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140654158 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087625897 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115239221 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090606208 seconds)
  done (took 2.672851485 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234633031 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124753698 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280542934 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364862271 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155413969 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164251687 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277791751 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160465892 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194926964 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14897747 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229128334 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19481223 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151626661 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189981013 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136631444 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144418761 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187141166 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248040413 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15230128 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209620355 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204367113 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165635183 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177803877 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149996762 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110346118 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191389309 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094452904 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12989194 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205011057 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203308788 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188572872 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159468067 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144623224 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235919294 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246985203 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194136679 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276665983 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133082974 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141210118 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163890012 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261544343 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138285007 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230621005 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154082461 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103359273 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21866085 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163831293 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175477807 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144259253 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138240293 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196150868 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239153075 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190974676 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13742849 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298186216 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146488511 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156147683 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187890465 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24953645 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224099803 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188736044 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119975198 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186499433 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189292753 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209856671 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.124128314 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208236957 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146608522 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181155605 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188387872 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163877059 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202531 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178944903 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137448377 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170066299 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172797567 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170803046 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257411543 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183658455 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12110842 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167097422 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147573776 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104094973 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193018217 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124554682 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213491837 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142613696 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162377746 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208043001 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157747464 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159824563 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217124365 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182666974 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148198069 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083086219 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151974738 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153795762 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174470135 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13913278 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157151844 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15596686 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128562891 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166061844 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09694737 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182620354 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117031433 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172542899 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181807249 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126067376 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161263173 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152623404 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149024189 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176516544 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199314065 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140161598 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132613096 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208335819 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175304214 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140786862 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176579438 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227469622 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11555792 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147950117 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224288248 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215937687 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139118657 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225972979 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12495944 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134424786 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132369994 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181383815 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154989927 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16042163 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131834406 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181753414 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204240689 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124981719 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137643663 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193644099 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133763238 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131084923 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152362174 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119205723 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137263693 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14105593 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144231723 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173690911 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177866827 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154285405 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165289775 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149582738 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247293391 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139108565 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122892743 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147461393 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120143157 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192699839 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223713917 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103095296 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231868523 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170695644 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199193329 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166445486 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134152104 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175616059 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129218645 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092476637 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218123097 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16683412 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160484689 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19489872 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219843142 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180407864 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181390522 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164258843 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199548863 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.136501781 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155151922 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.136406176 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160282587 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157234897 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122676465 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111123782 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134888393 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148956602 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141448094 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105811633 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223865846 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168771538 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213727258 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131370324 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146970458 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179342958 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128436024 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173707836 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204713386 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11621722 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224014757 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192076114 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183115875 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142993452 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22450468 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093076528 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124356589 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140689967 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169805528 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105251516 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134675663 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160793017 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180208358 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205400711 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169267387 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204157724 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199067964 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188955104 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094719096 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169026152 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183674493 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174773494 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179243069 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139177476 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149469325 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175550747 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153711171 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252240438 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167861103 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173923891 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203158817 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149569291 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132332068 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149796186 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176586616 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153252206 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175009932 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145916022 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137804965 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158314566 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.101842415 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159104209 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211882438 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162024184 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187645204 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149723445 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18413028 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128049276 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162075146 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159333836 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164456074 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080149548 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200308581 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20245191 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146479797 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166330375 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186678153 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131757973 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306051071 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233597366 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194588745 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136571812 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154303876 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159737163 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161340528 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169371113 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178130413 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157252734 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186779955 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158161673 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135029945 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110922943 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148892049 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15194158 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13223017 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147466826 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177068526 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136510298 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188190324 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15360091 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158783619 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171125527 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14792171 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116232661 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149199484 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240951566 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183752642 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23831069 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122853589 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.203513746 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204786365 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125611756 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103379354 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13379662 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178147487 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134727505 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190059869 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.212758987 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197538196 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179692241 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203546899 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11083697 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119785809 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156479036 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165705556 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201961817 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147491319 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146653489 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22703224 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10909882 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13097354 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165075469 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286598442 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144524613 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194130156 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106426053 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277577562 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099095404 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130632058 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161449899 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233931827 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107313295 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178160092 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169699947 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160540658 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162479433 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14743119 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189233038 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23616949 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198418083 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209816172 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104968737 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155704344 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174950674 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218387943 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154071474 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109273915 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228624495 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19312024 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193969371 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141911883 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167671097 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166551223 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158076639 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213170328 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106168248 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23298906 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105371758 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21896789 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152496326 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135576673 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174961443 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187815893 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139965483 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18590179 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207292919 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106836193 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133159747 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165125976 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176267193 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153195175 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12791939 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180284984 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124179881 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194653922 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259642399 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131926478 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126582171 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145106159 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135094616 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153318896 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156686994 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138332636 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138422721 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227402672 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133394647 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189789933 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199199354 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19701985 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174253928 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143495335 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690353411 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.101852022 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221752179 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118186393 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233686851 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15006283 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172538944 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157824192 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167076468 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193352825 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160069122 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230147653 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215835646 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178756086 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131370514 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156817647 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154401907 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.114905708 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152446383 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166547104 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158056834 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145233573 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177039014 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161640434 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134393917 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140100713 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198490641 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147651224 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184014511 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178184278 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138669989 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171362228 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212142484 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104470345 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.206337926 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20651145 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141185445 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148495477 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133053101 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.120921961 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260008117 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124867613 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185787856 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181851442 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157082831 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167161704 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144997521 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218959065 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156643809 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185593382 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141261035 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15813984 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156114315 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136957593 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102469609 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155749237 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166115681 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148746923 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157939365 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162577707 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193602255 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094544152 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142784125 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307438873 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174686367 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21281751 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135677836 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134659816 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132715906 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149882453 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.202719606 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177844895 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107025858 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134418116 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136523861 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.127517141 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135525389 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154720141 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19155251 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164113544 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203934535 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137148852 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281657416 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13949691 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154428237 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089018005 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130413217 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148040428 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117248635 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153815047 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217610454 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258035315 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.120661794 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133422213 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148574536 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.096048655 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136203354 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163902754 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164104229 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175898471 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144598513 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107406789 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154761963 seconds)
  done (took 81.729383595 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176466904 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132977057 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145928537 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200692475 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174398378 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268341708 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208039 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250969026 seconds)
  done (took 2.627965453 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092347666 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144657042 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156736716 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131261923 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091426548 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118668806 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340581644 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131906226 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115365261 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120319131 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171852826 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092676065 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.542533758 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089617531 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117974593 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106109739 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090456547 seconds)
  done (took 3.718262838 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 46.061869055 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.387266576 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.115013138 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195485878 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.803634386 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.094072187 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715809849 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.167702629 seconds)
  done (took 59.613493441 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114517533 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135755103 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.121442814 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15068935 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139345066 seconds)
  done (took 1.726436478 seconds)
done (took 170.359676765 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096741291 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126932501 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096490494 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129323076 seconds)
  done (took 1.507038579 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09314187 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07048832 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09978641 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073367676 seconds)
  done (took 1.403466068 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187652729 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166377039 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405267658 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070228744 seconds)
  done (took 1.575131116 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112482682 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132044933 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103536126 seconds)
  done (took 1.427877103 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105448063 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128154487 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10228881 seconds)
  done (took 1.412459121 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104309442 seconds)
  done (took 1.180924643 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10633576 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135945874 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107736875 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135449749 seconds)
  done (took 1.560900759 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096649404 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126224918 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107792863 seconds)
  done (took 1.40586374 seconds)
done (took 12.896429627 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101783046 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.42186917 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383016415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143572364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72109661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378706526 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.040304693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14631676 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163937442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092275585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13781523 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671529259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.029971879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.37724597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986981931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375556801 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674043301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120278938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119524391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093175311 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023994343 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090868382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120561371 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092140082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701556028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423775349 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093976576 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369949522 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091335551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1248433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381156025 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122732118 seconds)
  done (took 16.881433774 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095615343 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172086933 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096863666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136702933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122308951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095659716 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123682148 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092981056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17837856 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121877711 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110211522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120390348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124984477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094173169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14049465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091662026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124976742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091404971 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120479161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120395589 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110742693 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119057672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094001697 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120469355 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092453567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134920899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120856119 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093090103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119161657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097386082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126367784 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093356608 seconds)
  done (took 4.776682087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140088296 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181581148 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127701372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125543856 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166823297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123508936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197000692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117043577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180889156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122063787 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13820692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091585331 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155595247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093438091 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141612652 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119266661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094711088 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12108812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091214814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122540064 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137870312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09274701 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121077718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092287345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121317075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106768016 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123164924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119294979 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092049423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125637285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098305596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123499791 seconds)
  done (took 5.093117871 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096582323 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124701351 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108228461 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137212148 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094636366 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125425183 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096836988 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123470294 seconds)
  done (took 1.991614888 seconds)
done (took 29.819979795 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110050272 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126040989 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10566062 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132932851 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101357981 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130577335 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090153509 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133039344 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13223912 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101437716 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135985711 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091431485 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120859501 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090958962 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133881724 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095130385 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131564582 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100497626 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132296743 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131455212 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093839258 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132301708 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102680909 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131609405 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103319 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132543425 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136560118 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098361433 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121824196 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093777175 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123545254 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102422947 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122548832 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104782257 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125952265 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09605018 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12214737 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093077636 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13229519 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130645694 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098536412 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131894317 seconds)
  done (took 5.935269563 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.105906013 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.137914886 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103830785 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079908015 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115937705 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078944092 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.1371961 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078070403 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109568611 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106180408 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073247187 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105658616 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077115552 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100696313 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076815368 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074606385 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107467781 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075020922 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075073304 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105025857 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.07982723 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072097984 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106767656 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077735262 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073938512 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109390484 seconds)
  done (took 3.534772598 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099543058 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133044826 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111904285 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182074146 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159289531 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.097616501 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129988089 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138014808 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107652093 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119579773 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095273859 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148448168 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108518127 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129230149 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091789436 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136074722 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133988351 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093943672 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127317579 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110821117 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137737567 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101384911 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14079021 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131181669 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091446431 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122739966 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09634809 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13336604 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096307941 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130391587 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095176913 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12385949 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121536096 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103530777 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125059405 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.092720654 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140858702 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102787255 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129102348 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091577869 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128870255 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121377249 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11315299 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160248994 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090670332 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127659825 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094444074 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130777298 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119891923 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109718832 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129669576 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091292788 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124309542 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.089477449 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119934572 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105587464 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122742373 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093553492 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130949708 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125667631 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104283543 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12433087 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107114001 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121363501 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098604345 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120234993 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091692012 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119795241 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142311541 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093056894 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160214039 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.091675808 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12275272 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100372144 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129201055 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126261245 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092276671 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136222737 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100941928 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124698054 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100944052 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125141271 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.093434206 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139247214 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122127185 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094392199 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120305079 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099254062 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123367118 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09298282 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134184363 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091030657 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123901276 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108352595 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12059706 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092557854 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128356835 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125178614 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091832897 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133776662 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097023796 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121842872 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101345748 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121598684 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123383753 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102583767 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125813722 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091356528 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12537397 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.097759846 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121973928 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092952903 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124432366 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093489929 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131213413 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098505198 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126254244 seconds)
  done (took 14.65816563 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227051035 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213903979 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.232782814 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260648667 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134313076 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114811324 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208778277 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154097412 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122308796 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158502109 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172717883 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178111108 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167865035 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179606262 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168588129 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092521359 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141015167 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132526256 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.24159021 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255007072 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14253424 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099918549 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159653947 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158069266 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135005847 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131011306 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10819528 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133596561 seconds)
  done (took 5.731238454 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107188393 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15306631 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097241204 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143492429 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146569143 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091606576 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12682178 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092745981 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134294056 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133588102 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091609445 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128432834 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098218602 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131134673 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121901422 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101440446 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130346433 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093809212 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124681547 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09604501 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132711533 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100669881 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125649315 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120158048 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102369069 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120286273 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085092091 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141152982 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121040548 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114332082 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119451552 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101456264 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135015897 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092348343 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121470749 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.093504346 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124253059 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093894133 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122881973 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091072011 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121463485 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076302647 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121584091 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105757586 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127702298 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078966635 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129217269 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126271376 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093931252 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119092618 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095202872 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124221571 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094880654 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129459108 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.094408318 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122483152 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.094691955 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.113994443 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098273618 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123176616 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083487949 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120086363 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097380253 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116177333 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100671508 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126317571 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091241202 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12403384 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097012046 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129071145 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094696626 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128625353 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090948909 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124436815 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094647986 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127888814 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094936924 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121660515 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120861188 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093108743 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.073870549 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122713275 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.072675683 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12508586 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091375153 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121017067 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0940329 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128443175 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136331251 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094118133 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130191862 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.092569373 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121343577 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095689467 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111390478 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096097049 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138437634 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13906071 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092547597 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120158704 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106329193 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124157166 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091575396 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10471098 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100963019 seconds)
  done (took 12.806285901 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125131793 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152007072 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093854868 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140426849 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155159203 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156302289 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10017948 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129241065 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.093879826 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140889501 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092875855 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130144778 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092456653 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135973691 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156159455 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102648821 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125275757 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106993204 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127038038 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167505314 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111047014 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140622251 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108380673 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123100869 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098750983 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138611165 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159252416 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.105659279 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135268969 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140598697 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106486021 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158382886 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141921798 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097542785 seconds)
  done (took 5.411209942 seconds)
done (took 49.162540142 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.190000527 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.401164796 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.180384341 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.100491229 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21176872 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.210996627 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191074202 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.181013792 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.575482083 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.181150815 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.419578569 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.707243028 seconds)
done (took 59.662526753 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.256490502 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.313537255 seconds)
    (2/2) benchmarking "String"...
    done (took 1.444975379 seconds)
  done (took 3.870172754 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.552472667 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.118254608 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.440389125 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.179260994 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.180142244 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.470721488 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.879034765 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.529621834 seconds)
  done (took 27.908995343 seconds)
done (took 41.698524761 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.209097263 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.226085428 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.199902308 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.160945302 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.313033803 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217274519 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.545195721 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.229123328 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.197808571 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.181273567 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.20359326 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.186581839 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.207250199 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.57458956 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.185648644 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.190515316 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.18775582 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.725252364 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.586864221 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.19448489 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.199128581 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.190078459 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.182050322 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.184801514 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.20222199 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.185122219 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.181841303 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.208804481 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.73168923 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.181981686 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.198499376 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.719402869 seconds)
  done (took 190.200874358 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.183068414 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.259985542 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.309914967 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.229504822 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.614509983 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.385730572 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.330732845 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.693037423 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.203835361 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.199266559 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.415421153 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187355052 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.49596744 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158541026 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212266046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.260215975 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.504965169 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.492942321 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.222956639 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.34309745 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.201462566 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.588474744 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.515155707 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.423562817 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.211921126 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.215034605 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.21338589 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.204927068 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.364906884 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.436299706 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.233459118 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.195568948 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.804105475 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.040089607 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.190448138 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.200784798 seconds)
  done (took 149.857254189 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.184845165 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184120898 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.18463938 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217223645 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.185569276 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.76297877 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771872628 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.686939555 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.40915141 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.601496479 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.459846744 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.186085882 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280571159 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.200782604 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.186861292 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.185880224 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.201019485 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229151519 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188773231 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186873286 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.752192536 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197350968 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.353179957 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.362792875 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.202682516 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219966747 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.576551385 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187533001 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219107808 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519181281 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.235028938 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186107817 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.591305253 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190190255 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.595780631 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30077745 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187764376 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218226283 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.186945034 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.468163556 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186510851 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.187944383 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.1912111 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.853157497 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.18741633 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.77049664 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191700729 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.149234538 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.187706212 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188309954 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.601320607 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.930990498 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.207674794 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.187734318 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.190940941 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.189291747 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187925188 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220556605 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.561009628 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.28484121 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.205291958 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.192568673 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221778493 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.189587385 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.274582974 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189158441 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.512399536 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.262985473 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.41233582 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.755362064 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189009704 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287702538 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309542735 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.188807391 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.188692925 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189186984 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189450773 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.300327412 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.189694018 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.615015062 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365786434 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.206989186 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.610041938 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.2904237 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189893461 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.606346954 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.189956061 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.189353541 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.189390117 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94921438 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289564062 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.191080781 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.19032468 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190637674 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.614082762 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777680648 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.454750597 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.193754171 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.571901556 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.194132527 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.631955216 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.750523352 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.89904676 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.195572856 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303846767 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368425981 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208201344 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.19060485 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.612230981 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194340744 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.18984618 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.191151266 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.249735937 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.590085537 seconds)
  done (took 364.917212922 seconds)
done (took 706.084923685 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.792773195 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.786074315 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.896072429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.77973391 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.744756771 seconds)
  done (took 10.121480321 seconds)
done (took 11.240987663 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.377668203 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.376869018 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251849658 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.378393529 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224060952 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396518188 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356462381 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.211834591 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.293349655 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272651246 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.295274981 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245807525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226712685 seconds)
  done (took 18.031281652 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509617804 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.504878986 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256845396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.494665909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23269468 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507475552 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394955746 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400283475 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408326726 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226245854 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20680698 seconds)
  done (took 16.267087872 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51452397 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520420003 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261810478 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511022057 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234996256 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515113051 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397397906 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.410010489 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412140276 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229031496 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206437008 seconds)
  done (took 16.336254685 seconds)
done (took 51.753577352 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.202027227 seconds)
  done (took 2.326063637 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.239937945 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.403866105 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218452562 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.209414197 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.203630003 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.204085176 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.210353406 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.203292264 seconds)
  done (took 11.018145798 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.202165577 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.199994712 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.202750252 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.202211281 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.203067666 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203085727 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.200195365 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.201416675 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.203726438 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20020238 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.199862096 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.201904101 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203483094 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.203401703 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.201236421 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.200381361 seconds)
  done (took 20.354621291 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.202669889 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200321301 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.200879465 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.201066882 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202198105 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201673344 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.202613278 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200345258 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.201301266 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.201148407 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.200903461 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.201089335 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.202545862 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20160952 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.201722744 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.201722136 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.201402103 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.201664052 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.205600595 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201268467 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.202927981 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.201863061 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.202053509 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.202780379 seconds)
  done (took 29.970567769 seconds)
done (took 64.791381408 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.831598574 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.874866333 seconds)
  done (took 6.833648154 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.203917243 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.204442944 seconds)
  done (took 3.536533245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.204609263 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.203391419 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.204370669 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.205070285 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.204679504 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204912553 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.204892271 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.20660944 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.204338172 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.205675404 seconds)
  done (took 13.175675049 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.205852652 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.205371682 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.203504723 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.205585209 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.206944358 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203257297 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.205093207 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.204943107 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.205045919 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.202729318 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.206387225 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.203361836 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.20687132 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.204187703 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206216161 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.203625372 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.203769323 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204072581 seconds)
  done (took 22.815265261 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.206556127 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.206731613 seconds)
  done (took 3.54247845 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.204772568 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204435892 seconds)
    (3/7) benchmarking "month"...
    done (took 1.204547201 seconds)
    (4/7) benchmarking "year"...
    done (took 1.203915636 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.20442454 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.204533846 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.204266059 seconds)
  done (took 9.560587636 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.207845386 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.383675324 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.461614532 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.807139973 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.20823489 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.210862044 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.063568057 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.210963474 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.212932641 seconds)
  done (took 13.897493663 seconds)
done (took 74.485327904 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.233079403 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.220126059 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.450502732 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.20506131 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.234489204 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.502897379 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.219219756 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.328474657 seconds)
done (took 37.521146504 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.21616472 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.179941222 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.994578383 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.185221027 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.23229088 seconds)
  done (took 18.722690837 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.248329301 seconds)
    (2/2) benchmarking "read"...
    done (took 1.537453112 seconds)
  done (took 4.915922136 seconds)
done (took 30.982202988 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20955503 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.205822241 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.209139503 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.208566869 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.206418982 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209577371 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.207175352 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.206494953 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.208955051 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.209677373 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.208945858 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.209433517 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.208914994 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208651642 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.206335751 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206428403 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207081195 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209463626 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206335938 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206863057 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207175256 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210409874 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.207132878 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206726822 seconds)
  done (took 30.123592979 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210090128 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208816468 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.21006212 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209841145 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207032284 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.210242991 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.209902554 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.206587573 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.20945953 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209395836 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208047017 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.207780639 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.209702055 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.208404755 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209718613 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208934557 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.210995611 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208037308 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210384433 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.207397828 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.211570721 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208001164 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209749107 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211551312 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.20890335 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208938751 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21107253 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.209547733 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211753368 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.209795486 seconds)
  done (took 37.414131101 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.216290916 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.217750814 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21145763 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.210964504 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.211169682 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.21224259 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.212574801 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.211913317 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.211865258 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.212537979 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.211995929 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21161427 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213054454 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.212262337 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213254681 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.212807173 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.212206395 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.212930827 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213352939 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212917483 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.212124846 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.212584392 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.213302612 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212990827 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213001073 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212270564 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.212415686 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21271197 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.212507812 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.212559166 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214497972 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.213950139 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214292977 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215206832 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213907454 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.21365685 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218504838 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220771429 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.214145449 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213082103 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.213621205 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.214738862 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.214215822 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.213868718 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215046597 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.213763781 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.214307038 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213333512 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.213589209 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.214021964 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213945541 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213913485 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.214004115 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.214438113 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213987602 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21412308 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.213298079 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214821784 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.213748807 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214987923 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.21551486 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215851325 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.214258714 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214151876 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215788172 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215888975 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.215291313 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.215301726 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215234838 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.215952439 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214416245 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215730437 seconds)
  done (took 88.534366252 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.215473265 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212961494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213573772 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21221305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212937262 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216209808 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213063974 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215329245 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213766528 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216304982 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215822708 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214495807 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214051993 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217264116 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217150316 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214115931 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217704342 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213594686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217558187 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216931685 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217618571 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213661864 seconds)
  done (took 27.86979694 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217643713 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218445127 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.214872393 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217097511 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215587733 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217848093 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.217862069 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219050814 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218323395 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214886924 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215878699 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218310671 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214240349 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215907246 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215510814 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217794634 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218855521 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217051744 seconds)
  done (took 23.044264832 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216068532 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.216282095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219269053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216378398 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.217735505 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218569097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215616447 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219651981 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218570193 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216491063 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.217753253 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218638979 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219153007 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216630116 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218277753 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21614086 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218705987 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21684744 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219381408 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217249298 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216965273 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219542796 seconds)
  done (took 27.930043636 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219368843 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219153358 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217438073 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216646403 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216723311 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220134838 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220351534 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.216824239 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220976948 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.220708584 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217568352 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220961398 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220426907 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218373522 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.218406206 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218115606 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220071203 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219645443 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220166171 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217856458 seconds)
  done (took 25.521637992 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221016369 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222479389 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221330792 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22228881 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222184649 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221147225 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22189265 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222302982 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221983297 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223058467 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22212346 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222120074 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222683657 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222244963 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222105851 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223012171 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22244826 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223749017 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222319052 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222684736 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224033045 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223230941 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223035642 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222811433 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224293564 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222863888 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223456687 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223640395 seconds)
  done (took 35.375462494 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223310305 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223128415 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220686888 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221596428 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220759689 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22069659 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220792952 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221523196 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224507062 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2208282 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224337042 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.223634296 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223699644 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224300725 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22444636 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225149734 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224251065 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221471869 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221983274 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221114384 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22421499 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224202813 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.224118812 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221381566 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221913388 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224368777 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221831154 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221789595 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223494967 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222144668 seconds)
  done (took 37.82682409 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243878651 seconds)
    (2/2) benchmarking "in"...
    done (took 1.242847293 seconds)
  done (took 3.631936176 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222707263 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225206774 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.22451165 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222460197 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222525945 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225573516 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224736696 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222546544 seconds)
  done (took 10.936147754 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.225024369 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.225593401 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224721417 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225350009 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225259247 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.226023351 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232336004 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24576485 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226245533 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.22679813 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232773356 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233772273 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.228302544 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22542952 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225849259 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227019099 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.226406946 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.22638454 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226625621 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227937815 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226571425 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228980534 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228148605 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.22430886 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.22791333 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.237102774 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.251248975 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226781132 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226501076 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23046779 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.228243457 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225166881 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.228139665 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.22677942 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.228746543 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227985301 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23784952 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246894341 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.233519443 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24916582 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228302874 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.226228887 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228907247 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229580292 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229514789 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227885603 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.22886015 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.226928634 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227675318 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.232961762 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.234640567 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228538861 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.226757449 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231279109 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229128797 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235564027 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248269764 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231325483 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237621457 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.239354336 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261603038 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.254831199 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230243868 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229565051 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239721594 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.2526798 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236838221 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.247664535 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.225829738 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230664643 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.236577254 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263224977 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.255996805 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.23065643 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22992306 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229492108 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230753363 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230551187 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236393288 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.251660224 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230808638 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230648992 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240229629 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252571584 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230257118 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.230098373 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.236957232 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.231241734 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.231577601 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242041089 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.250274027 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.232475487 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23031973 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.230691523 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.23294843 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.232537049 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230634642 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231654234 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.229377323 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.232693429 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231678667 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235063452 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.240743796 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232420405 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232318324 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.238017973 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.253613382 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23164348 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.237320997 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.232275197 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232536587 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.233956821 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.237642102 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.230281698 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23605275 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.240606634 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.233719946 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.2344887 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.233246752 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.23364189 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242524173 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.259195083 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.233726521 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.23402472 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.237919399 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.245029019 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233687941 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.235913753 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.233830472 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230933605 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.23170011 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.235610507 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234485912 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.2351391 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23334931 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235312897 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.232317191 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.235294445 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.235401242 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.235591934 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.235244158 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.234597463 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234537929 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.235829602 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234144978 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.23616416 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.241087904 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254758689 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.235803781 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.235476387 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.232407031 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236509313 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.236944355 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.235029817 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235169201 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236600956 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.234654338 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234735235 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2351474 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.236128913 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236151856 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.236883775 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240133525 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236133952 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239144795 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.235505952 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233307621 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23615855 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236118302 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235514686 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.237142955 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235249911 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.238646224 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.243951209 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.238168376 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.237040134 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.2395546 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237024328 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236861444 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237337852 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240461102 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244627583 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237185204 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243522868 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.257349356 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237553881 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.239098005 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238174484 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.237630524 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237600778 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.239556462 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.245593789 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251119952 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26307198 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.239029073 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242377901 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.23844018 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.24234304 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241007303 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.23803077 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238571142 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239317892 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237518449 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238163954 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240246559 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.240314756 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.238097952 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.239397553 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.240101179 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.239446886 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240231123 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.240214657 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239120386 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236994806 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239179064 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239704859 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.238847845 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.238334499 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238304083 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.238519773 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.239189238 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239728359 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.245936018 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.238587502 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240585508 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240154528 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.239301406 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.239738955 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.240311942 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241817932 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240569436 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247880633 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.25976882 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.240768592 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247885494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.259209674 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240330257 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.24225115 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241611716 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.23843104 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243278702 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249821918 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240731881 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241435831 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.241882678 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240982499 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241416399 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.248030437 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.259192479 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.241481827 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241991505 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.241807973 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239966738 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.242226898 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.241349312 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241224711 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24250145 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242284076 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.242739672 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242499042 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243023499 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.241208206 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.241520035 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246319002 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.249799724 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.247481939 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.24260162 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.243677688 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243647031 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.24671038 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.242981477 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243130492 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24305691 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255295513 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.269423068 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249690905 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.265523665 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.243342166 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248230969 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.264333492 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247069097 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244928962 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24420849 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.243339241 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.244713904 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241871282 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244595435 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.244345443 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245444546 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245379515 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247953319 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.244562556 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245096156 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.244481763 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.24455023 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.245635933 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.244979781 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245561576 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246453478 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245863012 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.244256479 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.244674736 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251373945 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265634063 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.246794394 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245279 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.24467935 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245143371 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247107625 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.245390708 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.247868787 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.253101764 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.247899473 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.254394698 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.246434177 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254638653 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.245347027 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.248826678 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254212711 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.243209791 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245111363 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24661971 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.247444088 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252536432 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.266453811 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.246867909 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.2505148 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246888966 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.246621283 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.247412376 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247015221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247056522 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.247655188 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255291035 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.267399746 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251237693 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248922269 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.245399626 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.246756247 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.247281499 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244914658 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250017223 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247174086 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.248223666 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247325544 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.247100383 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.249125764 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.248015698 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.248001549 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24614232 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.24792978 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254406016 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.270332983 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251781227 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.247912323 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.255483509 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268677828 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255463753 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268972168 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.248103805 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.248825545 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248044437 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250300722 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248049213 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.248926654 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.250444823 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249087324 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254075262 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.250215919 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.251198818 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.250029703 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249475465 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248665607 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259789944 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272295597 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.251326493 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254647635 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.248261699 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25120478 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.254692866 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.249346912 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.247854935 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253280899 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260503294 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257776193 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250455132 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.25089306 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250167791 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250616909 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.250516885 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.251156809 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251337279 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.252287411 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.251268552 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.251301156 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252809626 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.25098933 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252076988 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251801736 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.252666302 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261103913 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.270964719 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.251208129 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251358179 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253573047 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.251370457 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252483905 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.25140713 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252312392 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2530577 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.254139471 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258214312 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257907854 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254704907 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.253328665 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.252670487 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251865532 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253452684 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252299073 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.253563717 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253700443 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253412554 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.252327519 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.251781347 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.251704106 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.252750055 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.253016456 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251944941 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256030092 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260274721 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254004224 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251580873 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.253594205 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254091131 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252860081 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.2551847 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.261449551 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277854692 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.263762746 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261800847 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.258412268 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.25362973 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257850352 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.261961393 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.253107405 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.254889305 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.253883176 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.25540338 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.254936143 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.256774803 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255587809 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.260394167 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.274789448 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.253053745 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262292238 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.274948956 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255043813 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.255927491 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.258256204 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254473891 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.252902299 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.256153779 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.255122791 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261296399 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276633443 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255717698 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256793833 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.253784403 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25717253 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259608945 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255973555 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25653644 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.253756852 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.256078956 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255676517 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256839731 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.252950742 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.256016616 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255505998 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.261010564 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263829585 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.254685888 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257614028 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256419156 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.257214528 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257055227 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257252841 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.254682092 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.254837196 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.256626824 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258113799 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.256370849 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.259786683 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256016381 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25754215 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.259149793 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257120549 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25966305 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.267361133 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265495153 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.255671104 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.257700956 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.258164492 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.260010328 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257950129 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.257226206 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257459073 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.258605714 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.258273234 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259178772 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.258510541 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.260619427 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272990261 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.279568957 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258883501 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258644131 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261280308 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.259066541 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.256167616 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.259890278 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261002027 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.26107062 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.267221711 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.259808911 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265647174 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27955031 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.260695824 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.263115528 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.26330928 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.266516858 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.263071611 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261044228 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260859936 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.26432078 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.275737372 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260546345 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270593316 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289835733 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.281901937 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.260413499 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.261838438 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25944059 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26123432 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.261931084 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.261538847 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.260441298 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261199247 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.26213449 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261272913 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266011004 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.262561096 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.262309217 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.261829248 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.258963035 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.262226182 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.258881746 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261375212 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.262121847 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.261726368 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.260602961 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261948074 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.261521338 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274345379 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.289042843 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.263274621 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.262673462 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.259463208 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.265139705 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.264300292 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272380817 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26928043 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.262661127 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.262071559 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.262779042 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262474636 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.262674339 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.262606208 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.263210294 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262525713 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.260818846 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.274526608 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290200941 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.267488033 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.262061632 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263379189 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.262694457 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264281001 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264040373 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263745749 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.263850648 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.266867243 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266750288 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.264459205 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265427978 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266816339 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272754928 seconds)
  done (took 744.802100472 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262374906 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26245227 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262059526 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262342365 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263406788 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261915357 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262643531 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262934594 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262850772 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263339928 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.261808681 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262999655 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263314812 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2637701 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262735125 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263802538 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262513646 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262661086 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262812181 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263483568 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263219593 seconds)
  done (took 27.702123211 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266395173 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.264576855 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.264514128 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266370612 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263202925 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266654478 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265169315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266129043 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266523708 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263780565 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267001664 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265754861 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.264233329 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26491246 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264907083 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266511332 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267340301 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263676149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267721092 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264721257 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267545506 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.264689826 seconds)
  done (took 29.02676647 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.266288289 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267383044 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267092495 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.265308437 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267919511 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.265014158 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.268118302 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.266905588 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267849606 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.267949669 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267215107 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.269221478 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274300999 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.271926641 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.268620446 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.267225154 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.410285341 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.267467077 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.267762992 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267772269 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.265699518 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272148836 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.287261712 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.265917376 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.26692706 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.268727315 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268591292 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.268399421 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.27005775 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.268990189 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.272378988 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.269318711 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.26812114 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.271126033 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.267551902 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.2695645 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.272305553 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.269588421 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.267609632 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.268602622 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.278197394 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.29062008 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.270094662 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.275275346 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.292097048 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.27029508 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272718781 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.276402236 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.267853174 seconds)
  done (took 63.580389227 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.270217636 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271421018 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.267966772 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270677985 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.269884894 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.269861875 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.270313942 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271365643 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.268575597 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.267888067 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.270555129 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268327206 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268498462 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.26956457 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.270800528 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26852326 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268621333 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269218702 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.268857717 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269291428 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.269896014 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.271243253 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.270900244 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.269150534 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271489771 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.268586387 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270000371 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272104191 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.269878679 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.269184356 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.271817797 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27331753 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.27341826 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270294527 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268749198 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273109143 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.27230752 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.269809896 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272892079 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.268417618 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.27331909 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273608037 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.272022989 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.273168911 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271189635 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.270783557 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270829331 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.270541624 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.270616899 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.273010703 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.272811797 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.270784133 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273901905 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271063829 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273064983 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.273541411 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.271467013 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.271413606 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.274072594 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.271208015 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.272431932 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274629151 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.271539761 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.27605952 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.274221321 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.271937345 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.272760257 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273983082 seconds)
  done (took 87.627340141 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27440744 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.272615006 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274333992 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273998648 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273963847 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.273979491 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273189226 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.275101012 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274857606 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275645874 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274947869 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27470964 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.274571223 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.274828808 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274090662 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274907316 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274894307 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274905243 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275282618 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274939102 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275389563 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274296924 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274913221 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274055426 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275364339 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273950897 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275304933 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274860454 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275207087 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275119892 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275753276 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.274793194 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275605489 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275378452 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276906452 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.27483382 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276356053 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276138422 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.276150635 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276970566 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277424564 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276010448 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276758677 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.275462327 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275673016 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275298321 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277120745 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.277485874 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276640851 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277129146 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277610212 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276968237 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277729064 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27649026 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277285221 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278086487 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278629889 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278095561 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278653305 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27759428 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278282565 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.277596868 seconds)
  done (took 80.290461713 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27871023 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278293156 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276623046 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.275976099 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279243891 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276326806 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280162053 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.27893434 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279453555 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279508308 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279620077 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277740043 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275514804 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279316795 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277213186 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278196426 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275912376 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.279025651 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281910281 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277899889 seconds)
  done (took 26.761492831 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277398287 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280064865 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.278046155 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27687627 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.279792829 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277213076 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.280538339 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280366144 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276836049 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28060078 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281337289 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280867208 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277426584 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278062008 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281402351 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278537084 seconds)
  done (took 21.662646116 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.278086308 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281898337 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.27929077 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.280032028 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.277718992 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.277975683 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.280515263 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.277886344 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.277992008 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.281494832 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281582721 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281492836 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.282010741 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.28032873 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.277923929 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.28088553 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278350588 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27860415 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.281404775 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.280850415 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279414848 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.278796302 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.281649367 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.282080262 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.279421936 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280352513 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.278838211 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279502339 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.278877092 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.281693303 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.280083351 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280365989 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.279581042 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.279328608 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.282130207 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279777971 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.283298545 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.283132325 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282821602 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.28195495 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.282084946 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.279468502 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282882273 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282466896 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.280286006 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.28377241 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.281280952 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.282048822 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280816851 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.281053902 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.282963323 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282702686 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.281879479 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.285034806 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283785277 seconds)
  done (took 71.640535618 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283954205 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283927906 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280968621 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283490562 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284022322 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.281992223 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284579874 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283296365 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282110508 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285387733 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282562462 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285664292 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282065904 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285395441 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283282063 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285396076 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.282358563 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282595174 seconds)
  done (took 24.303573698 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28303737 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283444886 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.285916903 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281577738 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.282169605 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285002446 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282004153 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.285225105 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284985791 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.28288726 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282746136 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.286015083 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286682518 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.285859531 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283693636 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282522208 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285991924 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285922553 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.282882836 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283328339 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28734829 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285197202 seconds)
  done (took 29.455960707 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.284462506 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.284958186 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.284868996 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.300499023 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.304179841 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.307898897 seconds)
  done (took 8.968959903 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294636846 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287519441 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284474803 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28792884 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287604363 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285223049 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28457465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284737691 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289527731 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285983626 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285295185 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286822348 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287409639 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285709441 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287900091 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288086659 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285524255 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286317005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285755668 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288159487 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284744195 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286403696 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285976937 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285472427 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285172342 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285211332 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288174203 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286996473 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286054477 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289291226 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288353915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286989178 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289155607 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285862999 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290183324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288148724 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287200681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288756408 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289931176 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287531951 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289311844 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29031505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289958881 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287173365 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289831521 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287841741 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287369407 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287012076 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287400844 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290410873 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289528925 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287167153 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289903293 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290687615 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290020087 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290834895 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288311333 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288277617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29089426 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288788178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286932047 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289884389 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287816635 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288848625 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290532553 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289515553 seconds)
  done (took 86.226911709 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289200985 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289767273 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290464881 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290006351 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288817691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287696628 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288409775 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288487408 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288329327 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288784742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290653324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289392351 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288417643 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289389856 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289415241 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289462907 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288953134 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289096744 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289858714 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292182616 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29000554 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289475053 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289886273 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290517015 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290211305 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292206158 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289985413 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290482379 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289585248 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289914049 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289841082 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290830024 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290566298 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290876369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291396228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291299834 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290924967 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291551525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291261292 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293341792 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290821334 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293621946 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29189419 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291513089 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291564543 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291477749 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292153581 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291934205 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292862917 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290811669 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292242569 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291525738 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291351277 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291351081 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291681501 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291334485 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291023044 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292664931 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292403167 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29394773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291980018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291940452 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294321679 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292601889 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291771064 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292714211 seconds)
  done (took 86.403939122 seconds)
done (took 1737.789356363 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.459558269 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411696552 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.292895611 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.313146849 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.293140179 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.303769416 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.288263745 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.29353485 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29351745 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.293931744 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.293320243 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.487428841 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.292788683 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.293645006 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.291791159 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.387949164 seconds)
  done (took 42.50285155 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.322594852 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.299844307 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.420064175 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.322444238 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.322149417 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.495743983 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357143769 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.299430744 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.485826357 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345267477 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.958260435 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.322143439 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.298722261 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.485898113 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.317963343 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.495085147 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.559356301 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.96367659 seconds)
  done (took 30.284818152 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.789499612 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.321917092 seconds)
  done (took 9.324553004 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.320393357 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.299773254 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.299301484 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.29838766 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.291599591 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.307671935 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.297176272 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.296382483 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.267682623 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.437127427 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.302045956 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.306644935 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.32000663 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.300467414 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.297035233 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.336103713 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.474868707 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298797072 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.296903447 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.306050719 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.3000305 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.398591104 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.345165782 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.299797912 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.435331852 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.269978519 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.302331928 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.307696337 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.454991504 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299488358 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.299432046 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.299513929 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.301212186 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.918964694 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.747504725 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.315561619 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.326539746 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.309275276 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.298780842 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.448417534 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.30261054 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.306963069 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.2934044 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.741031141 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.444106355 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.428789364 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.579671899 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32052111 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.301960294 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.367559464 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.303748666 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.30230442 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.331008471 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.086560816 seconds)
  done (took 110.370816884 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.339597663 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.693641638 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463499168 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.313371565 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.94272536 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.903654496 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312476807 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.615592998 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361289799 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293417528 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.583494764 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.83177403 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322048562 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.318173693 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.931929441 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.363023746 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295158979 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.081257358 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.314790496 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.295594721 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820203517 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307803457 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.296578132 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.455318499 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.335062864 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773340496 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.93036112 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.622662706 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.316782551 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.295216614 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.790785446 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32569293 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.344108695 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.297584321 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.56893736 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679297469 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.672812617 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.315957344 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.30895968 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297424424 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.296618496 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769810776 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.67951155 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316551353 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.315820716 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773367376 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.315398157 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.299514697 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.299124418 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499808416 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.974261161 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.299079661 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.894562924 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.300047449 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.669160833 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.351421426 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.371914681 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805160776 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317325832 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.281348747 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.315717918 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.298793831 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.301450729 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301449204 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298791507 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.669812402 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.669104386 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.302308027 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667457472 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.79713095 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.329340202 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.845119307 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.23509814 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325055418 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.399021063 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298754481 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.875799741 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815418237 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.333947213 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.299617614 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.65493031 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318115278 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.593653918 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316990014 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318146111 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833346874 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.312005381 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.348737381 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.310903326 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.301597924 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.918111933 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303232921 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.582124428 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.333297675 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.300625065 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.300170375 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.32046348 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29984313 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.317414673 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.30229547 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853354447 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.329228987 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.452670006 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323310217 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301299533 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.323604244 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.300834803 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.30037519 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520638226 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.820228218 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.330009774 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301326129 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.30193306 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.308115459 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.465006516 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.304761411 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.631351105 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320946781 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30302369 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.32686278 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.983287223 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.364661474 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301918526 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.326036055 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.216530562 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.512368212 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.320720533 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.319292965 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302504379 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.320799681 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.633420529 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323014089 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.329882247 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.306592899 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037154306 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.35421277 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.307324852 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.639412267 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.305842149 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.26503125 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332337186 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302696771 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611088699 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.58002707 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.575157836 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.305342434 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.321341529 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.019496304 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.352699343 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442239996 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324921656 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.347229032 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501405075 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.748445747 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302877974 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.943939828 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.304361071 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.520548819 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.305227347 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62488407 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814016613 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.322168198 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.31181952 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.02720772 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.044363784 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.990541586 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.304069179 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.592935498 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.299603045 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.783610123 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.304290264 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.304429941 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.749966339 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.307023466 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.308114342 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.304605648 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.305868802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.451257305 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479673714 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.465457667 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.314368931 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.779240433 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.344239357 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305900535 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326243482 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.305097214 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.653346374 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.396126351 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.304347687 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.307666624 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.305288002 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.314230638 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79855082 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.274361439 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.307255039 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.459107507 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961597888 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.325180087 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.308569022 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.938091103 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.603489722 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843415772 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.386002256 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.637771788 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.324948937 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.346627862 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.899304552 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352628051 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.803866731 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328165462 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.305840164 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924008941 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.327124901 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.666459581 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.307760494 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.308185 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886944911 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.327950731 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.308650044 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.636140701 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.328884745 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.577367224 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.308604366 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.308931136 seconds)
  done (took 1105.95602313 seconds)
done (took 1299.646409871 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.308753567 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.307518302 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290762929 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.310300221 seconds)
  done (took 26.447641254 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.318958118 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.314992941 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.315320207 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.314316218 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.317150837 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.314775487 seconds)
  done (took 9.126316138 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.539692456 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.309075242 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311662218 seconds)
  done (took 19.391629591 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.536361192 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.70218887 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.706006595 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.633822972 seconds)
  done (took 10.811151296 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.316935851 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.316400831 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.316701467 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.319638181 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.321941552 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.322557968 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.317969052 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.319593874 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.322538895 seconds)
  done (took 13.104812026 seconds)
done (took 80.10885413 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.337880016 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.231301183 seconds)
    (3/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.291140018 seconds)
    (4/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.296866929 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.316838045 seconds)
    (6/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.514408588 seconds)
    (7/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.29148311 seconds)
    (8/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.680255272 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.579899804 seconds)
    (10/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.437814464 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.73557098 seconds)
    (12/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.327848977 seconds)
    (13/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.199008599 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.351926573 seconds)
    (15/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.57616068 seconds)
    (16/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.311290442 seconds)
    (17/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.421813719 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337754335 seconds)
    (19/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.605929018 seconds)
    (20/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.339140279 seconds)
    (21/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.053122685 seconds)
    (22/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.36235844 seconds)
    (23/286) benchmarking ("sort", Float32, true)...
    done (took 6.311749506 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.359156893 seconds)
    (25/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.296528982 seconds)
    (26/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.447258574 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.280787096 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.414312292 seconds)
    (29/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.377216867 seconds)
    (30/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.312203875 seconds)
    (31/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.330383734 seconds)
    (32/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.138270432 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.91451186 seconds)
    (34/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.390882207 seconds)
    (35/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.908949866 seconds)
    (36/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.185116841 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 6.32468798 seconds)
    (38/286) benchmarking ("sort", Float64, true)...
    done (took 6.313574378 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.957609364 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.314517572 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.416074171 seconds)
    (42/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.293118509 seconds)
    (43/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.301306852 seconds)
    (44/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.418250325 seconds)
    (45/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.31582295 seconds)
    (46/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.325144631 seconds)
    (47/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.580227782 seconds)
    (48/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.735226344 seconds)
    (49/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.313862789 seconds)
    (50/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.334635004 seconds)
    (51/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.331968748 seconds)
    (52/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.323616072 seconds)
    (53/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.312071249 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.754902129 seconds)
    (55/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.360228779 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424473088 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.764670863 seconds)
    (58/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.425738764 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.593200731 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.294189185 seconds)
    (61/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.413197926 seconds)
    (62/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.304909844 seconds)
    (63/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.756507125 seconds)
    (64/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.872871402 seconds)
    (65/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.877168893 seconds)
    (66/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.837813511 seconds)
    (67/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.299915872 seconds)
    (68/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.009787101 seconds)
    (69/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.425797659 seconds)
    (70/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.371807316 seconds)
    (71/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.818038359 seconds)
    (72/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.318528136 seconds)
    (73/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.402883414 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.301860278 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.973811159 seconds)
    (76/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.413701155 seconds)
    (77/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.423013624 seconds)
    (78/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.585854406 seconds)
    (79/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.398500142 seconds)
    (80/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.435777132 seconds)
    (81/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.324399939 seconds)
    (82/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.228875215 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.299981636 seconds)
    (84/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.398721323 seconds)
    (85/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.402249401 seconds)
    (86/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.588584547 seconds)
    (87/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.308863549 seconds)
    (88/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.999311861 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.315892187 seconds)
    (90/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.420555097 seconds)
    (91/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.34599855 seconds)
    (92/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.318396382 seconds)
    (93/286) benchmarking ("sort", Int64, false)...
    done (took 5.554392527 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.996734949 seconds)
    (95/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.315900077 seconds)
    (96/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.226208592 seconds)
    (97/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.376725375 seconds)
    (98/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.135169628 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.987529334 seconds)
    (100/286) benchmarking ("sort", Int8, false)...
    done (took 4.408153385 seconds)
    (101/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.297623084 seconds)
    (102/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.797966648 seconds)
    (103/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.344322098 seconds)
    (104/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.316467456 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.808372433 seconds)
    (106/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.315513602 seconds)
    (107/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.298702613 seconds)
    (108/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.845871495 seconds)
    (109/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.808065989 seconds)
    (110/286) benchmarking ("sort", BigInt, false)...
    done (took 6.317485741 seconds)
    (111/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.29769625 seconds)
    (112/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.218721759 seconds)
    (113/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.347138698 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.51896999 seconds)
    (115/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.317101767 seconds)
    (116/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.365360124 seconds)
    (117/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.319008116 seconds)
    (118/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.416434335 seconds)
    (119/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.720655778 seconds)
    (120/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.340490759 seconds)
    (121/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.3153151 seconds)
    (122/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.315883183 seconds)
    (123/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.358295517 seconds)
    (124/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.297889287 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 1.855105673 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.36061169 seconds)
    (127/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.298795885 seconds)
    (128/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.406918363 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.599927529 seconds)
    (130/286) benchmarking ("sort", Int8, true)...
    done (took 6.318524425 seconds)
    (131/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.353799318 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.136787785 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.579690268 seconds)
    (134/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.306477671 seconds)
    (135/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.506957126 seconds)
    (136/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.365385184 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.036872067 seconds)
    (138/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.02905509 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.97901567 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.422525285 seconds)
    (141/286) benchmarking ("sort", BigInt, true)...
    done (took 6.320478038 seconds)
    (142/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.337859689 seconds)
    (143/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.188133209 seconds)
    (144/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.221862024 seconds)
    (145/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.319310962 seconds)
    (146/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.312296758 seconds)
    (147/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.321117889 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.561774553 seconds)
    (149/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319076774 seconds)
    (150/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.144647643 seconds)
    (151/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.347063733 seconds)
    (152/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.419169371 seconds)
    (153/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.406223956 seconds)
    (154/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.016519674 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.361231183 seconds)
    (156/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.30776091 seconds)
    (157/286) benchmarking ("sort", Float32, false)...
    done (took 5.348250593 seconds)
    (158/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.399008537 seconds)
    (159/286) benchmarking ("sort", Float64, false)...
    done (took 5.691803865 seconds)
    (160/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.137919896 seconds)
    (161/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.184269297 seconds)
    (162/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.348124052 seconds)
    (163/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385572167 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.320653775 seconds)
    (165/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.324659573 seconds)
    (166/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.305442078 seconds)
    (167/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.212216594 seconds)
    (168/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.317619258 seconds)
    (169/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.510223385 seconds)
    (170/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.720154485 seconds)
    (171/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.847157143 seconds)
    (172/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.615096622 seconds)
    (173/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.741568874 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.349111159 seconds)
    (175/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.823441056 seconds)
    (176/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.14418276 seconds)
    (177/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.334493223 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.36504172 seconds)
    (179/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.884698093 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.332333371 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.338862876 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.26552007 seconds)
    (183/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.70835341 seconds)
    (184/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.867210841 seconds)
    (185/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.008640975 seconds)
    (186/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.095212271 seconds)
    (187/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.587363592 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 5.450701086 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.398079326 seconds)
    (190/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.194236675 seconds)
    (191/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.320741253 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.304651972 seconds)
    (193/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.178057949 seconds)
    (194/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.423284833 seconds)
    (195/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.351663038 seconds)
    (196/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.350505014 seconds)
    (197/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.350493306 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.322515886 seconds)
    (199/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.429747443 seconds)
    (200/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.193573725 seconds)
    (201/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.762261609 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.335452388 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.974915948 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.533910032 seconds)
    (205/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351799101 seconds)
    (206/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.323409322 seconds)
    (207/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.304108335 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.70753537 seconds)
    (209/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.351965709 seconds)
    (210/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.834257532 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.34689547 seconds)
    (212/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.408105612 seconds)
    (213/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.852006125 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.365677813 seconds)
    (215/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.726401767 seconds)
    (216/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.450311596 seconds)
    (217/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.715934315 seconds)
    (218/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.327600166 seconds)
    (219/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.492557124 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.350613478 seconds)
    (221/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.062699963 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.13322533 seconds)
    (223/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.306625923 seconds)
    (224/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.309576297 seconds)
    (225/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.724020502 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.771042908 seconds)
    (227/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.131231304 seconds)
    (228/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507475624 seconds)
    (229/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.319847124 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.202188344 seconds)
    (231/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.429304599 seconds)
    (232/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.893874066 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.326735451 seconds)
    (234/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.339007209 seconds)
    (235/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.601801863 seconds)
    (236/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.608423023 seconds)
    (237/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.540781367 seconds)
    (238/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.472484785 seconds)
    (239/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.345111586 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.550035255 seconds)
    (241/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.409121038 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.021129342 seconds)
    (243/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.306781472 seconds)
    (244/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.353375943 seconds)
    (245/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.320017101 seconds)
    (246/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.329220513 seconds)
    (247/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.317900904 seconds)
    (248/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.746133406 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.354106694 seconds)
    (250/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.002713689 seconds)
    (251/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.322727187 seconds)
    (252/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.8498154 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.748209793 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.725697873 seconds)
    (255/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.327171208 seconds)
    (256/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.264123745 seconds)
    (257/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.456382322 seconds)
    (258/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.425219533 seconds)
    (259/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.125961096 seconds)
    (260/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.35422963 seconds)
    (261/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.702527302 seconds)
    (262/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.327195883 seconds)
    (263/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.309197979 seconds)
    (264/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.814159421 seconds)
    (265/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.913553549 seconds)
    (266/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.312385221 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.410907391 seconds)
    (268/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.894741363 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.343877179 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.41158963 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.439277857 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.346196966 seconds)
    (273/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.006370962 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.163935005 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.11750442 seconds)
    (276/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.85656315 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.413688759 seconds)
    (278/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.309424172 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.391190814 seconds)
    (280/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.327711537 seconds)
    (281/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.801609511 seconds)
    (282/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.572975746 seconds)
    (283/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.001281183 seconds)
    (284/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.381394817 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.374540744 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.393662778 seconds)
  done (took 943.977571239 seconds)
done (took 945.206604815 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.365065096 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360538733 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.342465101 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.36429939 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.454367346 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.368992707 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.353466533 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.345221486 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.39013391 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.392271963 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.342350516 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.36909486 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.344402381 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.34267849 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.343313167 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358262468 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.467057288 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343542262 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.360821773 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.354120566 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.359102569 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.34299341 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.393201403 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.370098782 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.34667953 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.347524262 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.347001745 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.362839095 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.455084295 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.347529105 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.347822481 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.355181561 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.465845298 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.341514907 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.33965563 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.363267592 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.356488516 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.354427963 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348655304 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.376551864 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.906358912 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.363203715 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345603147 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.345900752 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.34698723 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350826565 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.347609363 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.352339071 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359122417 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360368253 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.895250912 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.378844587 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.349806654 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.345948805 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.357047566 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.345991446 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.350009032 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363992586 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364656096 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364026471 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.454586171 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.351720708 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.349369339 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.362676855 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.354305499 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.932091389 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.362035179 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.352816317 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.906679351 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.371645136 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.933952948 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.374745426 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.349005629 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.36238821 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.378290775 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.467447705 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.34346333 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.347227921 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.354781004 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.345874946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.357806683 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36202369 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.353331981 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.34822272 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362834405 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.373284848 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.35944081 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.350991627 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.358140086 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.368843654 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.355423837 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.359896928 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.351914583 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344676969 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.358491465 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.353103996 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.35093624 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.351911327 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.354291734 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.359722393 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.909887609 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388038908 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.346132853 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.34681731 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.349643718 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.364167881 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.910470742 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.368457378 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.372347837 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.397188152 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.350399962 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.461307933 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.353192434 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368673469 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.358560046 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.354433369 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.345153795 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.461751291 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.901976943 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.384261804 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.352102214 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.349027759 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367475182 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.35283702 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.348717781 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.475709949 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.35217347 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365955998 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.47258505 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.361456635 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381981612 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.350175414 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.355226982 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.372827238 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368585081 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.381688532 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355000295 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37003186 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.367648823 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.347177059 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.362424864 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.362267201 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353187769 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358938464 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.347537434 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.374226363 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366524727 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366731761 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.373184037 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.472473494 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.350923654 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.466157199 seconds)
done (took 229.417316921 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.409832242 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.34454406 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.432342924 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346119938 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.449199255 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.450248657 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.34439525 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.345557501 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.345073122 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.726175425 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.344534356 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.344545854 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.338418354 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.3439866 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.43053066 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.348040366 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.34615421 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.690164121 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.348526782 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417659581 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347594934 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346119909 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.347829988 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.728400586 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.344864225 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.349318872 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419219408 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.349091661 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.72131025 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.343926905 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.340415332 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.693078898 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.436477497 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.366362131 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.357386604 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355838002 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.452513204 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.367886485 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.431458665 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.431353796 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.433627584 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.38742325 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.340849988 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.346773154 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.350663902 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.348886652 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347308272 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.37672326 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.344722572 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.347815979 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.693733786 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358821736 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36030047 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348652515 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.348213788 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.369601705 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.347977285 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.350184505 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.438918587 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.352189849 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.412579981 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.776880808 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.729147524 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.349941392 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.349423667 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.348991253 seconds)
  done (took 149.499105878 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.415630489 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.422139424 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.467209779 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.37085065 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.398736636 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.474089658 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.369689275 seconds)
  done (took 11.181018932 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.357385125 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352844044 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.400677528 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400302646 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.350692265 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.530780249 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351380125 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.361636332 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.348579846 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.403383779 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352190523 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351847872 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359663867 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.351517104 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.400014319 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.362676731 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465979283 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.351579331 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351850207 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.508220043 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350575632 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.360405175 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.403293124 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362412946 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.353685728 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.35690573 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.160682896 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353195496 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350212442 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.353782913 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350298999 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.430220824 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354007267 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.34925088 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350771388 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473455422 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353871347 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351751336 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353660436 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.3531444 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.35364304 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.354212515 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.355642512 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.352520064 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35385611 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.375761298 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.354019757 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.354248522 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.354558268 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.35507054 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.404128056 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.355994296 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.35207107 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352485913 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.409991479 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36104283 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.355812587 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.352944467 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.354815969 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353512666 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.510320813 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401488955 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354897778 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402419272 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354862486 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.35632159 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.356175273 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.356191116 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408371306 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355773484 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403475422 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.354079795 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.542167789 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37774465 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357882516 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.357446507 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.358162035 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355300956 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.356932284 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361073097 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.353994847 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.35684213 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.360811595 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353546342 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354346082 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.521917529 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.463714421 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.354854405 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.370034532 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.36272979 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.355290784 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.410298872 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356528529 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.354737504 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.4187184 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.471470557 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.408852004 seconds)
  done (took 155.631782848 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361903779 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.364603143 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.359219026 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.372863973 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.357258622 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.357340374 seconds)
  done (took 9.441631573 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.360736373 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.359216965 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358604817 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358996847 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.357551767 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.358448838 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35823654 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359277728 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.361659542 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358526597 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358926224 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.359330043 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359846209 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.359103064 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360126504 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358671877 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359539963 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357694284 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359690403 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35943585 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.464589629 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.359561695 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359425172 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.36046042 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364804276 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.359578762 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365859625 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.360953699 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.359473355 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36470122 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.379968211 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360919075 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.360288306 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.365740026 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.364485896 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.36183101 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365079103 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.360727621 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357975318 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361854867 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.361863351 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361510004 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.360247677 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.362403169 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.362438546 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36436275 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.365855651 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367921288 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361290995 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363179508 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.362657754 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.36088974 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.362279996 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361790307 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.362163172 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384694295 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.366271949 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.361672071 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.361386689 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.362131058 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.364088037 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.361848447 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362666517 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.366490728 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.359055287 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363462437 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.36350891 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367352031 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362543701 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.36339829 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.364531961 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.360969637 seconds)
  done (took 100.450921582 seconds)
done (took 427.459766235 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.42211632 seconds)
  done (took 7.696450387 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.616135833 seconds)
  done (took 7.892156971 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.559390702 seconds)
  done (took 23.84186932 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.434674229 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.968398779 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.399661913 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.364518524 seconds)
  done (took 28.443287823 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.498972398 seconds)
  done (took 7.773986612 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.355751095 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.355705163 seconds)
  done (took 13.988938971 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.482753878 seconds)
  done (took 7.757839374 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.392735527 seconds)
  done (took 7.676605105 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.355869626 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.396095405 seconds)
  done (took 14.04206442 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.337449549 seconds)
  done (took 7.612748189 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.340939635 seconds)
  done (took 12.617596472 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.362209429 seconds)
  done (took 7.638983942 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.364461445 seconds)
  done (took 7.641029539 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.002350811 seconds)
  done (took 10.277577449 seconds)
done (took 166.173508767 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.356381992 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.357925448 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.360644122 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.360277148 seconds)
  done (took 26.711427028 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398209984 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.398377032 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.402236387 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409033554 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.401794452 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.398801648 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.39084494 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.389716571 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409709158 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402133463 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400663348 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402194487 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.399315342 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.391690367 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.400746239 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.401554731 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409285417 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.402060083 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.391907515 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403151588 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367688656 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411280286 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402779385 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.367904745 seconds)
  done (took 34.831045421 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.888408021 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.437841171 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521273288 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.417333327 seconds)
  done (took 7.542207045 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418411319 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.420405545 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.432089763 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.471798124 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.500996597 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430405712 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.395044404 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.389026397 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37471195 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420442258 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.496797349 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437336384 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.510402095 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367847331 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.549269409 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.367322282 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368554132 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.419865666 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.473364339 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.487604698 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.368655142 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.419645291 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427947825 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436317965 seconds)
  done (took 35.663481825 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.368591587 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.385487128 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.368035174 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.366032371 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.37618648 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.36737263 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.36860358 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.368491213 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.367221264 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.374209315 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.367596111 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.380387953 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.367539223 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368152911 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.374381253 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.368993002 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.374287569 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.368263882 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.36886723 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.375489275 seconds)
  done (took 28.704156242 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.360642055 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.429170385 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.713388782 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.618530502 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.361055095 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.364591392 seconds)
  done (took 28.128329772 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447105034 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.606199834 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368562122 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.767851891 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.861787455 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.390086173 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.36937295 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.63206075 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.992873647 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.993561807 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.435830516 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.44300492 seconds)
  done (took 20.590096061 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.379240548 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.3622921 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.380262323 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.381220533 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.430537301 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.391586457 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.376704239 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.363744654 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.433713998 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.453794713 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.391997015 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.430944498 seconds)
  done (took 38.058142893 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452762729 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413416662 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.449219942 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380118315 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091128283 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578081892 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414594942 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104569516 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391771407 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639513388 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37811229 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454549864 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62433335 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381864858 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36822421 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.439897677 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613716504 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910257915 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371652113 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.72077161 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392829611 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382384696 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.802526763 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.622290096 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600434826 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351199814 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.628364715 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.142198439 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687266938 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384970509 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377483406 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367653695 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641980991 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052914969 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485298115 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60135312 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392584063 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.916744399 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.358979848 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.710672473 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387239131 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370411775 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379436639 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368163165 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302306362 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373914214 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116642774 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.396021885 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.081475589 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369898013 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663361716 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468079256 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373605108 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.942683653 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448653511 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396435747 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.37329611 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465405295 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958133546 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.132369548 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38709659 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.305537246 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36835976 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.646567817 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053404887 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.396046479 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373742623 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373756783 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30638027 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.699953151 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387362269 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515402174 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.39540328 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039004676 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148180167 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397526313 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301052449 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986514281 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376677169 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.305161027 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599705282 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14744382 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310119543 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.317957804 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305516294 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151554807 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382114865 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.872272174 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394861744 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134949729 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629870252 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409287762 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395224272 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595625843 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.279591773 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370378289 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.377401267 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495402864 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395035629 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119282839 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32851101 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.376341026 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630928182 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.583528644 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379158998 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.446538528 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907608376 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396042361 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.389335261 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381054302 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610897014 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.028375527 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408843333 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.124883279 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390953086 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.150373725 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188049915 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389754036 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.377587706 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384905191 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639691967 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.214682231 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.259207297 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441994876 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380024473 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37449664 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.756754165 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.226421901 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.256186 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.593552151 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395997216 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.386060767 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.375446659 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340905525 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.371939268 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374843805 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.154196896 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598713769 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375434731 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649640812 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308516142 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521252795 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396195777 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.59825914 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.682640486 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.399564042 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63611234 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391248523 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375408152 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387540606 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394618548 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476336943 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397305216 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.386828651 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633985874 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.379247607 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.381083723 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.762630971 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155005049 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384526255 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.382310792 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387211387 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01769309 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374566604 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380561323 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348238523 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.390422549 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443366016 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382321984 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613946348 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.432415411 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394642531 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.382528326 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.387799698 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601637148 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387402192 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.755633625 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457163466 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.888972709 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040959782 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410100917 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.311717389 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.089685183 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.070899892 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379962768 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.568789391 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380299772 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61378135 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414012432 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378445567 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018827444 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400680337 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.679035794 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383646999 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39118508 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.383512204 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378998928 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.385979985 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.178506785 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397417672 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.390013833 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523310966 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.393057466 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312600505 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896786318 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384921164 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37967179 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.154637038 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415055842 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.677154611 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231420159 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663475964 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380589275 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674961827 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.792126782 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.414647365 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.383011308 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381688365 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403690587 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.394215009 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408259383 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.392404284 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.772895377 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.833993096 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946235419 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181706857 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000087254 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.779978462 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.402489995 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.280751715 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131322067 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335703909 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.03971838 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593918167 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147718882 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360098229 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900235459 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.713805086 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247147671 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676902137 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6128041 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.757405969 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.403590789 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695779206 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596750488 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417142099 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.38630421 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312239278 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.661929598 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981421878 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404128477 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483733233 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131951186 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403675308 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.164050673 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.456680028 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.248115026 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829097641 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.010395044 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.794340744 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38355687 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386527104 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231829665 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409967572 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916405382 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057809858 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409025549 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.898515317 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346093019 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62239185 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.416622991 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.381735543 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.891383442 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.390238249 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.64190789 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681495809 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323954677 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397670678 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986021447 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.279908074 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.389509295 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38478743 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210977645 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389166123 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709318165 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.394345593 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.375419291 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407887527 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319404788 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320184312 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.078878951 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395012357 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36082538 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944351463 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.396160065 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407855528 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395237055 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234199977 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643597915 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.400073085 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045280124 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634845644 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389337462 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42920512 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.389633506 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397071381 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.367602692 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.288462122 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623466215 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436569923 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632447457 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.482177431 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.259103234 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.454905875 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599558114 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.2684656 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388102313 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656188471 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.588369379 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.389113552 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186221175 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431371948 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387947886 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409773544 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387219593 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408116301 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480449204 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62496837 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.4193428 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.397896632 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828674337 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409439183 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389742562 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401009482 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4812963 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.157735277 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.373051237 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.160156224 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032287646 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210737575 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.050566438 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703639133 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390196821 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388776207 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32291561 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537558777 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915952184 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66203777 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516459948 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.395792617 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413046197 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403110235 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398139994 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603532967 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664287084 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.264929126 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399553539 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052686663 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.279325514 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398620687 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.600868074 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941278923 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003000894 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506009447 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389578321 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162962479 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685707183 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481009154 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389878478 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98348053 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.403839022 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.263300363 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.398631486 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389955864 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557939085 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683931124 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092503593 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.42244415 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.545538628 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.164024842 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.704124934 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648179397 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.928377604 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.630398346 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058230266 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.182229496 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65656229 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460598402 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629781467 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.520567126 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539361338 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.39575291 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.289891633 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392070795 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241496462 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.102421114 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.401965272 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039443113 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676360757 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.396200067 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.398201261 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415426999 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402342361 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617452251 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182054353 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61996767 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403480514 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402394968 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.986713068 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039015706 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709076445 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329078459 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398033846 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654960837 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650348918 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417504226 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.845499107 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.105263893 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011756143 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.373338902 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41515733 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399274634 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.166427366 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040771466 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.410193525 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95887102 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057714098 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393623501 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666625707 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.399491815 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407594707 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673376304 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.398468093 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410719123 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637834113 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.060413845 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263195694 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.407594926 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.829543872 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.332908815 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.622913889 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419685697 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331575006 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395296336 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.848173618 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419182124 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531517529 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407779309 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.404313983 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409892949 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.150353169 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69939494 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.401300854 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.389464136 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.408272325 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398404654 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494347109 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000219144 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423496436 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070248372 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.749009513 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654893204 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396903885 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.37909056 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.400660552 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39606094 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122159862 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374333263 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413098773 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005144462 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.412977592 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.40961052 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401561362 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.614709227 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610511544 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399252661 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638968251 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418232306 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433451753 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.297731923 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.176576534 seconds)
  done (took 1673.541754134 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.413414814 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.448614368 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.407956525 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.504135097 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439535165 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.517779696 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.50558273 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.476753451 seconds)
  done (took 53.026842722 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.402300138 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.554584568 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.430848847 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.400807577 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.407002449 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.40002989 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.896322589 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.416156712 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.426170255 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.40812381 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.397840516 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.396541455 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.104932164 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.407394176 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.402263886 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.386706321 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.40661864 seconds)
  done (took 66.566048871 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 51.554489307 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.160594159 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.867547205 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.405141091 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.54476414 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.413922713 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.909268842 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.442178987 seconds)
  done (took 99.6137277 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.416820937 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.417358156 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.417646974 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.417039176 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418544874 seconds)
  done (took 8.402918843 seconds)
done (took 2122.654743871 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.403583985 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.406915036 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.404884572 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407434997 seconds)
  done (took 6.937443653 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.380194001 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.112163427 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.380603262 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398281801 seconds)
  done (took 18.586992937 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.402631312 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.423967075 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.183772778 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.056289446 seconds)
  done (took 5.558118796 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.154842909 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.161586168 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.147571621 seconds)
  done (took 7.779414288 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.398235935 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.401373734 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.403621333 seconds)
  done (took 20.519424302 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.695076361 seconds)
  done (took 3.010657389 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.547122085 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.600068142 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.761851244 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.754726714 seconds)
  done (took 7.978551156 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.783726155 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.786910437 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.584734553 seconds)
  done (took 6.470840624 seconds)
done (took 90.980052601 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.593246653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.42136548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.608103562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.565142292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.62982342 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.611057798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.725812784 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.533638647 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.077163735 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.064060309 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.567112478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.631632929 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.686568523 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.422020542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.687985164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.420886824 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.631495786 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.646237494 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.25126078 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.400964401 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.75748464 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.204690815 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.398526727 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.227738848 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.63242741 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.558866849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.784294388 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.419230889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400179804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.806659502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.560549093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.412362224 seconds)
  done (took 197.654544664 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.400999966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.401408486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.400939933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.420189317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.408532116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.417576582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.404613123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.423932347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.420971332 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.404635499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.405567426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.401740273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.402220673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.435202822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.403128919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.402759746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.401181565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.422699114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.421742457 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.436005051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.404815683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.435123447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.403063107 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.421502033 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.403546013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.423461763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.422616564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.403364623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.402610212 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.403291433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.404579471 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.421911626 seconds)
  done (took 206.503692144 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.411676449 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403173493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404198862 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.403412714 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.426575266 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.40460522 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.404317564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.424171094 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.419106002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.413178957 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.404258922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.403640483 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.407316617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.412879582 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.40854274 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.405192751 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.42187096 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404704039 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411222678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.404528437 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.423521484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423780202 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.405020212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.419159144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.405394602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40609909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.418908269 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.421715717 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405040899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.40397779 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.406831259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406424163 seconds)
  done (took 206.464497454 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.602212508 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.412983552 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.414232409 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.345522596 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.414424098 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.41282261 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409006831 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.626705332 seconds)
  done (took 14.95947189 seconds)
done (took 626.894270885 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.870127985 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.57489882 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.624593054 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.433942773 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.275832682 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.454379901 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.434802445 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.619341556 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.378593093 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.626598092 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.774955098 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.449819562 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.929711272 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.432126779 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.710968477 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.540520037 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.337445236 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.465926693 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.769175891 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.03487454 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.711700399 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.95670853 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.642652162 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.377641511 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.946561581 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.957411716 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.232229859 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.326278619 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.451672802 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.782691195 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.204840093 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.497173377 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.503881452 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503664017 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.562198866 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.540451598 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.467574441 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.500881113 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.643431569 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.721090795 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.036751822 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.187495533 seconds)
  done (took 96.81645841 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.398851644 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.397410711 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.397046117 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.398538662 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.399434739 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.39854115 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.397402808 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.396782807 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.398375901 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.397893656 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.39859078 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.399051829 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.398299939 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.400143735 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.399148416 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.398556718 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.400253156 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.400980329 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.398480723 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.398693024 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.398993367 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.399129215 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.399754825 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.400122369 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.399156975 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.40062678 seconds)
  done (took 37.695365294 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.418985848 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.680901402 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.858654761 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.425960153 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.41709639 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.422016162 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.506605947 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.42015848 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.421476124 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.422977943 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.595875341 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.421415739 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.456299477 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.886950228 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.420909591 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.420453847 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.418958624 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.419053964 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.690208891 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427158239 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.531883442 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.421021831 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.507615915 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.429902345 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.445221473 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420673235 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.424419306 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.997287174 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.440924381 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.596843799 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.323822433 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.505740752 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.935779234 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.888482806 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.321984462 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.424175544 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.421445483 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.60232383 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.423837617 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.420976584 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.507706308 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.420563865 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.87945696 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.099658599 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.441372263 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420528528 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.018767225 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.622325573 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.696653644 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.428993143 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.911804731 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429141258 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.424382206 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.42263367 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.696343966 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.43007094 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.42085158 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.010831027 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.44773234 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.511962589 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.42733115 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.42193483 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.701756116 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.424167025 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.692222145 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.426467819 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.430590545 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.444943406 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.890257453 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.42887585 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.124637593 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.443017063 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.422736255 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.602078017 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.693744281 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.064360051 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.449858312 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.710171145 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.95396275 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.529885572 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.429411471 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.987331505 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.53104303 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.427298132 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.425979099 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.424969479 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423942402 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.470373767 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.507798076 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.070157435 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.135967519 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.046509691 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.531665366 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.435971725 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.423958772 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.012843323 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.446139541 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.423830177 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.86709101 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.124823949 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.444872025 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.432858224 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.129801751 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.446736539 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.513593475 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.430145808 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.886610745 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.426800435 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.475232713 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.4257062 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.43147031 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.450769806 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.513614129 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.430166993 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.42657835 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.095510199 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.629990169 seconds)
  done (took 188.229902048 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.418947623 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.418636317 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.41889214 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.419572637 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.418016638 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.427372752 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.418652794 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.41815347 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.425094174 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.419644941 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.419404397 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.418917936 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.421664494 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.444063239 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.432306615 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.426355091 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.033887157 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.419130937 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.419927802 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.420555389 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.253878477 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.421619178 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.419248164 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.438820008 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.420834683 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.420249972 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.447430867 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.423693879 seconds)
  done (took 154.640078081 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.428812565 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.054939757 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.449146165 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.578306697 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.454892738 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.426474658 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.573462912 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.492119182 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.449206901 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.425672348 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.425721451 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.76263742 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.428921615 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.003408733 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.64863411 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.597192734 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.000614529 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.447482502 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.426347845 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.426509113 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.582000661 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.43694693 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.764178782 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.05775903 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.449973917 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.058210192 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.41342885 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.429187954 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.428340215 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.060511818 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.4476241 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.767852391 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.516784045 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.498129765 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.0808755 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.024132928 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.024222141 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.595487151 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.428383517 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.427128949 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.429222218 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.413241092 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.0612574 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.45137258 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430226154 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.052869413 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.450806302 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.432064266 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435776993 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.42812847 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.495570915 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.515982667 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.789476374 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.067055239 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.534500587 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44278233 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.5767132 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.820730062 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.433326298 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.005420549 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.41327561 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.069842944 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.452316225 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.413399084 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.432024396 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.436348513 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.598938365 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.577065688 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.007869225 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.451050666 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.006473647 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.617867811 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.430969058 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.4309308 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.434105917 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.068343098 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.027894611 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.617905662 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.582257847 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.651978291 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.41729662 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.431090826 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.416299784 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.518708033 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.431290369 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.070976129 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.028079026 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.452451666 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.435601415 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.433417924 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.434788519 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.633688865 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.090869397 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.539102752 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.997195118 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.793549884 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.775301839 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.435023132 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.499374024 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.452128259 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.774214864 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.435816721 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.496199871 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.876233879 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.777826442 seconds)
  done (took 171.965051201 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.706771863 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.70486916 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.532078597 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.593580393 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.078363879 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.017211086 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.791869042 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.578725801 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.554336509 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.710804969 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.675789432 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.523839695 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.662503598 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.518190876 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.206993428 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.528899809 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.550341313 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.590371905 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.597966038 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.505453743 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.17013434 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.734213197 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.637997817 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.437559942 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.533653169 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.258264016 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.028958098 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.980575112 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.626543159 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.821729626 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.97182021 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.611648811 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.462938443 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.176451722 seconds)
  done (took 69.424182285 seconds)
done (took 720.088670444 seconds)
SAVING RESULT...
DONE!
