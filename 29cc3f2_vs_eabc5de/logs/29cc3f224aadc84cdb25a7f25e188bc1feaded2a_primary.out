cset: moving following pidspec: 32188
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.251457264 seconds)
loading group "string"... done (took 0.466908948 seconds)
loading group "linalg"... done (took 7.629646777 seconds)
loading group "parallel"... done (took 0.173661328 seconds)
loading group "find"... done (took 1.187833456 seconds)
loading group "tuple"... done (took 2.122661312 seconds)
loading group "dates"... done (took 1.337185918 seconds)
loading group "micro"... done (took 0.248892892 seconds)
loading group "io"... done (took 0.75508877 seconds)
loading group "scalar"... done (took 42.130810046 seconds)
loading group "sparse"... done (took 13.093253482 seconds)
loading group "broadcast"... done (took 1.154570175 seconds)
loading group "union"... done (took 14.318833661 seconds)
loading group "simd"... done (took 5.181152658 seconds)
loading group "random"... done (took 10.397501166 seconds)
loading group "problem"... done (took 2.067194227 seconds)
loading group "array"... done (took 23.144447878 seconds)
loading group "misc"... done (took 1.439049146 seconds)
loading group "sort"... done (took 3.592938848 seconds)
loading group "collection"... done (took 19.488865475 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.544278252 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142387325 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133651048 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150750112 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207412858 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145345353 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158501329 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116151887 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.966157425 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18952473 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157156843 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523376956 seconds)
done (took 5.156104937 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.269468893 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095387554 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103586001 seconds)
  done (took 0.874456431 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078053132 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145230834 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095339852 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07915062 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097443414 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078162777 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097001085 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078584015 seconds)
  done (took 1.347992939 seconds)
done (took 3.254777905 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746846659 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.292582774 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20279025 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.472644955 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.200383285 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219865027 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.758736381 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.384568367 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252654776 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100436908 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.145919772 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395197809 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13882496 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.752934308 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092644806 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126449709 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.194746287 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.504075976 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082539042 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112150987 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11803298 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146919097 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130883805 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092636909 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18785031 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083577799 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199988464 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111093187 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080154927 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292655365 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202834032 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.759788957 seconds)
  done (took 11.292539532 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113333128 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135502565 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099816266 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140213803 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135375216 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101993951 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08790224 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098167037 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124361657 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179181537 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131064185 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122417079 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096909687 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082967313 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117053055 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247956409 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122186975 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105959199 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102508477 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104809494 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124553427 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113727397 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110477112 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09493112 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168446804 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223093178 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11329482 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128560907 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098244485 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113586473 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144843582 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145007288 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094846805 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081837029 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175069669 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127968734 seconds)
  done (took 5.198541069 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192765327 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123656934 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172490601 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.168045512 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143716833 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163918133 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115946235 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262592204 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.140647251 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165998304 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144326918 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11993052 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0828107 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101654336 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0978927 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.726835416 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.167860479 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120984159 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119028277 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106578831 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087449979 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.741280152 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106362471 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098745827 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084362831 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083532583 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164248063 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085332806 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.169400262 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123017143 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102125175 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139164451 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.2012409 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127455298 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121338166 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100068966 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080317896 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.195796818 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091340622 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099336098 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106991343 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139270003 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138545957 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099916644 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08365618 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225172688 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080679073 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115087807 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158763371 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.963197213 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182904573 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092653185 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098989826 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331752019 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101829658 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101293711 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079000342 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281659347 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186722461 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100820971 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082776851 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099574565 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083471624 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.756687982 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081427839 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094769829 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087780108 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110035149 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.102788425 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083748612 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09770753 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105047643 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0912912 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117911281 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079882708 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096680391 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081666291 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.102165728 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08191543 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098931302 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084205083 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11308972 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105896549 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0831766 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167419804 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081657073 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116927685 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130195015 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086534733 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097819795 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13243383 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083344954 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100435309 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137611266 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083332815 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113376282 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102323679 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145463712 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083823783 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.184844682 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082361526 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.131968473 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101796625 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117455096 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117192737 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102387246 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08732975 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098885351 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079750268 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168231839 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08247044 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099868732 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084363566 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114240157 seconds)
  done (took 24.171409877 seconds)
done (took 41.338647966 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.33538718 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105388072 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105913743 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106240769 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104312269 seconds)
  done (took 1.499072298 seconds)
done (took 2.225337776 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295996857 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.220719904 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079905006 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.174064543 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096932192 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179158855 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165374034 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114849224 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.227008763 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078621015 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187357726 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078792491 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096092298 seconds)
  done (took 2.740691782 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097453282 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117951843 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08423635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114845246 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078270988 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114458596 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09530267 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121248931 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112314207 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086403874 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096304681 seconds)
  done (took 1.838206005 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096494679 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116693536 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084135441 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113913079 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077762106 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112962786 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094982174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11931269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113197605 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087452973 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096287455 seconds)
  done (took 1.838932827 seconds)
done (took 7.132718272 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093716945 seconds)
  done (took 0.811275838 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.942851573 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.999992349 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114882283 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.155092739 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.333670155 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.179551244 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.490656775 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130128637 seconds)
  done (took 11.277113994 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.119233028 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105818429 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.118493042 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088676184 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104910156 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088382263 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105669119 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104983073 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087216713 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10286627 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085152572 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101204176 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101899373 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086129313 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104724025 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085326599 seconds)
  done (took 2.379698144 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122624837 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120883484 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108954435 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111701052 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089447352 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108929102 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109549564 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091144703 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104516505 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106659687 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092465406 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108401562 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107080249 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082111472 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108550578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110535145 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087798465 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108614512 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109908529 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092999054 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109267896 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098341963 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08943267 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109082826 seconds)
  done (took 3.328796742 seconds)
done (took 18.521030343 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163964365 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111983605 seconds)
  done (took 0.999347601 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098296744 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116031287 seconds)
  done (took 0.948254338 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099779493 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097758012 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125938438 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112728029 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08309855 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099360741 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122234477 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082863289 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09962497 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083105622 seconds)
  done (took 1.738786623 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085873757 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11297233 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10470921 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098214611 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107601354 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097489155 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090538703 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102121153 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113205108 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078581109 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105537935 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117022052 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088663937 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119544214 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108528457 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086315917 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104985302 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101857861 seconds)
  done (took 2.560050816 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080519837 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100574486 seconds)
  done (took 0.912412466 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081941324 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097663342 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083218953 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099613469 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097246273 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078738015 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097280501 seconds)
  done (took 1.366987872 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.52223765 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140545241 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262937992 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087076531 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123080991 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.312110377 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101459183 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08754622 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.1066635 seconds)
  done (took 2.536548686 seconds)
done (took 11.795482209 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09675623 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.12140167 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115888995 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.481333505 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11069425 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.101951638 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.164342992 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257885152 seconds)
done (took 2.183102478 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.157716736 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337833612 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11844801 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06980224 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09903986 seconds)
  done (took 1.359617021 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08205314 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103675517 seconds)
  done (took 0.929924324 seconds)
done (took 3.196629453 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083644758 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100080811 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080374187 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100609143 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.07988321 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098296803 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08216099 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100178033 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.082598226 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.101250061 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082701822 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097936438 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080939997 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.133962988 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101980546 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081839537 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.100122881 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08001296 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099636606 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08021071 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09773295 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082325632 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097343992 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080040251 seconds)
  done (took 2.98899547 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103730211 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101166796 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105853755 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08794986 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104865326 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088317558 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105453935 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100295418 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088503374 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102992457 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103995915 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086845676 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102144513 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087226027 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102740723 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103882515 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088359725 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102382433 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085000424 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104448033 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106296375 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08358921 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104826644 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088361126 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10401606 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104081829 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085240631 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100935565 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106422034 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086954224 seconds)
  done (took 3.676269311 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087201518 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097847293 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080454228 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105800958 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079749988 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100955338 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080451527 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099313196 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082246132 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098083025 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0819199 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098605199 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.081121927 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099621476 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082338517 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102665242 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111539618 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081075402 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098656131 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08077283 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101684403 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080033408 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099235004 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08030406 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097699694 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079719371 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098963685 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080597441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098431367 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080163484 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101692173 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084192185 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098351114 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087737003 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101600402 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080252412 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102792017 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080495244 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099968032 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097846197 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080599 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098067162 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080535289 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105251087 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080722344 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101514451 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08126691 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099910175 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08204765 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102492575 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080297839 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097939695 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082648223 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09972345 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102356122 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080435998 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099458943 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079991447 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100051855 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080427173 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097920909 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080443843 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101670093 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081651273 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114925126 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087900889 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097778964 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081808825 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099790798 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083119849 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09975304 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112746642 seconds)
  done (took 7.367465534 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085971994 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110471282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082861521 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100780137 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07878125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.10084339 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10200297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081129007 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101249328 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088597744 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099335245 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082902123 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100567481 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111894703 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081696759 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10085949 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088910525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096703404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081482662 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102760568 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081802312 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102736086 seconds)
  done (took 2.813027903 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21519559 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108035494 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147471122 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112123946 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086367841 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110455572 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106278439 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089488137 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106245781 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087176794 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103406734 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106493066 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085875901 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103642845 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104309119 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087434612 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106266586 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087854204 seconds)
  done (took 2.711053175 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09695012 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102339589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105951769 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101888732 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102968132 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086134642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108765886 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111992093 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086135089 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102395704 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093749118 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103492318 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103889768 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083833145 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10495769 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084465311 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104824349 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083976281 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11137213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108670073 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108535621 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093724021 seconds)
  done (took 2.949417864 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101732384 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104277069 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122356477 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08664876 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099131992 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082960459 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108883724 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084115347 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110756561 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103890146 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085338357 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100565194 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091192449 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101479626 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10787257 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084076595 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104140569 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084036384 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103363046 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079602029 seconds)
  done (took 2.708536899 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105657924 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10372994 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103760464 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094100129 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103444175 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085337172 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112948072 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103750639 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084922354 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128407459 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103372921 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085013813 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113660057 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110321989 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102926542 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095587454 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112773816 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112933625 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085484598 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103532013 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13025699 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086610846 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113702114 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104347065 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.202205587 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103957991 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104089165 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091783719 seconds)
  done (took 3.752296039 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084214253 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102234025 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08104159 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099795993 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080901913 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099658317 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081326409 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099861902 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083901573 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099517788 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084267196 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10203909 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083859311 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.104752859 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083740019 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10231137 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084139368 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09922078 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081249084 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100039233 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08497907 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102210114 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084001007 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100529939 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082676805 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102117739 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081274502 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099519646 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08443286 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100271312 seconds)
  done (took 3.526381609 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094015768 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111134724 seconds)
  done (took 0.972716299 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08231053 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119517008 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081095218 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107380727 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107870952 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085302052 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111569251 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089883411 seconds)
  done (took 1.551031585 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099087158 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114520557 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086385302 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116532951 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113875747 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099262331 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171598894 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104605049 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091305409 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102172536 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116910706 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084240862 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110469709 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084713669 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108494938 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091363991 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101159125 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091116395 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10660778 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102078571 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086394338 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11518018 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087055203 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09991494 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086165186 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114814894 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112914963 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085674358 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106812415 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113172382 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090629399 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096481924 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084477717 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104388553 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083215833 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113904797 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116653327 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088264421 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112253006 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086444336 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115407213 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09874228 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091085408 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109184931 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095592295 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104070466 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105329432 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.0798038 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101156828 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08742458 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099347624 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085792529 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098772949 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092734891 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107999041 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117531388 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084199673 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105721212 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088584501 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107834641 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091722952 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106454171 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087663521 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103063597 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110467058 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089151936 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111140561 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081111606 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097692259 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083128394 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111913861 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127940249 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093776221 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105276908 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105121849 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082636969 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107126959 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086654439 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111372927 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093323015 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104787509 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110875003 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094159781 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104849851 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088392683 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112566205 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.102447457 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087503149 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101767758 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099873661 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103236045 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102090431 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082603448 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11285447 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089208574 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103492342 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084281131 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111794449 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079385358 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105041627 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10581025 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08587893 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113846294 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095277084 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111187222 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112099439 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092675528 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104041329 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088963476 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100498099 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087352266 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106692974 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111083426 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079815549 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106665696 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087066039 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105049655 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092805024 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102991302 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085575549 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112480363 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111402337 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084675477 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100880568 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088467675 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10473479 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108155838 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092124932 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103242983 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080599053 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099603247 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089815275 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104580599 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09048623 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110617009 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107459384 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079619104 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102453451 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09078504 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111765191 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104362475 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086075135 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109466072 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086310635 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103838988 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090834214 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106113747 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084260005 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109014719 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106422212 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081333218 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108543248 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089363149 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102791486 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089625499 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109501085 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107602019 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086386221 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103155936 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091261081 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10618649 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084729998 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104894913 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103546782 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09477608 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106624991 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081157882 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101779831 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094065173 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102384149 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084994047 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104004379 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107343072 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087055349 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103060393 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085030377 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106590551 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117068749 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091292167 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106842087 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091937839 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11511255 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085629401 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107480522 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10470042 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087305943 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106472821 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093358296 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110393614 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110966834 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088411795 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.101872811 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091591091 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112937089 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085771759 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103065502 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084343102 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10889845 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111150306 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089526874 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105993133 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084362988 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105398093 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109460903 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088068798 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105284444 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08516123 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109969662 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08524279 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11258828 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105947318 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096196285 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108474086 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08130187 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109565555 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103006904 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093164755 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099922131 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084241746 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103188516 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087944191 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104080997 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088993767 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09962509 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093295333 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113842667 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105366957 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085618183 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105303721 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095147241 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106701668 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089922675 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109480995 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110502434 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099892191 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104740842 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089633241 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114831363 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105705233 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079808952 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111322471 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085260904 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104917583 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084576616 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.104141305 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089526631 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114805833 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110908108 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080261732 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108499082 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084740267 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.104464003 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081600862 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112382238 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109572427 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088015504 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115124754 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087360132 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106324851 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090110452 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105565665 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107039455 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087660702 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108625216 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088231554 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107774495 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085425318 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107607458 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104740656 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084264392 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110066521 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086616255 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105200313 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092632874 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105479075 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086708652 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109076351 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106552577 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086483416 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106363973 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085843768 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109223667 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087398352 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105706064 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088802806 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100626088 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113998486 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086147668 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113938948 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086275941 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103091534 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.093773015 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109335017 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111364042 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087506931 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107808256 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088253392 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106572252 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089875469 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114904031 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.103298689 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095909938 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112201279 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087457932 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10917605 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086589718 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107612406 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105362797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087958625 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107598827 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087313442 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106156757 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092830032 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10923904 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087520145 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108483081 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107428361 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087854711 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108091046 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081614606 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10535762 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086043213 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106969018 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09497367 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107529903 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109768373 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08571399 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107723263 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085711429 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103119603 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094707759 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116051984 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107403444 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095317718 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106282831 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088236261 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116316011 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100690654 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085014243 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104216267 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084846364 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114691343 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087247578 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115375482 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086469 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106015982 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103100879 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088638888 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105123892 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081344766 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103842592 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091038974 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109502981 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085464582 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106424002 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089575725 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108650249 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113416273 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086734616 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107883219 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087323831 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103382031 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085242467 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10615444 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089362121 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108561825 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104374768 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084283619 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106380929 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088764299 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.117107955 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086969417 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108508364 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094017032 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107268442 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109774274 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092454319 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.101152942 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090237186 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106916145 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087587669 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106124488 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110722686 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090675013 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107727737 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095693635 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10636043 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087714736 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107721466 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085058146 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106800803 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107064401 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087047477 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105731026 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089551795 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114906805 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085091031 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108458847 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105675411 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088165597 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112120618 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088083134 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108827565 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094941784 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110886559 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107906637 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093795271 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.111318784 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090972088 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108767922 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088687946 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113947529 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105904838 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095871713 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107548901 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088217075 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108644654 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085611948 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107168256 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086595484 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106897956 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112783996 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088275997 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105849799 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086575565 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104947633 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089218207 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11160674 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115642398 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089414138 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110335806 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.08244826 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103868055 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088716268 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105163067 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089250632 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110217838 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113870371 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09007837 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.108029283 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086581047 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11512226 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093569036 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.11251189 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105122207 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092763809 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10857101 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090249437 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109069377 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087524075 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108957549 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112982767 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090624181 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107471614 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097176056 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111582945 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090104542 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10925665 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087277933 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107867546 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103225982 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088186324 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10894905 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094477649 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.11040129 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087715499 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116751249 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10730114 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087134096 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11154499 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088195746 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115298562 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082480468 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108524178 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109272578 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08869756 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102677906 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086691148 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105063274 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091011253 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.107188067 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082758191 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117207494 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115275673 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089709047 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106612147 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086140288 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103011497 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083061382 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108118563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089123617 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109621755 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117207898 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086851409 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10675756 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082940683 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107963515 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091728832 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111606034 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084079962 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103539878 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086282287 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111138831 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.1143274 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086085067 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107010082 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091049185 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110619233 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085261602 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113607938 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104549504 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092642473 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118634573 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089027509 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108243218 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093207305 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117205992 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.109306507 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083877269 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108648918 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090329385 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108188762 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088830123 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109391205 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121808414 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09149725 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107115066 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087403017 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111117844 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086557703 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115429603 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109321299 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089051283 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112546171 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090489116 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118686613 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110762697 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094248178 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110658349 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089970352 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107495487 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088735111 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106549658 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086265936 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10884154 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109312973 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092515078 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.117005701 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086653623 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119287193 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117027178 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.093356448 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.104473248 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087384889 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107592564 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083489031 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110601865 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086860007 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106772516 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106381401 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087554094 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108522009 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094469531 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110851134 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089281258 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108357052 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081641788 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109976307 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.113121271 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08883431 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10479452 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088911533 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109442953 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094664163 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113039032 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088158178 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110392321 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109529629 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088445045 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103598311 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095222063 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107317942 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091614981 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107896958 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088645277 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109714609 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112275594 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094813764 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109943589 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090157845 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121177577 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110917889 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086282993 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105540406 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093645338 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.106546101 seconds)
  done (took 60.297479441 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149117848 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085578778 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104348568 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084260631 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118877154 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104962421 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083348265 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104973306 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085355606 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107522146 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083380563 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103230905 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113797144 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131157615 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097676464 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109679899 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102621066 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085038045 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103976861 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084889517 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114409638 seconds)
  done (took 2.97151049 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106409327 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123022655 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120653014 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125273956 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095802132 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120573114 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120399928 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12122941 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103774765 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117716637 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125176912 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121038945 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.096275933 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115712968 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116280808 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099077866 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.125722149 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11457393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121786437 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099777376 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119337717 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120189107 seconds)
  done (took 3.344742594 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08881456 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108129584 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090097487 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103594419 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08795817 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.103867392 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092904067 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.106020229 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.092283029 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.107241487 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085926266 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.108729387 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109787753 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.084152278 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107725206 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085702933 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.159416477 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113563827 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08788333 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110817929 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.10410413 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.09031999 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.104420918 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083904924 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107652824 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092338166 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109227954 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085952057 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108799783 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.087426007 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.109319709 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084899785 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.110341144 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10939066 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08703215 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10763648 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08795372 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108038437 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083238771 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.106924392 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08978514 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.104226616 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089062228 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111109912 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085923989 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.107438894 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089357616 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109446135 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.10398451 seconds)
  done (took 5.705971326 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106807105 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168931365 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090152702 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149554369 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126918791 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120174015 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092596441 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148918765 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107639521 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086724185 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128773852 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12601401 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109644971 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.095339459 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.116513734 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109392608 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089900824 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10895067 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113569205 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088336553 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114113762 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095028911 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126554445 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124249999 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113727211 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087180895 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109188303 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113564359 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10116418 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115234158 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114947124 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09518886 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126994837 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115430427 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108442015 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091434927 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128589472 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110258607 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092005254 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106913661 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090969694 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115161161 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116145012 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127781325 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090079357 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11490889 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088560549 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10674898 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123844874 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090778229 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118799423 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126162565 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113960872 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089158836 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115201547 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125619719 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089297286 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107987943 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092693617 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123988003 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10719345 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09237756 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124776288 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113166684 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118609356 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103816334 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115395502 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113857122 seconds)
  done (took 8.502114569 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094333424 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116409992 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127375575 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127579814 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09581109 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117701037 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11600381 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09568459 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117983139 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123293126 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116532159 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140320097 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090898299 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121097468 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116506799 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096715055 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117739678 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117638979 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096113964 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117075528 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116882177 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12654392 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096074534 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126664513 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148718148 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111841708 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095160495 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117426783 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127147097 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117900258 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13087022 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.097493742 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117852002 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126828383 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129965164 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096465064 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109484586 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11689861 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096967817 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117171956 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111230141 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10552949 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117505287 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111164127 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096081114 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118295153 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127101086 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130136584 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120619505 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102288137 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.118180884 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127848327 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115797612 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0957035 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126663286 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153637574 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127959178 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127364832 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117018454 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104790215 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127562798 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135295962 seconds)
  done (took 8.030156077 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108935118 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120029784 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124427556 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106205953 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086824118 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114923647 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087179735 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107879777 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119943245 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099247679 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123501112 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115019664 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096621825 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123447892 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115452736 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118516153 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093131987 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114990003 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120792656 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11464499 seconds)
  done (took 3.043044099 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094964732 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.131162089 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089656871 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118178389 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114188423 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0965256 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113067338 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113652956 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091574245 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113970283 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101662741 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123535462 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111932001 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096975667 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122445221 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118713967 seconds)
  done (took 2.584609258 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097472137 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123186 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125994712 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089129732 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110129888 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084742084 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112299955 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.107037095 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085182493 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.127327625 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08942868 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115391372 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.112862899 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087288205 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107279419 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092879701 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106870117 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086667475 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110947501 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126125894 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100175538 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110437958 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111394991 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091726651 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111201287 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094162767 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111955889 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10867208 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088247723 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111684924 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089238786 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119287324 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108247758 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089209031 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108941907 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087522531 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110974229 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089338701 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114880813 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111171838 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0885227 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110969226 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089723437 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112216518 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085246765 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111803095 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10662754 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095811741 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109305969 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090320983 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.11141897 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112963013 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090671647 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122496257 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093219648 seconds)
  done (took 6.533153752 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100924397 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115322678 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084851593 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109534542 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093224883 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114775506 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114928678 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09265734 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112863915 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087856317 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113372665 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093569693 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114008728 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115334111 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092779178 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114556523 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085963534 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113475166 seconds)
  done (took 2.711089445 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091763965 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112033902 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097499618 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112489451 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08965868 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114743193 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084887176 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.110792398 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10965989 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089811831 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111475836 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091666291 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109808927 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092491629 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111796656 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08905873 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114251383 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109585756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090009551 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107198617 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092857494 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109998942 seconds)
  done (took 3.084234566 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120387254 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.131465235 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096913122 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.242291523 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.109316345 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.139198888 seconds)
  done (took 1.681257748 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111260825 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125568646 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111901705 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112828329 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121280201 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112892622 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092343095 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113896025 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124529514 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10700138 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113833862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124427397 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12432777 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101897381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122536424 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120948426 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113855031 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093104793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11207776 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133959383 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092482364 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124693111 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114049919 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092498612 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114478692 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124179273 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124594656 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128278553 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092882737 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124735926 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120044278 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092807304 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124523392 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128935728 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116196552 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104306369 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114994633 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134671099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121330408 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101913673 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116257764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120858479 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102852764 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121519543 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124200011 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114721218 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098798734 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115155272 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114411267 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1420639 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098517794 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125279695 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121295786 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125281054 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12467007 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141508718 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106025632 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124432441 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121526823 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130253377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124453914 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099653294 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124959892 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128966819 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12217793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124197309 seconds)
  done (took 8.543629329 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10271664 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129450816 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11444846 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129704016 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101705436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115586052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114825853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09365854 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114038035 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113712177 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159570411 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093583603 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125001553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124223464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114892269 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093321672 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11428081 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124913084 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091870661 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142722953 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116514346 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123940124 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125264154 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102348833 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129881605 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122004573 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114671742 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093437003 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115335265 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114738617 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098943366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115369772 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124975166 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091545414 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124680586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11521968 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09344792 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12186069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115079712 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121528469 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102894303 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135285368 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114949064 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114348915 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107518736 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114685558 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11571437 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091828973 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115715793 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114005018 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107829296 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130884442 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130856447 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123916305 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114996388 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093050873 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115180044 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114570366 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093063878 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12187263 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124907724 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115157053 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142277542 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094015379 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114929842 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125279524 seconds)
  done (took 8.430369247 seconds)
done (took 161.223836899 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098777551 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143452912 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10123828 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175606495 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107038292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129881456 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138741236 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098599925 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.110096228 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091246148 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.11352897 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092438854 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.186263997 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085019482 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107638756 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110012554 seconds)
  done (took 2.730576207 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202968238 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.26898491 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108590359 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112618393 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094012951 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.117569317 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.111223504 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096590034 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.116976775 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.090931639 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115471213 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091167818 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.112610901 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091455873 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.117185938 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093081059 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.112945102 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093272077 seconds)
  done (took 2.998419193 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113198789 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158251905 seconds)
  done (took 1.129350255 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120016795 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.185081604 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.331289105 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164691476 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11286124 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13478073 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165190472 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138763704 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.207975136 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130019865 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129714779 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.102996156 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148843991 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.122471613 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099593619 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.126395138 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.149968303 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.098299847 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.122367823 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.122792551 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122993865 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113837614 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122486873 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098744642 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.190060839 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12735935 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089992426 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113702205 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123961981 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099516978 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120307622 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13297452 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.104057121 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184451426 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107945222 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187020025 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105457556 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119994558 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.122039103 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096935588 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126594921 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12567625 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109856781 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12575629 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089500259 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126970485 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112200453 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.091427091 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121471303 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.103714749 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122894181 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120123127 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.163409062 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126069168 seconds)
  done (took 7.916143116 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.813173132 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159827417 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096254642 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.912966131 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140084087 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105794398 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.808365213 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13713829 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242602216 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.786885368 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138984668 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129099459 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240867508 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247088309 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961597101 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316413021 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.691394519 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10802802 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.160339416 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161816891 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127329698 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145776108 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.139094185 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.463236376 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.097993532 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120149908 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124787661 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107061131 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167175805 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.134016167 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121194808 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188761932 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.258574206 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211456244 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123269984 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094602682 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11892236 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.179137319 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279784147 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226824747 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188353418 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093539331 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118474426 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129787876 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116581127 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115731261 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172901773 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.182614087 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.20481919 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097901813 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128489145 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.126703254 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127570971 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174074607 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.1282779 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309953273 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322644834 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119822252 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128097861 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111803604 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274672394 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.1307818 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235526172 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123585643 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223518158 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.117968499 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774623811 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.195907731 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096245802 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125899083 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127621964 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100437154 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128758595 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180073699 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.401148199 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131015969 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098720822 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119335666 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212817112 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.134169035 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118273627 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171942721 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122957297 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105762128 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133055316 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130327477 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18005717 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.24187733 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13208046 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126852355 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099042472 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133701657 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.124143697 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.221695375 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230836898 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171056311 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.217151919 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130983299 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.171880413 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.19989481 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104940191 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.204757255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104642249 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133625593 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130481602 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227935219 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153885809 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107651491 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125012308 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126629405 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157203924 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.13525141 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.104098637 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.177936444 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.513656014 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.177290523 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.116228359 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.135953023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099076011 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164113591 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125956852 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275030024 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130494074 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.178644919 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127625409 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.093869523 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128555355 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.173445748 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130008332 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105369586 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131221994 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126824197 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.243845966 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228529687 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13092258 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230225386 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192124053 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126850256 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181045647 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130013345 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175731451 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128631055 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128838414 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101118334 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791769206 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131364982 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105275871 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124581661 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20390695 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112597393 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103782732 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.128704583 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115712824 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773430039 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.134621572 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.129132113 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108678032 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12648669 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129195131 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102092123 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123519463 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17134008 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242386448 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128430484 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128486884 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1096033 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.192863633 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101139574 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.133982469 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.132658999 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.132851261 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106580042 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122934006 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.131533951 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177249156 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.171817501 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232753013 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.599333214 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096444552 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.132393352 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239697595 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096523257 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301937446 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125196554 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237234439 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174268959 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.128088703 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320002079 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.174830977 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20632163 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.135386424 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.184245047 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093577963 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126403107 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172628346 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120384052 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124776113 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171298572 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134037955 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108152553 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.971919822 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113229191 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23491061 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092288616 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.203183017 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10010993 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128830479 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310080357 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11642817 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11342701 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.196903028 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098989141 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.133637385 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.726721437 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.129553971 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127879961 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125705788 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210065972 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.197354012 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103701308 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128056297 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128135817 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172178843 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.215718101 seconds)
  done (took 45.918993467 seconds)
done (took 61.543411706 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284764395 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219748009 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259986182 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170843514 seconds)
  done (took 1.889350883 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175322593 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157992804 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126896486 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114891894 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158640165 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097194546 seconds)
  done (took 1.708526541 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.370787035 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.286365274 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.253104777 seconds)
  done (took 1.79543573 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.294316834 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.255981735 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.37042485 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.419190792 seconds)
  done (took 2.341381142 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.218673189 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141118637 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118200289 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110645809 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.208777128 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.261190798 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150213347 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.213370082 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130281846 seconds)
  done (took 2.480094594 seconds)
done (took 11.098324223 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.253157704 seconds)
    (2/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.244123912 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.15818782 seconds)
    (4/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.162626561 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.213025272 seconds)
    (6/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.255543214 seconds)
    (7/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099428527 seconds)
    (8/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.19664432 seconds)
    (9/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.147812614 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.155928505 seconds)
    (11/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.119328733 seconds)
    (12/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.252037363 seconds)
    (13/286) benchmarking ("sort", Float64, false)...
    done (took 0.154142203 seconds)
    (14/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.267237481 seconds)
    (15/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.122696305 seconds)
    (16/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.229240857 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.157572672 seconds)
    (18/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.106589978 seconds)
    (19/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.129897589 seconds)
    (20/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.161108496 seconds)
    (21/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098216233 seconds)
    (22/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123968738 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.155037955 seconds)
    (24/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.13011156 seconds)
    (25/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.181956017 seconds)
    (26/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.100705476 seconds)
    (27/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.135375794 seconds)
    (28/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.125566421 seconds)
    (29/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.105018437 seconds)
    (30/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.127717066 seconds)
    (31/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.198999108 seconds)
    (32/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116995993 seconds)
    (33/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.216939171 seconds)
    (34/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.166142169 seconds)
    (35/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.103255298 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.232512395 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124506934 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.124784011 seconds)
    (39/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.233186236 seconds)
    (40/286) benchmarking ("sort", BigInt, false)...
    done (took 0.230897276 seconds)
    (41/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.183342542 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11717045 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.129237464 seconds)
    (44/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.134099803 seconds)
    (45/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21012508 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091864456 seconds)
    (47/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.128833436 seconds)
    (48/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124703141 seconds)
    (49/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097297854 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.123226296 seconds)
    (51/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.127850453 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.140670121 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122858675 seconds)
    (54/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.188577351 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116176575 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094262535 seconds)
    (57/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.129178485 seconds)
    (58/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.174856999 seconds)
    (59/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118948439 seconds)
    (60/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.197651857 seconds)
    (61/286) benchmarking ("sort", Float64, true)...
    done (took 0.240421322 seconds)
    (62/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099478997 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.143677168 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.210361159 seconds)
    (65/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.188357791 seconds)
    (66/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093585596 seconds)
    (67/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.199613571 seconds)
    (68/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.118739859 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.147874898 seconds)
    (70/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.127695223 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091526889 seconds)
    (72/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.112152852 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.093344119 seconds)
    (74/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.187739149 seconds)
    (75/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.166358682 seconds)
    (76/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.105194601 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11632079 seconds)
    (78/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.157150544 seconds)
    (79/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117699136 seconds)
    (80/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099724577 seconds)
    (81/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.124666024 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.196784357 seconds)
    (83/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100649194 seconds)
    (84/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.210637657 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.210020914 seconds)
    (86/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.212143467 seconds)
    (87/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.155183929 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.147809079 seconds)
    (89/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.183327114 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.145386501 seconds)
    (91/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.073859153 seconds)
    (92/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096427749 seconds)
    (93/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12881183 seconds)
    (94/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.130875363 seconds)
    (95/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17049284 seconds)
    (96/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.181562186 seconds)
    (97/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071792721 seconds)
    (98/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.128065431 seconds)
    (99/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.082731793 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.206144927 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125116765 seconds)
    (102/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.101838293 seconds)
    (103/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.125864997 seconds)
    (104/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096966454 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.147968627 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.19537713 seconds)
    (107/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.072360804 seconds)
    (108/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.195459614 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.128096615 seconds)
    (110/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.071920087 seconds)
    (111/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137564978 seconds)
    (112/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092326284 seconds)
    (113/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123442391 seconds)
    (114/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.118804011 seconds)
    (115/286) benchmarking ("sort", Int8, true)...
    done (took 0.229603145 seconds)
    (116/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.164786128 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.192554405 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.126299212 seconds)
    (119/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.166523409 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.141430193 seconds)
    (121/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.131211429 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103909103 seconds)
    (123/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.097912886 seconds)
    (124/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.071570193 seconds)
    (125/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096226879 seconds)
    (126/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.12387193 seconds)
    (127/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.181137827 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099467754 seconds)
    (129/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.071258528 seconds)
    (130/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.162566603 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.099542427 seconds)
    (132/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096877222 seconds)
    (133/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099213986 seconds)
    (134/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.096507465 seconds)
    (135/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.07261062 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.116763241 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.101027192 seconds)
    (138/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.160503098 seconds)
    (139/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099894931 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.117023361 seconds)
    (141/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082458051 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.12528956 seconds)
    (143/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.093887355 seconds)
    (144/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.118990759 seconds)
    (145/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09374462 seconds)
    (146/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.197001208 seconds)
    (147/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.128174092 seconds)
    (148/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.16968863 seconds)
    (149/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.18097381 seconds)
    (150/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.082779012 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127060254 seconds)
    (152/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.126411694 seconds)
    (153/286) benchmarking ("sort", Float32, false)...
    done (took 0.183620158 seconds)
    (154/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.097800308 seconds)
    (155/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071908543 seconds)
    (156/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.1326625 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.121759917 seconds)
    (158/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072067444 seconds)
    (159/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090829465 seconds)
    (160/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110746794 seconds)
    (161/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.126135439 seconds)
    (162/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.163118 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.092647541 seconds)
    (164/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.126178565 seconds)
    (165/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072792739 seconds)
    (166/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.074006377 seconds)
    (167/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.130587786 seconds)
    (168/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.144996905 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093253409 seconds)
    (170/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.125477511 seconds)
    (171/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.160556971 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119267077 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.124252335 seconds)
    (174/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10009122 seconds)
    (175/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.118347329 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.149411544 seconds)
    (177/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.101675555 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083103772 seconds)
    (179/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.081954766 seconds)
    (180/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.098896407 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09201782 seconds)
    (182/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.123235562 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.10238744 seconds)
    (184/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.098050298 seconds)
    (185/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158806488 seconds)
    (186/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.097890482 seconds)
    (187/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.072267374 seconds)
    (188/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072444932 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193398005 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.14376281 seconds)
    (191/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094297438 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.230729056 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.117360287 seconds)
    (194/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.072614321 seconds)
    (195/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120059573 seconds)
    (196/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071866632 seconds)
    (197/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.081251958 seconds)
    (198/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.133183314 seconds)
    (199/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073184471 seconds)
    (200/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118867306 seconds)
    (201/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096207708 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127542524 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100789831 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.117348705 seconds)
    (205/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073420035 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.117458454 seconds)
    (207/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095482406 seconds)
    (208/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.194473713 seconds)
    (209/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119629012 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.099269071 seconds)
    (211/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.119147959 seconds)
    (212/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09771097 seconds)
    (213/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.072850286 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.117002905 seconds)
    (215/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.147053084 seconds)
    (216/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.101464141 seconds)
    (217/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.423786833 seconds)
    (218/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.173532461 seconds)
    (219/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.073212158 seconds)
    (220/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091422321 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140748665 seconds)
    (222/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.071684933 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117728996 seconds)
    (224/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073968682 seconds)
    (225/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.097651901 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09275937 seconds)
    (227/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072240703 seconds)
    (228/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.129325023 seconds)
    (229/286) benchmarking ("sort", Int8, false)...
    done (took 0.199244834 seconds)
    (230/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.144778075 seconds)
    (231/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073238416 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.117101154 seconds)
    (233/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07374287 seconds)
    (234/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.196690782 seconds)
    (235/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092284977 seconds)
    (236/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.096484096 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088253262 seconds)
    (238/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.095967946 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096155183 seconds)
    (240/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071800483 seconds)
    (241/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.09366328 seconds)
    (242/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139907137 seconds)
    (243/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0927394 seconds)
    (244/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088762384 seconds)
    (245/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093898636 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102872588 seconds)
    (247/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137238786 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119948611 seconds)
    (249/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068418815 seconds)
    (250/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136271175 seconds)
    (251/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069224014 seconds)
    (252/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113494285 seconds)
    (253/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068920314 seconds)
    (254/286) benchmarking ("sort", Float32, true)...
    done (took 0.237659318 seconds)
    (255/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101511683 seconds)
    (256/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.09635055 seconds)
    (257/286) benchmarking ("sort", BigInt, true)...
    done (took 0.241602832 seconds)
    (258/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098391276 seconds)
    (259/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.094177313 seconds)
    (260/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067217171 seconds)
    (261/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067599518 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119955825 seconds)
    (263/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088296368 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110013101 seconds)
    (265/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.082233687 seconds)
    (266/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120442887 seconds)
    (267/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.07469053 seconds)
    (268/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119285926 seconds)
    (269/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.069209977 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.115524633 seconds)
    (271/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.07205903 seconds)
    (272/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093782039 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125669212 seconds)
    (274/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234777887 seconds)
    (275/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068485354 seconds)
    (276/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126104821 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093395066 seconds)
    (278/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138836183 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110213064 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094973749 seconds)
    (281/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091638512 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093126413 seconds)
    (283/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.072632811 seconds)
    (284/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107415635 seconds)
    (285/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096756489 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.119109338 seconds)
  done (took 38.00034744 seconds)
done (took 38.884092252 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102136588 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152614718 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102061882 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.142404718 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.130215466 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094956464 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.122525599 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105411996 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.131576241 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.132043454 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099895333 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.096112131 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097827497 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121407926 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097306032 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140876223 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125195033 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094956107 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119913487 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087522469 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122266417 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087108092 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113920148 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070549782 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12288317 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095571065 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117567122 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120563321 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086662314 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111502319 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091053898 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119125624 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087288952 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125149813 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094236103 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11981245 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098061165 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121075699 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112941586 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087235803 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11966118 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087079637 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118254089 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095591722 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117591444 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092727154 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119834758 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099999022 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140394676 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116689599 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095126445 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122266634 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096717636 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119284548 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09311793 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120868134 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092260819 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142009862 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.124151854 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09329848 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120334789 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09519746 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117194554 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095506882 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120218864 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122084561 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098976337 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117125549 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097836846 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116783862 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087465142 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119805078 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090863442 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.114152251 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097117166 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.126552624 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086484715 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116931185 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119100986 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092411455 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.1113239 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090674614 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113048128 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094035113 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11359952 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070655392 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116378291 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094190373 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113310611 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097740422 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.120386171 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095226621 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11846581 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100203234 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116731754 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.097839559 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.119124292 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.093620524 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.121870933 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096857832 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.118363427 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096807376 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.127890617 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.0945897 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.123835788 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130779611 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086972917 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118118297 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086933402 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111428991 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102996354 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122834066 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087491505 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116753975 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086807863 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119392334 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087975325 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111767242 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.0865821 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112060325 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09629565 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112367323 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091169007 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118889556 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126885095 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086967785 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115690632 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090268026 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112170534 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093540755 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11202324 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087581094 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114281124 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078076496 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115358553 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087547573 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119319056 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09019857 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121360214 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089765723 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12135326 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092199968 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118075546 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093221016 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111126247 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075079712 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117393819 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089750657 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114539564 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08812943 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114250595 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086923782 seconds)
done (took 17.208223809 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093593425 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190430071 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152426092 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142913531 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107843972 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11312021 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122818694 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118355708 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11417305 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144133218 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110409333 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132146222 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14943719 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087852973 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113431915 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09180485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114185405 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102780887 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146768841 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133922535 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165093416 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086876111 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148752707 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136438978 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121411127 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105734044 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113909463 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091760333 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11603323 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113057572 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13310643 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116288088 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088544943 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134914498 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104983082 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120717793 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088027233 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119862433 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088227052 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112829119 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14115726 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13549327 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093336514 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118787996 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.0920371 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115676123 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089669359 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121710541 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098615955 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117246216 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127684623 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156992834 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090910027 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122757283 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086975642 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123748778 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122686481 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09038174 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112910819 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090604161 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112544352 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092271911 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127998164 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142994711 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092058747 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122301815 seconds)
  done (took 8.662864045 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110952755 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145703687 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106536372 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132123461 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113170208 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088683217 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113694135 seconds)
  done (took 1.757325593 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094776853 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141111432 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111274939 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136757329 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13326664 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112877927 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125328758 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089320204 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132563772 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090298801 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135464469 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156183971 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092302754 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.126524642 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.142314381 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088731647 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138656312 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089964135 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117931577 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115916796 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117700642 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136847496 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091603219 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114525811 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104135538 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114607168 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163929551 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094588697 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115964551 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092494034 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112916482 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152878419 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103169985 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125606799 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089425991 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131051131 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129479056 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086564205 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126943893 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094322279 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129119907 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09087482 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115812713 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087377931 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11941907 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099966619 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118127983 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090334334 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117432623 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135048751 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.108274202 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128920156 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089892245 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118713095 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090773115 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120782951 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099530606 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115335547 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13459092 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091212166 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132205788 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105541835 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130370501 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132806105 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092409791 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128677182 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103735085 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119967684 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090994776 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120426441 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131650182 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087670552 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116467068 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100257119 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119595467 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113387451 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142184206 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095454315 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126809143 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.117883644 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08955135 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119508383 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.114844368 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127714231 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096048956 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126426515 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098517869 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120889166 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.09458162 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125255899 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093572061 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.123120635 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123340371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089805525 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119784249 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107003703 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.120220633 seconds)
  done (took 12.022096795 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090431844 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116140187 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091700191 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115355758 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091341988 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11881094 seconds)
  done (took 1.579755595 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114738584 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122722194 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110255934 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123498075 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163391414 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109117579 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.139074354 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132096745 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.115471695 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136991412 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.139125204 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112841064 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.146353448 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.129219601 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111330492 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129734527 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.111870613 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134620921 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.137034367 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104946318 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.147619365 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129162209 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098108044 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13923815 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.126324358 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097118187 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.132343559 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106462027 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.134091436 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130060172 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099075773 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119404895 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096285778 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125157073 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.133558916 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096653549 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127815928 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.127528239 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102873751 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.125364246 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110969222 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131256414 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136140563 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101600513 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.131759504 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130116654 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100810256 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133628136 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111834586 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124357952 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.126116903 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095923311 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120982655 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094298732 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123608347 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12572162 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094256476 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132961669 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.129106526 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096815266 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121327589 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09313537 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124525495 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12165508 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104976508 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119840317 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123930714 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097419863 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126528016 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095737823 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126500763 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.100054747 seconds)
  done (took 9.583329829 seconds)
done (took 34.547205245 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693188684 seconds)
  done (took 1.64514485 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.850180061 seconds)
  done (took 1.804756756 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.365567319 seconds)
  done (took 19.353942136 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498351783 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.613182884 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.015889835 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181128447 seconds)
  done (took 6.268857617 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.967972755 seconds)
  done (took 1.94417762 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284139662 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235704797 seconds)
  done (took 1.483606141 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784090887 seconds)
  done (took 1.760313041 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.373555147 seconds)
  done (took 2.342220032 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33125728 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188746067 seconds)
  done (took 1.488295232 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553194151 seconds)
  done (took 1.52186513 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.028019176 seconds)
  done (took 12.003644213 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26967253 seconds)
  done (took 1.254388992 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302467359 seconds)
  done (took 1.278095092 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.725473317 seconds)
  done (took 4.704793851 seconds)
done (took 59.821807539 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099766627 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128300164 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102302962 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125002681 seconds)
  done (took 1.433777481 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101585084 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121991424 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101466231 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122143624 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127330367 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096609202 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124482902 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101793119 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122269821 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097548582 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121922109 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121761424 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099618083 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124680053 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09435228 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128169031 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102439356 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12224693 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125184093 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097172074 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120170792 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097874342 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125852147 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095264285 seconds)
  done (took 3.672774971 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101666481 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120052429 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096949152 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119713564 seconds)
  done (took 1.421039392 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100897532 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132936667 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106152125 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132143027 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.139879401 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.1122386 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126758549 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099094277 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.129528487 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.106885785 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.125385917 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149239373 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114101567 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.133139852 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.109374816 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.121059027 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095924146 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138620243 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.131910727 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101554344 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122697812 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.1001603 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11609811 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109700921 seconds)
  done (took 3.83476736 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171609543 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128119077 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13977761 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09566396 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161860477 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142068624 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088645203 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141315696 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088514806 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132495757 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118975633 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133528376 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130985872 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089179718 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114756847 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08874956 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.133189344 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130471931 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090983529 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128649876 seconds)
  done (took 3.43573914 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098713519 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11861993 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088969356 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120127457 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100178742 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128868949 seconds)
  done (took 1.641136243 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090879206 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115187076 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090365715 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11567144 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094227645 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116050721 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089221861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115457468 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090556807 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116334329 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08958821 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114650951 seconds)
  done (took 2.22339956 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505239642 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12256417 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121335397 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091339848 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122889975 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08949067 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130469624 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092356218 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142398644 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089859128 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117118209 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091655986 seconds)
  done (took 2.702105452 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236168765 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131328025 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284302735 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.376918264 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161172327 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167335409 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28148357 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163664996 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.228989757 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150916508 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206198213 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20422115 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16020923 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228013397 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120991733 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157887129 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196557791 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259699355 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160801599 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238827172 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182384456 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17032806 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186408352 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153234652 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142837304 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173598569 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124376869 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105153777 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237528049 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18367764 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223851655 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172835598 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158767484 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220009871 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268260154 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22987313 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295130737 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13646757 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.142632106 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169028169 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266991658 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143624347 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204248618 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156246079 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133483025 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220793165 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166848369 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178126738 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147102933 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113120825 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224209023 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241194784 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193954179 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140041871 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306211934 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152701217 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158162089 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195143391 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253980458 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228961299 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189294276 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122368393 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188249328 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219243511 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187985115 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155472907 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183841864 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150077346 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18350396 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190155141 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192382269 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181151149 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186743574 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142080935 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171449031 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171668307 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17304767 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260804913 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21380992 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096944564 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170952592 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151566434 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135964633 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19620769 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099486953 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242166738 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145347548 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164530827 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216194817 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159279573 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162839826 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193978367 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214754409 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121721169 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.117130832 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15607273 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155578587 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176493283 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149186681 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16033271 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158230282 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102765839 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171028986 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128470422 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190281225 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119522778 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173841598 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185137773 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128174365 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16239925 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153141227 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123716296 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203603394 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202558978 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143396868 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134891802 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21029852 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180029151 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142934565 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177591405 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231598664 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118519354 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151653111 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229817986 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217643363 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141693797 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231177653 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157556029 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108852958 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133734478 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184715586 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156653194 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163049159 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135128951 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184238818 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234496342 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099743401 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140698197 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195554401 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135501862 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133951176 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158402767 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15239813 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110675606 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144632342 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146390794 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177944916 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185262645 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161036894 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167922175 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153610187 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25862889 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143607946 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153350697 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150354865 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094350548 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.222165014 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201674109 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13094751 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207059301 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17161769 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23425568 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171823755 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135887335 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17800238 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103243329 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.1218548 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198913914 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172936649 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165189422 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.227361503 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202734161 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.208334591 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186738568 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173141184 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180074406 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166647016 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15800455 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139226891 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161980142 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16010086 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096706015 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140594319 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135818472 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149083697 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116469459 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134643483 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225557021 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172224531 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192294294 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16025154 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152024365 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183383595 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130293609 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175292083 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178865109 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150986857 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.229571986 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196176841 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187307451 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145595774 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230522739 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094491167 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127143499 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142483341 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169996337 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106769025 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13763912 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164969728 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182040503 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207394054 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171608542 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213597918 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201026628 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192288888 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095371669 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171342971 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18621969 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178803116 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182988972 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142686199 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152883771 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17944766 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16037088 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25732933 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172899687 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177592741 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234757047 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12384561 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133648805 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151536155 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180843053 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1564406 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177336001 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147914923 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14284768 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162078698 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10388993 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188948881 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186481874 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164757769 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187896081 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149962577 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214713023 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101907745 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164221606 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161906588 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166474172 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109849772 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176567351 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203080433 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150360308 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168166851 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222601844 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104366294 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311404829 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23545149 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22208061 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110603929 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156578834 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162739164 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164654055 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171356265 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179473847 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159920855 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218250374 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132624395 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13737706 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14214372 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150369229 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151828741 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104221514 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149787537 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178027668 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139863352 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185339785 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156798291 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160351129 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173575289 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151142659 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.1458833 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153393498 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218001964 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215002253 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21307741 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152722246 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17929808 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23793951 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098697737 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133829847 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134868879 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181000102 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108530072 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224593404 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189505638 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233655312 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186844378 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182315468 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141397383 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121124195 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1299815 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198347821 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20786663 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152770277 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14839903 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200810094 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138771288 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132025548 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167986688 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294746684 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150860158 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198110476 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108458846 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282774637 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100334422 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132548384 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164464364 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23840675 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109513658 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181303558 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17300051 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162772364 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165484297 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151587289 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192983949 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247733321 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204085316 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211409055 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10658192 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157839773 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178135932 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223102299 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160379825 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11114329 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23474975 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198067799 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224682009 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114699144 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169760487 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169439781 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159688248 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219556057 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107082802 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238841553 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136902801 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196313024 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155186757 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140235971 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177261608 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.21699461 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115292864 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216835677 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186444269 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136760933 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105759188 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170561284 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208375617 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158527878 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099719006 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209943813 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098242847 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225742876 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233294722 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137557588 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157316355 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147602823 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13639439 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156182013 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160410112 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113827779 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167962746 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203452461 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136464508 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190677851 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234175338 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173135709 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17599908 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146789566 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693627485 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13310075 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196008016 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149556718 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236688617 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122597629 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203249903 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131418671 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198236363 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199441402 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16318611 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233616831 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195654324 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208806584 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104696973 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160191331 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156387838 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146193216 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153204088 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169985794 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161735393 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147139748 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181016049 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165064055 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.139378896 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140925602 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202007752 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148941251 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185912585 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181521162 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139760049 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175306144 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188327729 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135523335 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181188878 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240343348 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144275757 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154028453 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107134624 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150269773 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266677113 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126389681 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1911956 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185789437 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160293347 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171041101 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148507636 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225623947 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159313552 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188219414 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14372655 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160277641 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158015349 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138974191 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103678251 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157732514 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169912072 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151887536 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160983731 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166307717 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197398115 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096074258 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145792799 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318645471 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178748698 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217458958 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137494391 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137034527 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163227456 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12125131 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.206572448 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181231258 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137436023 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109333364 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139410142 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156091681 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111846078 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158651052 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198542462 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167638791 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239240686 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108567519 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281960561 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142170667 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158563841 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088497646 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134755073 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151640437 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148292786 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161272263 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194478214 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266585894 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151299248 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106162945 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151239732 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127616646 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108438023 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16547527 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166511219 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208426115 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146018562 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081740466 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158196413 seconds)
  done (took 83.585313354 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175855885 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.156640599 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.161256137 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.228084082 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200089189 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287434812 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234069731 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271393149 seconds)
  done (took 2.788318698 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095263882 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146777208 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158849959 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134777639 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092120587 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120976718 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345634057 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134039236 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117120822 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122315041 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176401256 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09493865 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.55896147 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091187439 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120792919 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107915608 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092055716 seconds)
  done (took 3.78225754 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 48.072110433 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.591831658 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.198626269 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.200669078 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.828407927 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.103753203 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.747535846 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.171046926 seconds)
  done (took 61.993173173 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11573797 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137914838 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124366115 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15784063 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.143371571 seconds)
  done (took 1.755526601 seconds)
done (took 175.247055806 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098358937 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129477053 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098588691 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131397004 seconds)
  done (took 1.525765623 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095504568 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07595145 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101500873 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075486264 seconds)
  done (took 1.425852257 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190833509 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170211167 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.411418784 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071571011 seconds)
  done (took 1.593474427 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114449199 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133475005 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104477701 seconds)
  done (took 1.444519579 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107626508 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131939959 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103331006 seconds)
  done (took 1.431585819 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106293269 seconds)
  done (took 1.193131763 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108036734 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.141540095 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.1169216 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.147157805 seconds)
  done (took 1.601775865 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099147161 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130705975 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11001362 seconds)
  done (took 1.430620686 seconds)
done (took 13.087353434 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103610825 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423900419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384965903 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146193905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727171502 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386789695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.080580612 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154144978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175854005 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097350167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149654535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680985773 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.035428012 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.387191229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.992995655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.386328852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679770904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121786163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121393359 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094410964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.057961864 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099732974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131844048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10087076 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.713529826 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.434417501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095225371 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37736257 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093500513 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127831987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389875179 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129968473 seconds)
  done (took 17.155655122 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095778851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17629887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106463436 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140622149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131513468 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097484102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126721241 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094419724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188539842 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129759052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110755023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123171226 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127350374 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096326735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143746333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093592318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12648653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093259257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123137783 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1228893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112377529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12112121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094228957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122616979 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093565498 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137681821 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124118409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094074757 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122358806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098923024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128749645 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095273937 seconds)
  done (took 4.877362901 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141784221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184247491 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131210733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126807371 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179318502 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132573833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201101597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118459379 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184159479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12497593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141840167 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093260797 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158021274 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095429927 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144231784 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122460677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096867161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123783714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092580853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12479529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142305944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093268556 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123382798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093313816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124054134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109017202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125622503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122529575 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094857064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129146321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099699233 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125219393 seconds)
  done (took 5.193108587 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097676397 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130187668 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1096893 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140067103 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102648738 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133043356 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.101060616 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.131786926 seconds)
  done (took 2.035441989 seconds)
done (took 30.349867261 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111143712 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131354734 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107992847 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136923232 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103135222 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13398002 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091942433 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136710409 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135589973 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102559873 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138671027 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09228958 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123974734 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092004314 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136630128 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096909726 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134608964 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102649097 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136352882 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.140182999 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09515677 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135161226 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103329003 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134836505 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104672977 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.141164228 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138774142 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099871468 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124594178 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095701238 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125855356 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105113852 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.133199577 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11392129 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.134996895 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103994302 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.131288233 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097921232 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.14069309 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134864211 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100598798 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134788977 seconds)
  done (took 6.097287399 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107551904 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14711127 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105372515 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.087958319 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118501979 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080486535 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139812611 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.084588004 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111132641 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10740471 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073972694 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10781446 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078604796 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102315751 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077504162 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075507942 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109345431 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076020862 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076614617 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10739477 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080563085 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07288297 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110074554 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07874074 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07483428 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111886317 seconds)
  done (took 3.59899038 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100417999 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136202649 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113608403 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187022261 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161907945 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100148996 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134453104 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141213415 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109830084 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121612989 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096719305 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151242072 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110922185 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131186034 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092484346 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139503318 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.141671359 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09424019 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130251642 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113664776 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140767334 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103276 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142480428 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134612449 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092807121 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124382456 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097782946 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136369603 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098687757 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13342344 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098142349 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126558312 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124250128 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105837209 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127682951 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094379508 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143489361 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103585322 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132339947 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093199707 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131818107 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123498973 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114264361 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171693831 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099031617 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136680779 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098824492 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134574694 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122605198 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112411862 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132707367 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093786025 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132817936 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091450014 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124194854 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114027664 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.133290577 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103391085 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.141252885 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.136054292 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106706447 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126753469 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110085756 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12417274 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105301162 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.1302896 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.100347105 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.128968637 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.150790725 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09486264 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162925046 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095793534 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126914696 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105941924 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.135181189 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130191199 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094301602 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138534541 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103465745 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129585869 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.108233902 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.13314274 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097828133 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.144453507 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12606819 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096705874 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123957431 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099914191 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125116392 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095718108 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137790242 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09829752 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127065527 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113151557 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.127769756 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.0933296 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130113368 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127612864 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092593529 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136931499 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.106651694 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.132121942 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106256238 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12349096 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12509986 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103638098 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128901831 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092387873 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128290297 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099561454 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124512981 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094153847 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126913588 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095015907 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.138392887 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102087029 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12800215 seconds)
  done (took 15.108930293 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.238532731 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218294278 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.23882785 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.265811664 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137204246 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.14902495 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214933962 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125341586 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125954767 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161885423 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175306625 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18333649 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171473477 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180189041 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171836338 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.0931737 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144659199 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165882399 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217381649 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260555445 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146540563 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.13251035 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162144392 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.129827607 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138050929 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134436367 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11061589 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13648494 seconds)
  done (took 5.843639732 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109767878 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157675297 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099261287 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14702266 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150953609 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093216278 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129838363 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099455923 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137263991 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138174721 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094062777 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131332697 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.103896553 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133805664 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.128168733 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103027221 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133346712 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095558678 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127601193 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098142609 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13560731 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102469963 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130104072 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12291129 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104669702 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123038446 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087149722 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144393193 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123730142 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116835581 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122166192 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102380673 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13801412 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094087452 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124392775 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095277984 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12703516 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095423887 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126889346 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091194025 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124086561 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078240105 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123833364 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108229052 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130463713 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080656047 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130669503 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129665247 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095726804 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121567826 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096986785 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126546781 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09696098 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131307837 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096523409 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125411245 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097916299 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117060017 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100811769 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126175578 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084874803 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122789755 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09961756 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119436189 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102870185 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129908113 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092506972 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126627403 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098587642 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131081102 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096139926 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131411186 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091548602 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127096889 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099573229 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130341013 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097258378 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123522401 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123850152 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09571147 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074984837 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125233254 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074940406 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127484052 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09220515 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123457337 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095431463 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131955167 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.14606351 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09661563 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133524591 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098889739 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.127298434 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097450312 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114877649 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096779929 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142210286 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141978597 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094362863 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121966101 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108696276 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127413323 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092725012 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10743431 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102795766 seconds)
  done (took 13.099683798 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128004045 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155848244 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101673446 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142785317 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15800911 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158742415 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101969331 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131923791 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096085536 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143791223 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094232586 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133272784 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093989966 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140026549 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165523552 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104644239 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126651556 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108388725 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130332008 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174549091 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112103657 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143885108 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111348043 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125659097 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0997537 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142196727 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165779421 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107951787 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138661839 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147358501 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108636761 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162591861 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.120873632 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129995692 seconds)
  done (took 5.539374426 seconds)
done (took 50.377791683 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.197916044 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.451773969 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199501973 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.198006534 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.259757144 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.217192455 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213389291 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.211837837 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.249275015 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.201499791 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.458372258 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.855828954 seconds)
done (took 58.836118963 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.269115537 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.3356729 seconds)
    (2/2) benchmarking "String"...
    done (took 1.458308312 seconds)
  done (took 3.931018869 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.572962534 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.180613214 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.465426034 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.195335201 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198466227 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.496531174 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.908307563 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.841155254 seconds)
  done (took 28.409870475 seconds)
done (took 42.309199078 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.182667446 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.223192825 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.217993024 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.182050117 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.315868205 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.223432304 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.415353633 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.371171143 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.225190871 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.182849321 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.218688296 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.215781868 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.21637518 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.36961172 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.216960518 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.203407723 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.238706207 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.847625027 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.639286493 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.218487655 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.198149692 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.249489984 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.216427394 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.201588043 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.25880451 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202143051 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196384488 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.227720802 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.080351624 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.207683167 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.224830411 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.640128128 seconds)
  done (took 190.954565031 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.197682532 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.238447023 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.352228056 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.254302934 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.622392539 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.403144056 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.346713302 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.715611373 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.224120923 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.228678327 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.413278193 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.20383903 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.500212273 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.244811239 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227042155 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.295446812 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.40638446 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.507440268 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.241873431 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.35908069 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.204166355 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.46335411 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.361064786 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.388131892 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.266621854 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.286242641 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.225697129 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.203109444 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.419685639 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.344917824 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.235523704 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.230379027 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.861590046 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058250655 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.22463698 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.207931819 seconds)
  done (took 150.091934903 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.199269038 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198939192 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198990013 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.233615188 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.201059413 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.797193405 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826509065 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.75140727 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.454520733 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.74804024 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.511205619 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.199066668 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297478102 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.212653634 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200969245 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.216740043 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.245385364 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200597279 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200151441 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.82941755 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218323101 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.21597256 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.388274684 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.216749708 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234576703 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.592460226 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200633766 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236018308 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.541465119 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.251873653 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20039452 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.605045498 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.684300201 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316790905 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201741965 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235812176 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.202685516 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.485743556 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201014864 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200746747 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203734605 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.884125827 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201015762 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.801486629 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201740653 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.210805234 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20154789 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20136614 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.202522767 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.023071288 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.928860322 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.219246256 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200480923 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203669525 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.201554547 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201713834 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23642007 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.135282077 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.302326419 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.22060084 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206217639 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236766609 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202051877 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.603846503 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20714785 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203284511 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.257559638 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.312609929 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.263241404 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.855807169 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20778245 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303781267 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328212725 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.203173545 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204290201 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202738677 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.202723696 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20386062 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.20297474 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.317352281 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20434571 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.659670822 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.38630803 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.221585163 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.764051206 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.307774776 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203811323 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.662448796 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.209992484 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203838831 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.070228715 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310620754 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.203870047 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203826274 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203691682 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.660581129 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837441986 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.55448123 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211579628 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.163636937 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.214257616 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.678956786 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.801100388 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901449491 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205442573 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319414545 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.388792325 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222721052 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205860813 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.757731581 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21187766 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.265127744 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.205098703 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.605485336 seconds)
  done (took 369.224309144 seconds)
done (took 711.39547554 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.791532197 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.782470491 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.905265486 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.782916921 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.745715911 seconds)
  done (took 10.142409177 seconds)
done (took 11.273667707 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406991731 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.41371697 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278035437 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415092928 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248631579 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432632287 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394007752 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.233744401 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313215882 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302889098 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319731692 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27132806 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24865956 seconds)
  done (took 18.414978195 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534541716 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.53070977 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275551378 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546501717 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253685334 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558069177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417968552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429232178 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428228939 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243958863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22071783 seconds)
  done (took 16.576323267 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562641367 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.550135232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280643022 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.583840697 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25474461 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544120252 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417800426 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430315341 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431019927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243364118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22179546 seconds)
  done (took 16.657601425 seconds)
done (took 52.779851057 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.217884299 seconds)
  done (took 2.355095022 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.254001649 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423073965 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243311392 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.223982908 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220037311 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219890925 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.224943819 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220229787 seconds)
  done (took 11.169703278 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.214714576 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.214805879 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21729661 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.217201108 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214546318 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21850811 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218583863 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218504999 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.218420838 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.214905609 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.216300674 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.214847538 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.215334787 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.217592938 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219531704 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.215583775 seconds)
  done (took 20.60631956 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.217602863 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215033154 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214902792 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.215118949 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.215574594 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217103323 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.216881805 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.215589414 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.215838823 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216379312 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.215330782 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.215380168 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.215845235 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215908417 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215489683 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.217039201 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.216137085 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.216791664 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.220092063 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.216319524 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.216165412 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.216691007 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216491919 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.217762214 seconds)
  done (took 30.332566907 seconds)
done (took 65.598464669 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.883002937 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.037030333 seconds)
  done (took 7.061140269 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.222343093 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.218934587 seconds)
  done (took 3.581821118 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.219864077 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218858509 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.219186501 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.218646984 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.21913449 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.218257529 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.219535776 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218789664 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219672443 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.219051667 seconds)
  done (took 13.331612193 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.219874209 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220098864 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.216936698 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.2197874 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219283723 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.217007076 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.220045698 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.219580912 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.218739583 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218017891 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.220105352 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216906506 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219566166 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.217981248 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220898399 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217252078 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.218513488 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218766473 seconds)
  done (took 23.080507598 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.221617835 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.22091898 seconds)
  done (took 3.584622993 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.219883492 seconds)
    (2/7) benchmarking "second"...
    done (took 1.21918737 seconds)
    (3/7) benchmarking "month"...
    done (took 1.219008097 seconds)
    (4/7) benchmarking "year"...
    done (took 1.218501799 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.218888349 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.218104788 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.218605903 seconds)
  done (took 9.673468545 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.222349533 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.391803616 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.479859814 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.816190984 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.222381531 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22583104 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.062889151 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225425167 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227273498 seconds)
  done (took 14.016771194 seconds)
done (took 75.468192318 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.27192083 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.244344165 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.527490599 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.246894569 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.24090709 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.562118927 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.23278376 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.34658908 seconds)
done (took 37.813338201 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.22204437 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.206130196 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.091503036 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.204422442 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.287795232 seconds)
  done (took 18.932605641 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.336006887 seconds)
    (2/2) benchmarking "read"...
    done (took 1.56137354 seconds)
  done (took 5.042622789 seconds)
done (took 31.337087674 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225026364 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223896758 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.221580753 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.223460466 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.220599663 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220692018 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225201501 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.223914156 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.223300364 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.225426918 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223443653 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221434511 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222629715 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22503936 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225109431 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225756538 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.221487557 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221259273 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.222272367 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221525387 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.222528813 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225049793 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.221804245 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.221917403 seconds)
  done (took 30.498375521 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225418977 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.222756434 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.224912147 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.2258429 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222413835 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.225959018 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225817261 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223977165 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.226529321 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.225076427 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222489665 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223017441 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226658783 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222945964 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22676427 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224082697 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.225769183 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223843651 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226919693 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224239308 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.226016922 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224540626 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.223808995 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22591597 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223914885 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223845367 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226466926 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.224062928 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226622155 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.223925744 seconds)
  done (took 37.891115483 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231472483 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237153293 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.226228046 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227348214 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227273843 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228825003 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227315041 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227152057 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22665311 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227251686 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227589335 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227807593 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227830099 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228028679 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226627333 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.228506305 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228341292 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.227942469 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228939982 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.2280958 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.227103503 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.228454711 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228425271 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.229035228 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.227197494 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.229074797 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.229386509 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.228062212 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.229313095 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.230246195 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.229282401 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229461636 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229092883 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.229373805 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.230381656 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.228292313 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.234711884 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.237607735 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22956307 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.229035014 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229599078 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.228974995 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.229477238 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.228568525 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.231145522 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.228950344 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.230170244 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230765294 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230400577 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230087396 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230064733 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.229989274 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.230272205 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.229965098 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230058379 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.231674758 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230022356 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.231073866 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.230413542 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.230009016 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.230210305 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231923662 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230173128 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23146255 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.23167356 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.231738086 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.23167938 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.231074066 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231023547 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231990416 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.231941461 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231402625 seconds)
  done (took 89.687791704 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.231404733 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228445675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228794603 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228405176 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229853023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.232803512 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.228219551 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234054279 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228278664 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231402991 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231890508 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230013569 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229714559 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235771062 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232698994 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.230470098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232599354 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230549949 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.23246714 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234202865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23380658 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.23063712 seconds)
  done (took 28.238426204 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234333945 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236017039 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.230818864 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233695178 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230067583 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233385834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.23294389 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237019731 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234437126 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231183447 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232447004 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234246926 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230586918 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231932236 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230578526 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233778382 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235587265 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232536109 seconds)
  done (took 23.348660816 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.23228161 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232022583 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235030275 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230940285 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230586917 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233300431 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231541577 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234343304 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.234977999 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.232444933 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.234463489 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234451225 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.233418795 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232715158 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234921756 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232416462 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.235105754 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232317048 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233777865 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232500484 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232931859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234307395 seconds)
  done (took 28.285723471 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234883321 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235560427 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234337164 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234395425 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233036436 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236623677 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236762007 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.232960432 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.236131026 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.235019372 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232815239 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235062702 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234717637 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234011862 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.232975672 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233737404 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.236340773 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.235143528 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236607091 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.232784319 seconds)
  done (took 25.849679821 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236221084 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236710241 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237236367 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23798985 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238429116 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.237853487 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238117864 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.239631855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238108173 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238522892 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238246151 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238540396 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239059547 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239126327 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239059605 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239660131 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240990034 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240631758 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244239962 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2438369 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245131602 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24106619 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242786296 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244305151 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241078282 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241937233 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242687347 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244703338 seconds)
  done (took 35.882592225 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244280177 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240490331 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.241596942 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237820395 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.238018003 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.239010594 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.237569272 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.239906629 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.243136976 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239714616 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240323434 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.244435721 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239977753 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240705089 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240322361 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241611404 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240272313 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.240676646 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239425305 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237632223 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240377593 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241253974 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241895789 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242617522 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239724869 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.246419932 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239402991 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238807338 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24249609 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237958857 seconds)
  done (took 38.377951679 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.264305867 seconds)
    (2/2) benchmarking "in"...
    done (took 1.258998386 seconds)
  done (took 3.68507603 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.243928119 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24119877 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.242360473 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.238271505 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240320252 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241477824 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.240782961 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237503944 seconds)
  done (took 11.085493934 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242509706 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.241142735 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.240965817 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.242937479 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.243232115 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.241786215 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248565135 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.26203115 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.241277467 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.24231313 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250946756 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.252285159 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245729432 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243131456 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.242444173 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243470719 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.242697472 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244092712 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.243612107 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.243286118 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242951051 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24732313 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245413738 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.240544704 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246616715 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.254074226 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.267908084 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245179353 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2450334 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.248611349 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.246111804 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.24291207 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.246396981 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245156663 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.246787945 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.244435841 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25217274 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263309472 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.254289726 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266804172 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247951276 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.247804207 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246703414 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.245606165 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250001898 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245904839 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.2467041 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.243525458 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245254149 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.249426438 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.253017921 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245766639 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246131467 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24666297 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.245473983 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252240779 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266293664 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.250543729 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255589277 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.256389868 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.279891903 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.271275727 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247219902 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246270005 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258078716 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.277310709 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256492087 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.265878948 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.2450508 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.245518017 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.251569744 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278847276 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.273577909 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.246179357 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246834785 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.24659066 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246714082 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247832646 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254659789 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269089678 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248990306 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24717668 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258067247 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278797394 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.247280562 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251897032 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.250041933 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.248965314 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.251962785 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259143216 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.269514241 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249374995 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247181666 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.248324673 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.248564361 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.248389108 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.246553606 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248255487 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.245969635 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.248558002 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248904797 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252921406 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25882607 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246625995 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249368659 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.254377952 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.269666474 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252885614 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253614351 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.250354416 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250343989 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.251720897 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.255406446 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.247442641 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25316091 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259645664 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.248400385 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.251123382 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249937736 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.250568673 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259988857 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.282431441 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.25185505 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25051849 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254056839 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.261754352 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250610571 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.251840122 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.250003001 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.247336111 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248142013 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.262023648 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.250558391 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.250612332 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249579978 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251189589 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.250999815 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.250068652 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250131284 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.251753934 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250854525 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.250166791 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252214442 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.252918711 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251163875 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.252774269 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.256661544 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.271558803 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.251953912 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.251390648 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.249677308 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252238992 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.252292104 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251955994 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.252197594 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251375065 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.254283636 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.253103065 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252577479 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.251636672 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251533795 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.253308436 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257308808 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252655881 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.255676949 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252338155 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.253208512 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.251783665 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.25265657 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.253551138 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.257182834 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.252546278 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256745826 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.262524311 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.254217034 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.252727371 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.256812781 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253570334 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252807833 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252540525 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.256661117 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262258299 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.253319555 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260073319 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.27443458 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253544535 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.253735671 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.253917594 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253030736 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253946179 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257147289 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.26236745 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265026225 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280525718 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.25552496 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260872997 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257068621 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258843551 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.257922488 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.253569738 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.255038971 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254638638 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255784443 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257160305 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.255846874 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.254443334 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.255843617 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255809289 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254530667 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255997713 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255713568 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255266078 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256875821 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.254010754 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255685133 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255355872 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255174353 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.252613022 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.254002897 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.256418407 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.256573243 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256622414 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.261858233 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.253811298 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256354557 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25727749 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25588678 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.254833307 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.256643378 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257026904 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.256299379 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262983849 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.276600665 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257959132 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262644374 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.276073887 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.257097628 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.260488995 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257052561 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255793415 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.259293727 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.266542405 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257811134 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.257786856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258189787 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25805963 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258997567 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.26357156 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277461155 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.257725643 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260035083 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26136582 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.260888559 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.259472637 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.259218297 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.258640362 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259649001 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257551762 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.259165936 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259633835 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.261747283 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259893482 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259660189 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260563354 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268483082 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.262176689 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.259250593 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262534665 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.261225242 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263937849 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.258510048 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.260210164 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.259646858 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271372168 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.288498248 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266071144 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.281393094 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.26053819 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264410641 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.281863393 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.266286956 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261769706 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262218289 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.260674793 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261718927 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.258776376 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259978544 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.261893516 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261483847 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.26301182 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.265604496 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.262282049 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.260894692 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261903464 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.261303347 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.261817839 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.261487178 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.262448266 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.262270534 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263624313 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.260044661 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.263012573 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269383435 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282391694 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.262703224 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.263540951 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.260786416 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262907975 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.263536309 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.263214546 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267148871 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.270394846 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.267657079 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273642694 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268657135 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272702761 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.263138967 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267942305 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272411874 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.260067727 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.262795845 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.263077399 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264767318 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268866855 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283990322 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263728239 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.268314904 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263407206 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.265581107 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264484108 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.265904394 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264009215 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.26350476 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270418543 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.284428052 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269610142 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269468304 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261531973 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264354907 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.264274021 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262347884 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266026396 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263587602 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.265985775 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.263654909 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265431688 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.264771093 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264302142 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.265469137 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260536144 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.26365744 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270815355 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287938846 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270942364 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.264177852 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.271290672 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286250683 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271781222 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.286865257 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.265106967 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266487346 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266597959 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.267247637 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265487312 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26779283 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267670316 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.268613809 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.27106076 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.265616716 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267580227 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266796594 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.266691053 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265657779 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277646622 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300935872 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26753478 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271808127 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.263329837 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268272966 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270291607 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266382299 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.266014125 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.270445599 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279269355 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276467324 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26777901 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268729196 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267850864 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271455728 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.267862034 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.267186047 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.267923059 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.267087503 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.268152812 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.267193429 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26918745 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.267776331 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26810388 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267194345 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.268420175 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.278394443 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.289312061 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.268065387 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269008613 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.268863257 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.268863832 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.269453957 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.269055302 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269786948 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269826021 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.270154087 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275931477 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.27695519 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.271278713 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.268069374 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.269456388 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267287111 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.26911197 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270381863 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.270809027 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268981232 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.269401306 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268249177 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.269940507 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.269544419 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.270147502 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270198543 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272338024 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273067981 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276989254 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271989967 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.267331627 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.270176534 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269872482 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.269228305 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.270166226 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.27592176 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295212792 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281291111 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280026162 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27591282 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.270024379 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273315047 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.279907172 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271265512 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27132955 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272639549 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.272715426 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.272575634 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.274661903 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271922678 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.277082387 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.291967568 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271982971 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27946697 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.29191734 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271567861 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.273402562 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275969301 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.271040702 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270748559 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.272204142 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271917839 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279035974 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.292466771 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272547178 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27228545 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272406163 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273335925 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277582264 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272514493 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273197339 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.270908882 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.272634037 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272515857 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273317351 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.270399435 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.272527289 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272218341 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.275927336 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281684867 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.271369564 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277223297 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274261123 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.273375989 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272270261 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272909742 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.270745308 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.27098378 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.272741304 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274615857 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.273818851 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.276115176 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.273533879 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.275491938 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.275450778 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273746388 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277605222 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285948492 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.283613234 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.273074433 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.275023708 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.275156214 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.276428147 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276678221 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275693585 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275438814 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.277963243 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.275819404 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27461502 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.275599754 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.276879012 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29311529 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.296925812 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27468411 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.275382285 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278370561 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.275596807 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274714136 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.275663309 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.277800301 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278148416 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284469548 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276616197 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281053485 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.295161042 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.278136978 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.281981289 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.281514955 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284600434 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.279511182 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276902392 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277255638 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.282189449 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294935704 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280255478 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287943581 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31196018 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299103648 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27791433 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.282757002 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276232149 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.278727581 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278562938 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278162508 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279432203 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277523096 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.277151488 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.278473096 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283098244 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279471756 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.279030291 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.281855902 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.277470055 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.277828785 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.277728487 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278323677 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.276930534 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.277777252 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.278002465 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278587091 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.27846661 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29083499 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.305458887 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.28291718 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.280760648 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.27656153 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280580539 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.281854303 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290471033 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288195843 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.279745544 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.278628321 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.280317321 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278414755 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.278884377 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279442133 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279082481 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280313123 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.277118582 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.29200162 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308741977 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.283953226 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.280203407 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28009495 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.281070981 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281279715 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279330286 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280162726 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.281045161 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284432231 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285667646 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.280276396 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280937612 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.284691171 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.289187694 seconds)
  done (took 755.022911969 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279508041 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278903138 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279698345 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277880763 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279178679 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279011122 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278169822 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277982194 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277548391 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278901101 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278970423 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279935207 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280831249 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279763507 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279134163 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27994945 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280694847 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279478168 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278539125 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279211548 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27874602 seconds)
  done (took 28.05996812 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.283213167 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.280119382 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280767195 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28210659 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280266104 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282371327 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280144087 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283264486 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283576197 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280503866 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28238108 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282654573 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.281489843 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.280780311 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281401626 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28325422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284408009 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28171349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281815057 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281448953 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283826927 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280859155 seconds)
  done (took 29.401218732 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284351309 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.284213047 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.282652506 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.281415661 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.284299657 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.281176066 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285159395 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.283619116 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.28440229 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.284207288 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.282461149 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.285432512 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.291471559 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.289726807 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.284930951 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.284460934 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.428543387 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285216205 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.284588883 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.284276142 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.281577542 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.288918061 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.306043867 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.282323155 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28372063 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285968436 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.285330624 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.284898022 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.2836826 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.284614688 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.290393929 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.284628112 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.285605823 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.287789976 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.284989424 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.288268738 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.289428703 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.285522322 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.284184295 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.285831957 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.297023745 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.313984075 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28598389 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.291117084 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.308529976 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.286739229 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.288129536 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.293560654 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.282405206 seconds)
  done (took 64.417940218 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.285469523 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.285937837 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.282020298 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284228922 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.286504222 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.286310207 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.286691778 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286144837 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.283937509 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.283882075 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.28609924 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283711893 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284140555 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.287271645 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.288055204 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.284333639 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285674499 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28510575 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282949093 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.2834236 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.284922805 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.287861943 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.287217307 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.285139509 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288572365 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285093077 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284991665 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.289163692 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286205764 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.285614612 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289782312 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287876948 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.2883357 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.285784719 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285981998 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.288207455 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289346151 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.286065972 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287890889 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.285069708 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.288245808 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287859544 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28809414 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.290240507 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.2873518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.286770867 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287639273 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.287436241 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.287965346 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.288888791 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.289408949 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.286731039 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288905722 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.287211395 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.289624205 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.313651625 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.287657089 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.286903086 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.289857638 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28701432 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.288095785 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289624582 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.286660764 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.290129505 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.290194154 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.2872664 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.287634851 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289968505 seconds)
  done (took 88.742643317 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289254971 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.290222962 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289255216 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290687046 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290965396 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.289855433 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289954887 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290330385 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290361218 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289784156 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290527923 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291406024 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.290682327 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290133093 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28987869 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290267409 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291104622 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290613202 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290397935 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290139127 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.290253263 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290485826 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.290618849 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29096854 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291283891 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291175295 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290889302 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292111617 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290869233 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291026361 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291427461 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.290379169 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291542493 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291831445 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.292234559 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.291712723 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292216104 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291921838 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291941382 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291851742 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291625814 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291935392 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291881877 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.292132861 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293067125 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29268333 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292824577 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.292804967 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293532595 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292784204 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.29122128 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293123512 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291989234 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292723066 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292165012 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.292695081 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293386955 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292811454 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292447132 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293504004 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293901701 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294230701 seconds)
  done (took 81.280978469 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294241811 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.294751647 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291536091 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.291468183 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294304296 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292563151 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.294768511 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.294817601 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295416933 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.295006208 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295067055 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293168474 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293187936 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295878146 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292726659 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292493605 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292874261 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292427348 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29612387 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293454969 seconds)
  done (took 27.086597832 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293285852 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295331687 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.293793935 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293961957 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.296433338 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292495313 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295599055 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295609933 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293310788 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296311835 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297046955 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296075702 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294136423 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293661493 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296115926 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295588682 seconds)
  done (took 21.931114169 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294290558 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296799649 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296687466 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29640781 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.294052735 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293280337 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.297407229 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294834654 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294505655 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297700826 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.298344131 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297001273 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.297264613 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296365559 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29460531 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297386515 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294827827 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295120659 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296629602 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.298293417 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.294942942 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294945646 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.297502329 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.298311655 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295639343 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.296182934 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29579827 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295686413 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.294843407 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.298124205 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296072255 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296772411 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.296393436 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295186741 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.298137999 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.29650306 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.297627533 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29953293 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.299324047 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.298150591 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.298848201 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.297143483 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.299905508 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.299997844 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296244278 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.299938029 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.296270739 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29714645 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.297109428 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.296113686 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.299860544 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.298813998 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.299646531 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.299754179 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.299435064 seconds)
  done (took 72.548690319 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299659044 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299858855 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.296733305 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.299820246 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299242204 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.297409211 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.299677906 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299683437 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297087253 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300429191 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298255364 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301638039 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297985249 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302665647 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298213009 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301271225 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298711504 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298707478 seconds)
  done (took 24.603004588 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298193831 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299824009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.300680666 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29847788 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.299239475 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301596919 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29826235 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301585527 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301418637 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.299758105 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299050944 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.302516376 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301347405 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.301894277 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299513536 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298200677 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.302388106 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.301744188 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300542306 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299633042 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.30200771 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302711519 seconds)
  done (took 29.827364153 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.300089065 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.300807918 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.301384016 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.318028327 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.323740858 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.325324198 seconds)
  done (took 9.08657143 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310557313 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302789076 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300549054 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304124445 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303122303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300236895 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300808607 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299825314 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303506868 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301516587 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300610129 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302577571 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304122541 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300592837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30413704 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304028875 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30073886 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301279062 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302854073 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303850769 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302011208 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30523799 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301586348 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301987814 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301838685 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301067241 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305134789 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301711302 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302191735 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30597624 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30534904 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301759736 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306295699 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302962637 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306424183 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305280867 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302196396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305671581 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305458491 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303338239 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305791017 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305793054 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305796625 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302746708 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305696728 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303064478 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303643837 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3035278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302763499 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306171744 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305552103 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302460408 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305379803 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305780584 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305325326 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306947234 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303892303 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304241084 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306695983 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305562168 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303605406 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308540412 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30547434 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305020919 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306981106 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305839472 seconds)
  done (took 87.308809184 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304756402 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304579545 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304452235 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305474993 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303670655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304973219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304083493 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304860433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304414127 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305570765 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30771694 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304875113 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305551837 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305055651 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305254574 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304746638 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305854294 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305492628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306245826 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308759759 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306247363 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305746766 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306078196 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306301075 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305978479 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308562511 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306650262 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306419675 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307061175 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306896877 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306248344 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307535275 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3074115 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306626104 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306270769 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306051567 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306644735 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307672229 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306569199 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309968084 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306093901 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311115055 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30798918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306866847 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307204644 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307485211 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307745415 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307638936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306679196 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306291068 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307600428 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307832146 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307481857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306591788 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307518106 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307280028 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30723092 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3073239 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308026927 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310155612 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308138667 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307913545 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311751071 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309088558 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308293212 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308815399 seconds)
  done (took 87.475613461 seconds)
done (took 1760.764922172 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.47236482 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.426798039 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.309114175 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.327243117 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.309104022 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.313544044 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.304244706 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.309093376 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.309467158 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.309543885 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.309951307 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.536368066 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.35030323 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.310489186 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.310522886 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.403977733 seconds)
  done (took 42.839380197 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.341336072 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.315725301 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.444464603 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.345256348 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.339726423 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.52767802 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.380209662 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.320189661 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.511912794 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.361881488 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.081987352 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341037511 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.315101491 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.570145114 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.334887457 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.526259229 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.59653057 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.180584578 seconds)
  done (took 31.062428802 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.846738896 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.328465937 seconds)
  done (took 9.403904551 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.335601249 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.321065605 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.315849981 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.314397554 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.306557108 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.335060997 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.313153802 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.310456594 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.661622546 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.469825059 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.323955215 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322599005 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.337005084 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.316328455 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.313646125 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353751715 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.490152996 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.319936665 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.313018218 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.322874111 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316034961 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.406228256 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.369840415 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.321744616 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.46346803 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.642237824 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.326057882 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.322747158 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.470703066 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.316631948 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.315717239 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.31708316 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.316978024 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.956715077 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.836170345 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.330713839 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342327788 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.324913264 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.314729619 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.471577092 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.32174382 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.324178159 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.308453529 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.843244311 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46838892 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.452687718 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.723542509 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.33711122 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.317381156 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.383569756 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.316781624 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.317696433 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.34759086 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.118831857 seconds)
  done (took 112.40046696 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.329409156 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.700841625 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.480146932 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335305648 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.209062275 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.064723385 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.336138767 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.654596982 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.376622877 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311795175 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.657124199 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880090367 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.338208137 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.388806001 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.872858128 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.356349677 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312095489 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.14409593 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.337392441 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.314949805 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842990969 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31970094 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.336712279 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.569518297 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.354090164 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.812000452 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.054287019 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.783349352 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.33829527 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.311296911 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.843614416 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.347234128 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.361292523 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.316120999 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.605698049 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.726408389 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.710488229 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.336126622 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.340898769 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.316537918 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.337089892 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806834945 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.719777451 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.332165533 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.328972474 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811530472 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.331743555 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.314150981 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.313839658 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526186952 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.182266482 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.320419197 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.029933749 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.322234085 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.618282002 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.390954672 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350321742 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.842187844 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334369479 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.46902679 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349270932 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.313137926 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314755448 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318297101 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.314814281 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.721401618 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.647434425 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.316534727 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.71914877 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865031864 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.340815201 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.897515168 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.188977063 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325479966 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.38286804 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.31472885 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.030591805 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.88031174 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.364667459 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.315494539 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.713871492 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.347865439 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.665752012 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.342339053 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.316495164 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852815708 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.319787139 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.348708259 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.318171774 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.323905001 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.08070762 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326247536 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.641952077 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.398658229 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.316626093 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.316358359 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.31856753 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319626479 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.329816942 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.317565331 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.89865944 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.348495986 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.314764949 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346567583 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323600708 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.324860029 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.318087064 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.315357262 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547434344 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.780525927 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.344320534 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316466412 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.322829134 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.327884114 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.577158503 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.318194313 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.690608924 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.348128763 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316665858 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.323988203 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.130620577 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.35463514 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317481763 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.317795463 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.265532007 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.53166417 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.339968895 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.326734943 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318014907 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.346931615 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.70976425 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.343521388 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.412215626 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.321640372 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085332527 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345170967 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.342495797 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.843713331 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.321744092 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.331242639 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.32232491 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320997178 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.619481942 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.615052985 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.516961654 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319995158 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.340625674 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.064072329 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.363891218 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470043619 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.341395245 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319043435 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520391073 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.474257931 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319517616 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.929111428 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.321759702 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544291197 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319883322 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647958567 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.879767317 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.346316883 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.321348398 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.084984176 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.054157086 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.014289295 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.322864711 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.673742488 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.342694725 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.792538609 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.320478948 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.320596892 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.890904596 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.329478033 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.326225821 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.320902104 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.321549466 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.384668812 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.497564401 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.805270542 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32909954 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816790289 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.399824063 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322047415 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.332256835 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320623075 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.674181086 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376443394 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.323651735 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.375458481 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.323462596 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.324676443 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83972733 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.214282407 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.33029876 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.47694356 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012304156 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.349215497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.322634646 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.923075014 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.565077002 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.91294382 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.366387285 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.677135669 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.342405109 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.363515068 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.08849369 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.351590095 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842502324 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.346066325 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.332162926 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.987914421 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.349414285 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.374512812 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.323349297 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.337576291 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931238472 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.351183039 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.323171061 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.830821242 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.357965717 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.603975605 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.332549295 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.35028186 seconds)
  done (took 1112.568867103 seconds)
done (took 1309.498163424 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.324607243 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.333121222 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.313178195 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332222646 seconds)
  done (took 26.548464529 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.335108154 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.331763459 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.332639895 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.331715778 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.332505936 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.335558882 seconds)
  done (took 9.247959378 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.597223868 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.332977925 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.334237512 seconds)
  done (took 19.511026804 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.571089478 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.79529905 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.738704452 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.819164115 seconds)
  done (took 11.173721159 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330108619 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.329907786 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.328847948 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.331444474 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.3338357 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.334681101 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.331428341 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.331177148 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.333982931 seconds)
  done (took 13.229745569 seconds)
done (took 80.952015283 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.347513637 seconds)
    (2/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.045588195 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.348576022 seconds)
    (4/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.408575884 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.853201267 seconds)
    (6/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.314103357 seconds)
    (7/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.351087083 seconds)
    (8/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.313746979 seconds)
    (9/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.094777688 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.737616814 seconds)
    (11/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.109299935 seconds)
    (12/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.329943149 seconds)
    (13/286) benchmarking ("sort", Float64, false)...
    done (took 5.740276586 seconds)
    (14/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.107129009 seconds)
    (15/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.63976474 seconds)
    (16/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.350873035 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.196173148 seconds)
    (18/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.33492887 seconds)
    (19/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.366701748 seconds)
    (20/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.851284916 seconds)
    (21/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.351785482 seconds)
    (22/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.350073994 seconds)
    (23/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.320340482 seconds)
    (24/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.41292841 seconds)
    (25/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.304158974 seconds)
    (26/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.406191738 seconds)
    (27/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.892701361 seconds)
    (28/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.35858271 seconds)
    (29/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.404276559 seconds)
    (30/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.360709905 seconds)
    (31/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.516425795 seconds)
    (32/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.355857953 seconds)
    (33/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.289087892 seconds)
    (34/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.682307965 seconds)
    (35/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.441006203 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 6.324927844 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.447052383 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.543621571 seconds)
    (39/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.904532702 seconds)
    (40/286) benchmarking ("sort", BigInt, false)...
    done (took 6.33379074 seconds)
    (41/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.596860655 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.793117085 seconds)
    (43/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.15515106 seconds)
    (44/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.915112602 seconds)
    (45/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.312031192 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.788893871 seconds)
    (47/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.354526925 seconds)
    (48/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.432243771 seconds)
    (49/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.408221207 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.438461334 seconds)
    (51/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.041301791 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.60946398 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.939593089 seconds)
    (54/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.283521064 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.215067189 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.393595059 seconds)
    (57/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.735062296 seconds)
    (58/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.526470328 seconds)
    (59/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.419503686 seconds)
    (60/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.306105266 seconds)
    (61/286) benchmarking ("sort", Float64, true)...
    done (took 6.333554799 seconds)
    (62/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.268345526 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.006941877 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.317248344 seconds)
    (65/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.116999401 seconds)
    (66/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.468795196 seconds)
    (67/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.123374965 seconds)
    (68/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.255349604 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.13759789 seconds)
    (70/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.425435254 seconds)
    (71/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.942345501 seconds)
    (72/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.898426661 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.620049629 seconds)
    (74/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.307959935 seconds)
    (75/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.337751141 seconds)
    (76/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.354170235 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.869485519 seconds)
    (78/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.328692475 seconds)
    (79/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.201216417 seconds)
    (80/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.354953793 seconds)
    (81/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.354248617 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.307620027 seconds)
    (83/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.233019307 seconds)
    (84/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.67288935 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.7867348 seconds)
    (86/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.375665598 seconds)
    (87/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.251920582 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.370881282 seconds)
    (89/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.434720056 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.361616648 seconds)
    (91/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.310009522 seconds)
    (92/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.414556209 seconds)
    (93/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.328904906 seconds)
    (94/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.417600764 seconds)
    (95/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.309299542 seconds)
    (96/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.316991351 seconds)
    (97/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.335607547 seconds)
    (98/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.417852622 seconds)
    (99/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.828882392 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.61986855 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.569539073 seconds)
    (102/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.398404394 seconds)
    (103/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.365737489 seconds)
    (104/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.396436543 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.329613255 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.43491864 seconds)
    (107/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.731463494 seconds)
    (108/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.955892377 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.784711248 seconds)
    (110/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.35608444 seconds)
    (111/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.231903241 seconds)
    (112/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.282175655 seconds)
    (113/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.439843056 seconds)
    (114/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.416700325 seconds)
    (115/286) benchmarking ("sort", Int8, true)...
    done (took 6.331030825 seconds)
    (116/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.400650244 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.887651463 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.378007255 seconds)
    (119/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.422278076 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.610476105 seconds)
    (121/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.024531065 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.376008653 seconds)
    (123/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.289341284 seconds)
    (124/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.369533655 seconds)
    (125/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.362065681 seconds)
    (126/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.23595942 seconds)
    (127/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.332555266 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.211626708 seconds)
    (129/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.660356545 seconds)
    (130/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.530864464 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.61425206 seconds)
    (132/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.681853743 seconds)
    (133/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.359169977 seconds)
    (134/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.355737064 seconds)
    (135/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.058020738 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.0884966 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.442269505 seconds)
    (138/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.267035683 seconds)
    (139/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.464657361 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.21129107 seconds)
    (141/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.985004636 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.380065952 seconds)
    (143/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.332401252 seconds)
    (144/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.460929903 seconds)
    (145/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.338424342 seconds)
    (146/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.313171369 seconds)
    (147/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.494735312 seconds)
    (148/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.312693417 seconds)
    (149/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.704273061 seconds)
    (150/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.840876149 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356269154 seconds)
    (152/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.068838275 seconds)
    (153/286) benchmarking ("sort", Float32, false)...
    done (took 5.392785754 seconds)
    (154/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.528071014 seconds)
    (155/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.157545795 seconds)
    (156/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.763166248 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.219420655 seconds)
    (158/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.325314516 seconds)
    (159/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.364505226 seconds)
    (160/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.371205113 seconds)
    (161/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.333772195 seconds)
    (162/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.33968023 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.727135521 seconds)
    (164/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.360262791 seconds)
    (165/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.352763945 seconds)
    (166/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.32132622 seconds)
    (167/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.372432782 seconds)
    (168/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.061051639 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.324929419 seconds)
    (170/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.359056911 seconds)
    (171/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.314807486 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.355479929 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.362242445 seconds)
    (174/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.361030691 seconds)
    (175/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.334902585 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.331418239 seconds)
    (177/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.940252302 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.421318951 seconds)
    (179/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.775319857 seconds)
    (180/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.322006717 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.316412965 seconds)
    (182/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.622927115 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.406072856 seconds)
    (184/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.315187208 seconds)
    (185/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.315363066 seconds)
    (186/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.974051749 seconds)
    (187/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.13467641 seconds)
    (188/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.31558611 seconds)
    (189/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.360298176 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.352446384 seconds)
    (191/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.395068035 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 5.460859428 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.421480205 seconds)
    (194/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.316784482 seconds)
    (195/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.480235621 seconds)
    (196/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.413532301 seconds)
    (197/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.769677913 seconds)
    (198/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.500680513 seconds)
    (199/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.316352381 seconds)
    (200/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.448353915 seconds)
    (201/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.400635344 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.969254493 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.556559338 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.080747514 seconds)
    (205/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.605481795 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.383043093 seconds)
    (207/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.472194627 seconds)
    (208/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.316020418 seconds)
    (209/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.390101955 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.380617655 seconds)
    (211/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.584467081 seconds)
    (212/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.450113444 seconds)
    (213/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.772520465 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.405040512 seconds)
    (215/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.245280688 seconds)
    (216/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.486137017 seconds)
    (217/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.845266936 seconds)
    (218/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.359039188 seconds)
    (219/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.319463985 seconds)
    (220/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.424155373 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.197502155 seconds)
    (222/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.71082798 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.389123523 seconds)
    (224/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.806034562 seconds)
    (225/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.55880257 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.404112607 seconds)
    (227/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.318998513 seconds)
    (228/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.379758848 seconds)
    (229/286) benchmarking ("sort", Int8, false)...
    done (took 4.360376527 seconds)
    (230/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.252889237 seconds)
    (231/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.911098086 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.582885415 seconds)
    (233/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.34663452 seconds)
    (234/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.437228435 seconds)
    (235/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.443672859 seconds)
    (236/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.888123422 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.796934335 seconds)
    (238/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.352975537 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367361153 seconds)
    (240/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.336801176 seconds)
    (241/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.353063101 seconds)
    (242/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.35193166 seconds)
    (243/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.33913097 seconds)
    (244/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.349294802 seconds)
    (245/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.340008461 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.127162662 seconds)
    (247/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.340909015 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.725107308 seconds)
    (249/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.054684574 seconds)
    (250/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.393550828 seconds)
    (251/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.319215898 seconds)
    (252/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.40917423 seconds)
    (253/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.296519434 seconds)
    (254/286) benchmarking ("sort", Float32, true)...
    done (took 6.348251053 seconds)
    (255/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.378459149 seconds)
    (256/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.281353489 seconds)
    (257/286) benchmarking ("sort", BigInt, true)...
    done (took 6.347185905 seconds)
    (258/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.386916355 seconds)
    (259/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.238680695 seconds)
    (260/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.344951215 seconds)
    (261/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.32139056 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.431612149 seconds)
    (263/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.340651413 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.424620701 seconds)
    (265/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.988748332 seconds)
    (266/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.357844842 seconds)
    (267/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.321150479 seconds)
    (268/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.447172894 seconds)
    (269/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.404602716 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.481579866 seconds)
    (271/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.320994927 seconds)
    (272/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.351393152 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.16004827 seconds)
    (274/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.342567879 seconds)
    (275/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.250101533 seconds)
    (276/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.068184766 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.392376793 seconds)
    (278/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.170656312 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.277635818 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.376446436 seconds)
    (281/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.336692947 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.365479905 seconds)
    (283/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.775166198 seconds)
    (284/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.05234061 seconds)
    (285/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.436136364 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.379611922 seconds)
  done (took 959.556533164 seconds)
done (took 960.797773054 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.377630456 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371593105 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.355501286 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.378054327 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.466742844 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.381342587 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.367701597 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.359083562 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.403842131 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.405707373 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.353284141 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.380978106 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.3562807 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354096515 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.356838586 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371525522 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.549159829 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.355371461 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.372529404 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.367383259 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.3733779 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354367825 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.406752448 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.384855131 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.360754006 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.361031924 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.359975578 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.374337221 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.468758352 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.359353396 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.360607813 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.366823416 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.547874662 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.358280071 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.352860071 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.376683051 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368186982 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.367395146 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.361314578 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388461554 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.132606978 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.383045962 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.3587237 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.358785568 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.359210847 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.363254525 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.359233533 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.364294447 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371054384 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372775081 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.142118229 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.400358163 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.360399347 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.360209211 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.371467998 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.3581662 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.362771799 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3756405 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.377789229 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376050305 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.536919504 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.364854222 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.362470275 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374928966 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.366838467 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.180392774 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.382631694 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.363607745 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.132593446 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.393501595 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.185332086 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.394972523 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.362095946 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.374425058 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.391538929 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.55050047 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.356286624 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.360502013 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.366942152 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357814204 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.371759459 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373950878 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.366811871 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.362610659 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377059818 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.387992978 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.37153556 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.361303021 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.371490372 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379345238 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.36759371 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.371115347 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.365393433 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.357504361 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.370642106 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.366261888 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.363258732 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362446784 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.366973407 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.374021613 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.128506082 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407472098 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.359928333 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.360338389 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.361196865 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.375953189 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.122305295 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.388280883 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.385872268 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.41011024 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.364423198 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.542063964 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.36516445 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379528433 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.372590923 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.36674167 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.358649694 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.545443872 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.14173982 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.404600752 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.366626702 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.360956743 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380026111 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.364597219 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.360864312 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.558311884 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.364982184 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377065122 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.483428842 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.373513996 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394858766 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.361247271 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.367950394 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.385897829 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381413762 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.395693636 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.368421738 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380471764 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379399442 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.361679604 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.373637933 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.376104667 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.366771826 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.369624337 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359292845 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.389322854 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378553014 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37855729 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.386343915 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.485527949 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.362270759 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.547369906 seconds)
done (took 233.745222526 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422142584 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.352862108 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.444572836 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.359421424 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.463605671 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.463392854 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356980515 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.357690502 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.356821522 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.739840407 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.357517549 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358297691 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.361276271 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.357237939 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442304498 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360898945 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.357584605 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.702016127 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.36073001 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.430836523 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.352741234 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35818425 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.36054509 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.742975246 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.359409329 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.357998385 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.431218132 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.36156923 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.708389563 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.357119631 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.36140369 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.707866341 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.452701224 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.378872613 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.36982449 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.368803346 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.465041826 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.383117156 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.442808103 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443895501 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.447968794 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.400347122 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.359285124 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.358281781 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.363862268 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.363036641 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.361380417 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.390217394 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.360510478 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.360478971 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.703840449 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.372391042 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.371361538 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.361906126 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360672141 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.382863207 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.360720706 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363535771 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.454008459 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.363815455 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.425281941 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.744934468 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.741978439 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.362938561 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.35812646 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360558042 seconds)
  done (took 150.298406511 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.428575722 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.435626106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.48446216 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.383492927 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.412671146 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.488793474 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.383564284 seconds)
  done (took 11.292140527 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.368882771 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364948571 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413353918 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413395802 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.364741503 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.544487442 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364894841 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376216232 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.362912719 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.418026371 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367281691 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365066953 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.372548334 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.357587428 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.413472662 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.375539623 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.479550528 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.364922743 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365534225 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.522931683 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362386661 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.372046458 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.416853507 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.376793359 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.367393235 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.370899121 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.185521553 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365451631 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363187196 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364329375 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363651298 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.439460135 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366000559 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.364727164 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362499492 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481573808 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.365444374 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362997088 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366775937 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.36572776 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.366276335 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.366081691 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367914434 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.365151479 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.36678706 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.38877704 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366135427 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.36644393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.367831102 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367910767 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.416801935 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.366943932 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.3647684 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.364349961 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.422561868 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373827593 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367444503 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.364930386 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.367600657 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365567215 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.524579147 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415234885 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.368363591 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.415213604 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368505974 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.367564388 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.367715284 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.367623552 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.422348564 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.369119457 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.4173462 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.366372391 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.554213952 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.391097234 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370362803 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.370508155 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.371369092 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370355956 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.366105683 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.373177604 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368027356 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.370391112 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.374573514 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366251491 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367264478 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.535049276 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47808119 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.366180217 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.381967735 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.375394368 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.367053345 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.421742463 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.370042946 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367443477 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421094314 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.485363644 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42348859 seconds)
  done (took 156.878783389 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375569055 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.377274312 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.371462367 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.385906681 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370510176 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370214365 seconds)
  done (took 9.532523948 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373624501 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.37343395 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.370207307 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.371129313 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.371143295 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.371381618 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.371265172 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372800413 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375500042 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.371778196 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.371866172 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.371963216 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.373175521 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.372088657 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.371941442 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.37218065 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.373176731 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.36919378 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372593055 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371642898 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.476268149 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.37135896 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370828507 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.372757332 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377640227 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.372463987 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379714738 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.372588419 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.372573293 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.377582774 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.395188569 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.37271405 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.373079082 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.379759479 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.378488788 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.373293801 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378562607 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.373825105 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370837614 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.373848256 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.374528516 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374160408 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.373306343 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.374875038 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.375526331 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.379575443 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.380303278 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381051789 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.373817775 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37545198 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.376186668 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.374646536 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.374863944 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.376058924 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.375645777 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400704361 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.381291382 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.375121276 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.375629644 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375684688 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377451502 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.376210295 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377315226 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.38017618 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.373533536 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.377136201 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.375970365 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380664859 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375720006 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375020007 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.375885265 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.375063718 seconds)
  done (took 101.40801512 seconds)
done (took 430.677317225 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.539835549 seconds)
  done (took 7.825984259 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.747874492 seconds)
  done (took 8.036281409 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.598399283 seconds)
  done (took 26.89018079 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.440408297 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 8.844181346 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.412430487 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.370117108 seconds)
  done (took 29.357668138 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.512785483 seconds)
  done (took 7.79994064 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.369397727 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.3795091 seconds)
  done (took 14.036744043 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.732158985 seconds)
  done (took 8.018867414 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.458119001 seconds)
  done (took 7.752546109 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.38599594 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.399871512 seconds)
  done (took 14.087589484 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.349103851 seconds)
  done (took 7.636095649 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.70296553 seconds)
  done (took 12.994340058 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.378235371 seconds)
  done (took 7.667975706 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.433701567 seconds)
  done (took 7.721315517 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.946446973 seconds)
  done (took 11.234058069 seconds)
done (took 172.342701369 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.369859947 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.370615732 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.37063073 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.368562695 seconds)
  done (took 26.767360966 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.412618392 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.413413995 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.412411626 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.422591418 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415060881 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.411439398 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.403855531 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.404258768 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.422390714 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.414391547 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.413931701 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.414448252 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.412116773 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.404536974 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.414061984 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.414484653 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.423916732 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.414071338 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.404457568 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.415788346 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379808239 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423722908 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.415248842 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.381091259 seconds)
  done (took 35.153335292 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903453839 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.452502164 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.533311806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.432448276 seconds)
  done (took 7.610255122 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.431630996 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.434816226 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.44814413 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485945572 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.509739095 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442906551 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408252389 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.401144334 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.387607048 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.434339211 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.508891345 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.450346746 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.519048024 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.38012901 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.562044415 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.38066326 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.381032776 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.432461898 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.485015007 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.499778392 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38135109 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.433702827 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.439804205 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.449916274 seconds)
  done (took 35.978866104 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.380595898 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.398952838 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.379571366 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.378756053 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.389482704 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.381097825 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.381876488 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.380748559 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.381383903 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.38622957 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.379905225 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.393113621 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.379832718 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.380116809 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.386666515 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.382027517 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.386640025 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.380457075 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.379839082 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.386763205 seconds)
  done (took 28.965943149 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.375251128 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.05948024 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727210722 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630462729 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.374159951 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.384903766 seconds)
  done (took 28.843768675 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.466430075 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.662465402 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.390571857 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.83275774 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.937576971 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.411962286 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38445115 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.678073014 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.08903421 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.078219599 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.458951449 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.470645307 seconds)
  done (took 21.158155335 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.394580038 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.383682619 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.396850609 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.400993587 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.450242363 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.414783829 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.389050043 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.376323259 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.460451442 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.482541502 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.414537337 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.451836874 seconds)
  done (took 38.314443337 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465481302 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429013876 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.58764311 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403262553 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164811996 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590537343 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.436708358 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.875919983 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.395478456 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65506803 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380509645 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480797405 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641381772 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397574133 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392599449 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.561037686 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639230157 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964516918 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391790325 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.084598461 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418165657 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389314959 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.108140213 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.424486363 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594956713 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.530999664 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.644312079 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.161066486 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730113652 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395924632 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39582746 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383846776 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65845361 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135617572 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511333381 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394907966 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384608129 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.934169291 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.383691256 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.100663469 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395134617 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396886496 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39619878 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385982819 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320632542 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399959321 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863561899 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.399733178 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.097005425 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386269106 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397396361 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479642063 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.389492868 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.959797711 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479729316 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.401378054 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.389602028 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4839726 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983100933 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.660739245 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414749087 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.329210026 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387348532 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977954383 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111620378 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.412586965 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.390626485 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390394572 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330924212 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.073197909 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411592746 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532338162 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.409016805 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.080581198 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247800199 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.425281571 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338161471 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003088416 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394246359 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.330963496 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616396255 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164258073 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327049746 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.334489043 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320804517 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229008562 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404984353 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.949457133 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417185771 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.876768419 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.40744217 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40890111 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41122308 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61271493 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.266225302 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388168687 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.400517157 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518862077 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410377957 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854825372 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342499202 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.392963162 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647403052 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.600796028 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398008065 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.569338643 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65157272 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409173305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.418068995 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389121205 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.409240667 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.061562889 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422502087 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.655471771 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415122795 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.168205301 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267794662 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417466888 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.401565629 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390085141 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707298818 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.299980594 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284017988 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458147798 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394794357 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389806964 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.100585548 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.995767335 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.27328709 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.386438365 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390339453 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.430260313 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.391550111 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385178623 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.391091009 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409937136 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.177739751 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614458814 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390405877 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694563985 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325795211 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537950807 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.438972831 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61656441 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.750630726 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.418468375 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654750418 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409136466 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400096315 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433405396 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410356428 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494392878 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415127408 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.398940186 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658356882 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.396875486 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.397744843 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.112481504 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.181694167 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401632542 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.399547304 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39556058 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076317539 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405769855 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396046313 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453229344 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.407296804 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460828158 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398880108 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.405049368 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.606492528 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426539771 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.426446143 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.390613828 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6272304 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404967326 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.036674056 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481488087 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.623216308 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07860589 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427575454 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.330046945 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.106321876 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.088382937 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394716714 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.584925462 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394024697 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406564988 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4047272 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406179651 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.072168732 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417828826 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.034415126 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.408402558 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405812256 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.40154224 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396058834 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.608013778 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.719634283 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417479474 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.41506678 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539133992 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.410497158 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330884272 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912878776 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402960472 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397050166 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.174421878 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431480169 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.02563099 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926975767 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657963041 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410288371 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416596476 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.240048127 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.441992286 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.409426815 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408377686 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420894992 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.422252082 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404667168 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.408461001 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.135818945 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.809912361 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963267248 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276437835 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051501185 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.554746445 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.408351295 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.319287636 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.867348778 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340499726 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.056874161 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630129801 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.896594035 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400767447 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629289334 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.768750859 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.345716617 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419736498 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626895368 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531986329 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.424119303 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419232682 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609516343 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433603894 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401569358 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.349500414 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.693412452 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663803479 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411851266 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48616663 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870442344 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408447439 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.186366133 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.413001513 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.935792223 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633163288 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.947464769 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.843941809 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399868316 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.422411519 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930337733 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403770493 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.929347705 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105205067 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426337798 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.641367303 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349837994 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412063796 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411859355 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.39684758 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.130412052 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.407956462 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.664572041 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41316763 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334951784 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41551048 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029996534 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.279819533 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408690227 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40401947 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289302524 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41594101 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.755779354 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.404307604 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.614474078 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436138634 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.336961137 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336743626 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.094950538 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410812792 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386248957 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970462003 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.402212447 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41575958 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412587022 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261904649 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66106519 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417306034 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082656512 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651008393 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408480301 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426848198 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.406542146 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40333696 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.415157271 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.300733415 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639464931 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.521632925 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63832093 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.627773215 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.312551718 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.993959809 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645234443 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.30514225 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40334739 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70586175 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.135422918 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.425536912 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272696151 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450693271 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41676082 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.460109826 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406677458 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445811601 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497675284 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416154826 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.415452972 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.416468189 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607671914 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432560267 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41541696 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.419304697 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499000498 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.774601873 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.623420599 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.188366583 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090610484 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313285237 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110459425 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44031509 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405551538 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40597963 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349882014 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556773776 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.935022477 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68051082 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533263125 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.40871899 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429170594 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406506793 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444277374 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626682027 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679070999 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382113612 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409223555 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.216365945 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.301273141 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418336948 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.619233239 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982220425 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048868581 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531612948 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407421179 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.903929176 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68991081 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.499085073 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405520991 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002954974 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.413930575 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.961297266 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.443647543 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416930795 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56442434 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417173685 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175113971 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.447891124 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.567812428 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.180986715 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174223215 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676503804 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.061551843 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.429096323 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093764858 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.24654317 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673739498 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47959073 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420426883 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.517085723 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559966986 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.415547699 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.299730306 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409839778 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259038464 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.120757689 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.419889214 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096585086 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695206632 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.412942686 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.421399996 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441368005 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.419713094 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634348644 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262252911 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645281537 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42250373 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420527728 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.020517977 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095904295 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445953039 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353908438 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.413784839 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69746231 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669816664 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433008077 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.863970202 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.121109724 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033106892 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.38656505 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432854288 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42470162 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236485884 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093364193 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.638052627 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019167853 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.078791368 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427880807 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693359006 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.414360131 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408572814 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694194932 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.413371905 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426239231 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429511458 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.092855124 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.332210341 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.416401199 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.20936659 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.355926872 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.638065411 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464810424 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385548544 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409900546 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.617456898 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419560414 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536104575 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421391153 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.420029655 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419456458 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.152699622 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742863475 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.415237389 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.413489513 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.399541559 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447767028 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516122583 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683852121 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415283978 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.086183903 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.763224543 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668124816 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411136324 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.399604597 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414821498 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412485491 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166255118 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.461984383 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432823632 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051800048 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.413411153 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.431368926 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416455551 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.628801893 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623094364 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413208385 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432379272 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414840534 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435283723 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.320019413 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.21519128 seconds)
  done (took 1681.866212426 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.441163096 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.456412285 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.424722773 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.444307687 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.478808072 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.464012504 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.461103789 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.502092053 seconds)
  done (took 52.999396711 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.428919354 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.581895009 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.446190648 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.422537177 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.429945323 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.420477891 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.974664906 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.443549926 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.422002213 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.420529541 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.415336911 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.417284142 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.18642458 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.430031121 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.414598844 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.413005171 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.421274277 seconds)
  done (took 67.023548062 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 54.849166408 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.650633534 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.174874222 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.481909953 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.96437205 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.421596871 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.576694044 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.43176374 seconds)
  done (took 103.879998203 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.430054818 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431712794 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.430287379 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.431374819 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.432315333 seconds)
  done (took 8.487836079 seconds)
done (took 2138.338173979 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.419086748 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.420255616 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.418386758 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.42112346 seconds)
  done (took 7.007326753 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.393786069 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.148898237 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.404394331 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.416178895 seconds)
  done (took 18.691583739 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.415535833 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.450571759 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.28843602 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.215936073 seconds)
  done (took 5.834730702 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.167520293 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.181325573 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.166053478 seconds)
  done (took 7.850179394 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.417470645 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.427612766 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.425770424 seconds)
  done (took 20.603191763 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.725481624 seconds)
  done (took 3.062254637 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.566013318 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.617530172 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.819139095 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.764872248 seconds)
  done (took 8.102749247 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.802314476 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.806990802 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.602200955 seconds)
  done (took 6.543813935 seconds)
done (took 91.886262893 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.884599799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.443045522 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.620021476 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.852687353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.651726868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.621526587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933596642 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.823477858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.363322009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.353969956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.860598088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.649947209 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.653724462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.443120383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.654302161 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.445371918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.649591887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.927488622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428801245 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.432939294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.932993867 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.49248643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.6901384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.851160944 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.659047383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.572244245 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.074867641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.445868964 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.420055581 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.117140029 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.572773906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.420489802 seconds)
  done (took 202.278100767 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419449144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.420285102 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.420010853 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.420526397 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.428189099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422585622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.42021516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.453870551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.428755069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.42081478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.44113213 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.440879681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.422218848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.441086617 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.442024114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.421763578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.41976777 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.437524428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419651411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.424225245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.421755089 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.421393665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.420890302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.421403741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.449243147 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.423579688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.42778463 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420744956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.44342186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.423832416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.432075051 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.444420815 seconds)
  done (took 207.051547967 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.422478536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.446891624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.422043499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.45151668 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.439080882 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.439783898 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.423245602 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.422124871 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.435335075 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.429886583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.44438518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.451289774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.423542868 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.422359228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.426986446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.422070368 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.423423792 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.469516273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.438953351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.423731717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.425631411 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.437301051 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.424154404 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433397195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.443180536 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425743096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.442196389 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.42375783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.444534896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.433513201 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.43459181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.432379284 seconds)
  done (took 207.21743731 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.621776827 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430784395 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.43288392 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.370842452 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.431828707 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.430974135 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.430720122 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.660900499 seconds)
  done (took 15.147678217 seconds)
done (took 633.02493009 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.058842366 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.752708689 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.656363972 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.452487435 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.333059013 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.473158157 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.452697757 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.65877027 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.420349198 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.667099053 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.924743534 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.479942042 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.018021751 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.451048808 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.742033032 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.568339319 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.416255304 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.526847279 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.81910918 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.109717075 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.750359557 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.04303406 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.677524353 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.42977832 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.02757798 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.031277894 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.304657151 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.416557287 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.481171926 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.815287911 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.474392312 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.58248853 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.527678433 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.527092191 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.590632757 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.564434527 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.547148506 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.524642068 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.679203402 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.789588972 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.160412801 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.229638001 seconds)
  done (took 99.497824367 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.416445518 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.416634679 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.415420563 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.416782178 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.417549775 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.416992302 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.416786342 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.416157558 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.416493089 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.416711267 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.417282973 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.418110437 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.417176608 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.417848906 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.416844186 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.416554419 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.417676398 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.419905724 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.41733497 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.417276598 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.417711732 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.416080147 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.417868687 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.41819049 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.417173127 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.418472848 seconds)
  done (took 38.1908428 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.43745038 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.705523433 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.894129173 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.442404355 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.437374113 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.441950837 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.536175921 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.447165535 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.439728547 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.442699091 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.624440007 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.441812795 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.477381629 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.95038472 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.447853424 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.439314541 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.439160532 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.437793585 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.72280198 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.455669753 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.560881688 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.447454365 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.535789667 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.456556775 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.465054754 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439288613 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.443255333 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.021475726 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.461970655 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.624547665 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.415724154 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.539863599 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.979042553 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.944758561 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.430386218 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.449180887 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.441172514 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.633551934 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.445408571 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.438878701 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.536824605 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.447896757 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.913130611 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.146969208 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.470063812 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.440793127 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.047691874 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.658270887 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.751288263 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455706618 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.933294159 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.442709896 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.442682582 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.441123491 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.752218038 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.455990276 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.440306657 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.068677609 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.476572127 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.5377918 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.450798276 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.440482437 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.724681269 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.44470581 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.711135625 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.44202358 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.450217474 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.464926212 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.908665803 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.443810281 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.1698265 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.471855024 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.442492201 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.627833471 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.71027155 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.093061685 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.475520147 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.731179359 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988940393 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.557463143 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.453934179 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.014475399 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.56231616 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.454441963 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445858803 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.44464984 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.443533542 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.488601328 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.536446426 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.112247426 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.187364591 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.105679056 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.570564549 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.463637255 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.443489481 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.075254373 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.473902048 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.442981917 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.923037033 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.174224508 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.472354069 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.452534623 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.169258613 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.474516349 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.539495583 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.455580987 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.931380183 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.452270505 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.490725216 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.444543302 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.450044186 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.470116192 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.538301979 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.449776692 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.445014688 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.125917179 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.656364517 seconds)
  done (took 191.627815063 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.447235074 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.437495536 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.439322443 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.437496771 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.436608243 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.445400401 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.437835234 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.437813216 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.444297922 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.439183661 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.438093803 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.437044838 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.438988793 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.446614118 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.449238016 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444270503 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.049558148 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.439132183 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.437841209 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.45963055 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.287619062 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.448725721 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.439647198 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.437894085 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.440987831 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.441730859 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.44420221 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.463655193 seconds)
  done (took 155.200024992 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.446782797 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.120861842 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.468803136 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.60450648 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.471721426 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.444706826 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.602049983 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.515356855 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.467236046 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.446698349 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445332644 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.80739266 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.448247542 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.064122333 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.68318097 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.627866033 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.063531222 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.469056878 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.446110004 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.445984761 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.606133009 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.453905883 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.807824737 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.122670976 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.470757157 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.123852801 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.431398794 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.44933599 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.446579763 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.12526144 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.468371273 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.811789558 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.540470396 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.519033966 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.146937951 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.119939993 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.130475764 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.635025304 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.447868153 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.447257217 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.445414681 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.432301865 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.12657665 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.471563756 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.450149569 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.118772437 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.472850706 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.45132041 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45574348 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.447285661 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.519420206 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.54143962 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.838059903 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.131763455 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.561761908 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.463113687 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.606260601 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.866925255 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.450719601 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.089677212 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.440341294 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.132944953 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.472682107 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.432129328 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.449491524 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.455022239 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.63040872 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.606689329 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.069266676 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.474589697 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.102340293 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.658966818 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.448325263 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.449244632 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.453274212 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.132318266 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.132134605 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.661649248 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.611793088 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.692482745 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.440988227 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.447818009 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.435188352 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.543215417 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.45058301 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.134904756 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.115470165 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.48106625 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.453654573 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.452408863 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.453391594 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.673167547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.164321395 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.564381126 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.109206829 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.847453916 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.817805814 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.452942414 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.522116549 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.477028793 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.81914933 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.454116141 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.520083146 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.942666972 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.818418858 seconds)
  done (took 175.790240134 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.730802757 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.908930076 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.559718245 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.615346506 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.105405587 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.064487664 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.826262136 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.609478347 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.581524224 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.759062612 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.875372481 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.548704314 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.694888364 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.541693097 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.241808745 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.553140842 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.57717239 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.61272788 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.624743439 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.606029732 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.193460565 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.769407095 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.664101194 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.596529507 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.566697316 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.405752493 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.075917455 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.031153247 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.646565723 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.021127682 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.037629211 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.713159019 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.536339551 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.303256319 seconds)
  done (took 71.558329135 seconds)
done (took 733.200661061 seconds)
SAVING RESULT...
DONE!
