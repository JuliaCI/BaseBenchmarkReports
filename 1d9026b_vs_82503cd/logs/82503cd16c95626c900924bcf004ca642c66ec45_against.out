cset: moving following pidspec: 3725
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.314651706 seconds)
loading group "string"... done (took 0.476156273 seconds)
loading group "linalg"... done (took 7.671602311 seconds)
loading group "parallel"... done (took 0.171287965 seconds)
loading group "find"... done (took 1.176720444 seconds)
loading group "tuple"... done (took 2.108655125 seconds)
loading group "dates"... done (took 1.341867339 seconds)
loading group "micro"... done (took 0.250188468 seconds)
loading group "io"... done (took 0.678669685 seconds)
loading group "scalar"... done (took 41.278722046 seconds)
loading group "sparse"... done (took 12.670067278 seconds)
loading group "broadcast"... done (took 1.114299803 seconds)
loading group "union"... done (took 13.957193095 seconds)
loading group "simd"... done (took 4.794510546 seconds)
loading group "random"... done (took 9.619503565 seconds)
loading group "problem"... done (took 1.997063236 seconds)
loading group "array"... done (took 22.56478256 seconds)
loading group "misc"... done (took 1.447728918 seconds)
loading group "sort"... done (took 3.620836527 seconds)
loading group "collection"... done (took 19.457197047 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.521275212 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145008009 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137659846 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.161795898 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.231696282 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159104812 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161363544 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.10020496 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.345174418 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.192946223 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154394462 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.530764323 seconds)
done (took 5.591685545 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.229212845 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094800225 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10811732 seconds)
  done (took 0.879073768 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07818608 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147646783 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097613185 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079380769 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095902331 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.095355731 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.080266285 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.094407479 seconds)
  done (took 1.368856424 seconds)
done (took 3.242015184 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.745050384 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.290425666 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207744757 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.502424983 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.179747176 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215906243 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.690762152 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.360298409 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.263660158 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100957115 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147845146 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389253473 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137330488 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.704119748 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092476089 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127088837 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17748606 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.476522392 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084442889 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110528857 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118805095 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14249371 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129829072 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0921159 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18502493 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084684359 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198259485 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108524581 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082499583 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286552217 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201960462 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.696265604 seconds)
  done (took 11.045431532 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115604479 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137200857 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098211451 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139325926 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13493313 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100514928 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084568302 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098022405 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123402599 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178473035 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130784035 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126073828 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09582041 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.098387245 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104528109 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245467789 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121918418 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120896869 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085556177 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105295343 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122169756 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114982041 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110665689 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10913518 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166428161 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209495169 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112589506 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127174672 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097544302 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113469782 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143992623 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144382746 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094325914 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081721039 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173706082 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125123263 seconds)
  done (took 5.18030523 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192414315 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12103984 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173258706 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164683588 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150552116 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161823286 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118221141 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24979042 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.200578312 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17880945 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147203258 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100494686 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100123294 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086243541 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097143652 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.627145812 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166773143 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136144089 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118375314 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103391007 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089615934 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.418934516 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105198322 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080550596 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100212274 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129128863 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069821893 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165545443 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10122065 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.187996489 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122277485 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081568372 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136676556 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214947067 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127594628 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121556042 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097314891 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095040991 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180180349 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090324627 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097708207 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107515053 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137096911 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136361126 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099988805 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096960376 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.212267992 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080564316 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114686213 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.020860055 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18098704 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094993859 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09696855 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332639846 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098672523 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098065212 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078887702 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.310283908 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138165884 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086179767 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096581046 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079890248 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099450646 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.438771447 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080430963 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.968424597 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082184292 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108285119 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083679565 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097650292 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094041735 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087902511 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104497215 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098487052 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098423553 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08242525 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098773496 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095498185 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084438468 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109182897 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08623627 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097216083 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161700093 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109801924 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096474297 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099437525 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128848878 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10009153 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079178041 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131686712 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10210134 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081054878 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137469045 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099437141 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091394266 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101892909 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144114343 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097608321 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.221339386 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081740351 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127070454 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100497723 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115708396 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109291504 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099693384 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085093817 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097172941 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078179157 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165576978 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080362626 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098043266 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099110249 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078432655 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111644796 seconds)
  done (took 23.345782258 seconds)
done (took 40.247164176 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.347813189 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103130666 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104108387 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103331022 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102458774 seconds)
  done (took 1.510932731 seconds)
done (took 2.235540658 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283830302 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174728342 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095674952 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169536761 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094145923 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177550531 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162346499 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112719763 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.185231499 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095246386 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165682929 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078371729 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095676459 seconds)
  done (took 2.640899245 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096597371 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117351898 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083971693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11345097 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077618674 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113010237 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110379713 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101348219 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11145452 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086642696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094469925 seconds)
  done (took 1.829367941 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095879854 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114528267 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08403157 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111228464 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077783002 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111846673 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094473694 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118052555 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112302083 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086452961 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09508359 seconds)
  done (took 1.823808713 seconds)
done (took 7.010252307 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.095460584 seconds)
  done (took 0.813585122 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.022428105 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.036453017 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117713527 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.15777009 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.326766428 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.185354091 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.561276386 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12988693 seconds)
  done (took 15.475133445 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.118782976 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.103361231 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.119176013 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087015114 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.10278334 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101465968 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087921269 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100789053 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085721607 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101213778 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103445722 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085152325 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103771245 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086282884 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104089759 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102756796 seconds)
  done (took 2.37687956 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122170766 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119881549 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108693653 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110122988 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106418157 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088865487 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108599349 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107165278 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08747183 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105652785 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107857321 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091424078 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106294015 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098009953 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090941864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109144722 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104029429 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090141685 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108330016 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.107576973 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092787146 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09761868 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104891343 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092129828 seconds)
  done (took 3.293355578 seconds)
done (took 22.681960882 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162402532 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110598248 seconds)
  done (took 1.000190745 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103368913 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.122127976 seconds)
  done (took 0.958275418 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109350026 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098050732 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137674818 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116917692 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081238311 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09817428 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133180498 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097859764 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081030362 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098029371 seconds)
  done (took 1.786089558 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088450478 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.115674905 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.108953127 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.103664422 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111645753 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103757609 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097315908 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.105841348 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.118965537 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083271646 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10753576 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116614513 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10801174 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103579035 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.11348122 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107111726 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.092955542 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104674232 seconds)
  done (took 2.624989334 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081455356 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103227113 seconds)
  done (took 0.923533261 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08712636 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099110871 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086459247 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102633875 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098774498 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083474889 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099985199 seconds)
  done (took 1.393216829 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.482700409 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13960543 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259939628 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087445938 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122845428 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.310869963 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098444422 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105014866 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086287409 seconds)
  done (took 2.484859025 seconds)
done (took 11.905949007 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095027286 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120184577 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117723147 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.495549466 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.123080352 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081937241 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163082695 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257202635 seconds)
done (took 2.199883506 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151882921 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329171169 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118060172 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067847477 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096795923 seconds)
  done (took 1.355374389 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081326678 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102046431 seconds)
  done (took 0.923775712 seconds)
done (took 3.173727488 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081862405 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.131077737 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081106688 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097162987 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082049646 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098342978 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096742441 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082213916 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098546236 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081457733 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098817662 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081150282 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098157901 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078347386 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095394349 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08223642 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096354186 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081361785 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096422631 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079015764 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099016536 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078965109 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095085165 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079470945 seconds)
  done (took 2.943466382 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109735772 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098958904 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105000946 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088378229 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103725602 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104310765 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088514258 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098918938 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087137921 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100392438 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102560159 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086186694 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100794487 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103044652 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083876992 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103440293 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08821121 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099088335 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101021709 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086399415 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104305052 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082868498 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101511592 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104998341 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086482145 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101258329 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100303516 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082657922 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105573919 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085752377 seconds)
  done (took 3.641601964 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086133112 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0960358 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080202105 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103514382 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079143557 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102190198 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079132531 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096877221 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080076739 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096718955 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081744053 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097354759 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096333796 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079876476 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097355902 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08325796 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110160079 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079606039 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096714879 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080473888 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099900663 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080448749 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099861108 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079296871 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096213436 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07875062 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095791476 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096772075 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080408872 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096399859 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082076746 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099711339 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080263884 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103534314 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082739123 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096102639 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083484724 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095703324 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081303454 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097047897 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079274023 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096176953 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080140894 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102475599 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099516933 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081232477 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09776399 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080363425 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097544729 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.08278153 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096838337 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080031303 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098669093 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081608731 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09997569 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096016829 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080155058 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096686423 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079884626 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096383835 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079177886 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096941253 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081733744 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097201817 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095721595 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.1037489 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079871516 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098085663 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101107532 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082647854 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09856814 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094007969 seconds)
  done (took 7.271204792 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084483587 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108464403 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082564386 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09864853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077876413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097521353 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100218228 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080794195 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098953658 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087203016 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097214006 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098134654 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081523701 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108836541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081548459 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099291313 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086640232 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09499035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097148535 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083361271 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097326285 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084314961 seconds)
  done (took 2.781992699 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.220976365 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107169225 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143676392 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123735568 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099565852 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111498271 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103637595 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088699841 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104960831 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102215753 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085264739 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105596509 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090096864 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102832736 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103624674 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086660129 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104428866 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104095979 seconds)
  done (took 2.744599609 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09575009 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100676616 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.121902737 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083180814 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100973999 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085333515 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106771663 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121126947 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085468442 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099698556 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110483358 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085005786 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103028772 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083481983 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102759823 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083462085 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085157225 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10027399 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092262416 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10525513 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107265603 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092977895 seconds)
  done (took 2.923904481 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098735436 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103070305 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119924559 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086742231 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09639889 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081905437 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10795485 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082337434 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109534882 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102109693 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083245801 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098543301 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090179789 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099809755 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106501874 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083120968 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102899575 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084417079 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102205555 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096749716 seconds)
  done (took 2.695390003 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109003479 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102572993 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.1010407 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093613095 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101350703 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101272333 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09430864 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101615963 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101572425 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1104618 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102553976 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101840386 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095013518 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107823296 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103734775 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094925025 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.221409822 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111434071 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101031938 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084336401 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126830037 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101674792 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093437856 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102054788 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102449061 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083881323 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102079959 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10852174 seconds)
  done (took 3.719404759 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083235409 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100543204 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079716533 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098670805 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080108633 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098616446 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080859903 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09740233 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082844694 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097581256 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083198031 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100486581 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082880437 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100848243 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083644232 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099345154 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085062156 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097596153 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079802622 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097595618 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082893882 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100253896 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09993256 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0798544 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097980869 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082563366 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097402299 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080484735 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100057512 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080284858 seconds)
  done (took 3.472357361 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093354221 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108460333 seconds)
  done (took 0.966350088 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080281598 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117167149 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0807205 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104577513 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105969764 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083461659 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110240926 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088591067 seconds)
  done (took 1.533309512 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100576381 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115430393 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084147265 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114051594 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115309241 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099884872 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162223449 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102494353 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088959842 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099128357 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117335863 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081916064 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106217966 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082615684 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106345354 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089895907 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098490042 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106853104 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086673812 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100259698 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085458062 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111809929 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102953617 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.07927913 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102427559 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094419147 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111109775 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102882161 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08680755 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110151626 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089688902 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094759498 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083558583 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102910717 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099921549 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096494214 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115227178 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088610147 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108893309 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103020783 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113521028 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095979291 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106264586 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089257413 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1150169 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084807074 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102533476 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079559314 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098561825 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10430427 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078767497 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101621416 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077898862 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108678197 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087524908 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114258399 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100272569 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085916172 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104994294 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086468542 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10741406 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085835967 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102811425 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101097834 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090978829 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105516816 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091117471 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096784506 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077774694 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09907951 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109955848 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106136496 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109156209 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102349162 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085391324 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099224115 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086714856 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103523464 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091567624 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110618132 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10271294 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109153199 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109077065 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101101299 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085706881 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110416818 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081702769 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103928446 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099226907 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098837538 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100306487 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081334791 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100025685 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092898475 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104304979 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102414717 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082660732 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109561239 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077699581 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102767377 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085064844 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101852522 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111710713 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090944568 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108681393 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109025802 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094861558 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102023021 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087178164 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098969826 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085803687 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104146328 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109118613 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077456118 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105325993 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085329641 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103182527 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090936503 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099859282 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102964511 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091712068 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109565622 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083717286 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09886753 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086321392 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101669505 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107043052 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090734055 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100828286 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079118406 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097677469 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087726809 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101407177 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106326916 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090295445 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104863005 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078906881 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100147109 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106461098 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092364305 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102944061 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08438338 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106417497 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084490779 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101084234 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106545616 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086517768 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10031143 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089050735 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103959125 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079403232 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106267334 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104671956 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082811305 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106385944 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088833555 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104284707 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103899653 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083323534 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107491208 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085760662 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101289613 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084611574 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100432362 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111661743 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086620304 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097697544 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081383103 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110350952 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081061501 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101415617 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101468157 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086408002 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102511208 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082539814 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101664987 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086362387 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133006065 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107594612 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086286712 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107565317 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112142347 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083890342 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104399849 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08334982 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104038041 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085140721 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110195145 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108410296 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089848703 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104181602 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080539206 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107976451 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110345606 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0836383 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100529822 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083130476 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105740186 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092168311 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106528621 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103642786 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083398509 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102884831 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088240947 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105258383 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083966036 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100583006 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107706114 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083612666 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109506202 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103972157 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092989614 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106783808 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07978117 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107624802 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082695178 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109016092 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097571498 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082818403 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101347427 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085915362 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101433676 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086914536 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096773996 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091755452 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111637716 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10186654 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083200883 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103475507 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09342781 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103360061 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087662153 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105561913 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107457352 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097898075 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102433264 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088397451 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111014367 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103083494 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079392206 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107902467 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083114567 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101515736 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084627226 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100134236 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106174078 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093632588 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107462534 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078828122 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.1047806 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101649481 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083200325 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099043632 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09153798 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106379151 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086333646 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112079686 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10477538 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086573135 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106701304 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083909539 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104522642 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086054653 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106094973 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104951179 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086961814 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101655708 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086909378 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101876981 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082034328 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103867921 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102353739 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084084951 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108404744 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086367838 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103482423 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086664358 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104221035 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103904886 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085069722 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101464798 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088181752 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102726433 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08558952 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105510594 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080661772 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110159763 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104375298 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092985565 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10353441 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081556531 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109235657 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087553121 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10893949 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104289602 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085549334 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104323633 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084669831 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105120215 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11166178 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082100736 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111525922 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089850491 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103574944 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105674871 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085063296 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104425059 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083993651 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104583754 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085294372 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10272506 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08368489 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108100314 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10565797 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083864951 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105500505 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086571228 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103427123 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086662365 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096966475 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083900661 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102469222 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104187224 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092600004 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103756813 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087600007 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102424243 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104724719 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083271317 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099566352 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093182561 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11314561 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105118096 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093006352 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102496373 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086392391 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113154941 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09788457 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082784718 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101487872 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082778813 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1116801 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086269327 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111332255 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084538997 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103712501 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101768286 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086483844 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102952739 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079963359 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102839445 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089818938 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105456742 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08391988 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104303713 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114849311 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086835456 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111510068 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084963265 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104855932 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086296622 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099759342 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08278782 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102413193 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106432353 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085950399 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100671902 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082575269 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103218981 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086813004 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104190502 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085454394 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.1053476 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110291473 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084310676 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10639558 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089643899 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098427738 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106458707 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085393382 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102648552 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084301159 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107959415 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088689214 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105132023 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11031684 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084667837 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104178123 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086013979 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101323052 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085412275 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103799597 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103555263 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084766402 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105493329 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093572654 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102009378 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087621885 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10509482 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085404281 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107951569 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104796279 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08762761 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112801966 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088248585 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105990931 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109613637 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089553805 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106830396 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086447896 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105884161 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110303635 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08355879 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111919906 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08509835 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104746982 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086355517 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101612035 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103496125 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085911245 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103627816 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090736306 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105486358 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0846115 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102578842 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083001729 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106298511 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107881312 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093504692 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106110686 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088697914 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098950248 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081921467 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106253341 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101542558 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086664444 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106370566 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092035071 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105602582 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085644885 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103287696 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111239147 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091996439 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109048947 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082963046 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108717376 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10526395 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088232449 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106224653 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086037919 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105549029 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090498534 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105978713 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103150266 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093183511 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107242655 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087194726 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106057377 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085641952 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10422414 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099223615 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086290298 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106174801 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092635431 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106337634 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084983396 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11462892 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10362088 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085786285 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108890052 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084696377 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111030607 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09892458 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086380899 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105533519 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086556029 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100569256 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084770796 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101998011 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088338948 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103161435 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080819002 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113974043 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111411218 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08842983 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103376844 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083462474 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09960383 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099841442 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084609666 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10572291 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08663399 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11392681 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08479788 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103474447 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08163562 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105312132 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107048302 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088913035 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101540714 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081272544 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102687215 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087905235 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111467864 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103107995 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085453121 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107584639 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087601431 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102314986 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08981386 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101041893 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109560248 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09646996 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105827578 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087090897 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110608179 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11312975 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086683912 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100108495 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086816177 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10761193 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086164281 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106197631 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106050879 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100522362 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108043714 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085302367 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104678275 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088780315 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104168436 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112489762 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087290701 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10609018 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09068146 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107183346 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114607614 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089349746 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111554233 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088057547 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107238586 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10351496 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086387249 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103047575 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083556873 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105441654 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086118896 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109952756 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113590203 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08462659 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11418059 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093401285 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111098062 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100951523 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085743836 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104225729 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081206517 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106218917 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084801555 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103144495 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083540026 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102782436 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085672023 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111048887 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106040933 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086786155 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104665585 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079553856 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105755799 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088370881 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105586351 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081930233 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105896725 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105510002 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092249947 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110726198 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086805632 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106965587 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106080359 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086371211 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100808865 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092230507 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103368308 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088381542 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10401364 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086726217 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106961514 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108583267 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093815119 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106821527 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088618518 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117300065 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107772327 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083431914 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10314285 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091278264 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103037986 seconds)
  done (took 58.961523389 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150797409 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09362361 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100397746 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082024797 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11836132 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101600626 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081475504 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101403274 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082812939 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107271671 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081587831 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100397836 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113952165 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127445758 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099177147 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110300428 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100077709 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083126559 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099992749 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082455203 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11458155 seconds)
  done (took 2.947572988 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10646795 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118566575 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116578014 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121486842 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091872656 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117246451 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115928385 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117407918 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102589844 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112458493 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12091232 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117829085 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094424723 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112696025 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112754348 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096316998 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12258396 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110981276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118432581 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096697034 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115377017 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115700157 seconds)
  done (took 3.270120683 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097040761 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103972462 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089054088 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100255297 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085446385 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099541619 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090504073 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103126485 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108447663 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.084689223 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.103681103 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084082304 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108910554 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081740122 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103836462 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084077945 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155298046 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109220724 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105475872 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087307951 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099908831 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087471455 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100252865 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081459824 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103450894 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122012041 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086528914 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.102656712 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085355158 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.104388077 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08567037 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.101726633 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.086943886 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10533993 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083672539 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103520098 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085152069 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105280366 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.099802019 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084021925 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.10453988 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081041151 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105442834 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.086963655 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.104119235 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083398822 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106360866 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085345129 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100474774 seconds)
  done (took 5.575212162 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106791477 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163829702 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087997388 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146237905 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122714936 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115642615 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09002904 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123191112 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103466026 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085358296 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124764169 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121742488 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105157961 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091235942 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113034319 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105650118 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087943562 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104827006 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110679856 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086020299 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111582941 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112483152 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103351808 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120035258 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110152995 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10580683 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085510037 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111386435 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119274879 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092559409 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112376446 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112370164 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123503014 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091151141 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105176022 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089159641 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124405645 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106407788 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108623513 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084435592 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108655388 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092102873 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113331004 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123830717 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105168707 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091038853 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104889182 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.082774519 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12021674 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.107885442 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114337479 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101972816 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110351591 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106273722 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091705884 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122882411 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105758354 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085379738 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11119128 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118829935 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.083066699 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110735937 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120298597 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088709036 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11414579 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121546876 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110595249 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091579006 seconds)
  done (took 8.263373984 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095073387 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112578032 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122892268 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123305018 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092965161 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113666871 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113300818 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112310978 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093240533 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117939628 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111743121 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140139211 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087927745 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117402294 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112467811 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093149602 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113801058 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11358007 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112881625 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092747666 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113408264 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121905567 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111710192 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102842649 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144220308 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108188119 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112395909 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093850438 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122976702 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113802117 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126064559 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112314134 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093592934 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123314837 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126610894 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112834359 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08529684 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112493033 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112916952 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093831267 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10793249 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123654175 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114334645 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087598525 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113776276 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11283984 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103398179 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126959371 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117831268 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119980635 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112627742 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103191594 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112656507 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113285834 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123928839 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149818559 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12308103 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103451735 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112913176 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122719223 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122047264 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132005387 seconds)
  done (took 7.827159032 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115359405 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120638209 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127954039 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101991715 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084843989 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113659115 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084945859 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10409385 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118076451 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098764404 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122156935 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113505271 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117378477 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101359347 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113616072 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116970246 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113334494 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093996561 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119578744 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1138867 seconds)
  done (took 3.02591286 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095020513 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126527513 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086828552 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113738821 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110096659 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093752469 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110069395 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110215517 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089040743 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109852055 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118504112 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099227574 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107364842 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114463949 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099517537 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114192246 seconds)
  done (took 2.529527426 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099099955 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120384578 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12638638 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086178597 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105908803 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103453899 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087158769 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102573553 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083209281 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124033228 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.107546137 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089916292 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108324518 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084859705 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103852326 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09058642 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104516471 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.10465998 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087847974 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127340629 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.118138885 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08645235 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108178641 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089749073 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10709831 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113320839 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086953077 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105048878 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085640793 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10732861 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106466855 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095263344 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103970269 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085738506 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.106017874 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104467569 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.08665537 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107307298 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089858815 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107093183 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084058965 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107810589 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107557237 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088618617 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102939954 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087970559 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104008223 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112512618 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.084602233 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107780804 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086311376 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109743334 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10720968 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098734087 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111170145 seconds)
  done (took 6.382905363 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101889886 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110950465 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08265863 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105271687 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090465527 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110181089 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110776675 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089690042 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1086433 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08527845 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109581242 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111276176 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089330771 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110671725 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088742885 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111097368 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083164592 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109116994 seconds)
  done (took 2.645818562 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093455608 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10687269 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094336791 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108872332 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08738131 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110827341 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103025453 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085927694 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104759911 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087893235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107228911 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089284906 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105412707 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089828448 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10756968 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106720668 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089512169 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10504593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086777246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102833391 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090243643 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105799261 seconds)
  done (took 3.009903138 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12314031 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127156603 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094366627 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.237050016 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105721303 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13442999 seconds)
  done (took 1.664736269 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111651021 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123832161 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108129266 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110624288 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118316063 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109428979 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08957122 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110323504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120492718 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125144547 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089541262 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121885176 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121009027 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120021747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096840525 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11757765 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110971326 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0898131 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108249805 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13252325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10937632 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10214944 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109638623 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109655098 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090459982 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120484372 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120707902 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125000264 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088856841 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12056777 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116942348 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109592881 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100749892 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124290319 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111376844 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121763491 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089587338 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131454434 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116735164 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120536116 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090318217 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11785317 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120865271 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115971328 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101196804 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109974846 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116778805 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089877247 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110392444 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137020809 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117648668 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120078818 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097678551 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120949553 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120655092 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138226995 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126184157 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120264936 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096510888 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124289178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120659869 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117151178 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120011177 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124670588 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097499864 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119812088 seconds)
  done (took 8.312967941 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106139209 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12757823 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110250161 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125636618 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100073266 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110567797 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111031096 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089222639 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111100381 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108684442 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156856084 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092128518 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120551191 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120164451 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110046546 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091229358 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110385754 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119513752 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088846427 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138716071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110365798 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121131279 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119815061 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119666519 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106154838 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117632506 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110342696 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090097712 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111613564 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110375325 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116974564 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090209045 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122533542 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108690641 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099072422 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110558479 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110128915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116369163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090087326 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117617949 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121295779 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131217849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090850308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110609347 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124956091 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109737205 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091176733 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109088339 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090271782 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109382831 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125516669 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126435717 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126021779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099317094 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111137428 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111442758 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089914701 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110803201 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111472238 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117357136 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100894102 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110758962 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139971027 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110787287 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090366067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120688429 seconds)
  done (took 8.190040112 seconds)
done (took 158.040269447 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103691765 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140868949 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.122636945 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.149096786 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10824973 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121901555 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140497996 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102391279 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107916028 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086328052 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108759817 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110281876 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152449695 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107794914 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088155617 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110113751 seconds)
  done (took 2.707824029 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203080243 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.271984875 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104536308 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107985837 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.11309214 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.088337955 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.107303898 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096081334 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108520976 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087015141 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108098856 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08739187 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.108374106 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088061213 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109306241 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107874011 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088395601 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107737642 seconds)
  done (took 2.947018008 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115213632 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147827151 seconds)
  done (took 1.117688598 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121747686 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184967878 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302575696 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156229657 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120023413 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130385992 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157080226 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133350791 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.213803588 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126574341 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125468514 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120927523 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.123481968 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11779515 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116670533 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099065253 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145265465 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116614419 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09638244 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.119327555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140900597 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087287571 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117925573 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115610024 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.195783538 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.103616399 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.1099745 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086394858 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119774058 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11777366 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094033507 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129334663 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121782175 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175133968 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126110118 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.161561999 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.120681658 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113837013 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096986203 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113984112 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121361414 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101590576 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128429122 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120642317 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089882642 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120716367 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086871316 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108342547 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11618644 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100207042 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116106334 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114480202 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.160841924 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120697848 seconds)
  done (took 7.736245832 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.826863859 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156340073 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114455703 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.903482861 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14083554 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126785946 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.797613787 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136456086 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23545094 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.801531833 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133638145 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100221908 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234759875 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260892606 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913039146 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313774791 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.707362197 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103709455 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142823183 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158327309 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119673597 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138419469 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109933734 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434217789 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11723477 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112903261 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097014002 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121471975 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163441902 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113155193 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094069743 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202694084 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251673522 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209341866 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093876276 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112536546 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110576464 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.174840752 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272847125 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198288546 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.200642408 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088943029 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111766352 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10208618 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131784669 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108954885 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167818716 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177519428 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196188366 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093347139 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122652576 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119701643 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099131501 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.189723144 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101211013 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315624989 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324440147 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11304481 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119511194 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106956675 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269021511 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125821779 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230504918 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115749563 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220126753 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111925574 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807596317 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173984386 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09108265 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11993445 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119335248 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095121146 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121049298 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170443599 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394700365 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125220948 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093824341 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112431269 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24210276 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092800148 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111451861 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165564872 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115788597 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099192937 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125332871 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122085312 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173240242 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230033575 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124168763 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120686433 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095722101 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125023029 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115797898 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214732658 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224123422 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166534222 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212202628 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123037996 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18925608 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17347886 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120427451 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17718025 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117793675 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104804908 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123526168 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222067233 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149043258 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125207817 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095182291 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119727451 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150437499 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11392052 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098450967 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.174976844 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.488690858 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171469121 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109889373 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093972632 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120644862 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164068014 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118744611 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261470428 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099756812 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.195659099 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096801282 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110311748 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118900208 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169237946 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123674127 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098865625 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124893504 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119832352 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.240341616 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222500211 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124605872 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2216802 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183980693 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120264973 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176222763 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121147842 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173071758 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12201724 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121104716 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095652783 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799895215 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123876017 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097216956 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118011706 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190751675 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112385928 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103872607 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.112688431 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088595478 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780831358 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115023583 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101871744 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126670658 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119624851 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097381811 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119377076 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116845699 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166553331 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237291843 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122073225 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097062419 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114115386 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164294083 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117057464 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.09147289 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.114291253 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090747864 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120347584 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116940999 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104851229 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196492898 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167067125 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227673576 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565592584 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091611293 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.112832954 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232752015 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092112469 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297667609 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119644356 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231140099 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168052269 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122271228 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316902183 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170353973 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190874594 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093878495 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.201421839 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088463075 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120015238 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168836677 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113362925 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118138968 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167046813 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125541435 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103061527 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.970670118 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113041034 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229937018 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108991647 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175218383 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095025524 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122466668 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296146528 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112894139 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10832222 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.190126203 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094760202 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.113869852 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.705119173 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114326621 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121224959 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098278295 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228396934 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189108165 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097988711 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119335455 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121938906 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166681905 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21278928 seconds)
  done (took 44.370054597 seconds)
done (took 59.730045668 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.300658039 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219366729 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262898877 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17214453 seconds)
  done (took 1.909305042 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.185568299 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.15252698 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125339278 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110489274 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156461816 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086466368 seconds)
  done (took 1.70143939 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.393410102 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279200752 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24507068 seconds)
  done (took 1.807560123 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253359982 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.272562545 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331338811 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421043236 seconds)
  done (took 2.259584342 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.284162799 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.148323023 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.13847773 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.170580803 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.206905195 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.297138619 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.168118122 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.249101628 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.162394856 seconds)
  done (took 2.751252665 seconds)
done (took 11.314640157 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.256799263 seconds)
    (2/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.31536303 seconds)
    (3/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.160492812 seconds)
    (4/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.15995097 seconds)
    (5/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097720552 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.117742265 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.149436318 seconds)
    (8/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.233116809 seconds)
    (9/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197210597 seconds)
    (10/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.218271868 seconds)
    (11/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.179507566 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126079021 seconds)
    (13/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.124024196 seconds)
    (14/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.19795163 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119862406 seconds)
    (16/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.126536507 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104115667 seconds)
    (18/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.165384583 seconds)
    (19/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.1246748 seconds)
    (20/286) benchmarking ("sort", Float64, false)...
    done (took 0.155467696 seconds)
    (21/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.118563107 seconds)
    (22/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200495662 seconds)
    (23/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.206254967 seconds)
    (24/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.17175046 seconds)
    (25/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.186843903 seconds)
    (26/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.226285452 seconds)
    (27/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.200182155 seconds)
    (28/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123846316 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.232694996 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097716341 seconds)
    (31/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.196751362 seconds)
    (32/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.223513292 seconds)
    (33/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170083278 seconds)
    (34/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091191786 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.204014159 seconds)
    (36/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150701572 seconds)
    (37/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.13251706 seconds)
    (38/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.120053288 seconds)
    (39/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.136507464 seconds)
    (40/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.094265698 seconds)
    (41/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.090355127 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118624423 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.130903111 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115112347 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134268107 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.114450371 seconds)
    (47/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175743212 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.137003899 seconds)
    (49/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.23865888 seconds)
    (50/286) benchmarking ("sort", Float32, false)...
    done (took 0.18015594 seconds)
    (51/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.170394106 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.144063831 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139885195 seconds)
    (54/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.142121222 seconds)
    (55/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.135526725 seconds)
    (56/286) benchmarking ("sort", Float32, true)...
    done (took 0.239048538 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11315616 seconds)
    (58/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100830707 seconds)
    (59/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.195170304 seconds)
    (60/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.130661631 seconds)
    (61/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.208917838 seconds)
    (62/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154247088 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.121197073 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140926728 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.106091424 seconds)
    (66/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119213728 seconds)
    (67/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.12013099 seconds)
    (68/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.19717607 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.226981568 seconds)
    (70/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067488733 seconds)
    (71/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171816184 seconds)
    (72/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113432663 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099329044 seconds)
    (74/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188658517 seconds)
    (75/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118540541 seconds)
    (76/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.103230888 seconds)
    (77/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.198354758 seconds)
    (78/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.091883481 seconds)
    (79/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13324182 seconds)
    (80/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120321159 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106272878 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.10943665 seconds)
    (83/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.125450902 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139503217 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 0.110527626 seconds)
    (86/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.072486953 seconds)
    (87/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.06864669 seconds)
    (88/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.094407205 seconds)
    (89/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090482572 seconds)
    (90/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119107495 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090043965 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121259186 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.094533666 seconds)
    (94/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.147859026 seconds)
    (95/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.068573481 seconds)
    (96/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.124968734 seconds)
    (97/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129573333 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.17305474 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111972074 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166944789 seconds)
    (101/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.151667907 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186533446 seconds)
    (103/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138567231 seconds)
    (104/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069861041 seconds)
    (105/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.123242155 seconds)
    (106/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.100456807 seconds)
    (107/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11584275 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.135484962 seconds)
    (109/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.097437808 seconds)
    (110/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099416267 seconds)
    (111/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089422957 seconds)
    (112/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.10220656 seconds)
    (113/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068847743 seconds)
    (114/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097005432 seconds)
    (115/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.191268421 seconds)
    (116/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140182196 seconds)
    (117/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088406533 seconds)
    (118/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.093220142 seconds)
    (119/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150402662 seconds)
    (120/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.096312294 seconds)
    (121/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.103275696 seconds)
    (122/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124512504 seconds)
    (123/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069090673 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139819254 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.197377441 seconds)
    (126/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137581751 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 0.189603528 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098396859 seconds)
    (129/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113008076 seconds)
    (130/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069837847 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118767801 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088104699 seconds)
    (133/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071968943 seconds)
    (134/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127199166 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116474037 seconds)
    (136/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092246255 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134641482 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099917285 seconds)
    (139/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.110898019 seconds)
    (140/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127559119 seconds)
    (141/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.152488714 seconds)
    (142/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119496308 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097137173 seconds)
    (144/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11846587 seconds)
    (145/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.12069537 seconds)
    (146/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088751639 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110540678 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09692586 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.12060281 seconds)
    (150/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068819673 seconds)
    (151/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121636237 seconds)
    (152/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069920448 seconds)
    (153/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.196325098 seconds)
    (154/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091304183 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122059204 seconds)
    (156/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088556808 seconds)
    (157/286) benchmarking ("sort", BigInt, false)...
    done (took 0.248280824 seconds)
    (158/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.153567294 seconds)
    (159/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.158220846 seconds)
    (160/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.069186789 seconds)
    (161/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092584038 seconds)
    (162/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158298893 seconds)
    (163/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.149240499 seconds)
    (164/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08785082 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139080809 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.188664573 seconds)
    (167/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069642667 seconds)
    (168/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.182738485 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.207500512 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095743883 seconds)
    (171/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.107530237 seconds)
    (172/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.114834401 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12235291 seconds)
    (174/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.158739158 seconds)
    (175/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096206592 seconds)
    (176/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118910782 seconds)
    (177/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096774886 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111585168 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 0.231143408 seconds)
    (180/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.116963975 seconds)
    (181/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111175891 seconds)
    (182/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186369708 seconds)
    (183/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094963685 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111017332 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089047417 seconds)
    (186/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112192116 seconds)
    (187/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069587488 seconds)
    (188/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118443067 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08930892 seconds)
    (190/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191805564 seconds)
    (191/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113545645 seconds)
    (192/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.072263087 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138426095 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098618216 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120316558 seconds)
    (196/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112519265 seconds)
    (197/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118680005 seconds)
    (198/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097341462 seconds)
    (199/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115044591 seconds)
    (200/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072880004 seconds)
    (201/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115396087 seconds)
    (202/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.06887739 seconds)
    (203/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095999192 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088716758 seconds)
    (205/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.145556493 seconds)
    (206/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072941235 seconds)
    (207/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068552834 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11985829 seconds)
    (209/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069170151 seconds)
    (210/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117855241 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088177182 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.330893503 seconds)
    (213/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096007661 seconds)
    (214/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092058751 seconds)
    (215/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097155202 seconds)
    (216/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.111019429 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089663235 seconds)
    (218/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.102399787 seconds)
    (219/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.070195849 seconds)
    (220/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074998046 seconds)
    (221/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.092883461 seconds)
    (222/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09800733 seconds)
    (223/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092589934 seconds)
    (224/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.089755025 seconds)
    (225/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.092692523 seconds)
    (226/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.068498089 seconds)
    (227/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.118868795 seconds)
    (228/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070286211 seconds)
    (229/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.089942971 seconds)
    (230/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092512492 seconds)
    (231/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088473934 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.092810834 seconds)
    (233/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088707634 seconds)
    (234/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.100791257 seconds)
    (235/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084796265 seconds)
    (236/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.081125923 seconds)
    (237/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140123102 seconds)
    (238/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094001955 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111899065 seconds)
    (240/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070098939 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111094072 seconds)
    (242/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.07828458 seconds)
    (243/286) benchmarking ("sort", BigInt, true)...
    done (took 0.238690152 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.095225595 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.08850002 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118079314 seconds)
    (247/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.141433818 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121790584 seconds)
    (249/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.078303752 seconds)
    (250/286) benchmarking ("sort", Float64, true)...
    done (took 0.237950288 seconds)
    (251/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112361946 seconds)
    (252/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070558355 seconds)
    (253/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.094072256 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08892629 seconds)
    (255/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114695384 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088690601 seconds)
    (257/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068185162 seconds)
    (258/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.118912131 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118728319 seconds)
    (260/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070302615 seconds)
    (261/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071210334 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110050122 seconds)
    (263/286) benchmarking ("sort", Int8, false)...
    done (took 0.195964117 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088635855 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110797498 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120736206 seconds)
    (267/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.069646987 seconds)
    (268/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159832225 seconds)
    (269/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159749337 seconds)
    (270/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111190243 seconds)
    (271/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071462458 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118051459 seconds)
    (273/286) benchmarking ("sort", Int8, true)...
    done (took 0.228807797 seconds)
    (274/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072105258 seconds)
    (275/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.100629644 seconds)
    (276/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.071531012 seconds)
    (277/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.0693876 seconds)
    (278/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.101383369 seconds)
    (279/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091892916 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11769025 seconds)
    (281/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113912642 seconds)
    (282/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138307675 seconds)
    (283/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069231916 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.094568914 seconds)
    (285/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068784404 seconds)
    (286/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112175589 seconds)
  done (took 36.937486486 seconds)
done (took 37.828075029 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102848339 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152891027 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097869723 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141162156 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12580666 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093496642 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.12063903 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123830681 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102793153 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127527767 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100649886 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094299936 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099189464 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122248929 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122795431 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119977466 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125754674 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09595732 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121380766 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11134378 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.098071788 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111051557 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.091198286 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.093372111 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100143738 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.11896788 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09524761 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121676664 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087988028 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112318023 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09420909 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119929622 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087353852 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127557424 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.117781049 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097768664 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.123125768 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098580893 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113394359 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088485425 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119888489 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087810281 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11937027 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119678335 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095076813 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117521283 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098975552 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124429006 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144636038 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093701828 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.11998485 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099624374 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.122639806 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.095735357 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116582199 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097371637 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118189393 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144498783 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098495797 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116920417 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.096176342 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.120970325 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093410988 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.122292901 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121167038 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099226154 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123200551 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094161178 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123748681 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.093746318 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.111946417 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121119037 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092560416 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111547018 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098319814 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122367876 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087720673 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117085475 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095311305 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11804896 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.087896861 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114707273 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090350575 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118936942 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090785406 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094452161 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092916748 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118923466 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08825305 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121030429 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118251392 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096833244 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114135818 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101089537 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111672448 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094343236 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112831327 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089876424 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114366028 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092613943 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113222302 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092113932 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121840677 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09118784 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119242492 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124334484 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089672385 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118305474 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088690022 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112515974 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104317422 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122743188 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089180332 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118485381 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088175107 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119602724 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111892198 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089165861 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112077188 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088785868 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118604409 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089236073 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114825963 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097399319 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127178423 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088796968 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116051707 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092368999 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112729329 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094886 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112597078 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.0889896 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115005769 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080110308 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116219343 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089052398 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120777073 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091655778 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121161871 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113957691 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098850344 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116635549 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095192421 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117413046 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088370306 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.09906675 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095476087 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115008331 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091860997 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112657598 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.091199468 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112665025 seconds)
done (took 17.271187171 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089243963 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187329679 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.158563316 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14762491 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109232087 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113778324 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124600056 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14532204 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092027139 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145471576 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136444099 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109346469 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.152571644 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087553048 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11409464 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093706264 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11577741 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.130075566 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127558112 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134892279 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.168022648 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11224198 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149038919 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.113745385 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123019389 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.139780565 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090736753 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116327393 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093314194 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128878368 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109400043 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116795175 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089984783 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136423663 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.131319083 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097534726 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11275007 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09634236 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.114247233 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088526381 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142662847 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136337919 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.1181541 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.096046724 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116825569 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092623609 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115119195 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.099396935 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123904922 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117528154 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10443581 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158873613 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117297176 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123321173 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088933361 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125340232 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.099333294 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115527189 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09036718 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116516728 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.08885545 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.117347595 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129254384 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144352876 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095053795 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123675308 seconds)
  done (took 8.780928287 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107547209 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143629519 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131801202 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108826389 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112674145 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09089768 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113986545 seconds)
  done (took 1.762301863 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090100172 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140323851 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117848751 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140078501 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138812676 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.116975367 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120324927 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090509927 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13521019 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115570615 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115963483 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157232298 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116501988 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099718185 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14287756 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090246671 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141912436 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114226222 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094063547 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141450544 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094657877 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133796383 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092288415 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11586583 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.134045799 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090930977 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.180003524 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12164409 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089566829 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11838269 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089113285 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154376189 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.132221679 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.098131121 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115519463 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109257095 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.133223703 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087790836 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131216653 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122449696 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.109114486 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117904458 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092397955 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115922254 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095650218 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.128394184 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119275858 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092162843 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117898152 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114767587 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115418636 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108657465 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115215189 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.09447803 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117188027 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119759456 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100891082 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116356416 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114785355 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113822108 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111147117 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135295149 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132649081 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111171096 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118282514 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109687111 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.133330232 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118517824 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092622573 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118389636 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.11052733 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113403764 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.093969697 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.128980178 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09250813 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.142942833 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142621625 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093726281 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125796673 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090981523 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116380002 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091650603 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.142119878 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119070079 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092284518 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119112993 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094140965 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113699613 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089607737 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118513175 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089709523 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117886147 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094650284 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116158441 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09339096 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.135224871 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115996596 seconds)
  done (took 12.118048892 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092313692 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115971523 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094169097 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116856786 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092052547 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116337287 seconds)
  done (took 1.590757096 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120427269 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119882974 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.130029849 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098607927 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157463334 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135807049 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111036118 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125076044 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135740349 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105194232 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135525888 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111079984 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141722107 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122535569 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109699313 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121566144 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135140962 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101800892 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128814422 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123185003 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113344358 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122873886 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098597291 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13648449 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119239119 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098114864 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12670019 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.1290332 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104295023 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124990565 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122382293 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095179414 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123023114 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101143981 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136049318 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123265842 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097719615 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121218815 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127087032 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095553831 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135541576 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099118454 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129531013 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121676048 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.100430643 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123507814 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121708938 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10258618 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.134944896 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12073959 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096620119 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12185309 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095458641 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121277703 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122399589 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101315066 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120820145 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110667785 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124024174 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124146431 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096464164 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120965353 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124622613 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095573104 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133091759 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096610519 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123555068 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124575628 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099296534 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122993347 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096891758 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120627679 seconds)
  done (took 9.437270653 seconds)
done (took 34.636779649 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693647864 seconds)
  done (took 1.656397472 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.842213532 seconds)
  done (took 1.806431037 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.805037937 seconds)
  done (took 17.803175786 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507119866 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.600931773 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.002397744 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173699402 seconds)
  done (took 3.252994288 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941831636 seconds)
  done (took 1.929203776 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28743054 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238063739 seconds)
  done (took 1.498249537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.775679447 seconds)
  done (took 1.760066428 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.438698097 seconds)
  done (took 2.415790924 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33595601 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190900238 seconds)
  done (took 1.512102642 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.561856064 seconds)
  done (took 1.539133602 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.526062185 seconds)
  done (took 11.508603162 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270566836 seconds)
  done (took 1.264272205 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.3055522 seconds)
  done (took 1.291916832 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.564993978 seconds)
  done (took 4.551090873 seconds)
done (took 54.763671847 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10055833 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129487182 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104133557 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126289646 seconds)
  done (took 1.440101786 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107805464 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123517033 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10643432 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123932548 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132426362 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09742752 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126496635 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103409667 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122309442 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.124343245 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.098156603 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121903801 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10116434 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125381569 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095413542 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126342506 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127459379 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097431279 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126644554 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098303915 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120856172 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.125468158 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10207336 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12170855 seconds)
  done (took 3.743913076 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102375174 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120877785 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098754793 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121330764 seconds)
  done (took 1.432744304 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102312706 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133191753 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108318219 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126725966 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133698236 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107836087 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119380666 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094673445 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121853514 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101732344 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117621495 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142197425 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108914413 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127112436 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103406111 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115978077 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118459309 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.108517615 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126549388 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102055014 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120428349 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101878261 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117585669 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.135792086 seconds)
  done (took 3.787077547 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173757726 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129173725 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140803919 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097554482 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163542734 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142718167 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090028741 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14305791 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089130214 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133987268 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.121044423 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136364321 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131324698 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.090062974 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116833426 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.114896097 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104227074 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129163474 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.094088592 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129703163 seconds)
  done (took 3.463966415 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099801862 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119198975 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090974398 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118761946 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101091112 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122602097 seconds)
  done (took 1.647100105 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.0988396 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116315537 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095974912 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117651537 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09551015 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115646136 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090566282 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116476938 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091175168 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115446738 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092511866 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115893047 seconds)
  done (took 2.257083235 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.51311426 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123364543 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122893748 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091493448 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128188161 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091143907 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133269093 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095002997 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146510685 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091290286 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118212475 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.119366823 seconds)
  done (took 2.770172926 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245346513 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126815856 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288909634 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378097712 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18672752 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170828279 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.306097599 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168169641 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.238017444 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167569623 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230313061 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181149572 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157679072 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219734238 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143774722 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.12181541 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224256475 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31111093 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155687203 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224426019 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173360162 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170331292 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18560425 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155732864 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141579506 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200568975 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123014821 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10608079 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21731414 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183905184 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192597984 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165859047 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16546025 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235436376 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295359756 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198397542 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284353443 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137062156 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.144669148 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172380109 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27445627 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145078749 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24123247 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165106945 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107726875 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236915507 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162455268 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.201947777 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150738149 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145176701 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20519629 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200012102 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.246300729 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141131101 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309442278 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154229819 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176862508 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194823227 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254251302 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207544776 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223078126 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097701335 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217907791 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199422444 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190701648 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170842075 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.195082045 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14658425 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208422508 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199719399 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192345068 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175938149 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211231144 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11292692 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171999434 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20164114 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173862036 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238826491 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216424358 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098939583 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171814678 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152762731 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1345933 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198065433 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10143946 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25226012 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146504794 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1684875 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21666178 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162068123 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165161217 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189658962 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180201081 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150635871 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11310141 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158513972 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.131766781 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203069837 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115601146 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162495213 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154083088 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133523835 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174307444 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126569858 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189965082 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093325494 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170142926 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215410439 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.1028905 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168771636 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155025825 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154110414 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196024527 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230311919 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116475017 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13706416 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213000363 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212144257 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144751068 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18135551 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210667691 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148548302 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152219316 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205165573 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246857501 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119554016 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234444668 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151435177 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110847823 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135958029 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18737941 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160176485 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165519053 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136789392 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185408165 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234801346 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101052995 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142180208 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205612965 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136631052 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135008912 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150646903 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150549052 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112527109 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146057518 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149672924 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179072106 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184044148 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157595883 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16843176 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149633676 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244859897 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143738095 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15504128 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124272431 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124441748 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219432785 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228129251 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106205537 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234084411 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174444946 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202443249 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172840923 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137531078 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180454752 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133459911 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096392932 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22582517 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169833785 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165545796 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198405801 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226170584 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194739748 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186067585 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170098746 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204098254 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.142831541 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156958889 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142003646 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165135435 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16250835 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12547088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.116260647 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136896803 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154393155 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146005211 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136417225 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200753617 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176229425 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219360018 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164506134 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126366986 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215419998 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104711663 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176515566 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206189062 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121534675 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.228807043 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197772668 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191962003 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145853192 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233572604 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096920973 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128069472 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144695369 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172834073 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135976635 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11109546 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167085345 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185329769 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205173432 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175959617 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212244892 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218372876 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196970702 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097972193 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171145317 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181468416 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208478942 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157501017 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142410129 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153172589 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181811955 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152418242 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215533833 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170822576 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205377765 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204325217 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153348256 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133545223 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124451056 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175035484 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157338205 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203291852 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121391822 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140995742 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15694848 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132048097 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164831033 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183999074 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164830959 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182423364 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154324902 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219760785 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103945628 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16690415 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163513533 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166572309 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111218183 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173771194 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199054764 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14762541 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16425555 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186774004 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134332538 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313869287 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203154145 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220048984 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139254133 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159257528 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137717567 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163929556 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167890652 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180458818 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188651829 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191490615 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16074429 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111123161 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141398602 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152009619 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155827067 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108334001 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150455367 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.206618124 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112886924 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212967177 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12216293 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162445224 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175674908 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152478847 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14765867 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154768089 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220060013 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214304038 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196550358 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152313191 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179238867 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207983772 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129354197 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10552335 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135702691 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183097097 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139352176 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196669146 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218518431 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20444237 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212113408 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176329622 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113981583 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123271267 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162282345 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173141369 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207044221 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148798155 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.151648353 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227858975 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111808234 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135178634 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170985672 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293394 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149175911 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190359243 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109330226 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283128647 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102232246 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135050222 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166231611 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187026037 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14004784 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180134585 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173702296 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154346337 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16562401 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125110679 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222955573 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216214767 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232902398 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185904804 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.135269655 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160938184 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172214922 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190445044 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161851386 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140535072 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189156445 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198288853 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197538563 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.146573449 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172331927 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170997062 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162730169 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223216926 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10921522 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234986504 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136820917 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196631611 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156112892 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143722229 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177717649 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192927236 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144041632 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184868906 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214801826 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110601586 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135665686 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163698738 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182045263 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152763966 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130222138 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182035772 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126921705 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200416425 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270540682 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135214789 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130135775 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149250955 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138487516 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159629834 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162374075 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140244043 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142938063 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224074488 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.110110311 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214724269 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206300833 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172356251 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169002323 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148462798 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.751511465 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135501976 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196827709 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15083829 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184754649 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153348984 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176003835 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164285931 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171079065 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225788129 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159854473 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206444259 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225459997 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181657604 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134050328 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163868715 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151155564 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14642282 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128306403 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169734475 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162106613 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.148799014 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.210226879 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132902377 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137025235 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142828325 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202565192 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151322275 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184879696 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18353483 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141751491 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176509137 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220832758 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108116666 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.220855881 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189327978 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144702053 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123879798 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138085987 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155220294 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270414958 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126522145 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187702972 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190211767 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163623024 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170714579 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.152247745 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225097021 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161114148 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191645656 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146358167 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160214834 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160243048 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112934888 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133747834 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158452006 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171117222 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.153021767 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164254373 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142402332 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220612696 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098041693 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148321337 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289940546 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174232684 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247098803 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138190439 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109954228 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162601319 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151314924 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180236166 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183513791 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138284849 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138120049 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137796129 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131233681 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146341209 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159584054 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197904098 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161546248 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20728528 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139980614 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28151571 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115213166 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158830355 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117254548 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107673887 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153637376 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149565014 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152393716 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196974003 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270609413 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150306514 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.137447173 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153602393 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100423353 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141219402 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166594631 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166150692 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18386944 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144719302 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082603182 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160002893 seconds)
  done (took 83.897853958 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170586113 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135933296 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150872621 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204516674 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179667091 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293968163 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211923587 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256508878 seconds)
  done (took 2.68892894 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09489315 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.153955799 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158391381 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.136454601 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093592962 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122664195 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.369189371 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135989132 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118528425 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.124228276 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175013796 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095599763 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.704561378 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092794696 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121338935 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.156004472 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.118094371 seconds)
  done (took 4.048776294 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.235946821 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.480482607 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.044370715 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197646048 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179901753 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121380077 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.695026256 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.120383359 seconds)
  done (took 12.163448231 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12584495 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.1471247 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137059112 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.165529321 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.151882134 seconds)
  done (took 1.818732821 seconds)
done (took 126.140453184 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100741569 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13012577 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09960639 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132365316 seconds)
  done (took 1.538022565 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.098716593 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07167422 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103192548 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0768063 seconds)
  done (took 1.434720089 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.195623358 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170697883 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393725159 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073172656 seconds)
  done (took 1.589911915 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11741524 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135284757 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106257803 seconds)
  done (took 1.458918455 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108325983 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130749115 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104563501 seconds)
  done (took 1.438055776 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107962379 seconds)
  done (took 1.20133588 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112090481 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.141732635 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114269919 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.141050213 seconds)
  done (took 1.603202232 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100079944 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128979367 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114842437 seconds)
  done (took 1.436510871 seconds)
done (took 13.153013458 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108005795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426427186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.419487764 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112372995 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726771903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383460227 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037961715 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1478678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171625952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095171395 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141728487 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67577872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028115784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374958289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987646074 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371961496 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.72253028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094247165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121495844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095411417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.022883739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094386436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123419095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094394647 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714660605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428569132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096693636 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376239035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093966649 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131118738 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.408640116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09632983 seconds)
  done (took 17.005721196 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100131662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181870369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132918198 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09800582 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13025232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0958703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125752094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095520408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186568817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124497531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114605024 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122776941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12736815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096650769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143728171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094109773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124925717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094399687 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123345876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124373099 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113290385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122685164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095662976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122671667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095408695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13695339 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124317838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094355821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122596725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102408349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126682181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096880375 seconds)
  done (took 4.89071695 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147098332 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191273307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134499393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129821722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176015344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126268514 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201257285 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149002701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190117052 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095956592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141320499 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094440283 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159376972 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124349667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116812716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123280114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095652741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123040177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121619978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095994345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142400981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094803474 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125369984 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093624919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125249965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138414038 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096895701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123615667 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095502328 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131651863 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097646345 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12495318 seconds)
  done (took 5.2290149 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099167393 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127898769 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111532705 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139984552 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096544 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126607719 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098570038 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126576952 seconds)
  done (took 2.030096872 seconds)
done (took 30.250556762 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112800897 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128311371 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108994462 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136523623 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104726718 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136459277 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092975661 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136418551 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13614623 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103829555 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139432394 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094130376 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12457238 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094286082 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136960267 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099082343 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136779856 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.131488709 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109103134 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.137113303 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095134949 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136132269 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.1035468 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.137593702 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137260658 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109907947 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139429621 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101569674 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12403911 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095722323 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129432766 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.1071513 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126143882 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.138486391 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100152326 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.127771409 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096393898 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127730934 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.107787383 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.136010332 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100133462 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135513925 seconds)
  done (took 6.104678697 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112775983 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144269665 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108709324 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082519116 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117970786 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08191021 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141955297 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080119753 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111046925 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111739122 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.103625325 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079156631 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078908533 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103585232 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078351095 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07616541 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110332562 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077251228 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078027833 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107356313 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080815339 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.102680629 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080889592 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079208165 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105711108 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082785777 seconds)
  done (took 3.62601442 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103055165 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142920384 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11534933 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.177323143 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158192438 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102292347 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137492356 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142787312 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111945775 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122482882 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097721793 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152204108 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111445927 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131316827 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.12574517 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109628011 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138172189 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096450894 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.133675994 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113728609 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139938319 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133752966 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113460431 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134391349 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094966323 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125764051 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100899672 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.143776312 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.130230694 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10430076 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129580213 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098891216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125308018 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105894449 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129856024 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125334759 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115586415 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137650721 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104473907 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.125488552 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102272858 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127370566 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14394388 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13397083 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123729418 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101901562 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126892403 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132996751 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096627264 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141113401 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105056063 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123442074 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098212255 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.124507856 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09536417 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140219874 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096041171 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132668956 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131757593 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100694071 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13552325 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099764373 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13977108 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095396974 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133307297 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095254529 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124672827 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122139073 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.117390866 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12959784 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164481934 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09702394 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124260896 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.104835854 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131539901 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101851753 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125016436 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110668462 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135128642 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126180018 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107009774 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126707043 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097444106 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142832798 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098010343 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127040548 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.096080392 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131085858 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096623904 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125253929 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137946922 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093890908 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126852313 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108144108 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124577683 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096162248 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130893092 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12800459 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095138797 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137939198 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100975689 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124680032 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104670196 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125888954 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098170435 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134292454 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129121444 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096289952 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128849592 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101870848 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125223364 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098715166 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127482407 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09644276 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134780702 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130456038 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099795263 seconds)
  done (took 15.136959009 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235044031 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.220562425 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191631704 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.30144073 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136891523 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.120005744 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21802162 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.16214501 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12478289 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16240708 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174228781 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187932719 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.144367218 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183815451 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173034459 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125342389 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143321795 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140666225 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.249932599 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.268235071 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146049001 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102682927 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163558968 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162550628 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139208764 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134145414 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113276289 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136874777 seconds)
  done (took 5.886322663 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110641583 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158088548 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.10010158 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147861206 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.15208184 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.096048942 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129966334 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126071947 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109447074 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139351172 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09457586 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131893688 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.131822227 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105100133 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124961384 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105961225 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134965019 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096441206 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128544373 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099686411 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13536177 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133968055 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099403776 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124264674 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103659998 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124518138 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087713387 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145668052 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125204309 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117260298 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123261124 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103248833 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139269986 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125238123 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094916128 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.127055711 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.098515701 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126459684 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097196869 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123148955 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094167265 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109241995 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.09422593 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.139755857 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101147074 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112574124 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.10164413 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.132038971 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095710481 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123091952 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.126535935 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.098830095 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128236031 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104471969 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127676482 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097399865 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.128350413 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087729614 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131721299 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.09781363 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115960664 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095497044 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129610653 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090847155 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134164448 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.100128223 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12356056 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.097930611 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129757125 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101895614 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12769516 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.100431997 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123280794 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127205555 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09913665 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130829765 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.099383971 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12393837 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094860594 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125617533 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076925891 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124412103 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075999186 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097514999 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123309397 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124150308 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097088245 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131737943 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110926638 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126931587 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132824811 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09716715 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124039673 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099584844 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114506265 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098754638 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141622516 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114747401 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125610681 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123838115 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110332347 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128363306 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095227919 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107332127 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104690863 seconds)
  done (took 13.221740161 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132229507 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157015241 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127097454 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11364465 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.160082016 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159492219 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102847151 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133672778 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097308092 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144711388 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095972397 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136219448 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095996172 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140677481 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159265878 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106344193 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128044544 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110515513 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130017587 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172474476 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113522405 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144265804 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143587168 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096466926 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131799905 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11211407 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16385633 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.140562886 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110349326 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145096057 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109950145 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163096669 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146301487 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09960711 seconds)
  done (took 5.56347651 seconds)
done (took 50.642342164 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.202338648 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.424149816 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198569369 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.060636602 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.256812155 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.247419365 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.212917911 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.197240578 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.223549067 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203453327 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.436310349 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.75274122 seconds)
done (took 59.539421125 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.313687102 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.359488055 seconds)
    (2/2) benchmarking "String"...
    done (took 1.503390303 seconds)
  done (took 4.001408947 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.866047014 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.148952487 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461223655 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.198830791 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202115701 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488156837 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.901006389 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.58876442 seconds)
  done (took 28.113656381 seconds)
done (took 42.421918242 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.217898484 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.294106815 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.247351336 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178592704 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.33484743 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.226373013 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.536277525 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.433646837 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.218025093 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178211073 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.221942116 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.223060942 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.213705716 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.504615512 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.207862147 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.21846077 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.203048348 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.971993701 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.616395171 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.211343733 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.212527254 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.267023451 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.222838292 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.204336298 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.221515679 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205006934 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.20152155 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.219217314 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.750273807 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.207624585 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.216181606 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.727428281 seconds)
  done (took 191.238787936 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.202019101 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.230175448 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.346769227 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.242719161 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.513516001 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.404045635 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.3539853 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.747257866 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.222336298 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.217852541 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.494215738 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.204309525 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.567763922 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.260629508 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.24165684 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.269580541 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.392688972 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.547537771 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.251663394 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.367225974 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.220804964 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.407390271 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.312140767 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.422661315 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.233221783 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.243725058 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.235633059 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.23022934 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396803242 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.294111074 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.250855053 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.262854674 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.833077722 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05892916 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.222356825 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233285943 seconds)
  done (took 150.062453984 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204080417 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.20304178 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204129174 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23680606 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204036168 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.769034465 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770054097 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.754133988 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.647900701 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.677614454 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.474752675 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.203712707 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300198266 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218911495 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.207488074 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.220320661 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.248877899 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205372927 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206554281 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786298966 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220486307 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.390035627 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.383177108 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.221568808 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238108294 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.20542544 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.595097717 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205224701 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238683178 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537631061 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.255545335 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20546706 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.614943674 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.01565575 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319898514 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208495358 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238496939 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.206737954 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487214086 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206242099 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205753135 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209841055 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.91817663 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.208307162 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.773536971 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205842254 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.181633826 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206559465 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207195177 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.958366409 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.980347823 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.223712802 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206506143 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.208949231 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20703175 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206756638 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.239285965 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.048370222 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.307043299 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.224667201 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.210540845 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241612768 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.206697124 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.784926107 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210776328 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.972149643 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282871506 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.426333083 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791198501 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21121043 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.207661003 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306863274 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32986543 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.208706 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.207487539 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208254395 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.208656481 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320068713 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20773238 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.631714282 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385576445 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.225603565 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.674013209 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211905887 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306363316 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208630688 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.652081972 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.212276845 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.208590512 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.973162571 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306994748 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209264853 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.208629543 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21029424 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.632983417 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778628995 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505354616 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.213757014 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.885949411 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.21275652 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.652124039 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.792839859 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.873057549 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.210895384 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322611996 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.386909559 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.226957903 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.209912669 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.682878051 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.212563537 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.267719756 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.214179734 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.210503963 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60748127 seconds)
  done (took 370.068252038 seconds)
done (took 712.495699605 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.83153748 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.821989652 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.936216591 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.815590081 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.778056168 seconds)
  done (took 10.317895149 seconds)
done (took 11.453842548 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400063183 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398052369 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272211482 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.400599084 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244335216 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418436419 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379653529 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.232993933 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.312283694 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.292958336 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312374654 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265430424 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246546222 seconds)
  done (took 18.310447645 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544364908 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.568380048 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275826653 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528036557 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250798633 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549487289 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413414882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434741752 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429039315 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244815639 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225851435 seconds)
  done (took 16.60104854 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541202373 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538128707 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279978718 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573823967 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254731322 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.536755812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418238943 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429867282 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434954192 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245142027 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226228086 seconds)
  done (took 16.615052827 seconds)
done (took 52.663311367 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.221452523 seconds)
  done (took 2.357862403 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.259109738 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.425740692 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.241100828 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.228623013 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.223021549 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.224942057 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22857716 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.224687908 seconds)
  done (took 11.193850886 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.2192181 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219697331 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222131744 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223080588 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21885561 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.219978399 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.2218891 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219529348 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.221667421 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.219626228 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222558388 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.22088089 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222764277 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22198794 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222467772 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22219519 seconds)
  done (took 20.676777927 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222682133 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219858891 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219988525 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.220979497 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.220697004 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.220373955 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.221004183 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220795967 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220832246 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220527269 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220608149 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220438835 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.221181826 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220322553 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220598606 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221088839 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221747306 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220439859 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.224926587 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221307601 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220965093 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221360681 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222165906 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222076544 seconds)
  done (took 30.447300518 seconds)
done (took 65.813539921 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.855539019 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.919158715 seconds)
  done (took 6.914031297 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.280305489 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.285723324 seconds)
  done (took 3.707618846 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224068516 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223804164 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.224191871 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.224301118 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.22436637 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.223729865 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224372565 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223572017 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.223175954 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223759698 seconds)
  done (took 13.379443945 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.223674998 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223725504 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.22241191 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224983761 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.224609347 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222418299 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.225692724 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.225139111 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225417543 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.223501506 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.225285455 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.224825226 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225267482 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224513252 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226056994 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.223188598 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.223830506 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.223583615 seconds)
  done (took 23.179393053 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.225586655 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246449271 seconds)
  done (took 3.613151366 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.353476 seconds)
    (2/7) benchmarking "second"...
    done (took 1.264133376 seconds)
    (3/7) benchmarking "month"...
    done (took 1.333777549 seconds)
    (4/7) benchmarking "year"...
    done (took 1.321603844 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.266018444 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.244700058 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.265645284 seconds)
  done (took 10.190720539 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227102001 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.401853401 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508456259 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.853380137 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.227822792 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.231343898 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.102921423 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.231505585 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.23373492 seconds)
  done (took 14.159647194 seconds)
done (took 76.284430817 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.250626541 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.237239462 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.51481291 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.242597998 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.25656928 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.564076149 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.251331427 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.357535456 seconds)
done (took 37.818434179 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.238414731 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.198309641 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.060352815 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.222965517 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.32117553 seconds)
  done (took 18.946167977 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.285018121 seconds)
    (2/2) benchmarking "read"...
    done (took 1.570037322 seconds)
  done (took 4.997575595 seconds)
done (took 31.326313584 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228668187 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.226282192 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.228473455 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.224685018 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228001273 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.225879014 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.225585561 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.227895338 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232234853 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.228270352 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.228815362 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.228480346 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228469046 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226285022 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224867562 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228477769 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225951155 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228061982 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226176579 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225902857 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228579482 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.22610921 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.225716103 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.22638635 seconds)
  done (took 30.597855741 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22933092 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226602439 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.229413312 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.230684158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226402023 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.228882593 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229375545 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226506903 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229286131 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.229902334 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227676583 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.225800925 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229294613 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228048946 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228862006 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.226794985 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230280339 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226434219 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229831886 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228109649 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.229799673 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228133949 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227626787 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230011192 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.227497783 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226481198 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229722502 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.228845768 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230835703 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.228267398 seconds)
  done (took 37.999222526 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234849293 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237858183 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230194261 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231499219 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230487474 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231336999 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.231026658 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232001124 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.230666724 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.231078116 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.231143323 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.231452395 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231952237 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230952819 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231683 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.231716441 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.231689901 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.232488998 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.23216691 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.23234904 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231770088 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231496237 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231904469 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232624493 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231885125 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.233606728 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231841924 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.233413334 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232609255 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232556185 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232598326 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232510271 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.232988577 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233403261 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232866019 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233122263 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.238491253 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240695728 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.233423127 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.231836757 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.233543169 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.23331134 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233800173 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.234775342 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.233424683 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.233272132 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233642408 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233352189 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23344388 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234007022 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233731753 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.234040043 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.233925917 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23484114 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233929735 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.234411277 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234857641 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.234489688 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.234748374 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.234554114 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.234275322 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.235277337 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.234733172 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233752053 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.235870133 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.23452176 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234875143 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.234997573 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.235752924 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.23517133 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235110219 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.235059471 seconds)
  done (took 89.951934852 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.235833677 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233482712 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.2317541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234323348 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238996743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.236392939 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232926732 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235987489 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233710334 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235413543 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234980045 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234658007 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233018798 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.236710752 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236181746 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23269502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.236709963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234266167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235675106 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237728703 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236456877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234761626 seconds)
  done (took 28.323698111 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237716934 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239001987 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.234716207 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237884232 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236935908 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23848484 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236853405 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238937529 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23806959 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234790535 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23424485 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237413254 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236672583 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235415401 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234761104 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236076784 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236952275 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236873466 seconds)
  done (took 23.413919987 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.235282365 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.234255803 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237720312 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234667052 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.235837809 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237849636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235808477 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239386196 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.237731188 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.235502585 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.238489104 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238003672 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.238709067 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235533152 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238393872 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235852555 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.238289018 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236411312 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238711288 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237176536 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236197136 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239045742 seconds)
  done (took 28.367972854 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23809228 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.239298108 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.236993213 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23613587 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.235315259 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.238517086 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.239735656 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.237122028 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240162961 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.239071215 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236030154 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239194014 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.238595953 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23883668 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23753842 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237592649 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24051841 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237174135 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239044287 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.237408346 seconds)
  done (took 25.916428629 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240990531 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24114957 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241055294 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241718249 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241394782 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241371279 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242579434 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24087174 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24182956 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242458465 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242772849 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241573485 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241969153 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242612331 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242330396 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24298062 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2419834 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242829312 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243099325 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242057514 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243057772 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241696343 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242792521 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243260312 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242272732 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242813654 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242272268 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243155997 seconds)
  done (took 35.936691319 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243654873 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243117536 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.239832411 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.241081707 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.239634156 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.240804726 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.241720189 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.240343494 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24286065 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240162678 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.244138723 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.244026704 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244166435 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.243566112 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244046289 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.243580024 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243950665 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.240826893 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241013132 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240709202 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.24379836 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243909635 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.244115798 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240913903 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241018844 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.244022525 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24220415 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241628629 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243720418 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241611311 seconds)
  done (took 38.427573793 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.262333294 seconds)
    (2/2) benchmarking "in"...
    done (took 1.262713512 seconds)
  done (took 3.683814339 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.241934686 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245236704 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243864027 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24245814 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.241742375 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244263998 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245252528 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242022222 seconds)
  done (took 11.104542293 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245310686 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.246025305 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245673807 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.245306583 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.246251359 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245980161 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25297926 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.26585927 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.246211603 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247814869 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.252851892 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.253239029 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248129422 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245878697 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.245482715 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248283918 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.246840753 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.245938473 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.247475599 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.247334783 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246235663 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249162623 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249268399 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.244038114 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.24846922 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.257388039 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.270671168 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.246632854 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246935641 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.250806649 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.24713882 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.245135935 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.247671941 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.248656886 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.248203195 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.247404602 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256629276 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269918505 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.252658202 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268366188 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249635179 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.245747707 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248811858 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.249379293 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249822624 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.248507787 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.250069611 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.245561918 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.249073676 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.252981037 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.253491375 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248479431 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246770593 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251836739 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250065051 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255930374 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268703539 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25284906 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258993225 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260131246 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.281355362 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.274742439 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250677629 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250515874 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261491292 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.273520965 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256228248 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.266907947 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.248015338 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.249539219 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.257561388 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282254633 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.276156142 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.250339499 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251560885 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.251273971 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250721064 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251384334 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257380192 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.272871062 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.250983458 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251622244 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26000342 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273348888 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.251214815 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251518589 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.251864989 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.252078361 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.252220092 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262414554 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.271176408 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.251768292 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.250867228 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.251191957 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.2522058 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.252499141 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.25032899 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253086826 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.249420955 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.252947716 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252026035 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257458855 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.262142862 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252550062 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252686702 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.258666172 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.273046646 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252870707 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.259222664 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252733605 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252697406 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254846507 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.259211642 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.250483389 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254995651 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.25999067 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.254144155 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253804845 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.253720302 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25358413 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263447935 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.279513719 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.253401445 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.253078616 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.257411393 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.26421248 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252784619 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.255045629 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.253400226 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.250800032 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.251183527 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.253615872 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.25385106 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.253135813 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254670873 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253836264 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.251067336 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.254752589 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.25448697 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.254778837 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.254743578 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.254089644 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.256146633 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.256125047 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.253926361 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.256461894 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.259845631 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.274157451 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.255011612 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255282222 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.252958981 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255110995 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255541871 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.255889471 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25497146 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255257956 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.255312444 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.255822051 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256360637 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.256680869 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25754515 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.256715282 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260087718 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.256966655 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.258682295 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.25536049 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.253925725 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.256197498 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.256996544 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.255329168 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.256586217 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255058669 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259032598 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.264413839 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.257550323 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.256658835 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.258663232 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256658182 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257413478 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257410253 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.260016673 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.264606821 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.258451985 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264551998 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277454146 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258176829 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.258078139 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257104038 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.258258272 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257182331 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.260537915 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265976068 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269329519 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283871006 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.259064226 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.262990899 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.260240188 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.262462698 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.2617961 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.25859419 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.259160558 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258574419 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258201471 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260008365 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.261575812 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.258443207 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.259216232 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.259042902 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.259745073 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.258851526 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259511575 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.260320134 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260977941 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.256671286 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259477087 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259999846 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.25832714 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.25578814 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.258506944 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258316902 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.259566881 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.258937945 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265340548 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.257824778 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260977541 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261491399 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.259246648 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.258846939 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.260147683 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261922259 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.260604961 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267903297 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.279884489 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.261562798 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265975018 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.280412131 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.258621098 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.26326647 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.261104701 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257786536 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.26397845 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.26961635 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260754668 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.261803836 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.262048507 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259498844 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260820946 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.266357325 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.279072949 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.261129814 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.262471994 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262456551 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.258462339 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.26184811 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.261221594 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.26253309 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262726405 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263037804 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.263148756 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262415217 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.262251841 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.262903218 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.262966761 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265463679 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269958303 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266743928 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.26215844 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262815302 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.264465508 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.267870178 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.262848471 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.264103949 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26416938 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27621642 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.287721633 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268271587 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.284615319 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.264098032 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269288773 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284649417 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.26786586 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263111955 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265082409 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.263936067 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.265011416 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.261385244 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264537406 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.265741611 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266110529 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.266542347 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.26963624 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.265109358 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263425486 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.264524283 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.264322782 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.264963512 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.264023865 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.265790627 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.26602775 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266360533 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.264292169 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264839208 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272297955 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285574137 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264434313 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264543653 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.265503974 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.265334456 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.266048363 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.265598537 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.269670748 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.273959504 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.268449699 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.275097563 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.266867547 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275508054 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.266251232 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.269413751 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.27434868 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.264004273 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.264143961 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.26559163 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.267799296 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273186897 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28657852 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.267901894 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.271021637 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266837619 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.267224601 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.267203779 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.266379746 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267740072 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.269063682 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274623063 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.289866417 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.272824964 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269744084 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.265756463 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.26708804 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.268145594 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.266211275 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270272732 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.268197828 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.268911176 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.267590189 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.267197452 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.269634076 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.267005632 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.268221875 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.265031108 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.268875875 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276158088 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.29020233 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272834026 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.270364034 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.274060045 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289353959 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274289625 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.289539937 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269398588 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.269452581 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.268657446 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.269476077 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268080387 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.270120679 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.269152945 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.270002531 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.273815716 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.270381082 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.270919771 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.271582361 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.269968189 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.269329306 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27998581 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293824602 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.271065064 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274705865 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.268275888 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.272044747 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275487143 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.270268855 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.269598754 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.274330834 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282368897 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279009374 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.270530893 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.272817959 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270953156 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27125168 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.271122949 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.271042943 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.271091184 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.271122246 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270741641 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.271199981 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273695695 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.271872453 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.272562796 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273821169 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.272501887 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.281674405 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.292704021 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.27247265 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271177114 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272657085 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.272589052 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.272010089 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.271665913 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272207419 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272403967 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.273661789 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279375685 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.278954766 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.27515614 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.272559247 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.272257459 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.272515328 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.272254042 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27305613 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.272744454 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272815712 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273822156 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.27408974 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.273566307 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.272302253 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27328851 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.273859469 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274099572 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275760055 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.281330445 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273991276 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.272036788 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.274457624 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27471383 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.274047452 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27484077 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280335934 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297789879 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.285409852 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.283659401 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.279159382 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.275069755 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278035648 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.282869074 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.274132203 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.275949814 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.274778026 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.274969691 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.275486041 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.279776296 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275927582 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280573287 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.294402478 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.274318807 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283404407 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.298101937 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275788863 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.276277986 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.27980664 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.275285377 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.273324563 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276451745 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.275903772 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282892519 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.296727424 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275861235 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276944261 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.274713961 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.277548283 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280640976 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276975181 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.277633075 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.274655065 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276812635 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276344027 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27876657 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.274500004 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.274547778 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.275942001 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.279612325 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.284006632 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.275790291 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278031003 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.27764045 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.278284698 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277192681 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277842922 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274813193 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.276065707 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.277370205 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277406459 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.277063877 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.280111995 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275949292 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278697312 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.279213608 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278739582 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282485391 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.290070828 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.287633384 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.275578255 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.27862594 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.278772698 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.281212348 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279026866 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.27888422 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278574389 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.280665397 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.280502701 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280903992 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.280498862 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.282882222 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294349078 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.302611085 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279350851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.28075018 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282116393 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.281022716 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.277640054 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.27995279 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.281501591 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.281771037 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.287678148 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.279855549 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287023696 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300295023 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.282235844 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.284648435 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.283261985 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.288029901 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.282787926 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279962417 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.280480332 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284852519 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.296072664 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301608066 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291002419 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310024547 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.300172116 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.28177899 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281762845 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280506587 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.28155033 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.283115587 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.28133918 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.282955007 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283057672 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281579139 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.28241597 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28678208 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281687057 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.283628735 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.283301259 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.280898951 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.282293538 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28088309 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.282147726 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.281736051 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282442466 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.282504362 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.282628259 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.281428992 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295313331 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30968408 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.28434514 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.282049825 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.280417145 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.286476948 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.28598446 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294156354 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.292035838 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282792207 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.283722237 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.284143087 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284004989 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.28273139 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.284521221 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284502258 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284748574 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.28211028 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297314849 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31097232 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.288305435 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.282481335 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284379483 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.285265739 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284204588 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285007855 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283835441 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.284694727 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.287240969 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288547667 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.284763643 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.284931604 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.287623571 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.292959696 seconds)
  done (took 756.979509592 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283092266 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281794726 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284079668 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282606435 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28355565 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282802912 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283374633 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2834942 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284339519 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28309885 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282775551 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283369627 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284165159 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283481821 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283582843 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284437901 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283887171 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284603014 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284718693 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284518727 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284032674 seconds)
  done (took 28.151485921 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.286705001 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.283577354 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284422347 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287043777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284828611 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.287042575 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284385929 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286414906 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287344236 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284511591 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.287212482 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287020421 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.285549318 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.285727951 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285043822 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28734083 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.287485035 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284777952 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.28822917 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286124367 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288159567 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286263855 seconds)
  done (took 29.493579542 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288164095 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.287314624 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.287314094 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.286367681 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.288055985 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.285996818 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.287915804 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.288692971 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.289155299 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.287336809 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.287457247 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.289736404 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.296069088 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.293960534 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.291085151 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.289914817 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.432034397 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.289489754 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288673103 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.288651784 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.286646632 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.2935082 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.30807717 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.28697244 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.288160089 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28993538 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.289312517 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.289455692 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.289891276 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.289313378 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.294664634 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.289324034 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.288876648 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.291376365 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.289469345 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.291216442 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.294081218 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.291458014 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.287635973 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.290822164 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.300545255 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.31147576 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.291809572 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.295627069 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.311597403 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.2907031 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.294267238 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.298401324 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.28754928 seconds)
  done (took 64.625284295 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.291047571 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.291009981 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.287758229 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291557475 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290771733 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.290444144 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.291165262 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291987055 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.287688288 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.289506276 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.291547512 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.289367715 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289139749 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.292214941 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.29175043 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289521772 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289237788 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.290125444 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288619289 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289888209 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.289731297 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.292257986 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.292866527 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.28881073 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292537232 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2895831 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290197828 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.293184793 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.290022543 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.290449531 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.292054061 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291932277 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.293093586 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.290817887 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290976943 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.29312481 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.293424048 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.291280999 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292967315 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.290685008 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.293557209 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292603884 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.293915131 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.293825154 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291794209 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.291694133 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290928587 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.292066731 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291395384 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.294747159 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.29527979 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.293049371 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295628373 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.291475712 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.2952182 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.296912074 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.29242191 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.292586233 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.294582592 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.292370275 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.292859462 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295898476 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.292990539 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.295135262 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.295438744 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.293761621 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.291916121 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295504535 seconds)
  done (took 89.057167477 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294556409 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.295435858 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294873079 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295337854 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294850862 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.295320257 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294795745 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.295255008 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294788412 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29584312 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295609149 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295177354 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.295278273 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296466482 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296074466 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295783355 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29520675 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296031334 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29566516 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296313374 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.295953932 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296518638 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.295910625 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296055101 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295812121 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296428933 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296289777 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297117967 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29571471 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296045636 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296341152 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.296714654 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296835953 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297097041 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297034333 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295775307 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29664474 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296753697 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.296187171 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296851396 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296966757 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297120789 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297563568 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.297279122 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298079246 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297820565 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297069269 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.298122734 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.298336906 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298535583 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.297700363 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298633075 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297565445 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297365654 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298680358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.298428557 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298639487 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29918181 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297020726 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297871165 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297748998 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.298129731 seconds)
  done (took 81.598158303 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29833259 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299005794 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.297919919 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.298613888 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.299327918 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29725439 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299651268 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.300285201 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300200767 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.300071225 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300832715 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299563709 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299499376 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300733595 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299435966 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300042762 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297871755 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298876988 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300465956 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29861646 seconds)
  done (took 27.195365905 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.298164036 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300900012 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.298021278 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298771798 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.299594301 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298186164 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.301043977 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301560977 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298103498 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30160907 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.301973597 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301656061 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298222131 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299314547 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301673083 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300598932 seconds)
  done (took 22.00920427 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.299266178 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.301219076 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.300458482 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.300464561 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.29857653 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29894429 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.301384357 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.299293194 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.299723575 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.302559932 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.301946035 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.301539759 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.301295332 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.301354957 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.299887408 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.304050643 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.300634415 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.29993461 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.30228775 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.302120232 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.300407764 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.29999819 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.303591848 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.302630749 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.300842758 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.301872902 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.301172576 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.301107434 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.300738501 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.303112418 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.301716334 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.301874772 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.30128451 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.3013102 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.303818803 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.301434074 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.304383173 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.303782349 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.303645516 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303910151 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.305428258 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.30176479 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.305327639 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.305221364 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.30151478 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.304356282 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.303003257 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.303263296 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.302387052 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.303192177 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.306247496 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.3050886 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.305747641 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.306592049 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.305194661 seconds)
  done (took 72.837370683 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30460454 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30415281 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.302693367 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.305695791 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305601522 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.303195486 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306120023 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304139468 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303044505 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.305286444 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303306978 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307166171 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30288702 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306107527 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303562811 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305779729 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.304024873 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303568888 seconds)
  done (took 24.695682481 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.303779917 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303812248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.305248555 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.303420659 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.303102009 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306323815 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.303715411 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.306522605 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306957396 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.304311294 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303873779 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.306973722 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307014184 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.306977952 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305009197 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304018484 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.307383781 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.307020528 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.304864826 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303872402 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.307852973 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307091816 seconds)
  done (took 29.93395854 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.305614023 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.305410366 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.306560727 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.322852423 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.326525186 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.330140697 seconds)
  done (took 9.113178612 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315140096 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30926486 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305774246 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309296455 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308649387 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306341102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305552096 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305716283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308463969 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306904716 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305426395 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309003818 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309324236 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306926805 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309265766 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309197572 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305612682 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306499141 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306485072 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309073285 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306727977 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309080673 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306238947 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305321305 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306916854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306478496 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310498783 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308471551 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307210444 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309287507 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309876263 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307341086 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308204699 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307535956 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310580191 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310594835 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308215374 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310463498 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309487889 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307563061 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310122887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309373612 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31013194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308734903 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310842003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308383658 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30908423 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308816288 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308162056 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310637859 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31162129 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308933914 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311409557 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311100671 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311127171 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312002617 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309376671 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308468337 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31149796 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309432808 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308730716 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311163556 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308278818 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309008836 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311075861 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309377823 seconds)
  done (took 87.62422619 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308606583 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308761726 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310632093 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310635907 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309751772 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310144935 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309576414 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310113201 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309945746 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311738207 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31261971 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30999302 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309090553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311479373 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311191262 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31086509 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31010341 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309641467 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31034294 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314480357 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310269592 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310811588 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311736937 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311796464 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31219829 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313437972 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311301076 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310335777 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310995815 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311061877 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311375875 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311473644 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311714754 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312263126 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312187474 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312873912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313454453 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311813127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31283479 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314063047 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313364409 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314907288 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311794872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311372902 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312356264 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311565135 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311750492 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312324263 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312203276 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31106063 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312761284 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312263085 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313293598 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312974273 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314216061 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313245225 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312986261 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314005438 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313819798 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316974515 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312676136 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313038249 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314722869 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31275162 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312741428 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312834694 seconds)
  done (took 87.809161854 seconds)
done (took 1765.992166017 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.484288162 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.4320173 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313558571 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.317063817 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.313718516 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.320801373 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.311176004 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.314934906 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.315306584 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314364337 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313718195 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.524140813 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.319362108 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.31496565 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.31488968 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41096756 seconds)
  done (took 42.860355124 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.345758622 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.32161669 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.44218099 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.343007276 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.34570959 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.515415327 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.379211643 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.320487963 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.503475655 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.366504081 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.988714438 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.345654838 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.31845869 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.506998983 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.339885866 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514245237 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.58425969 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.995705178 seconds)
  done (took 30.703952351 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.805546799 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.31192931 seconds)
  done (took 9.345041558 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340144937 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.320767083 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.320525228 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.319580745 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.312012373 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.310565147 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319443085 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.313096478 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.317159306 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.454416053 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.322742731 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.331273478 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.341525575 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.320805776 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.319147541 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359798253 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.482313985 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.320051815 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.31828216 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.327920328 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.321634367 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.457525525 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.370084371 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.318592099 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.455418103 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.322776329 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.324210739 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.328510761 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.478771331 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.321088438 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.321876376 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.323378267 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.323142018 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.275007934 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.791215037 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.315041618 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.348767339 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.330518833 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.319823283 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.528107337 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.322559611 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.329471175 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.321225151 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.765334363 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.466666832 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.44330964 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.611202213 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.341870128 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.323626278 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.387371235 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.323269323 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.324289568 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.368272044 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.141424882 seconds)
  done (took 112.056296292 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.33737459 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.70894921 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485139117 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.33891092 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.972083676 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.014125692 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.333955811 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.626864995 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.357671085 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.317712889 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.606987759 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.843449427 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.340252729 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.328164707 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.969525934 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.409557691 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318776582 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.096562886 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.33623943 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.323318674 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836569394 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321876301 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316974051 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.457615738 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.356132819 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797184982 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.85267565 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.796854361 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.338381928 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.319651773 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808732199 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.341263843 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.379601663 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321396322 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.590366302 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.699558657 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696373168 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.338809225 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322697828 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.31999356 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.331260076 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794770775 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702088836 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.33722548 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.319017775 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815417304 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.338920692 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.331134477 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.321412352 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524156526 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.202849102 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.32041806 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.921880884 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.32517965 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.695795519 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.350716377 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.401007781 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.825867281 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337996262 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.433717638 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347630433 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.322042518 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321472252 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324203745 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.341696424 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691068756 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.706899686 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320377401 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.691582066 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827175407 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.35186573 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.872866799 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.195255667 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.347572728 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.389073264 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32811012 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.91103912 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842996337 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.373655416 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.3221906 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681875049 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.340580732 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.614979293 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.350039503 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321817715 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856860985 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.336470523 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.37449933 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.321151951 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.335084442 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.97075601 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.342265547 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.604517203 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.367444536 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.323781114 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.324088548 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.374233487 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.326902397 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.322445465 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.329339789 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.875146655 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.348088606 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.451079254 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.347528894 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324841823 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.330504705 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.325967434 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323995756 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543775002 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.812778086 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.353109332 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.327229357 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.323369988 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.325351736 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.467231569 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.330380208 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.664103295 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.350146863 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331354954 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.33071808 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.066297476 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.395112197 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32430868 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.329954391 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.2140473 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.539416527 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.345214733 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.325787818 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327584277 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.3560339 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.650399834 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346745877 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.362149602 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.328692106 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054815773 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.365933452 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.368591938 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.867362913 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.335217123 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33157208 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337223458 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32746213 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641059914 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.602022216 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.618700593 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.327534752 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.345909043 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.037112875 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.352058392 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465592836 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.349980342 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.370956656 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526841558 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.505882231 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.327668269 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.966974959 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.330720453 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544705119 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328024989 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630693511 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.848263467 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.353246484 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.332988254 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.061264288 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.078143585 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.020762732 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.330202134 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.618338423 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.312005149 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.808078885 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.329154388 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332514539 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.756586579 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.33262867 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.335401689 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.329597315 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.331065704 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.392638719 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504555467 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.941414062 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33122966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.818749146 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.387219626 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3363982 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.333058981 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.333021529 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.679460075 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.401043049 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.333172429 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.340442399 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.33104595 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.334362894 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.847127397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.213151839 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.336954745 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483091378 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995337992 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.354769034 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.330477317 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.969982647 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.642878431 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.884737813 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.397438594 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.678030222 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.354752978 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.368553217 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.93666199 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.378121628 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.847179796 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.35596144 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.336159172 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.956485465 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.35685472 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.386307205 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.33339604 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.333781153 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899795035 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.35448738 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.331726935 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.666872228 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.349133031 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59056897 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.333393614 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.368267174 seconds)
  done (took 1111.736778923 seconds)
done (took 1307.927917397 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.333793214 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.339913122 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.317556382 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.333713616 seconds)
  done (took 26.573763581 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.350037668 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.333532052 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.334793189 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.333069229 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.337082076 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.334710102 seconds)
  done (took 9.266077959 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.484620111 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.33458503 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.335019253 seconds)
  done (took 19.397038962 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.554377681 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.68721783 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.696426375 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.702641439 seconds)
  done (took 10.883808376 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.338774131 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.338516525 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.339245448 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341034784 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.349399505 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.349609937 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.340685633 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.340696081 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.351458823 seconds)
  done (took 13.335027627 seconds)
done (took 80.702829061 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.702114681 seconds)
    (2/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.310589097 seconds)
    (3/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.527055039 seconds)
    (4/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.795545159 seconds)
    (5/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.337961468 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.613528544 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.36658257 seconds)
    (8/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.310415073 seconds)
    (9/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.374539784 seconds)
    (10/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.344112205 seconds)
    (11/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.520226089 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.393451024 seconds)
    (13/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.357274457 seconds)
    (14/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.313376185 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.382429024 seconds)
    (16/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.333825204 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.807363904 seconds)
    (18/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.236632439 seconds)
    (19/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.365006716 seconds)
    (20/286) benchmarking ("sort", Float64, false)...
    done (took 5.689120956 seconds)
    (21/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.163043523 seconds)
    (22/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.317385433 seconds)
    (23/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.313114013 seconds)
    (24/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.318291998 seconds)
    (25/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.596744415 seconds)
    (26/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.3761498 seconds)
    (27/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.325520534 seconds)
    (28/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.334273894 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.341059239 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.45288855 seconds)
    (31/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.995624297 seconds)
    (32/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.059782631 seconds)
    (33/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.345678853 seconds)
    (34/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.401511249 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.27119964 seconds)
    (36/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.315100046 seconds)
    (37/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.865275113 seconds)
    (38/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.417751807 seconds)
    (39/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.396999186 seconds)
    (40/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.349716242 seconds)
    (41/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.335724895 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.467027645 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.941961164 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.378408717 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.615794427 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.06434532 seconds)
    (47/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.317503606 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.27536078 seconds)
    (49/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.336413451 seconds)
    (50/286) benchmarking ("sort", Float32, false)...
    done (took 5.369141371 seconds)
    (51/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.862147365 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.34486532 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.350293782 seconds)
    (54/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.349786965 seconds)
    (55/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.783673939 seconds)
    (56/286) benchmarking ("sort", Float32, true)...
    done (took 6.351227498 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.397521682 seconds)
    (58/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.413903655 seconds)
    (59/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.906376267 seconds)
    (60/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.567038167 seconds)
    (61/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.594901389 seconds)
    (62/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.31578719 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.341462655 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.192339539 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.072233108 seconds)
    (66/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.383824481 seconds)
    (67/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.206603246 seconds)
    (68/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.584533206 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.160781963 seconds)
    (70/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.651674504 seconds)
    (71/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.12743911 seconds)
    (72/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.48654505 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.335087713 seconds)
    (74/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319832203 seconds)
    (75/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.36869768 seconds)
    (76/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.450468039 seconds)
    (77/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.432186931 seconds)
    (78/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.055782912 seconds)
    (79/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.874746315 seconds)
    (80/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.401082006 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.800880452 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.315325188 seconds)
    (83/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.352781129 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.339261433 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 5.603801694 seconds)
    (86/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.315927264 seconds)
    (87/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.524807242 seconds)
    (88/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.319381605 seconds)
    (89/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.337202664 seconds)
    (90/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.387938952 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.363513374 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.708866685 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.197182815 seconds)
    (94/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.01542936 seconds)
    (95/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.0151115 seconds)
    (96/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.432975171 seconds)
    (97/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.006850274 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.361040952 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.335063456 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.358310142 seconds)
    (101/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.767726491 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.44097896 seconds)
    (103/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.422866303 seconds)
    (104/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.317824495 seconds)
    (105/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.389163486 seconds)
    (106/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.35067767 seconds)
    (107/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.401529572 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.555527196 seconds)
    (109/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.419318785 seconds)
    (110/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.724421758 seconds)
    (111/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.339765203 seconds)
    (112/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.344053369 seconds)
    (113/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.365420194 seconds)
    (114/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.38484703 seconds)
    (115/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.174463865 seconds)
    (116/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.936537433 seconds)
    (117/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.172650647 seconds)
    (118/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.348536303 seconds)
    (119/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.135849908 seconds)
    (120/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.320388254 seconds)
    (121/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.428793465 seconds)
    (122/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.34532976 seconds)
    (123/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.320113755 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.358140447 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.576882476 seconds)
    (126/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.374953971 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 1.864291299 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.384839202 seconds)
    (129/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.44648711 seconds)
    (130/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.336539503 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.621852414 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.323881377 seconds)
    (133/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.320672686 seconds)
    (134/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.080538081 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.186093831 seconds)
    (136/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406633157 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.602069598 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.027603392 seconds)
    (139/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.438910043 seconds)
    (140/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.012488661 seconds)
    (141/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.327136242 seconds)
    (142/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.425548122 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.451325774 seconds)
    (144/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.4433515 seconds)
    (145/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.463188071 seconds)
    (146/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.345125154 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.172291131 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.368729049 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.710389741 seconds)
    (150/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.040938241 seconds)
    (151/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.47009683 seconds)
    (152/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.843091883 seconds)
    (153/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.032211554 seconds)
    (154/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.456021907 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.366304147 seconds)
    (156/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.348450769 seconds)
    (157/286) benchmarking ("sort", BigInt, false)...
    done (took 6.345251603 seconds)
    (158/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.671718556 seconds)
    (159/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.204915448 seconds)
    (160/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.653419191 seconds)
    (161/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.821207858 seconds)
    (162/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.197334725 seconds)
    (163/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.576103529 seconds)
    (164/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.476652212 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.215725018 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.355263574 seconds)
    (167/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.324691687 seconds)
    (168/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.930527957 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.388680778 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.38802525 seconds)
    (171/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.854488545 seconds)
    (172/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.917100699 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.383662374 seconds)
    (174/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.786325651 seconds)
    (175/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371031616 seconds)
    (176/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.370747535 seconds)
    (177/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.433499686 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.768075133 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 5.452120403 seconds)
    (180/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.241644843 seconds)
    (181/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.423189441 seconds)
    (182/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.159403226 seconds)
    (183/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.855849953 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.965196977 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.330985938 seconds)
    (186/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.35740637 seconds)
    (187/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.02018478 seconds)
    (188/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.372752625 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.772429439 seconds)
    (190/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.457546315 seconds)
    (191/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.430669168 seconds)
    (192/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.332731703 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.36366653 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.981293694 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.555414268 seconds)
    (196/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.099382148 seconds)
    (197/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.377593556 seconds)
    (198/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.354638454 seconds)
    (199/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.411955004 seconds)
    (200/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.325249421 seconds)
    (201/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.392637812 seconds)
    (202/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.043734263 seconds)
    (203/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.390696673 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.358201373 seconds)
    (205/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.534247152 seconds)
    (206/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.324901152 seconds)
    (207/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.748237356 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.387209206 seconds)
    (209/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.232742803 seconds)
    (210/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.371936586 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.246945971 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.388579306 seconds)
    (213/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.372096827 seconds)
    (214/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.950893223 seconds)
    (215/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.374436422 seconds)
    (216/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.857004742 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.345696938 seconds)
    (218/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.327735808 seconds)
    (219/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.588187236 seconds)
    (220/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.325614057 seconds)
    (221/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.251330845 seconds)
    (222/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.35982089 seconds)
    (223/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.324943833 seconds)
    (224/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.357605976 seconds)
    (225/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.328180404 seconds)
    (226/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.768140526 seconds)
    (227/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.23141222 seconds)
    (228/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.32483648 seconds)
    (229/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.466184183 seconds)
    (230/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.882901271 seconds)
    (231/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.639812015 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.34431493 seconds)
    (233/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.273951228 seconds)
    (234/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.747574769 seconds)
    (235/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.430653754 seconds)
    (236/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.326334937 seconds)
    (237/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.895905534 seconds)
    (238/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.473746042 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.573531917 seconds)
    (240/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.348684417 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.763447019 seconds)
    (242/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.784418051 seconds)
    (243/286) benchmarking ("sort", BigInt, true)...
    done (took 6.346468631 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.34482047 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.157291561 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.37433284 seconds)
    (247/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.34883281 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.752049171 seconds)
    (249/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.767587903 seconds)
    (250/286) benchmarking ("sort", Float64, true)...
    done (took 6.347389937 seconds)
    (251/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.369652651 seconds)
    (252/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.35992708 seconds)
    (253/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.330116729 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.023806246 seconds)
    (255/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.432234859 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.775248234 seconds)
    (257/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.295976552 seconds)
    (258/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.480130366 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.440893607 seconds)
    (260/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.330163591 seconds)
    (261/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.330123406 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.4333453 seconds)
    (263/286) benchmarking ("sort", Int8, false)...
    done (took 4.446332141 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.087297767 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.465954438 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.194393277 seconds)
    (267/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.32974987 seconds)
    (268/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.447685733 seconds)
    (269/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.439743391 seconds)
    (270/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.891271012 seconds)
    (271/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.329072634 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.411497599 seconds)
    (273/286) benchmarking ("sort", Int8, true)...
    done (took 6.346795781 seconds)
    (274/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.348397476 seconds)
    (275/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.727544951 seconds)
    (276/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.328793549 seconds)
    (277/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.710403402 seconds)
    (278/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.91532949 seconds)
    (279/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.469087465 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.373351782 seconds)
    (281/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.378557646 seconds)
    (282/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.936730673 seconds)
    (283/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.442158415 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.869152001 seconds)
    (285/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.633575642 seconds)
    (286/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.352785575 seconds)
  done (took 951.672746873 seconds)
done (took 952.921722524 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.382775589 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387590474 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.362590484 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.38317037 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.478629025 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.387155475 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.372409325 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.364934135 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.408868973 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.411044696 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.36941586 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.386755373 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.37233908 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.370434013 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.36082351 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386450164 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.503623005 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.371376442 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.386569382 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372664786 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.386636619 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.369691509 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.413151826 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.388401351 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.367245124 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.366629733 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.372981793 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.389831326 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.48118758 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.374106215 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.367169112 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.382163717 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.502391562 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.364824503 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.359728346 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.389429301 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.383114391 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.37422098 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.368542197 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.403113587 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.013492038 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.395950584 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.373700321 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.365220766 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.365106078 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.368478341 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.373248653 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.372470249 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385159957 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387712111 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.033289078 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.410385627 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.374456781 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.365965958 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.376164354 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.372219343 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.369767635 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390234156 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.390416179 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390890965 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.487227556 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.371142102 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.367151012 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.390390579 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.379882354 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.070675916 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.385143082 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.36987205 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.019874524 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.395052449 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.071227452 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.40691377 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.369353739 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.386892741 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.404555976 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.502391666 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.363892112 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.366841669 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.379836796 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.371901977 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.378658948 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387509414 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.37371446 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.366126202 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38660773 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.392967691 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.377927674 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.376166423 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379340029 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.391198769 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.38269477 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.384534243 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370999659 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.364966762 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.378314518 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.3710105 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.377266349 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.376740688 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.373040339 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.378741795 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.011678249 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417410858 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.365537589 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.364061565 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.368212684 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.390522667 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.999737215 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.401137647 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.391685626 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.415089673 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.371710715 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.495394016 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.379831322 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393269983 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.379659506 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.37262096 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.36428234 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.50160914 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.015047593 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.414198448 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.372938399 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.375306791 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393521542 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.371482025 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.365765554 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.514473582 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.371336749 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392903968 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.496082408 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.382738897 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.410129165 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.376357972 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.373359803 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.394162948 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396320631 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.409730359 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.37430349 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395963625 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.393693582 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.366812312 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.389518029 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.381462936 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.36966836 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.378972368 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.365644673 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.394318222 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392462915 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392964637 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.392371494 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.499548804 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368275222 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.501842008 seconds)
done (took 233.765161821 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.431639777 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.366799715 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.454513008 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.365725859 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.468158305 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.468291354 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366982349 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365124037 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.36733868 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.746558465 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.367571937 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.366892164 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.36913397 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.366053524 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.450934026 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368662622 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.367361267 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.710590819 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.371238411 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437085917 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.368643027 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.36692753 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369006334 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.749352506 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.367191287 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.36510889 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438825727 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.37056122 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.714972863 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.365735002 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.368029049 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.716291333 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.458755719 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.389324216 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.379083268 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.378638427 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.471811934 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.390303252 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.451206635 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.451458871 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.457390861 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.406693318 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.36576751 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.362330085 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.372262147 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.368478377 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.369297139 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.399171064 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.368289738 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.368873423 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.714091049 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.381064933 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.378932639 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.369954928 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.366896699 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.391190286 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368497295 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.371520063 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.458206152 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.369102615 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.433459986 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.752210413 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.750210742 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.373131101 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.366345815 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.370136594 seconds)
  done (took 150.836427138 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.439309622 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.445191174 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.49167931 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.39253072 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.422441719 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.494225223 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.392697659 seconds)
  done (took 11.354870075 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.375990472 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.374312603 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422499362 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.42343311 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372777336 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.551263292 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374655655 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.384081292 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.372251228 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.427280205 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.376849372 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373961971 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.38274647 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.375558541 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.422246986 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.383309277 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486083565 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.3756481 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.374779071 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.532093405 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37366085 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.380925798 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.42542663 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.386071247 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375579682 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.381207337 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.21035422 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375166069 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373186074 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.37405657 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371888105 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.452380682 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373538682 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.368615006 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372414867 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487706114 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.376970719 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373345073 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.373604899 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.372905392 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374749342 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.377142368 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.376486924 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.375131949 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.374691572 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.397893136 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.376296694 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375763311 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.375015089 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375089961 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.427320567 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375840136 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373521262 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.374410127 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.42924276 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380149962 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.375856276 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373670975 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375491939 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375039439 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.536422339 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.421635123 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375910923 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.431600158 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377323891 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374497698 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.377045026 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.37664192 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.430035326 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.37736653 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425486952 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.372111296 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.555482224 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.400739527 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.377766125 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.379920515 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377509563 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378349356 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.372856 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.381557877 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.377434014 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.378442476 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.38322773 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37646233 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377415339 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.544005148 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48120041 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.377061266 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.391609976 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.385292842 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.376304232 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.43126479 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.378991575 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.37614801 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429369935 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.491858938 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.433329942 seconds)
  done (took 157.751343207 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.382235716 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.386092437 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.380819193 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.40230301 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.398725514 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.377099324 seconds)
  done (took 9.609957416 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.380317353 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.38305785 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.379911119 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378051077 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.380866264 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.379689047 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.37862416 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382235033 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.383510289 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.379620992 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.381796599 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.385044126 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381450543 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379262597 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.377496887 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.380982502 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.379534547 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378460199 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.380568894 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379152193 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.47646635 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.378772134 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380633781 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.382267001 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.386085845 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380474027 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388470423 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.381644758 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.379795621 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.389375898 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.401864084 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.380407157 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382803353 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.388952283 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.386113529 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.384653882 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386081078 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.383513693 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378332566 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.384112084 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.386720828 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383379342 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.381968513 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.386265699 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.385554072 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.389274925 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.391362593 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390751061 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.384250172 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386935096 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.386712999 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382931979 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.385619569 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386570772 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.387722823 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406746459 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.391377231 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.382827233 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.382751485 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.384993463 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385424874 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.385031816 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382873995 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.387744201 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.391423809 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.386172255 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.382058283 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389043468 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385275027 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.38395946 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.388268959 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.381680907 seconds)
  done (took 102.050537459 seconds)
done (took 432.876961581 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.454384109 seconds)
  done (took 7.742038083 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.598615029 seconds)
  done (took 7.888250618 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.953093136 seconds)
  done (took 25.247940351 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.389626763 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.434515413 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.399762387 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.382285295 seconds)
  done (took 26.894396096 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.385887641 seconds)
  done (took 7.674199012 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.380571821 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.378171838 seconds)
  done (took 14.047736369 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.58581327 seconds)
  done (took 7.874166723 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.434932703 seconds)
  done (took 7.730701731 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.385608297 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.40026768 seconds)
  done (took 14.0900612 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.367484724 seconds)
  done (took 7.655855675 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.097868193 seconds)
  done (took 12.389586953 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.386151837 seconds)
  done (took 7.67524957 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.386034045 seconds)
  done (took 7.674039263 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.369408851 seconds)
  done (took 10.6593736 seconds)
done (took 166.532350976 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.378980352 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.386616905 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.382656167 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.385617539 seconds)
  done (took 26.823617303 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418418768 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419968916 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.42120419 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.42885281 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.423455925 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.420163733 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.415467817 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.413100378 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.432193526 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.422986859 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.427469427 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.423483875 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419568993 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.411074956 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.423692112 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.422527125 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.43429584 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.425201301 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410010274 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.42469985 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.387502219 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.432582295 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423403827 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.388793893 seconds)
  done (took 35.362328549 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.916526656 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.462969059 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.541552578 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.437739555 seconds)
  done (took 7.650430004 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.439932162 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.442275718 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.454558941 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492676592 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.518809827 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.453398389 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.415581651 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.411254327 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.397128967 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.443655269 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.517676613 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.459151851 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.531588048 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.388561492 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.574129041 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.389837126 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386606647 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441687482 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.493403616 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.516807676 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.390698664 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.441256994 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.444121936 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.460497947 seconds)
  done (took 36.195739911 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.390227835 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.405815528 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388206672 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.385986169 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.398937187 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.388760132 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.389978491 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.389297329 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.388179845 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.395195798 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.388670999 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.402353732 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.387372964 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.389882444 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.395851073 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390546475 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.395664912 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.389883187 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.389046569 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.397367942 seconds)
  done (took 29.140941078 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.384398531 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.297303874 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.732241849 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.641457965 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.384707792 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.38098007 seconds)
  done (took 29.112325861 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.468310912 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.644309111 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.396403787 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.793400925 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.88766022 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.411345666 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.390188126 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.663568589 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.041388424 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.028648261 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.461820348 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.469609375 seconds)
  done (took 20.953950488 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.401650244 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.391015388 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.388032049 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.425171762 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.453874829 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.413111094 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.397231951 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.385994532 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.459613833 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.474174502 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.41590283 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.453022616 seconds)
  done (took 38.356205523 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474790552 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.438607399 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.508493371 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39478137 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131599014 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598172475 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.44314457 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.17506489 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.418259211 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660423214 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391474412 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484501632 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644750692 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3886043 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394350727 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.482890931 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639767416 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909805155 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38955734 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.742481378 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413597936 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398811989 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.94622535 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658370308 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627535663 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370019049 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.647453592 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.165430041 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713365824 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40758098 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397282543 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386996406 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661414992 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094187663 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511473928 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630643942 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431291896 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936150482 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.390802023 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.850545702 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398382374 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397186273 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400372087 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389549766 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.326003696 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389819305 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202632568 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.42403416 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.102341654 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390540447 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686098696 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491849879 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.393374703 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.363284922 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392649522 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.336019594 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.395413627 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486559213 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984360149 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.218208855 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413116426 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.331594709 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39800388 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.857370604 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082616976 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.422227501 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393391365 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394416744 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324953788 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.78132464 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407140081 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621237404 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.414570819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135192428 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218931642 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.42049399 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33015594 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975905562 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392616417 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.331931396 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620506137 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16717011 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330910353 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.339319108 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327227704 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173848557 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408206828 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.956663342 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421934466 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.208746089 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662827816 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438239229 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415488257 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617483964 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.270527771 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391510701 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.410720311 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611639792 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414700053 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209069759 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357096954 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.395802141 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650347799 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.605973316 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397008155 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.498480395 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973847165 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427659737 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.415669842 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392234376 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.665039064 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.071531614 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435671862 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.195282103 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417172096 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.170857596 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217710437 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418572115 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404984025 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409027243 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690240824 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.237241405 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293971051 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461336935 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396009585 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393599047 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.96413484 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246187703 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.275670904 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.621145688 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428205289 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.41267218 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.396139066 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354671855 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.39077245 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394469244 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.200307277 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620108103 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395940766 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676688241 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330230601 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631036785 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.483198388 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.618246953 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.697969709 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.420768209 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657130937 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408348474 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411805918 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412774852 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414090146 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495359938 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417131685 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.399292971 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.659157122 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.399881629 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39888124 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.812492082 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177532505 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400822775 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.402026902 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397030656 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049339095 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478826784 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407625162 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290962567 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.412066494 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464671159 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402719608 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643734971 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.884985447 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418121908 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.402847756 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.406457832 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628041684 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407706443 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.761905096 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474885858 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.941333964 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077575811 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436240463 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.33227059 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.108001419 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.092365148 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398814421 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.597071986 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398431398 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64376914 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439280652 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418149622 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.05632713 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425885674 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.769518973 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.404641443 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413905213 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.407291724 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402098854 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.881862649 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282339493 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421942447 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.416887808 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543925421 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.413544127 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.335208162 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915758333 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405364746 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401377767 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.176010952 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435588704 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.903506726 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274679533 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682939686 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39835695 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721355974 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.002164604 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.443905862 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.403912975 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419175342 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423632111 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.409472591 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431313419 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.411634488 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.891862964 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941602648 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968552618 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252656604 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016763616 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.905347239 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.442669783 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.300847491 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202770508 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363930327 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.060721402 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660693835 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219049534 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385981628 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955098881 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.739017557 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293979612 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.711237277 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639482999 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.873779854 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.431073971 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712089768 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623211512 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43897529 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411735373 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.339366951 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.127076816 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010766992 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440107859 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490180841 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209292054 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432834591 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.18690563 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.443961129 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.305161574 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872836646 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.981049249 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.798562789 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413971201 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418516118 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275674752 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434223074 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.932988913 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104735206 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437879384 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.961141797 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372019356 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652648586 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.442700805 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.402071857 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.261715819 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.438058966 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.667644673 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707161332 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342223982 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41154099 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005404386 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.283711424 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.410386827 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40742318 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230731527 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412922091 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758999728 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.413769369 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.915946963 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432186058 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.339420712 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341801537 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.099724602 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40813763 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459956553 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945949742 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.424283024 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408954136 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409942923 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360963956 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662452281 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421287068 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058726677 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659116247 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414669932 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430640892 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.410586149 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41361759 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.394356829 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.286475716 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643752829 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.505184423 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632441052 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.548376769 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.312497428 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.497156099 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62207945 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.300500029 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407903106 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692779629 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.144428682 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.429531901 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24689078 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460008806 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407585894 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.503098896 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409489438 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428712626 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500799808 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65456238 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.4465347 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.423158767 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872743367 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436964159 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418693086 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.422475393 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502417897 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296882049 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.927517504 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.20775614 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070408764 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301813027 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098407809 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73953529 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418436864 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409160978 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344306182 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556644156 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.941679819 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683750846 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62509282 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.423736591 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431554071 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426919774 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.901705947 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629046043 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684366741 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.285088717 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414222819 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.082109652 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.569062261 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422975725 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.62188148 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941936579 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004759587 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534374747 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410333065 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.223397604 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713766497 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.501931512 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411718303 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007875128 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.417309074 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.298265626 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.425729419 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418008208 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56800858 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711768774 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122993743 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.441899675 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.573588894 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.185800295 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.816371894 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668406515 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.960839391 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66182158 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104324983 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.235952692 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685742198 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484401084 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66313862 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.558528813 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559520346 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.413169079 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.313278324 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415209895 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365225525 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.123080771 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.424754788 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082030261 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70403838 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.417018936 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.413167388 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436961942 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.423811774 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639660944 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214595708 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647057265 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424025041 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415904603 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.989758881 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082850675 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745716515 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357237155 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.418763004 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693695179 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679819225 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440948299 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.869555213 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.125794085 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008848786 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.390540691 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438065028 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42111586 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.225421847 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092814513 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.927247768 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9834724 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.085293889 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416650023 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.718148583 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.42144677 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42133956 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698088273 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.419928432 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419806573 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675067919 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.104459673 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305055921 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.43625474 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.978190399 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.354487109 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.645135185 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414924376 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375600167 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428120239 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.892548479 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.449748657 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633003034 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428880882 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.420259417 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434345664 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.158346902 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.80486059 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.422688211 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.41413417 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.408356516 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426819706 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537453018 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028212105 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446975688 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.092218252 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.774348975 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674593821 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.428635746 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.406413803 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.423547004 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419013477 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143918044 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395047946 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425241243 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019194249 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.438552202 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.438086098 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423687969 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.637399606 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631027405 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.434054994 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681845922 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461400366 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445200731 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.321361391 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.261695703 seconds)
  done (took 1710.993149863 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.454501424 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.455152761 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.462146008 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.506725019 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.427002874 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.568550564 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.530711153 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.540001827 seconds)
  done (took 53.273118115 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.434597747 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.580436559 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.454318509 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.432995422 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.431525229 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.422775408 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.931994036 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.440956148 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.427960714 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.429231634 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.435437426 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.423472703 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.178155511 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.459560107 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.433936116 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.431022959 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.430537802 seconds)
  done (took 67.114295084 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.045696279 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.514745645 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.943349814 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.420956265 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.455528644 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.449337537 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.032854866 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.452146387 seconds)
  done (took 55.644694574 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.434722169 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431388569 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.434548886 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.434685462 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.43412617 seconds)
  done (took 8.498222137 seconds)
done (took 2120.41025276 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.426121424 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.428657173 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.426210367 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.429528316 seconds)
  done (took 7.040106814 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.400978446 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.108962877 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.402974524 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.419133334 seconds)
  done (took 18.662060627 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.43033816 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.442478199 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.233174875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.117954372 seconds)
  done (took 5.682509361 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.17168942 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.18570404 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.172045312 seconds)
  done (took 7.858384691 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.422938844 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.42981854 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.429038502 seconds)
  done (took 20.611509798 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.732281262 seconds)
  done (took 3.06578271 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.57084526 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.632473678 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.76170139 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.751836185 seconds)
  done (took 8.049175294 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.815905496 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.79591927 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.617737218 seconds)
  done (took 6.562248468 seconds)
done (took 91.737285138 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.681445858 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.448122936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.629023168 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.650528662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.655410276 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.630307309 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.734852951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.619718622 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.160518552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.150003951 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.655352839 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.654377391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.684190262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.447598517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.684642666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.443644033 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.837793338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.728869085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.341444385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42559584 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.754487161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.288986159 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.484705268 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.31648712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.827012118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.581493635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.869140083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.443661448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424873028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.893186146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.582189739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.436538948 seconds)
  done (took 199.500249107 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.426452261 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.429190267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.442878343 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.426417378 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.427491673 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.433945434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426320303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.441868666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.45219912 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.441018287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.427344645 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.446433308 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.425827434 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.445277318 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.427486277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.445759626 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.427402751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.460698058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.434099385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.425917691 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.447060195 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.443970685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.444223097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.438591819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.425514903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.444526616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.4457354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.446953636 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.446573037 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.448197082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.426663285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.446746125 seconds)
  done (took 207.352331047 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.429075851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.427260618 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.424530996 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.4448019 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.428318664 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.446829623 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.450145469 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.447376808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.429135942 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.429459767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.429481904 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.450392706 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.448638562 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.433152112 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.42964932 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.447480592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.426344262 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.428535709 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.447150385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.447548679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.429716838 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.429020819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.428970468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.438497816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.43178803 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.447868814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.427665299 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.429426151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.431721283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.429825986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.428975676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.447611445 seconds)
  done (took 207.281730862 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.630606952 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.439442281 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.439163043 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.391397981 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.436373266 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.438532591 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.437554624 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.630454219 seconds)
  done (took 15.183142715 seconds)
done (took 630.651080017 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.861176276 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.565108096 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.659422104 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.465227521 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.336595394 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.477071258 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.461918164 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.656905002 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.411339328 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.666624416 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.853183215 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.475765396 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.023025494 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.460990467 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.738342941 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.573767137 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.372645558 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.516205117 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.814459025 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.067945753 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.753285586 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.079976167 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.683895648 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.411132915 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.977822347 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.035375059 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.359761227 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.363402536 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.473848488 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.813853344 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.238517348 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.563521211 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.507932747 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.531144276 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.586764314 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.574454243 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.594937629 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.528807034 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.677231756 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.764140099 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.079275003 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.214408837 seconds)
  done (took 98.606756161 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.419730511 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.420412691 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.417895866 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.421263596 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.425340299 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.421573813 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.418888577 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.418742669 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.422125703 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.423880892 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.420618944 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.42433611 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.423670878 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.425203699 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.422977932 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.422416685 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.423464421 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.421523234 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.423130621 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.422576159 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.422076243 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.424207632 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.424452986 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.42212667 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.423954364 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.425708681 seconds)
  done (took 38.322243949 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.442778862 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.710619199 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.904279471 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.457427534 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.441515069 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.445002604 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.538526799 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.450472665 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.445165004 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.445391607 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.61293731 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.446024796 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.482173428 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.932783077 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.453553003 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.444666428 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.444627308 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.444262384 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.71852808 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.459433137 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.560810219 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.45512259 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.538043491 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.462487343 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.469247315 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.445276562 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.452566552 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.034911884 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.475090287 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.613850348 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.370523143 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.541295353 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.993421126 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.961658967 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.376475575 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.455688118 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.449686945 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.615929889 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.454134648 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.449493903 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.541620744 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.454430502 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.912490376 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.166499783 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.471785477 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.44562851 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.051485854 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.644651444 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.733843341 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453000911 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.938984008 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.454527315 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.447145398 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.448088244 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.725033652 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.453404695 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.446511972 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.082718531 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.471573257 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.542340921 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.458445988 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.445435232 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.71711887 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.444907703 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.708365164 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.444850779 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.453640595 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.46812719 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.898693985 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.448956763 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.163656126 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.46465999 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.444485103 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.610916836 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.707742458 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.089228838 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.480497777 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.724672413 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.999649995 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.557686374 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.457549969 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.024452145 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.570922844 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.46243698 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.4543973 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.449138383 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.454591212 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.497627124 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.539486803 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.110295863 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.176641307 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.112770234 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.560785243 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.461428405 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.450176784 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.100976022 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.470820348 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.45050252 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.914210575 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.167463169 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.469993617 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.453838955 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.178561907 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.470328162 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.544614061 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.46338195 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.903309717 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.450330689 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.500378076 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.451596192 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.456274031 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.474669475 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.540080365 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.459744925 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.450487536 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.138894912 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.64247852 seconds)
  done (took 191.795395627 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.448535108 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.441956815 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.453812398 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.443380246 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.444517582 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.453438494 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.447408927 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.444512813 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.448839732 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.446154361 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.44735609 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.444165228 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.443531837 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.473069038 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.456265014 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.450259869 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.060223409 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.442972372 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.444271555 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.46474585 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.274991703 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.450467168 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.444865023 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.464338878 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.444841827 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.446283323 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.476503795 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.448909359 seconds)
  done (took 155.398746251 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452332216 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.112296368 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.473478106 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.602343804 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.479520856 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.449863386 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.605245873 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.531631659 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.473414722 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.452807998 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.452634975 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.793853805 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.453829249 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.070654314 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.68460273 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.629871558 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.078729413 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.48149414 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.450707643 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.453249934 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.610348589 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.46557469 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.795334768 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.099032115 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.4725933 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.099303141 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.437275448 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.455330719 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.451933753 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.091901668 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.470646691 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.798853765 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.544842085 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.526844816 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.114428738 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.057376187 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.055243261 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.631912774 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.454860535 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.45343225 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.450427232 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.436331459 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.095521758 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.471060331 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.456950105 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.085240456 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.478267362 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.457571584 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.462228957 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.455292907 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.524449426 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.547244963 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.824096039 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.099153021 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.564030879 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.46981485 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.607434734 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.854217862 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.459343926 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.045269737 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.437511174 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.102873484 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.475976604 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437043406 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.457466935 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.464522259 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.63453706 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.621180528 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.053110816 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.47495034 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.04362352 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.652804884 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.461039103 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.453907403 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.458731629 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.10122869 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.080724928 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.655622379 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.621305121 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.689695633 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.444753663 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.455713524 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.438886742 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.548446944 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.465124369 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.104997697 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.098754846 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.486967392 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.460108858 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.45901217 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.457261093 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.663202999 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.129006685 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.568385609 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.036002358 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.823911366 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.807145589 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.458288577 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.529557074 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.483500064 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.807072877 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.460778896 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.52558699 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.921236013 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.808034346 seconds)
  done (took 175.293713108 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.72614704 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.803044303 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.569393631 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.635674003 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.107819595 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.065383223 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.832334111 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.609433968 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.577829372 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.747061552 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.72867792 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.550226695 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.705159965 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.551625127 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.223925919 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.55514679 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.578506786 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.623771601 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.638249381 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.535412864 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.18841938 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.760280545 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.678230671 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.483799091 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.562810885 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.296465471 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.077498587 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.036940346 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.656458069 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.867704861 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.022108579 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.673435214 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.522283699 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.216637971 seconds)
  done (took 70.76496256 seconds)
done (took 731.520613032 seconds)
SAVING RESULT...
DONE!
